node {
  name: "input_image"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
        dim {
          size: 3
        }
        dim {
          size: 300
        }
        dim {
          size: 300
        }
      }
    }
  }
}
node {
  name: "get_layer_anchors/range/start"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "get_layer_anchors/range/limit"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 19
      }
    }
  }
}
node {
  name: "get_layer_anchors/range/delta"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "get_layer_anchors/range"
  op: "Range"
  input: "get_layer_anchors/range/start"
  input: "get_layer_anchors/range/limit"
  input: "get_layer_anchors/range/delta"
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "get_layer_anchors/range_1/start"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "get_layer_anchors/range_1/limit"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 19
      }
    }
  }
}
node {
  name: "get_layer_anchors/range_1/delta"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "get_layer_anchors/range_1"
  op: "Range"
  input: "get_layer_anchors/range_1/start"
  input: "get_layer_anchors/range_1/limit"
  input: "get_layer_anchors/range_1/delta"
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "get_layer_anchors/meshgrid/Reshape/shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\377\377\377\377\001\000\000\000"
      }
    }
  }
}
node {
  name: "get_layer_anchors/meshgrid/Reshape"
  op: "Reshape"
  input: "get_layer_anchors/range"
  input: "get_layer_anchors/meshgrid/Reshape/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "get_layer_anchors/meshgrid/Reshape_1/shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\377\377\377\377"
      }
    }
  }
}
node {
  name: "get_layer_anchors/meshgrid/Reshape_1"
  op: "Reshape"
  input: "get_layer_anchors/range_1"
  input: "get_layer_anchors/meshgrid/Reshape_1/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "get_layer_anchors/meshgrid/Size"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 19
      }
    }
  }
}
node {
  name: "get_layer_anchors/meshgrid/Size_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 19
      }
    }
  }
}
node {
  name: "get_layer_anchors/meshgrid/Reshape_2/shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\377\377\377\377"
      }
    }
  }
}
node {
  name: "get_layer_anchors/meshgrid/Reshape_2"
  op: "Reshape"
  input: "get_layer_anchors/meshgrid/Reshape"
  input: "get_layer_anchors/meshgrid/Reshape_2/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "get_layer_anchors/meshgrid/Reshape_3/shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\377\377\377\377\001\000\000\000"
      }
    }
  }
}
node {
  name: "get_layer_anchors/meshgrid/Reshape_3"
  op: "Reshape"
  input: "get_layer_anchors/meshgrid/Reshape_1"
  input: "get_layer_anchors/meshgrid/Reshape_3/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "get_layer_anchors/meshgrid/ones/mul"
  op: "Mul"
  input: "get_layer_anchors/meshgrid/Size_1"
  input: "get_layer_anchors/meshgrid/Size"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "get_layer_anchors/meshgrid/ones/Less/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1000
      }
    }
  }
}
node {
  name: "get_layer_anchors/meshgrid/ones/Less"
  op: "Less"
  input: "get_layer_anchors/meshgrid/ones/mul"
  input: "get_layer_anchors/meshgrid/ones/Less/y"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "get_layer_anchors/meshgrid/ones/packed"
  op: "Pack"
  input: "get_layer_anchors/meshgrid/Size_1"
  input: "get_layer_anchors/meshgrid/Size"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "get_layer_anchors/meshgrid/ones/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "get_layer_anchors/meshgrid/ones"
  op: "Fill"
  input: "get_layer_anchors/meshgrid/ones/packed"
  input: "get_layer_anchors/meshgrid/ones/Const"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "get_layer_anchors/meshgrid/mul"
  op: "Mul"
  input: "get_layer_anchors/meshgrid/Reshape_2"
  input: "get_layer_anchors/meshgrid/ones"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "get_layer_anchors/meshgrid/mul_1"
  op: "Mul"
  input: "get_layer_anchors/meshgrid/Reshape_3"
  input: "get_layer_anchors/meshgrid/ones"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "get_layer_anchors/Cast"
  op: "Cast"
  input: "get_layer_anchors/meshgrid/mul_1"
  attr {
    key: "DstT"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "SrcT"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Truncate"
    value {
      b: false
    }
  }
}
node {
  name: "get_layer_anchors/add/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.5
      }
    }
  }
}
node {
  name: "get_layer_anchors/add"
  op: "AddV2"
  input: "get_layer_anchors/Cast"
  input: "get_layer_anchors/add/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "get_layer_anchors/mul/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 16.0
      }
    }
  }
}
node {
  name: "get_layer_anchors/mul"
  op: "Mul"
  input: "get_layer_anchors/add"
  input: "get_layer_anchors/mul/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "get_layer_anchors/truediv/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 300.0
      }
    }
  }
}
node {
  name: "get_layer_anchors/truediv"
  op: "RealDiv"
  input: "get_layer_anchors/mul"
  input: "get_layer_anchors/truediv/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "get_layer_anchors/Cast_1"
  op: "Cast"
  input: "get_layer_anchors/meshgrid/mul"
  attr {
    key: "DstT"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "SrcT"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Truncate"
    value {
      b: false
    }
  }
}
node {
  name: "get_layer_anchors/add_1/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.5
      }
    }
  }
}
node {
  name: "get_layer_anchors/add_1"
  op: "AddV2"
  input: "get_layer_anchors/Cast_1"
  input: "get_layer_anchors/add_1/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "get_layer_anchors/mul_1/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 16.0
      }
    }
  }
}
node {
  name: "get_layer_anchors/mul_1"
  op: "Mul"
  input: "get_layer_anchors/add_1"
  input: "get_layer_anchors/mul_1/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "get_layer_anchors/truediv_1/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 300.0
      }
    }
  }
}
node {
  name: "get_layer_anchors/truediv_1"
  op: "RealDiv"
  input: "get_layer_anchors/mul_1"
  input: "get_layer_anchors/truediv_1/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "get_layer_anchors/ExpandDims/dim"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "get_layer_anchors/ExpandDims"
  op: "ExpandDims"
  input: "get_layer_anchors/truediv"
  input: "get_layer_anchors/ExpandDims/dim"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tdim"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "get_layer_anchors/ExpandDims_1/dim"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "get_layer_anchors/ExpandDims_1"
  op: "ExpandDims"
  input: "get_layer_anchors/truediv_1"
  input: "get_layer_anchors/ExpandDims_1/dim"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tdim"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "get_layer_anchors/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: ")\313\020>\315\314\314=\303\320\220=\303\320\020>"
      }
    }
  }
}
node {
  name: "get_layer_anchors/Const_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: ")\313\020>\315\314\314=\303\320\020>\303\320\220="
      }
    }
  }
}
node {
  name: "get_layer_anchors_1/range/start"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "get_layer_anchors_1/range/limit"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "get_layer_anchors_1/range/delta"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "get_layer_anchors_1/range"
  op: "Range"
  input: "get_layer_anchors_1/range/start"
  input: "get_layer_anchors_1/range/limit"
  input: "get_layer_anchors_1/range/delta"
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "get_layer_anchors_1/range_1/start"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "get_layer_anchors_1/range_1/limit"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "get_layer_anchors_1/range_1/delta"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "get_layer_anchors_1/range_1"
  op: "Range"
  input: "get_layer_anchors_1/range_1/start"
  input: "get_layer_anchors_1/range_1/limit"
  input: "get_layer_anchors_1/range_1/delta"
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "get_layer_anchors_1/meshgrid/Reshape/shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\377\377\377\377\001\000\000\000"
      }
    }
  }
}
node {
  name: "get_layer_anchors_1/meshgrid/Reshape"
  op: "Reshape"
  input: "get_layer_anchors_1/range"
  input: "get_layer_anchors_1/meshgrid/Reshape/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "get_layer_anchors_1/meshgrid/Reshape_1/shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\377\377\377\377"
      }
    }
  }
}
node {
  name: "get_layer_anchors_1/meshgrid/Reshape_1"
  op: "Reshape"
  input: "get_layer_anchors_1/range_1"
  input: "get_layer_anchors_1/meshgrid/Reshape_1/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "get_layer_anchors_1/meshgrid/Size"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "get_layer_anchors_1/meshgrid/Size_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "get_layer_anchors_1/meshgrid/Reshape_2/shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\377\377\377\377"
      }
    }
  }
}
node {
  name: "get_layer_anchors_1/meshgrid/Reshape_2"
  op: "Reshape"
  input: "get_layer_anchors_1/meshgrid/Reshape"
  input: "get_layer_anchors_1/meshgrid/Reshape_2/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "get_layer_anchors_1/meshgrid/Reshape_3/shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\377\377\377\377\001\000\000\000"
      }
    }
  }
}
node {
  name: "get_layer_anchors_1/meshgrid/Reshape_3"
  op: "Reshape"
  input: "get_layer_anchors_1/meshgrid/Reshape_1"
  input: "get_layer_anchors_1/meshgrid/Reshape_3/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "get_layer_anchors_1/meshgrid/ones/mul"
  op: "Mul"
  input: "get_layer_anchors_1/meshgrid/Size_1"
  input: "get_layer_anchors_1/meshgrid/Size"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "get_layer_anchors_1/meshgrid/ones/Less/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1000
      }
    }
  }
}
node {
  name: "get_layer_anchors_1/meshgrid/ones/Less"
  op: "Less"
  input: "get_layer_anchors_1/meshgrid/ones/mul"
  input: "get_layer_anchors_1/meshgrid/ones/Less/y"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "get_layer_anchors_1/meshgrid/ones/packed"
  op: "Pack"
  input: "get_layer_anchors_1/meshgrid/Size_1"
  input: "get_layer_anchors_1/meshgrid/Size"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "get_layer_anchors_1/meshgrid/ones/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "get_layer_anchors_1/meshgrid/ones"
  op: "Fill"
  input: "get_layer_anchors_1/meshgrid/ones/packed"
  input: "get_layer_anchors_1/meshgrid/ones/Const"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "get_layer_anchors_1/meshgrid/mul"
  op: "Mul"
  input: "get_layer_anchors_1/meshgrid/Reshape_2"
  input: "get_layer_anchors_1/meshgrid/ones"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "get_layer_anchors_1/meshgrid/mul_1"
  op: "Mul"
  input: "get_layer_anchors_1/meshgrid/Reshape_3"
  input: "get_layer_anchors_1/meshgrid/ones"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "get_layer_anchors_1/Cast"
  op: "Cast"
  input: "get_layer_anchors_1/meshgrid/mul_1"
  attr {
    key: "DstT"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "SrcT"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Truncate"
    value {
      b: false
    }
  }
}
node {
  name: "get_layer_anchors_1/add/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.5
      }
    }
  }
}
node {
  name: "get_layer_anchors_1/add"
  op: "AddV2"
  input: "get_layer_anchors_1/Cast"
  input: "get_layer_anchors_1/add/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "get_layer_anchors_1/mul/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 300.0
      }
    }
  }
}
node {
  name: "get_layer_anchors_1/mul"
  op: "Mul"
  input: "get_layer_anchors_1/add"
  input: "get_layer_anchors_1/mul/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "get_layer_anchors_1/truediv/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 300.0
      }
    }
  }
}
node {
  name: "get_layer_anchors_1/truediv"
  op: "RealDiv"
  input: "get_layer_anchors_1/mul"
  input: "get_layer_anchors_1/truediv/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "get_layer_anchors_1/Cast_1"
  op: "Cast"
  input: "get_layer_anchors_1/meshgrid/mul"
  attr {
    key: "DstT"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "SrcT"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Truncate"
    value {
      b: false
    }
  }
}
node {
  name: "get_layer_anchors_1/add_1/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.5
      }
    }
  }
}
node {
  name: "get_layer_anchors_1/add_1"
  op: "AddV2"
  input: "get_layer_anchors_1/Cast_1"
  input: "get_layer_anchors_1/add_1/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "get_layer_anchors_1/mul_1/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 300.0
      }
    }
  }
}
node {
  name: "get_layer_anchors_1/mul_1"
  op: "Mul"
  input: "get_layer_anchors_1/add_1"
  input: "get_layer_anchors_1/mul_1/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "get_layer_anchors_1/truediv_1/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 300.0
      }
    }
  }
}
node {
  name: "get_layer_anchors_1/truediv_1"
  op: "RealDiv"
  input: "get_layer_anchors_1/mul_1"
  input: "get_layer_anchors_1/truediv_1/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "get_layer_anchors_1/ExpandDims/dim"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "get_layer_anchors_1/ExpandDims"
  op: "ExpandDims"
  input: "get_layer_anchors_1/truediv"
  input: "get_layer_anchors_1/ExpandDims/dim"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tdim"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "get_layer_anchors_1/ExpandDims_1/dim"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "get_layer_anchors_1/ExpandDims_1"
  op: "ExpandDims"
  input: "get_layer_anchors_1/truediv_1"
  input: "get_layer_anchors_1/ExpandDims_1/dim"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tdim"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "get_layer_anchors_1/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "6\315{?fff?\333\352\"?\333\352\242?"
      }
    }
  }
}
node {
  name: "get_layer_anchors_1/Const_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "6\315{?fff?\333\352\242?\333\352\"?"
      }
    }
  }
}
node {
  name: "ext_decode_all_anchors/truediv/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 2.0
      }
    }
  }
}
node {
  name: "ext_decode_all_anchors/truediv"
  op: "RealDiv"
  input: "get_layer_anchors/Const"
  input: "ext_decode_all_anchors/truediv/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ext_decode_all_anchors/sub"
  op: "Sub"
  input: "get_layer_anchors/ExpandDims"
  input: "ext_decode_all_anchors/truediv"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ext_decode_all_anchors/truediv_1/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 2.0
      }
    }
  }
}
node {
  name: "ext_decode_all_anchors/truediv_1"
  op: "RealDiv"
  input: "get_layer_anchors/Const_1"
  input: "ext_decode_all_anchors/truediv_1/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ext_decode_all_anchors/sub_1"
  op: "Sub"
  input: "get_layer_anchors/ExpandDims_1"
  input: "ext_decode_all_anchors/truediv_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ext_decode_all_anchors/truediv_2/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 2.0
      }
    }
  }
}
node {
  name: "ext_decode_all_anchors/truediv_2"
  op: "RealDiv"
  input: "get_layer_anchors/Const"
  input: "ext_decode_all_anchors/truediv_2/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ext_decode_all_anchors/add"
  op: "AddV2"
  input: "get_layer_anchors/ExpandDims"
  input: "ext_decode_all_anchors/truediv_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ext_decode_all_anchors/truediv_3/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 2.0
      }
    }
  }
}
node {
  name: "ext_decode_all_anchors/truediv_3"
  op: "RealDiv"
  input: "get_layer_anchors/Const_1"
  input: "ext_decode_all_anchors/truediv_3/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ext_decode_all_anchors/add_1"
  op: "AddV2"
  input: "get_layer_anchors/ExpandDims_1"
  input: "ext_decode_all_anchors/truediv_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ext_decode_all_anchors/Reshape/shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "ext_decode_all_anchors/Reshape"
  op: "Reshape"
  input: "ext_decode_all_anchors/sub"
  input: "ext_decode_all_anchors/Reshape/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "ext_decode_all_anchors/Reshape_1/shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "ext_decode_all_anchors/Reshape_1"
  op: "Reshape"
  input: "ext_decode_all_anchors/sub_1"
  input: "ext_decode_all_anchors/Reshape_1/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "ext_decode_all_anchors/Reshape_2/shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "ext_decode_all_anchors/Reshape_2"
  op: "Reshape"
  input: "ext_decode_all_anchors/add"
  input: "ext_decode_all_anchors/Reshape_2/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "ext_decode_all_anchors/Reshape_3/shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "ext_decode_all_anchors/Reshape_3"
  op: "Reshape"
  input: "ext_decode_all_anchors/add_1"
  input: "ext_decode_all_anchors/Reshape_3/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "ext_decode_all_anchors/truediv_4/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 2.0
      }
    }
  }
}
node {
  name: "ext_decode_all_anchors/truediv_4"
  op: "RealDiv"
  input: "get_layer_anchors_1/Const"
  input: "ext_decode_all_anchors/truediv_4/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ext_decode_all_anchors/sub_2"
  op: "Sub"
  input: "get_layer_anchors_1/ExpandDims"
  input: "ext_decode_all_anchors/truediv_4"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ext_decode_all_anchors/truediv_5/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 2.0
      }
    }
  }
}
node {
  name: "ext_decode_all_anchors/truediv_5"
  op: "RealDiv"
  input: "get_layer_anchors_1/Const_1"
  input: "ext_decode_all_anchors/truediv_5/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ext_decode_all_anchors/sub_3"
  op: "Sub"
  input: "get_layer_anchors_1/ExpandDims_1"
  input: "ext_decode_all_anchors/truediv_5"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ext_decode_all_anchors/truediv_6/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 2.0
      }
    }
  }
}
node {
  name: "ext_decode_all_anchors/truediv_6"
  op: "RealDiv"
  input: "get_layer_anchors_1/Const"
  input: "ext_decode_all_anchors/truediv_6/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ext_decode_all_anchors/add_2"
  op: "AddV2"
  input: "get_layer_anchors_1/ExpandDims"
  input: "ext_decode_all_anchors/truediv_6"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ext_decode_all_anchors/truediv_7/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 2.0
      }
    }
  }
}
node {
  name: "ext_decode_all_anchors/truediv_7"
  op: "RealDiv"
  input: "get_layer_anchors_1/Const_1"
  input: "ext_decode_all_anchors/truediv_7/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ext_decode_all_anchors/add_3"
  op: "AddV2"
  input: "get_layer_anchors_1/ExpandDims_1"
  input: "ext_decode_all_anchors/truediv_7"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ext_decode_all_anchors/Reshape_4/shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "ext_decode_all_anchors/Reshape_4"
  op: "Reshape"
  input: "ext_decode_all_anchors/sub_2"
  input: "ext_decode_all_anchors/Reshape_4/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "ext_decode_all_anchors/Reshape_5/shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "ext_decode_all_anchors/Reshape_5"
  op: "Reshape"
  input: "ext_decode_all_anchors/sub_3"
  input: "ext_decode_all_anchors/Reshape_5/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "ext_decode_all_anchors/Reshape_6/shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "ext_decode_all_anchors/Reshape_6"
  op: "Reshape"
  input: "ext_decode_all_anchors/add_2"
  input: "ext_decode_all_anchors/Reshape_6/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "ext_decode_all_anchors/Reshape_7/shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "ext_decode_all_anchors/Reshape_7"
  op: "Reshape"
  input: "ext_decode_all_anchors/add_3"
  input: "ext_decode_all_anchors/Reshape_7/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "ext_decode_all_anchors/concat_ymin/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "ext_decode_all_anchors/concat_ymin"
  op: "ConcatV2"
  input: "ext_decode_all_anchors/Reshape"
  input: "ext_decode_all_anchors/Reshape_4"
  input: "ext_decode_all_anchors/concat_ymin/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "ext_decode_all_anchors/concat_xmin/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "ext_decode_all_anchors/concat_xmin"
  op: "ConcatV2"
  input: "ext_decode_all_anchors/Reshape_1"
  input: "ext_decode_all_anchors/Reshape_5"
  input: "ext_decode_all_anchors/concat_xmin/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "ext_decode_all_anchors/concat_ymax/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "ext_decode_all_anchors/concat_ymax"
  op: "ConcatV2"
  input: "ext_decode_all_anchors/Reshape_2"
  input: "ext_decode_all_anchors/Reshape_6"
  input: "ext_decode_all_anchors/concat_ymax/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "ext_decode_all_anchors/concat_xmax/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "ext_decode_all_anchors/concat_xmax"
  op: "ConcatV2"
  input: "ext_decode_all_anchors/Reshape_3"
  input: "ext_decode_all_anchors/Reshape_7"
  input: "ext_decode_all_anchors/concat_xmax/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "ext_decode_all_anchors/Shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1448
      }
    }
  }
}
node {
  name: "ext_decode_all_anchors/strided_slice/stack"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "ext_decode_all_anchors/strided_slice/stack_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "ext_decode_all_anchors/strided_slice/stack_2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "ext_decode_all_anchors/strided_slice"
  op: "StridedSlice"
  input: "ext_decode_all_anchors/Shape"
  input: "ext_decode_all_anchors/strided_slice/stack"
  input: "ext_decode_all_anchors/strided_slice/stack_1"
  input: "ext_decode_all_anchors/strided_slice/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "ext_decode_all_anchors/Tile/input"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 1
          }
          dim {
            size: 4
          }
        }
        tensor_content: "\315\314\314=\315\314\314=\315\314L>\315\314L>"
      }
    }
  }
}
node {
  name: "ext_decode_all_anchors/Tile/multiples/1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "ext_decode_all_anchors/Tile/multiples"
  op: "Pack"
  input: "ext_decode_all_anchors/strided_slice"
  input: "ext_decode_all_anchors/Tile/multiples/1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "ext_decode_all_anchors/Tile"
  op: "Tile"
  input: "ext_decode_all_anchors/Tile/input"
  input: "ext_decode_all_anchors/Tile/multiples"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tmultiples"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "ext_decode_all_anchors/concat/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "ext_decode_all_anchors/concat"
  op: "ConcatV2"
  input: "ext_decode_all_anchors/concat_xmin"
  input: "ext_decode_all_anchors/concat_ymin"
  input: "ext_decode_all_anchors/concat_xmax"
  input: "ext_decode_all_anchors/concat_ymax"
  input: "ext_decode_all_anchors/concat/axis"
  attr {
    key: "N"
    value {
      i: 4
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "ext_decode_all_anchors/Reshape_8/shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\004\000\000\000\377\377\377\377"
      }
    }
  }
}
node {
  name: "ext_decode_all_anchors/Reshape_8"
  op: "Reshape"
  input: "ext_decode_all_anchors/concat"
  input: "ext_decode_all_anchors/Reshape_8/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "ext_decode_all_anchors/transpose/perm"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\000\000\000\000"
      }
    }
  }
}
node {
  name: "ext_decode_all_anchors/transpose"
  op: "Transpose"
  input: "ext_decode_all_anchors/Reshape_8"
  input: "ext_decode_all_anchors/transpose/perm"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tperm"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "ext_decode_all_anchors/mul/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 4
      }
    }
  }
}
node {
  name: "ext_decode_all_anchors/mul"
  op: "Mul"
  input: "ext_decode_all_anchors/strided_slice"
  input: "ext_decode_all_anchors/mul/y"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "ext_decode_all_anchors/Reshape_9/shape/0"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "ext_decode_all_anchors/Reshape_9/shape/1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "ext_decode_all_anchors/Reshape_9/shape/3"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "ext_decode_all_anchors/Reshape_9/shape"
  op: "Pack"
  input: "ext_decode_all_anchors/Reshape_9/shape/0"
  input: "ext_decode_all_anchors/Reshape_9/shape/1"
  input: "ext_decode_all_anchors/mul"
  input: "ext_decode_all_anchors/Reshape_9/shape/3"
  attr {
    key: "N"
    value {
      i: 4
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "ext_decode_all_anchors/Reshape_9"
  op: "Reshape"
  input: "ext_decode_all_anchors/transpose"
  input: "ext_decode_all_anchors/Reshape_9/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "ext_decode_all_anchors/mul_1/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 4
      }
    }
  }
}
node {
  name: "ext_decode_all_anchors/mul_1"
  op: "Mul"
  input: "ext_decode_all_anchors/strided_slice"
  input: "ext_decode_all_anchors/mul_1/y"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "ext_decode_all_anchors/Reshape_10/shape/0"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "ext_decode_all_anchors/Reshape_10/shape/1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "ext_decode_all_anchors/Reshape_10/shape/3"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "ext_decode_all_anchors/Reshape_10/shape"
  op: "Pack"
  input: "ext_decode_all_anchors/Reshape_10/shape/0"
  input: "ext_decode_all_anchors/Reshape_10/shape/1"
  input: "ext_decode_all_anchors/mul_1"
  input: "ext_decode_all_anchors/Reshape_10/shape/3"
  attr {
    key: "N"
    value {
      i: 4
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "ext_decode_all_anchors/Reshape_10"
  op: "Reshape"
  input: "ext_decode_all_anchors/Tile"
  input: "ext_decode_all_anchors/Reshape_10/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "ext_decode_all_anchors/name/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "ext_decode_all_anchors/name"
  op: "ConcatV2"
  input: "ext_decode_all_anchors/Reshape_9"
  input: "ext_decode_all_anchors/Reshape_10"
  input: "ext_decode_all_anchors/name/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "ext_decode_all_anchors/strided_slice_1/stack"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000"
      }
    }
  }
}
node {
  name: "ext_decode_all_anchors/strided_slice_1/stack_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\000\000\000\000\001\000\000\000\000\000\000\000\000\000\000\000"
      }
    }
  }
}
node {
  name: "ext_decode_all_anchors/strided_slice_1/stack_2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "ext_decode_all_anchors/strided_slice_1"
  op: "StridedSlice"
  input: "ext_decode_all_anchors/name"
  input: "ext_decode_all_anchors/strided_slice_1/stack"
  input: "ext_decode_all_anchors/strided_slice_1/stack_1"
  input: "ext_decode_all_anchors/strided_slice_1/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 13
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 13
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 2
    }
  }
}
node {
  name: "ssd300/Conv/weights/Initializer/random_uniform/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/Conv/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\003\000\000\000\003\000\000\000\003\000\000\000 \000\000\000"
      }
    }
  }
}
node {
  name: "ssd300/Conv/weights/Initializer/random_uniform/min"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/Conv/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: -0.1380131095647812
      }
    }
  }
}
node {
  name: "ssd300/Conv/weights/Initializer/random_uniform/max"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/Conv/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.1380131095647812
      }
    }
  }
}
node {
  name: "ssd300/Conv/weights/Initializer/random_uniform/RandomUniform"
  op: "RandomUniform"
  input: "ssd300/Conv/weights/Initializer/random_uniform/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/Conv/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "ssd300/Conv/weights/Initializer/random_uniform/sub"
  op: "Sub"
  input: "ssd300/Conv/weights/Initializer/random_uniform/max"
  input: "ssd300/Conv/weights/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/Conv/weights"
      }
    }
  }
}
node {
  name: "ssd300/Conv/weights/Initializer/random_uniform/mul"
  op: "Mul"
  input: "ssd300/Conv/weights/Initializer/random_uniform/RandomUniform"
  input: "ssd300/Conv/weights/Initializer/random_uniform/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/Conv/weights"
      }
    }
  }
}
node {
  name: "ssd300/Conv/weights/Initializer/random_uniform"
  op: "Add"
  input: "ssd300/Conv/weights/Initializer/random_uniform/mul"
  input: "ssd300/Conv/weights/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/Conv/weights"
      }
    }
  }
}
node {
  name: "ssd300/Conv/weights"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/Conv/weights"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 3
        }
        dim {
          size: 3
        }
        dim {
          size: 3
        }
        dim {
          size: 32
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "ssd300/Conv/weights/Assign"
  op: "Assign"
  input: "ssd300/Conv/weights"
  input: "ssd300/Conv/weights/Initializer/random_uniform"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/Conv/weights"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "ssd300/Conv/weights/read"
  op: "Identity"
  input: "ssd300/Conv/weights"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/Conv/weights"
      }
    }
  }
}
node {
  name: "ssd300/Conv/layer_conv2d/Conv2D"
  op: "Conv2D"
  input: "input_image"
  input: "ssd300/Conv/weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NCHW"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "explicit_paddings"
    value {
      list {
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 2
        i: 2
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "ssd300/Conv/BatchNorm/beta/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/Conv/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 32
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "ssd300/Conv/BatchNorm/beta"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/Conv/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 32
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "ssd300/Conv/BatchNorm/beta/Assign"
  op: "Assign"
  input: "ssd300/Conv/BatchNorm/beta"
  input: "ssd300/Conv/BatchNorm/beta/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/Conv/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "ssd300/Conv/BatchNorm/beta/read"
  op: "Identity"
  input: "ssd300/Conv/BatchNorm/beta"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/Conv/BatchNorm/beta"
      }
    }
  }
}
node {
  name: "ssd300/Conv/BatchNorm/moving_mean/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/Conv/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 32
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "ssd300/Conv/BatchNorm/moving_mean"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/Conv/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 32
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "ssd300/Conv/BatchNorm/moving_mean/Assign"
  op: "Assign"
  input: "ssd300/Conv/BatchNorm/moving_mean"
  input: "ssd300/Conv/BatchNorm/moving_mean/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/Conv/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "ssd300/Conv/BatchNorm/moving_mean/read"
  op: "Identity"
  input: "ssd300/Conv/BatchNorm/moving_mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/Conv/BatchNorm/moving_mean"
      }
    }
  }
}
node {
  name: "ssd300/Conv/BatchNorm/moving_variance/Initializer/ones"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/Conv/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 32
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "ssd300/Conv/BatchNorm/moving_variance"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/Conv/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 32
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "ssd300/Conv/BatchNorm/moving_variance/Assign"
  op: "Assign"
  input: "ssd300/Conv/BatchNorm/moving_variance"
  input: "ssd300/Conv/BatchNorm/moving_variance/Initializer/ones"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/Conv/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "ssd300/Conv/BatchNorm/moving_variance/read"
  op: "Identity"
  input: "ssd300/Conv/BatchNorm/moving_variance"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/Conv/BatchNorm/moving_variance"
      }
    }
  }
}
node {
  name: "ssd300/Conv/BatchNorm/Reshape/shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000 \000\000\000\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "ssd300/Conv/BatchNorm/Reshape"
  op: "Reshape"
  input: "ssd300/Conv/BatchNorm/beta/read"
  input: "ssd300/Conv/BatchNorm/Reshape/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "ssd300/Conv/BatchNorm/Reshape_1/shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000 \000\000\000\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "ssd300/Conv/BatchNorm/Reshape_1"
  op: "Reshape"
  input: "ssd300/Conv/BatchNorm/moving_mean/read"
  input: "ssd300/Conv/BatchNorm/Reshape_1/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "ssd300/Conv/BatchNorm/Reshape_2/shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000 \000\000\000\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "ssd300/Conv/BatchNorm/Reshape_2"
  op: "Reshape"
  input: "ssd300/Conv/BatchNorm/moving_variance/read"
  input: "ssd300/Conv/BatchNorm/Reshape_2/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "ssd300/Conv/BatchNorm/batchnorm_1/Add/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0010000000474974513
      }
    }
  }
}
node {
  name: "ssd300/Conv/BatchNorm/batchnorm_1/Add"
  op: "Add"
  input: "ssd300/Conv/BatchNorm/Reshape_2"
  input: "ssd300/Conv/BatchNorm/batchnorm_1/Add/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ssd300/Conv/BatchNorm/batchnorm_1/Rsqrt"
  op: "Rsqrt"
  input: "ssd300/Conv/BatchNorm/batchnorm_1/Add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ssd300/Conv/BatchNorm/batchnorm_1/mul"
  op: "Mul"
  input: "ssd300/Conv/layer_conv2d/Conv2D"
  input: "ssd300/Conv/BatchNorm/batchnorm_1/Rsqrt"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ssd300/Conv/BatchNorm/batchnorm_1/mul_1"
  op: "Mul"
  input: "ssd300/Conv/BatchNorm/Reshape_1"
  input: "ssd300/Conv/BatchNorm/batchnorm_1/Rsqrt"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ssd300/Conv/BatchNorm/batchnorm_1/sub"
  op: "Sub"
  input: "ssd300/Conv/BatchNorm/Reshape"
  input: "ssd300/Conv/BatchNorm/batchnorm_1/mul_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ssd300/Conv/BatchNorm/batchnorm_1/Add_1"
  op: "Add"
  input: "ssd300/Conv/BatchNorm/batchnorm_1/mul"
  input: "ssd300/Conv/BatchNorm/batchnorm_1/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ssd300/Conv/Relu6"
  op: "Relu6"
  input: "ssd300/Conv/BatchNorm/batchnorm_1/Add_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ssd300/expanded_conv/depthwise/depthwise_weights/Initializer/random_uniform/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv/depthwise/depthwise_weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\003\000\000\000\003\000\000\000 \000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "ssd300/expanded_conv/depthwise/depthwise_weights/Initializer/random_uniform/min"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv/depthwise/depthwise_weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: -0.14213381707668304
      }
    }
  }
}
node {
  name: "ssd300/expanded_conv/depthwise/depthwise_weights/Initializer/random_uniform/max"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv/depthwise/depthwise_weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.14213381707668304
      }
    }
  }
}
node {
  name: "ssd300/expanded_conv/depthwise/depthwise_weights/Initializer/random_uniform/RandomUniform"
  op: "RandomUniform"
  input: "ssd300/expanded_conv/depthwise/depthwise_weights/Initializer/random_uniform/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv/depthwise/depthwise_weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "ssd300/expanded_conv/depthwise/depthwise_weights/Initializer/random_uniform/sub"
  op: "Sub"
  input: "ssd300/expanded_conv/depthwise/depthwise_weights/Initializer/random_uniform/max"
  input: "ssd300/expanded_conv/depthwise/depthwise_weights/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv/depthwise/depthwise_weights"
      }
    }
  }
}
node {
  name: "ssd300/expanded_conv/depthwise/depthwise_weights/Initializer/random_uniform/mul"
  op: "Mul"
  input: "ssd300/expanded_conv/depthwise/depthwise_weights/Initializer/random_uniform/RandomUniform"
  input: "ssd300/expanded_conv/depthwise/depthwise_weights/Initializer/random_uniform/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv/depthwise/depthwise_weights"
      }
    }
  }
}
node {
  name: "ssd300/expanded_conv/depthwise/depthwise_weights/Initializer/random_uniform"
  op: "Add"
  input: "ssd300/expanded_conv/depthwise/depthwise_weights/Initializer/random_uniform/mul"
  input: "ssd300/expanded_conv/depthwise/depthwise_weights/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv/depthwise/depthwise_weights"
      }
    }
  }
}
node {
  name: "ssd300/expanded_conv/depthwise/depthwise_weights"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv/depthwise/depthwise_weights"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 3
        }
        dim {
          size: 3
        }
        dim {
          size: 32
        }
        dim {
          size: 1
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "ssd300/expanded_conv/depthwise/depthwise_weights/Assign"
  op: "Assign"
  input: "ssd300/expanded_conv/depthwise/depthwise_weights"
  input: "ssd300/expanded_conv/depthwise/depthwise_weights/Initializer/random_uniform"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv/depthwise/depthwise_weights"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "ssd300/expanded_conv/depthwise/depthwise_weights/read"
  op: "Identity"
  input: "ssd300/expanded_conv/depthwise/depthwise_weights"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv/depthwise/depthwise_weights"
      }
    }
  }
}
node {
  name: "ssd300/expanded_conv/depthwise/layer_conv2d/depthwise/Shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\003\000\000\000\003\000\000\000 \000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "ssd300/expanded_conv/depthwise/layer_conv2d/depthwise/dilation_rate"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "ssd300/expanded_conv/depthwise/layer_conv2d/depthwise"
  op: "DepthwiseConv2dNative"
  input: "ssd300/Conv/Relu6"
  input: "ssd300/expanded_conv/depthwise/depthwise_weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NCHW"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
}
node {
  name: "ssd300/expanded_conv/depthwise/BatchNorm/beta/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv/depthwise/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 32
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "ssd300/expanded_conv/depthwise/BatchNorm/beta"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv/depthwise/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 32
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "ssd300/expanded_conv/depthwise/BatchNorm/beta/Assign"
  op: "Assign"
  input: "ssd300/expanded_conv/depthwise/BatchNorm/beta"
  input: "ssd300/expanded_conv/depthwise/BatchNorm/beta/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv/depthwise/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "ssd300/expanded_conv/depthwise/BatchNorm/beta/read"
  op: "Identity"
  input: "ssd300/expanded_conv/depthwise/BatchNorm/beta"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv/depthwise/BatchNorm/beta"
      }
    }
  }
}
node {
  name: "ssd300/expanded_conv/depthwise/BatchNorm/moving_mean/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv/depthwise/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 32
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "ssd300/expanded_conv/depthwise/BatchNorm/moving_mean"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv/depthwise/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 32
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "ssd300/expanded_conv/depthwise/BatchNorm/moving_mean/Assign"
  op: "Assign"
  input: "ssd300/expanded_conv/depthwise/BatchNorm/moving_mean"
  input: "ssd300/expanded_conv/depthwise/BatchNorm/moving_mean/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv/depthwise/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "ssd300/expanded_conv/depthwise/BatchNorm/moving_mean/read"
  op: "Identity"
  input: "ssd300/expanded_conv/depthwise/BatchNorm/moving_mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv/depthwise/BatchNorm/moving_mean"
      }
    }
  }
}
node {
  name: "ssd300/expanded_conv/depthwise/BatchNorm/moving_variance/Initializer/ones"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv/depthwise/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 32
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "ssd300/expanded_conv/depthwise/BatchNorm/moving_variance"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv/depthwise/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 32
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "ssd300/expanded_conv/depthwise/BatchNorm/moving_variance/Assign"
  op: "Assign"
  input: "ssd300/expanded_conv/depthwise/BatchNorm/moving_variance"
  input: "ssd300/expanded_conv/depthwise/BatchNorm/moving_variance/Initializer/ones"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv/depthwise/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "ssd300/expanded_conv/depthwise/BatchNorm/moving_variance/read"
  op: "Identity"
  input: "ssd300/expanded_conv/depthwise/BatchNorm/moving_variance"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv/depthwise/BatchNorm/moving_variance"
      }
    }
  }
}
node {
  name: "ssd300/expanded_conv/depthwise/BatchNorm/Reshape/shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000 \000\000\000\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "ssd300/expanded_conv/depthwise/BatchNorm/Reshape"
  op: "Reshape"
  input: "ssd300/expanded_conv/depthwise/BatchNorm/beta/read"
  input: "ssd300/expanded_conv/depthwise/BatchNorm/Reshape/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "ssd300/expanded_conv/depthwise/BatchNorm/Reshape_1/shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000 \000\000\000\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "ssd300/expanded_conv/depthwise/BatchNorm/Reshape_1"
  op: "Reshape"
  input: "ssd300/expanded_conv/depthwise/BatchNorm/moving_mean/read"
  input: "ssd300/expanded_conv/depthwise/BatchNorm/Reshape_1/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "ssd300/expanded_conv/depthwise/BatchNorm/Reshape_2/shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000 \000\000\000\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "ssd300/expanded_conv/depthwise/BatchNorm/Reshape_2"
  op: "Reshape"
  input: "ssd300/expanded_conv/depthwise/BatchNorm/moving_variance/read"
  input: "ssd300/expanded_conv/depthwise/BatchNorm/Reshape_2/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "ssd300/expanded_conv/depthwise/BatchNorm/batchnorm_1/Add/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0010000000474974513
      }
    }
  }
}
node {
  name: "ssd300/expanded_conv/depthwise/BatchNorm/batchnorm_1/Add"
  op: "Add"
  input: "ssd300/expanded_conv/depthwise/BatchNorm/Reshape_2"
  input: "ssd300/expanded_conv/depthwise/BatchNorm/batchnorm_1/Add/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ssd300/expanded_conv/depthwise/BatchNorm/batchnorm_1/Rsqrt"
  op: "Rsqrt"
  input: "ssd300/expanded_conv/depthwise/BatchNorm/batchnorm_1/Add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ssd300/expanded_conv/depthwise/BatchNorm/batchnorm_1/mul"
  op: "Mul"
  input: "ssd300/expanded_conv/depthwise/layer_conv2d/depthwise"
  input: "ssd300/expanded_conv/depthwise/BatchNorm/batchnorm_1/Rsqrt"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ssd300/expanded_conv/depthwise/BatchNorm/batchnorm_1/mul_1"
  op: "Mul"
  input: "ssd300/expanded_conv/depthwise/BatchNorm/Reshape_1"
  input: "ssd300/expanded_conv/depthwise/BatchNorm/batchnorm_1/Rsqrt"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ssd300/expanded_conv/depthwise/BatchNorm/batchnorm_1/sub"
  op: "Sub"
  input: "ssd300/expanded_conv/depthwise/BatchNorm/Reshape"
  input: "ssd300/expanded_conv/depthwise/BatchNorm/batchnorm_1/mul_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ssd300/expanded_conv/depthwise/BatchNorm/batchnorm_1/Add_1"
  op: "Add"
  input: "ssd300/expanded_conv/depthwise/BatchNorm/batchnorm_1/mul"
  input: "ssd300/expanded_conv/depthwise/BatchNorm/batchnorm_1/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ssd300/expanded_conv/depthwise/Relu6"
  op: "Relu6"
  input: "ssd300/expanded_conv/depthwise/BatchNorm/batchnorm_1/Add_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ssd300/expanded_conv/project/weights/Initializer/random_uniform/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv/project/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000 \000\000\000\020\000\000\000"
      }
    }
  }
}
node {
  name: "ssd300/expanded_conv/project/weights/Initializer/random_uniform/min"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv/project/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: -0.3535533845424652
      }
    }
  }
}
node {
  name: "ssd300/expanded_conv/project/weights/Initializer/random_uniform/max"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv/project/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.3535533845424652
      }
    }
  }
}
node {
  name: "ssd300/expanded_conv/project/weights/Initializer/random_uniform/RandomUniform"
  op: "RandomUniform"
  input: "ssd300/expanded_conv/project/weights/Initializer/random_uniform/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv/project/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "ssd300/expanded_conv/project/weights/Initializer/random_uniform/sub"
  op: "Sub"
  input: "ssd300/expanded_conv/project/weights/Initializer/random_uniform/max"
  input: "ssd300/expanded_conv/project/weights/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv/project/weights"
      }
    }
  }
}
node {
  name: "ssd300/expanded_conv/project/weights/Initializer/random_uniform/mul"
  op: "Mul"
  input: "ssd300/expanded_conv/project/weights/Initializer/random_uniform/RandomUniform"
  input: "ssd300/expanded_conv/project/weights/Initializer/random_uniform/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv/project/weights"
      }
    }
  }
}
node {
  name: "ssd300/expanded_conv/project/weights/Initializer/random_uniform"
  op: "Add"
  input: "ssd300/expanded_conv/project/weights/Initializer/random_uniform/mul"
  input: "ssd300/expanded_conv/project/weights/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv/project/weights"
      }
    }
  }
}
node {
  name: "ssd300/expanded_conv/project/weights"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv/project/weights"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
        dim {
          size: 1
        }
        dim {
          size: 32
        }
        dim {
          size: 16
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "ssd300/expanded_conv/project/weights/Assign"
  op: "Assign"
  input: "ssd300/expanded_conv/project/weights"
  input: "ssd300/expanded_conv/project/weights/Initializer/random_uniform"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv/project/weights"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "ssd300/expanded_conv/project/weights/read"
  op: "Identity"
  input: "ssd300/expanded_conv/project/weights"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv/project/weights"
      }
    }
  }
}
node {
  name: "ssd300/expanded_conv/project/layer_conv2d/Conv2D"
  op: "Conv2D"
  input: "ssd300/expanded_conv/depthwise/Relu6"
  input: "ssd300/expanded_conv/project/weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NCHW"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "explicit_paddings"
    value {
      list {
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "ssd300/expanded_conv/project/BatchNorm/beta/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv/project/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 16
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "ssd300/expanded_conv/project/BatchNorm/beta"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv/project/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 16
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "ssd300/expanded_conv/project/BatchNorm/beta/Assign"
  op: "Assign"
  input: "ssd300/expanded_conv/project/BatchNorm/beta"
  input: "ssd300/expanded_conv/project/BatchNorm/beta/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv/project/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "ssd300/expanded_conv/project/BatchNorm/beta/read"
  op: "Identity"
  input: "ssd300/expanded_conv/project/BatchNorm/beta"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv/project/BatchNorm/beta"
      }
    }
  }
}
node {
  name: "ssd300/expanded_conv/project/BatchNorm/moving_mean/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv/project/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 16
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "ssd300/expanded_conv/project/BatchNorm/moving_mean"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv/project/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 16
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "ssd300/expanded_conv/project/BatchNorm/moving_mean/Assign"
  op: "Assign"
  input: "ssd300/expanded_conv/project/BatchNorm/moving_mean"
  input: "ssd300/expanded_conv/project/BatchNorm/moving_mean/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv/project/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "ssd300/expanded_conv/project/BatchNorm/moving_mean/read"
  op: "Identity"
  input: "ssd300/expanded_conv/project/BatchNorm/moving_mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv/project/BatchNorm/moving_mean"
      }
    }
  }
}
node {
  name: "ssd300/expanded_conv/project/BatchNorm/moving_variance/Initializer/ones"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv/project/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 16
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "ssd300/expanded_conv/project/BatchNorm/moving_variance"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv/project/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 16
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "ssd300/expanded_conv/project/BatchNorm/moving_variance/Assign"
  op: "Assign"
  input: "ssd300/expanded_conv/project/BatchNorm/moving_variance"
  input: "ssd300/expanded_conv/project/BatchNorm/moving_variance/Initializer/ones"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv/project/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "ssd300/expanded_conv/project/BatchNorm/moving_variance/read"
  op: "Identity"
  input: "ssd300/expanded_conv/project/BatchNorm/moving_variance"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv/project/BatchNorm/moving_variance"
      }
    }
  }
}
node {
  name: "ssd300/expanded_conv/project/BatchNorm/Reshape/shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\020\000\000\000\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "ssd300/expanded_conv/project/BatchNorm/Reshape"
  op: "Reshape"
  input: "ssd300/expanded_conv/project/BatchNorm/beta/read"
  input: "ssd300/expanded_conv/project/BatchNorm/Reshape/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "ssd300/expanded_conv/project/BatchNorm/Reshape_1/shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\020\000\000\000\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "ssd300/expanded_conv/project/BatchNorm/Reshape_1"
  op: "Reshape"
  input: "ssd300/expanded_conv/project/BatchNorm/moving_mean/read"
  input: "ssd300/expanded_conv/project/BatchNorm/Reshape_1/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "ssd300/expanded_conv/project/BatchNorm/Reshape_2/shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\020\000\000\000\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "ssd300/expanded_conv/project/BatchNorm/Reshape_2"
  op: "Reshape"
  input: "ssd300/expanded_conv/project/BatchNorm/moving_variance/read"
  input: "ssd300/expanded_conv/project/BatchNorm/Reshape_2/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "ssd300/expanded_conv/project/BatchNorm/batchnorm_1/Add/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0010000000474974513
      }
    }
  }
}
node {
  name: "ssd300/expanded_conv/project/BatchNorm/batchnorm_1/Add"
  op: "Add"
  input: "ssd300/expanded_conv/project/BatchNorm/Reshape_2"
  input: "ssd300/expanded_conv/project/BatchNorm/batchnorm_1/Add/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ssd300/expanded_conv/project/BatchNorm/batchnorm_1/Rsqrt"
  op: "Rsqrt"
  input: "ssd300/expanded_conv/project/BatchNorm/batchnorm_1/Add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ssd300/expanded_conv/project/BatchNorm/batchnorm_1/mul"
  op: "Mul"
  input: "ssd300/expanded_conv/project/layer_conv2d/Conv2D"
  input: "ssd300/expanded_conv/project/BatchNorm/batchnorm_1/Rsqrt"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ssd300/expanded_conv/project/BatchNorm/batchnorm_1/mul_1"
  op: "Mul"
  input: "ssd300/expanded_conv/project/BatchNorm/Reshape_1"
  input: "ssd300/expanded_conv/project/BatchNorm/batchnorm_1/Rsqrt"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ssd300/expanded_conv/project/BatchNorm/batchnorm_1/sub"
  op: "Sub"
  input: "ssd300/expanded_conv/project/BatchNorm/Reshape"
  input: "ssd300/expanded_conv/project/BatchNorm/batchnorm_1/mul_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ssd300/expanded_conv/project/BatchNorm/batchnorm_1/Add_1"
  op: "Add"
  input: "ssd300/expanded_conv/project/BatchNorm/batchnorm_1/mul"
  input: "ssd300/expanded_conv/project/BatchNorm/batchnorm_1/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ssd300/expanded_conv_1/expand/weights/Initializer/random_uniform/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv_1/expand/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000\020\000\000\000`\000\000\000"
      }
    }
  }
}
node {
  name: "ssd300/expanded_conv_1/expand/weights/Initializer/random_uniform/min"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv_1/expand/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: -0.2314550280570984
      }
    }
  }
}
node {
  name: "ssd300/expanded_conv_1/expand/weights/Initializer/random_uniform/max"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv_1/expand/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.2314550280570984
      }
    }
  }
}
node {
  name: "ssd300/expanded_conv_1/expand/weights/Initializer/random_uniform/RandomUniform"
  op: "RandomUniform"
  input: "ssd300/expanded_conv_1/expand/weights/Initializer/random_uniform/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv_1/expand/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "ssd300/expanded_conv_1/expand/weights/Initializer/random_uniform/sub"
  op: "Sub"
  input: "ssd300/expanded_conv_1/expand/weights/Initializer/random_uniform/max"
  input: "ssd300/expanded_conv_1/expand/weights/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv_1/expand/weights"
      }
    }
  }
}
node {
  name: "ssd300/expanded_conv_1/expand/weights/Initializer/random_uniform/mul"
  op: "Mul"
  input: "ssd300/expanded_conv_1/expand/weights/Initializer/random_uniform/RandomUniform"
  input: "ssd300/expanded_conv_1/expand/weights/Initializer/random_uniform/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv_1/expand/weights"
      }
    }
  }
}
node {
  name: "ssd300/expanded_conv_1/expand/weights/Initializer/random_uniform"
  op: "Add"
  input: "ssd300/expanded_conv_1/expand/weights/Initializer/random_uniform/mul"
  input: "ssd300/expanded_conv_1/expand/weights/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv_1/expand/weights"
      }
    }
  }
}
node {
  name: "ssd300/expanded_conv_1/expand/weights"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv_1/expand/weights"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
        dim {
          size: 1
        }
        dim {
          size: 16
        }
        dim {
          size: 96
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "ssd300/expanded_conv_1/expand/weights/Assign"
  op: "Assign"
  input: "ssd300/expanded_conv_1/expand/weights"
  input: "ssd300/expanded_conv_1/expand/weights/Initializer/random_uniform"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv_1/expand/weights"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "ssd300/expanded_conv_1/expand/weights/read"
  op: "Identity"
  input: "ssd300/expanded_conv_1/expand/weights"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv_1/expand/weights"
      }
    }
  }
}
node {
  name: "ssd300/expanded_conv_1/expand/layer_conv2d/Conv2D"
  op: "Conv2D"
  input: "ssd300/expanded_conv/project/BatchNorm/batchnorm_1/Add_1"
  input: "ssd300/expanded_conv_1/expand/weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NCHW"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "explicit_paddings"
    value {
      list {
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "ssd300/expanded_conv_1/expand/BatchNorm/beta/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv_1/expand/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 96
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "ssd300/expanded_conv_1/expand/BatchNorm/beta"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv_1/expand/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 96
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "ssd300/expanded_conv_1/expand/BatchNorm/beta/Assign"
  op: "Assign"
  input: "ssd300/expanded_conv_1/expand/BatchNorm/beta"
  input: "ssd300/expanded_conv_1/expand/BatchNorm/beta/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv_1/expand/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "ssd300/expanded_conv_1/expand/BatchNorm/beta/read"
  op: "Identity"
  input: "ssd300/expanded_conv_1/expand/BatchNorm/beta"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv_1/expand/BatchNorm/beta"
      }
    }
  }
}
node {
  name: "ssd300/expanded_conv_1/expand/BatchNorm/moving_mean/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv_1/expand/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 96
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "ssd300/expanded_conv_1/expand/BatchNorm/moving_mean"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv_1/expand/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 96
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "ssd300/expanded_conv_1/expand/BatchNorm/moving_mean/Assign"
  op: "Assign"
  input: "ssd300/expanded_conv_1/expand/BatchNorm/moving_mean"
  input: "ssd300/expanded_conv_1/expand/BatchNorm/moving_mean/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv_1/expand/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "ssd300/expanded_conv_1/expand/BatchNorm/moving_mean/read"
  op: "Identity"
  input: "ssd300/expanded_conv_1/expand/BatchNorm/moving_mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv_1/expand/BatchNorm/moving_mean"
      }
    }
  }
}
node {
  name: "ssd300/expanded_conv_1/expand/BatchNorm/moving_variance/Initializer/ones"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv_1/expand/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 96
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "ssd300/expanded_conv_1/expand/BatchNorm/moving_variance"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv_1/expand/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 96
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "ssd300/expanded_conv_1/expand/BatchNorm/moving_variance/Assign"
  op: "Assign"
  input: "ssd300/expanded_conv_1/expand/BatchNorm/moving_variance"
  input: "ssd300/expanded_conv_1/expand/BatchNorm/moving_variance/Initializer/ones"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv_1/expand/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "ssd300/expanded_conv_1/expand/BatchNorm/moving_variance/read"
  op: "Identity"
  input: "ssd300/expanded_conv_1/expand/BatchNorm/moving_variance"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv_1/expand/BatchNorm/moving_variance"
      }
    }
  }
}
node {
  name: "ssd300/expanded_conv_1/expand/BatchNorm/Reshape/shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000`\000\000\000\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "ssd300/expanded_conv_1/expand/BatchNorm/Reshape"
  op: "Reshape"
  input: "ssd300/expanded_conv_1/expand/BatchNorm/beta/read"
  input: "ssd300/expanded_conv_1/expand/BatchNorm/Reshape/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "ssd300/expanded_conv_1/expand/BatchNorm/Reshape_1/shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000`\000\000\000\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "ssd300/expanded_conv_1/expand/BatchNorm/Reshape_1"
  op: "Reshape"
  input: "ssd300/expanded_conv_1/expand/BatchNorm/moving_mean/read"
  input: "ssd300/expanded_conv_1/expand/BatchNorm/Reshape_1/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "ssd300/expanded_conv_1/expand/BatchNorm/Reshape_2/shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000`\000\000\000\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "ssd300/expanded_conv_1/expand/BatchNorm/Reshape_2"
  op: "Reshape"
  input: "ssd300/expanded_conv_1/expand/BatchNorm/moving_variance/read"
  input: "ssd300/expanded_conv_1/expand/BatchNorm/Reshape_2/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "ssd300/expanded_conv_1/expand/BatchNorm/batchnorm_1/Add/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0010000000474974513
      }
    }
  }
}
node {
  name: "ssd300/expanded_conv_1/expand/BatchNorm/batchnorm_1/Add"
  op: "Add"
  input: "ssd300/expanded_conv_1/expand/BatchNorm/Reshape_2"
  input: "ssd300/expanded_conv_1/expand/BatchNorm/batchnorm_1/Add/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ssd300/expanded_conv_1/expand/BatchNorm/batchnorm_1/Rsqrt"
  op: "Rsqrt"
  input: "ssd300/expanded_conv_1/expand/BatchNorm/batchnorm_1/Add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ssd300/expanded_conv_1/expand/BatchNorm/batchnorm_1/mul"
  op: "Mul"
  input: "ssd300/expanded_conv_1/expand/layer_conv2d/Conv2D"
  input: "ssd300/expanded_conv_1/expand/BatchNorm/batchnorm_1/Rsqrt"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ssd300/expanded_conv_1/expand/BatchNorm/batchnorm_1/mul_1"
  op: "Mul"
  input: "ssd300/expanded_conv_1/expand/BatchNorm/Reshape_1"
  input: "ssd300/expanded_conv_1/expand/BatchNorm/batchnorm_1/Rsqrt"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ssd300/expanded_conv_1/expand/BatchNorm/batchnorm_1/sub"
  op: "Sub"
  input: "ssd300/expanded_conv_1/expand/BatchNorm/Reshape"
  input: "ssd300/expanded_conv_1/expand/BatchNorm/batchnorm_1/mul_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ssd300/expanded_conv_1/expand/BatchNorm/batchnorm_1/Add_1"
  op: "Add"
  input: "ssd300/expanded_conv_1/expand/BatchNorm/batchnorm_1/mul"
  input: "ssd300/expanded_conv_1/expand/BatchNorm/batchnorm_1/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ssd300/expanded_conv_1/expand/Relu6"
  op: "Relu6"
  input: "ssd300/expanded_conv_1/expand/BatchNorm/batchnorm_1/Add_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ssd300/expanded_conv_1/depthwise/depthwise_weights/Initializer/random_uniform/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv_1/depthwise/depthwise_weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\003\000\000\000\003\000\000\000`\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "ssd300/expanded_conv_1/depthwise/depthwise_weights/Initializer/random_uniform/min"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv_1/depthwise/depthwise_weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: -0.08290266990661621
      }
    }
  }
}
node {
  name: "ssd300/expanded_conv_1/depthwise/depthwise_weights/Initializer/random_uniform/max"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv_1/depthwise/depthwise_weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.08290266990661621
      }
    }
  }
}
node {
  name: "ssd300/expanded_conv_1/depthwise/depthwise_weights/Initializer/random_uniform/RandomUniform"
  op: "RandomUniform"
  input: "ssd300/expanded_conv_1/depthwise/depthwise_weights/Initializer/random_uniform/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv_1/depthwise/depthwise_weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "ssd300/expanded_conv_1/depthwise/depthwise_weights/Initializer/random_uniform/sub"
  op: "Sub"
  input: "ssd300/expanded_conv_1/depthwise/depthwise_weights/Initializer/random_uniform/max"
  input: "ssd300/expanded_conv_1/depthwise/depthwise_weights/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv_1/depthwise/depthwise_weights"
      }
    }
  }
}
node {
  name: "ssd300/expanded_conv_1/depthwise/depthwise_weights/Initializer/random_uniform/mul"
  op: "Mul"
  input: "ssd300/expanded_conv_1/depthwise/depthwise_weights/Initializer/random_uniform/RandomUniform"
  input: "ssd300/expanded_conv_1/depthwise/depthwise_weights/Initializer/random_uniform/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv_1/depthwise/depthwise_weights"
      }
    }
  }
}
node {
  name: "ssd300/expanded_conv_1/depthwise/depthwise_weights/Initializer/random_uniform"
  op: "Add"
  input: "ssd300/expanded_conv_1/depthwise/depthwise_weights/Initializer/random_uniform/mul"
  input: "ssd300/expanded_conv_1/depthwise/depthwise_weights/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv_1/depthwise/depthwise_weights"
      }
    }
  }
}
node {
  name: "ssd300/expanded_conv_1/depthwise/depthwise_weights"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv_1/depthwise/depthwise_weights"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 3
        }
        dim {
          size: 3
        }
        dim {
          size: 96
        }
        dim {
          size: 1
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "ssd300/expanded_conv_1/depthwise/depthwise_weights/Assign"
  op: "Assign"
  input: "ssd300/expanded_conv_1/depthwise/depthwise_weights"
  input: "ssd300/expanded_conv_1/depthwise/depthwise_weights/Initializer/random_uniform"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv_1/depthwise/depthwise_weights"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "ssd300/expanded_conv_1/depthwise/depthwise_weights/read"
  op: "Identity"
  input: "ssd300/expanded_conv_1/depthwise/depthwise_weights"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv_1/depthwise/depthwise_weights"
      }
    }
  }
}
node {
  name: "ssd300/expanded_conv_1/depthwise/layer_conv2d/depthwise/Shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\003\000\000\000\003\000\000\000`\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "ssd300/expanded_conv_1/depthwise/layer_conv2d/depthwise/dilation_rate"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "ssd300/expanded_conv_1/depthwise/layer_conv2d/depthwise"
  op: "DepthwiseConv2dNative"
  input: "ssd300/expanded_conv_1/expand/Relu6"
  input: "ssd300/expanded_conv_1/depthwise/depthwise_weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NCHW"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 2
        i: 2
      }
    }
  }
}
node {
  name: "ssd300/expanded_conv_1/depthwise/BatchNorm/beta/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv_1/depthwise/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 96
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "ssd300/expanded_conv_1/depthwise/BatchNorm/beta"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv_1/depthwise/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 96
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "ssd300/expanded_conv_1/depthwise/BatchNorm/beta/Assign"
  op: "Assign"
  input: "ssd300/expanded_conv_1/depthwise/BatchNorm/beta"
  input: "ssd300/expanded_conv_1/depthwise/BatchNorm/beta/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv_1/depthwise/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "ssd300/expanded_conv_1/depthwise/BatchNorm/beta/read"
  op: "Identity"
  input: "ssd300/expanded_conv_1/depthwise/BatchNorm/beta"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv_1/depthwise/BatchNorm/beta"
      }
    }
  }
}
node {
  name: "ssd300/expanded_conv_1/depthwise/BatchNorm/moving_mean/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv_1/depthwise/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 96
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "ssd300/expanded_conv_1/depthwise/BatchNorm/moving_mean"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv_1/depthwise/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 96
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "ssd300/expanded_conv_1/depthwise/BatchNorm/moving_mean/Assign"
  op: "Assign"
  input: "ssd300/expanded_conv_1/depthwise/BatchNorm/moving_mean"
  input: "ssd300/expanded_conv_1/depthwise/BatchNorm/moving_mean/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv_1/depthwise/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "ssd300/expanded_conv_1/depthwise/BatchNorm/moving_mean/read"
  op: "Identity"
  input: "ssd300/expanded_conv_1/depthwise/BatchNorm/moving_mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv_1/depthwise/BatchNorm/moving_mean"
      }
    }
  }
}
node {
  name: "ssd300/expanded_conv_1/depthwise/BatchNorm/moving_variance/Initializer/ones"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv_1/depthwise/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 96
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "ssd300/expanded_conv_1/depthwise/BatchNorm/moving_variance"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv_1/depthwise/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 96
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "ssd300/expanded_conv_1/depthwise/BatchNorm/moving_variance/Assign"
  op: "Assign"
  input: "ssd300/expanded_conv_1/depthwise/BatchNorm/moving_variance"
  input: "ssd300/expanded_conv_1/depthwise/BatchNorm/moving_variance/Initializer/ones"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv_1/depthwise/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "ssd300/expanded_conv_1/depthwise/BatchNorm/moving_variance/read"
  op: "Identity"
  input: "ssd300/expanded_conv_1/depthwise/BatchNorm/moving_variance"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv_1/depthwise/BatchNorm/moving_variance"
      }
    }
  }
}
node {
  name: "ssd300/expanded_conv_1/depthwise/BatchNorm/Reshape/shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000`\000\000\000\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "ssd300/expanded_conv_1/depthwise/BatchNorm/Reshape"
  op: "Reshape"
  input: "ssd300/expanded_conv_1/depthwise/BatchNorm/beta/read"
  input: "ssd300/expanded_conv_1/depthwise/BatchNorm/Reshape/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "ssd300/expanded_conv_1/depthwise/BatchNorm/Reshape_1/shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000`\000\000\000\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "ssd300/expanded_conv_1/depthwise/BatchNorm/Reshape_1"
  op: "Reshape"
  input: "ssd300/expanded_conv_1/depthwise/BatchNorm/moving_mean/read"
  input: "ssd300/expanded_conv_1/depthwise/BatchNorm/Reshape_1/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "ssd300/expanded_conv_1/depthwise/BatchNorm/Reshape_2/shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000`\000\000\000\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "ssd300/expanded_conv_1/depthwise/BatchNorm/Reshape_2"
  op: "Reshape"
  input: "ssd300/expanded_conv_1/depthwise/BatchNorm/moving_variance/read"
  input: "ssd300/expanded_conv_1/depthwise/BatchNorm/Reshape_2/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "ssd300/expanded_conv_1/depthwise/BatchNorm/batchnorm_1/Add/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0010000000474974513
      }
    }
  }
}
node {
  name: "ssd300/expanded_conv_1/depthwise/BatchNorm/batchnorm_1/Add"
  op: "Add"
  input: "ssd300/expanded_conv_1/depthwise/BatchNorm/Reshape_2"
  input: "ssd300/expanded_conv_1/depthwise/BatchNorm/batchnorm_1/Add/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ssd300/expanded_conv_1/depthwise/BatchNorm/batchnorm_1/Rsqrt"
  op: "Rsqrt"
  input: "ssd300/expanded_conv_1/depthwise/BatchNorm/batchnorm_1/Add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ssd300/expanded_conv_1/depthwise/BatchNorm/batchnorm_1/mul"
  op: "Mul"
  input: "ssd300/expanded_conv_1/depthwise/layer_conv2d/depthwise"
  input: "ssd300/expanded_conv_1/depthwise/BatchNorm/batchnorm_1/Rsqrt"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ssd300/expanded_conv_1/depthwise/BatchNorm/batchnorm_1/mul_1"
  op: "Mul"
  input: "ssd300/expanded_conv_1/depthwise/BatchNorm/Reshape_1"
  input: "ssd300/expanded_conv_1/depthwise/BatchNorm/batchnorm_1/Rsqrt"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ssd300/expanded_conv_1/depthwise/BatchNorm/batchnorm_1/sub"
  op: "Sub"
  input: "ssd300/expanded_conv_1/depthwise/BatchNorm/Reshape"
  input: "ssd300/expanded_conv_1/depthwise/BatchNorm/batchnorm_1/mul_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ssd300/expanded_conv_1/depthwise/BatchNorm/batchnorm_1/Add_1"
  op: "Add"
  input: "ssd300/expanded_conv_1/depthwise/BatchNorm/batchnorm_1/mul"
  input: "ssd300/expanded_conv_1/depthwise/BatchNorm/batchnorm_1/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ssd300/expanded_conv_1/depthwise/Relu6"
  op: "Relu6"
  input: "ssd300/expanded_conv_1/depthwise/BatchNorm/batchnorm_1/Add_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ssd300/expanded_conv_1/project/weights/Initializer/random_uniform/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv_1/project/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000`\000\000\000\030\000\000\000"
      }
    }
  }
}
node {
  name: "ssd300/expanded_conv_1/project/weights/Initializer/random_uniform/min"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv_1/project/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: -0.22360679507255554
      }
    }
  }
}
node {
  name: "ssd300/expanded_conv_1/project/weights/Initializer/random_uniform/max"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv_1/project/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.22360679507255554
      }
    }
  }
}
node {
  name: "ssd300/expanded_conv_1/project/weights/Initializer/random_uniform/RandomUniform"
  op: "RandomUniform"
  input: "ssd300/expanded_conv_1/project/weights/Initializer/random_uniform/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv_1/project/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "ssd300/expanded_conv_1/project/weights/Initializer/random_uniform/sub"
  op: "Sub"
  input: "ssd300/expanded_conv_1/project/weights/Initializer/random_uniform/max"
  input: "ssd300/expanded_conv_1/project/weights/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv_1/project/weights"
      }
    }
  }
}
node {
  name: "ssd300/expanded_conv_1/project/weights/Initializer/random_uniform/mul"
  op: "Mul"
  input: "ssd300/expanded_conv_1/project/weights/Initializer/random_uniform/RandomUniform"
  input: "ssd300/expanded_conv_1/project/weights/Initializer/random_uniform/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv_1/project/weights"
      }
    }
  }
}
node {
  name: "ssd300/expanded_conv_1/project/weights/Initializer/random_uniform"
  op: "Add"
  input: "ssd300/expanded_conv_1/project/weights/Initializer/random_uniform/mul"
  input: "ssd300/expanded_conv_1/project/weights/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv_1/project/weights"
      }
    }
  }
}
node {
  name: "ssd300/expanded_conv_1/project/weights"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv_1/project/weights"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
        dim {
          size: 1
        }
        dim {
          size: 96
        }
        dim {
          size: 24
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "ssd300/expanded_conv_1/project/weights/Assign"
  op: "Assign"
  input: "ssd300/expanded_conv_1/project/weights"
  input: "ssd300/expanded_conv_1/project/weights/Initializer/random_uniform"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv_1/project/weights"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "ssd300/expanded_conv_1/project/weights/read"
  op: "Identity"
  input: "ssd300/expanded_conv_1/project/weights"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv_1/project/weights"
      }
    }
  }
}
node {
  name: "ssd300/expanded_conv_1/project/layer_conv2d/Conv2D"
  op: "Conv2D"
  input: "ssd300/expanded_conv_1/depthwise/Relu6"
  input: "ssd300/expanded_conv_1/project/weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NCHW"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "explicit_paddings"
    value {
      list {
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "ssd300/expanded_conv_1/project/BatchNorm/beta/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv_1/project/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 24
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "ssd300/expanded_conv_1/project/BatchNorm/beta"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv_1/project/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 24
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "ssd300/expanded_conv_1/project/BatchNorm/beta/Assign"
  op: "Assign"
  input: "ssd300/expanded_conv_1/project/BatchNorm/beta"
  input: "ssd300/expanded_conv_1/project/BatchNorm/beta/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv_1/project/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "ssd300/expanded_conv_1/project/BatchNorm/beta/read"
  op: "Identity"
  input: "ssd300/expanded_conv_1/project/BatchNorm/beta"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv_1/project/BatchNorm/beta"
      }
    }
  }
}
node {
  name: "ssd300/expanded_conv_1/project/BatchNorm/moving_mean/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv_1/project/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 24
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "ssd300/expanded_conv_1/project/BatchNorm/moving_mean"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv_1/project/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 24
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "ssd300/expanded_conv_1/project/BatchNorm/moving_mean/Assign"
  op: "Assign"
  input: "ssd300/expanded_conv_1/project/BatchNorm/moving_mean"
  input: "ssd300/expanded_conv_1/project/BatchNorm/moving_mean/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv_1/project/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "ssd300/expanded_conv_1/project/BatchNorm/moving_mean/read"
  op: "Identity"
  input: "ssd300/expanded_conv_1/project/BatchNorm/moving_mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv_1/project/BatchNorm/moving_mean"
      }
    }
  }
}
node {
  name: "ssd300/expanded_conv_1/project/BatchNorm/moving_variance/Initializer/ones"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv_1/project/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 24
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "ssd300/expanded_conv_1/project/BatchNorm/moving_variance"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv_1/project/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 24
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "ssd300/expanded_conv_1/project/BatchNorm/moving_variance/Assign"
  op: "Assign"
  input: "ssd300/expanded_conv_1/project/BatchNorm/moving_variance"
  input: "ssd300/expanded_conv_1/project/BatchNorm/moving_variance/Initializer/ones"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv_1/project/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "ssd300/expanded_conv_1/project/BatchNorm/moving_variance/read"
  op: "Identity"
  input: "ssd300/expanded_conv_1/project/BatchNorm/moving_variance"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv_1/project/BatchNorm/moving_variance"
      }
    }
  }
}
node {
  name: "ssd300/expanded_conv_1/project/BatchNorm/Reshape/shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\030\000\000\000\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "ssd300/expanded_conv_1/project/BatchNorm/Reshape"
  op: "Reshape"
  input: "ssd300/expanded_conv_1/project/BatchNorm/beta/read"
  input: "ssd300/expanded_conv_1/project/BatchNorm/Reshape/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "ssd300/expanded_conv_1/project/BatchNorm/Reshape_1/shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\030\000\000\000\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "ssd300/expanded_conv_1/project/BatchNorm/Reshape_1"
  op: "Reshape"
  input: "ssd300/expanded_conv_1/project/BatchNorm/moving_mean/read"
  input: "ssd300/expanded_conv_1/project/BatchNorm/Reshape_1/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "ssd300/expanded_conv_1/project/BatchNorm/Reshape_2/shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\030\000\000\000\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "ssd300/expanded_conv_1/project/BatchNorm/Reshape_2"
  op: "Reshape"
  input: "ssd300/expanded_conv_1/project/BatchNorm/moving_variance/read"
  input: "ssd300/expanded_conv_1/project/BatchNorm/Reshape_2/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "ssd300/expanded_conv_1/project/BatchNorm/batchnorm_1/Add/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0010000000474974513
      }
    }
  }
}
node {
  name: "ssd300/expanded_conv_1/project/BatchNorm/batchnorm_1/Add"
  op: "Add"
  input: "ssd300/expanded_conv_1/project/BatchNorm/Reshape_2"
  input: "ssd300/expanded_conv_1/project/BatchNorm/batchnorm_1/Add/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ssd300/expanded_conv_1/project/BatchNorm/batchnorm_1/Rsqrt"
  op: "Rsqrt"
  input: "ssd300/expanded_conv_1/project/BatchNorm/batchnorm_1/Add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ssd300/expanded_conv_1/project/BatchNorm/batchnorm_1/mul"
  op: "Mul"
  input: "ssd300/expanded_conv_1/project/layer_conv2d/Conv2D"
  input: "ssd300/expanded_conv_1/project/BatchNorm/batchnorm_1/Rsqrt"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ssd300/expanded_conv_1/project/BatchNorm/batchnorm_1/mul_1"
  op: "Mul"
  input: "ssd300/expanded_conv_1/project/BatchNorm/Reshape_1"
  input: "ssd300/expanded_conv_1/project/BatchNorm/batchnorm_1/Rsqrt"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ssd300/expanded_conv_1/project/BatchNorm/batchnorm_1/sub"
  op: "Sub"
  input: "ssd300/expanded_conv_1/project/BatchNorm/Reshape"
  input: "ssd300/expanded_conv_1/project/BatchNorm/batchnorm_1/mul_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ssd300/expanded_conv_1/project/BatchNorm/batchnorm_1/Add_1"
  op: "Add"
  input: "ssd300/expanded_conv_1/project/BatchNorm/batchnorm_1/mul"
  input: "ssd300/expanded_conv_1/project/BatchNorm/batchnorm_1/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ssd300/expanded_conv_2/expand/weights/Initializer/random_uniform/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv_2/expand/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000\030\000\000\000\220\000\000\000"
      }
    }
  }
}
node {
  name: "ssd300/expanded_conv_2/expand/weights/Initializer/random_uniform/min"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv_2/expand/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: -0.18898223340511322
      }
    }
  }
}
node {
  name: "ssd300/expanded_conv_2/expand/weights/Initializer/random_uniform/max"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv_2/expand/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.18898223340511322
      }
    }
  }
}
node {
  name: "ssd300/expanded_conv_2/expand/weights/Initializer/random_uniform/RandomUniform"
  op: "RandomUniform"
  input: "ssd300/expanded_conv_2/expand/weights/Initializer/random_uniform/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv_2/expand/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "ssd300/expanded_conv_2/expand/weights/Initializer/random_uniform/sub"
  op: "Sub"
  input: "ssd300/expanded_conv_2/expand/weights/Initializer/random_uniform/max"
  input: "ssd300/expanded_conv_2/expand/weights/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv_2/expand/weights"
      }
    }
  }
}
node {
  name: "ssd300/expanded_conv_2/expand/weights/Initializer/random_uniform/mul"
  op: "Mul"
  input: "ssd300/expanded_conv_2/expand/weights/Initializer/random_uniform/RandomUniform"
  input: "ssd300/expanded_conv_2/expand/weights/Initializer/random_uniform/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv_2/expand/weights"
      }
    }
  }
}
node {
  name: "ssd300/expanded_conv_2/expand/weights/Initializer/random_uniform"
  op: "Add"
  input: "ssd300/expanded_conv_2/expand/weights/Initializer/random_uniform/mul"
  input: "ssd300/expanded_conv_2/expand/weights/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv_2/expand/weights"
      }
    }
  }
}
node {
  name: "ssd300/expanded_conv_2/expand/weights"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv_2/expand/weights"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
        dim {
          size: 1
        }
        dim {
          size: 24
        }
        dim {
          size: 144
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "ssd300/expanded_conv_2/expand/weights/Assign"
  op: "Assign"
  input: "ssd300/expanded_conv_2/expand/weights"
  input: "ssd300/expanded_conv_2/expand/weights/Initializer/random_uniform"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv_2/expand/weights"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "ssd300/expanded_conv_2/expand/weights/read"
  op: "Identity"
  input: "ssd300/expanded_conv_2/expand/weights"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv_2/expand/weights"
      }
    }
  }
}
node {
  name: "ssd300/expanded_conv_2/expand/layer_conv2d/Conv2D"
  op: "Conv2D"
  input: "ssd300/expanded_conv_1/project/BatchNorm/batchnorm_1/Add_1"
  input: "ssd300/expanded_conv_2/expand/weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NCHW"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "explicit_paddings"
    value {
      list {
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "ssd300/expanded_conv_2/expand/BatchNorm/beta/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv_2/expand/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 144
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "ssd300/expanded_conv_2/expand/BatchNorm/beta"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv_2/expand/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 144
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "ssd300/expanded_conv_2/expand/BatchNorm/beta/Assign"
  op: "Assign"
  input: "ssd300/expanded_conv_2/expand/BatchNorm/beta"
  input: "ssd300/expanded_conv_2/expand/BatchNorm/beta/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv_2/expand/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "ssd300/expanded_conv_2/expand/BatchNorm/beta/read"
  op: "Identity"
  input: "ssd300/expanded_conv_2/expand/BatchNorm/beta"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv_2/expand/BatchNorm/beta"
      }
    }
  }
}
node {
  name: "ssd300/expanded_conv_2/expand/BatchNorm/moving_mean/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv_2/expand/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 144
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "ssd300/expanded_conv_2/expand/BatchNorm/moving_mean"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv_2/expand/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 144
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "ssd300/expanded_conv_2/expand/BatchNorm/moving_mean/Assign"
  op: "Assign"
  input: "ssd300/expanded_conv_2/expand/BatchNorm/moving_mean"
  input: "ssd300/expanded_conv_2/expand/BatchNorm/moving_mean/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv_2/expand/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "ssd300/expanded_conv_2/expand/BatchNorm/moving_mean/read"
  op: "Identity"
  input: "ssd300/expanded_conv_2/expand/BatchNorm/moving_mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv_2/expand/BatchNorm/moving_mean"
      }
    }
  }
}
node {
  name: "ssd300/expanded_conv_2/expand/BatchNorm/moving_variance/Initializer/ones"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv_2/expand/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 144
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "ssd300/expanded_conv_2/expand/BatchNorm/moving_variance"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv_2/expand/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 144
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "ssd300/expanded_conv_2/expand/BatchNorm/moving_variance/Assign"
  op: "Assign"
  input: "ssd300/expanded_conv_2/expand/BatchNorm/moving_variance"
  input: "ssd300/expanded_conv_2/expand/BatchNorm/moving_variance/Initializer/ones"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv_2/expand/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "ssd300/expanded_conv_2/expand/BatchNorm/moving_variance/read"
  op: "Identity"
  input: "ssd300/expanded_conv_2/expand/BatchNorm/moving_variance"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv_2/expand/BatchNorm/moving_variance"
      }
    }
  }
}
node {
  name: "ssd300/expanded_conv_2/expand/BatchNorm/Reshape/shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\220\000\000\000\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "ssd300/expanded_conv_2/expand/BatchNorm/Reshape"
  op: "Reshape"
  input: "ssd300/expanded_conv_2/expand/BatchNorm/beta/read"
  input: "ssd300/expanded_conv_2/expand/BatchNorm/Reshape/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "ssd300/expanded_conv_2/expand/BatchNorm/Reshape_1/shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\220\000\000\000\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "ssd300/expanded_conv_2/expand/BatchNorm/Reshape_1"
  op: "Reshape"
  input: "ssd300/expanded_conv_2/expand/BatchNorm/moving_mean/read"
  input: "ssd300/expanded_conv_2/expand/BatchNorm/Reshape_1/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "ssd300/expanded_conv_2/expand/BatchNorm/Reshape_2/shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\220\000\000\000\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "ssd300/expanded_conv_2/expand/BatchNorm/Reshape_2"
  op: "Reshape"
  input: "ssd300/expanded_conv_2/expand/BatchNorm/moving_variance/read"
  input: "ssd300/expanded_conv_2/expand/BatchNorm/Reshape_2/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "ssd300/expanded_conv_2/expand/BatchNorm/batchnorm_1/Add/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0010000000474974513
      }
    }
  }
}
node {
  name: "ssd300/expanded_conv_2/expand/BatchNorm/batchnorm_1/Add"
  op: "Add"
  input: "ssd300/expanded_conv_2/expand/BatchNorm/Reshape_2"
  input: "ssd300/expanded_conv_2/expand/BatchNorm/batchnorm_1/Add/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ssd300/expanded_conv_2/expand/BatchNorm/batchnorm_1/Rsqrt"
  op: "Rsqrt"
  input: "ssd300/expanded_conv_2/expand/BatchNorm/batchnorm_1/Add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ssd300/expanded_conv_2/expand/BatchNorm/batchnorm_1/mul"
  op: "Mul"
  input: "ssd300/expanded_conv_2/expand/layer_conv2d/Conv2D"
  input: "ssd300/expanded_conv_2/expand/BatchNorm/batchnorm_1/Rsqrt"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ssd300/expanded_conv_2/expand/BatchNorm/batchnorm_1/mul_1"
  op: "Mul"
  input: "ssd300/expanded_conv_2/expand/BatchNorm/Reshape_1"
  input: "ssd300/expanded_conv_2/expand/BatchNorm/batchnorm_1/Rsqrt"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ssd300/expanded_conv_2/expand/BatchNorm/batchnorm_1/sub"
  op: "Sub"
  input: "ssd300/expanded_conv_2/expand/BatchNorm/Reshape"
  input: "ssd300/expanded_conv_2/expand/BatchNorm/batchnorm_1/mul_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ssd300/expanded_conv_2/expand/BatchNorm/batchnorm_1/Add_1"
  op: "Add"
  input: "ssd300/expanded_conv_2/expand/BatchNorm/batchnorm_1/mul"
  input: "ssd300/expanded_conv_2/expand/BatchNorm/batchnorm_1/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ssd300/expanded_conv_2/expand/Relu6"
  op: "Relu6"
  input: "ssd300/expanded_conv_2/expand/BatchNorm/batchnorm_1/Add_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ssd300/expanded_conv_2/depthwise/depthwise_weights/Initializer/random_uniform/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv_2/depthwise/depthwise_weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\003\000\000\000\003\000\000\000\220\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "ssd300/expanded_conv_2/depthwise/depthwise_weights/Initializer/random_uniform/min"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv_2/depthwise/depthwise_weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: -0.06780634820461273
      }
    }
  }
}
node {
  name: "ssd300/expanded_conv_2/depthwise/depthwise_weights/Initializer/random_uniform/max"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv_2/depthwise/depthwise_weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.06780634820461273
      }
    }
  }
}
node {
  name: "ssd300/expanded_conv_2/depthwise/depthwise_weights/Initializer/random_uniform/RandomUniform"
  op: "RandomUniform"
  input: "ssd300/expanded_conv_2/depthwise/depthwise_weights/Initializer/random_uniform/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv_2/depthwise/depthwise_weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "ssd300/expanded_conv_2/depthwise/depthwise_weights/Initializer/random_uniform/sub"
  op: "Sub"
  input: "ssd300/expanded_conv_2/depthwise/depthwise_weights/Initializer/random_uniform/max"
  input: "ssd300/expanded_conv_2/depthwise/depthwise_weights/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv_2/depthwise/depthwise_weights"
      }
    }
  }
}
node {
  name: "ssd300/expanded_conv_2/depthwise/depthwise_weights/Initializer/random_uniform/mul"
  op: "Mul"
  input: "ssd300/expanded_conv_2/depthwise/depthwise_weights/Initializer/random_uniform/RandomUniform"
  input: "ssd300/expanded_conv_2/depthwise/depthwise_weights/Initializer/random_uniform/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv_2/depthwise/depthwise_weights"
      }
    }
  }
}
node {
  name: "ssd300/expanded_conv_2/depthwise/depthwise_weights/Initializer/random_uniform"
  op: "Add"
  input: "ssd300/expanded_conv_2/depthwise/depthwise_weights/Initializer/random_uniform/mul"
  input: "ssd300/expanded_conv_2/depthwise/depthwise_weights/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv_2/depthwise/depthwise_weights"
      }
    }
  }
}
node {
  name: "ssd300/expanded_conv_2/depthwise/depthwise_weights"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv_2/depthwise/depthwise_weights"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 3
        }
        dim {
          size: 3
        }
        dim {
          size: 144
        }
        dim {
          size: 1
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "ssd300/expanded_conv_2/depthwise/depthwise_weights/Assign"
  op: "Assign"
  input: "ssd300/expanded_conv_2/depthwise/depthwise_weights"
  input: "ssd300/expanded_conv_2/depthwise/depthwise_weights/Initializer/random_uniform"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv_2/depthwise/depthwise_weights"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "ssd300/expanded_conv_2/depthwise/depthwise_weights/read"
  op: "Identity"
  input: "ssd300/expanded_conv_2/depthwise/depthwise_weights"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv_2/depthwise/depthwise_weights"
      }
    }
  }
}
node {
  name: "ssd300/expanded_conv_2/depthwise/layer_conv2d/depthwise/Shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\003\000\000\000\003\000\000\000\220\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "ssd300/expanded_conv_2/depthwise/layer_conv2d/depthwise/dilation_rate"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "ssd300/expanded_conv_2/depthwise/layer_conv2d/depthwise"
  op: "DepthwiseConv2dNative"
  input: "ssd300/expanded_conv_2/expand/Relu6"
  input: "ssd300/expanded_conv_2/depthwise/depthwise_weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NCHW"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
}
node {
  name: "ssd300/expanded_conv_2/depthwise/BatchNorm/beta/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv_2/depthwise/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 144
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "ssd300/expanded_conv_2/depthwise/BatchNorm/beta"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv_2/depthwise/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 144
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "ssd300/expanded_conv_2/depthwise/BatchNorm/beta/Assign"
  op: "Assign"
  input: "ssd300/expanded_conv_2/depthwise/BatchNorm/beta"
  input: "ssd300/expanded_conv_2/depthwise/BatchNorm/beta/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv_2/depthwise/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "ssd300/expanded_conv_2/depthwise/BatchNorm/beta/read"
  op: "Identity"
  input: "ssd300/expanded_conv_2/depthwise/BatchNorm/beta"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv_2/depthwise/BatchNorm/beta"
      }
    }
  }
}
node {
  name: "ssd300/expanded_conv_2/depthwise/BatchNorm/moving_mean/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv_2/depthwise/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 144
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "ssd300/expanded_conv_2/depthwise/BatchNorm/moving_mean"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv_2/depthwise/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 144
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "ssd300/expanded_conv_2/depthwise/BatchNorm/moving_mean/Assign"
  op: "Assign"
  input: "ssd300/expanded_conv_2/depthwise/BatchNorm/moving_mean"
  input: "ssd300/expanded_conv_2/depthwise/BatchNorm/moving_mean/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv_2/depthwise/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "ssd300/expanded_conv_2/depthwise/BatchNorm/moving_mean/read"
  op: "Identity"
  input: "ssd300/expanded_conv_2/depthwise/BatchNorm/moving_mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv_2/depthwise/BatchNorm/moving_mean"
      }
    }
  }
}
node {
  name: "ssd300/expanded_conv_2/depthwise/BatchNorm/moving_variance/Initializer/ones"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv_2/depthwise/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 144
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "ssd300/expanded_conv_2/depthwise/BatchNorm/moving_variance"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv_2/depthwise/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 144
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "ssd300/expanded_conv_2/depthwise/BatchNorm/moving_variance/Assign"
  op: "Assign"
  input: "ssd300/expanded_conv_2/depthwise/BatchNorm/moving_variance"
  input: "ssd300/expanded_conv_2/depthwise/BatchNorm/moving_variance/Initializer/ones"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv_2/depthwise/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "ssd300/expanded_conv_2/depthwise/BatchNorm/moving_variance/read"
  op: "Identity"
  input: "ssd300/expanded_conv_2/depthwise/BatchNorm/moving_variance"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv_2/depthwise/BatchNorm/moving_variance"
      }
    }
  }
}
node {
  name: "ssd300/expanded_conv_2/depthwise/BatchNorm/Reshape/shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\220\000\000\000\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "ssd300/expanded_conv_2/depthwise/BatchNorm/Reshape"
  op: "Reshape"
  input: "ssd300/expanded_conv_2/depthwise/BatchNorm/beta/read"
  input: "ssd300/expanded_conv_2/depthwise/BatchNorm/Reshape/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "ssd300/expanded_conv_2/depthwise/BatchNorm/Reshape_1/shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\220\000\000\000\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "ssd300/expanded_conv_2/depthwise/BatchNorm/Reshape_1"
  op: "Reshape"
  input: "ssd300/expanded_conv_2/depthwise/BatchNorm/moving_mean/read"
  input: "ssd300/expanded_conv_2/depthwise/BatchNorm/Reshape_1/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "ssd300/expanded_conv_2/depthwise/BatchNorm/Reshape_2/shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\220\000\000\000\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "ssd300/expanded_conv_2/depthwise/BatchNorm/Reshape_2"
  op: "Reshape"
  input: "ssd300/expanded_conv_2/depthwise/BatchNorm/moving_variance/read"
  input: "ssd300/expanded_conv_2/depthwise/BatchNorm/Reshape_2/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "ssd300/expanded_conv_2/depthwise/BatchNorm/batchnorm_1/Add/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0010000000474974513
      }
    }
  }
}
node {
  name: "ssd300/expanded_conv_2/depthwise/BatchNorm/batchnorm_1/Add"
  op: "Add"
  input: "ssd300/expanded_conv_2/depthwise/BatchNorm/Reshape_2"
  input: "ssd300/expanded_conv_2/depthwise/BatchNorm/batchnorm_1/Add/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ssd300/expanded_conv_2/depthwise/BatchNorm/batchnorm_1/Rsqrt"
  op: "Rsqrt"
  input: "ssd300/expanded_conv_2/depthwise/BatchNorm/batchnorm_1/Add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ssd300/expanded_conv_2/depthwise/BatchNorm/batchnorm_1/mul"
  op: "Mul"
  input: "ssd300/expanded_conv_2/depthwise/layer_conv2d/depthwise"
  input: "ssd300/expanded_conv_2/depthwise/BatchNorm/batchnorm_1/Rsqrt"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ssd300/expanded_conv_2/depthwise/BatchNorm/batchnorm_1/mul_1"
  op: "Mul"
  input: "ssd300/expanded_conv_2/depthwise/BatchNorm/Reshape_1"
  input: "ssd300/expanded_conv_2/depthwise/BatchNorm/batchnorm_1/Rsqrt"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ssd300/expanded_conv_2/depthwise/BatchNorm/batchnorm_1/sub"
  op: "Sub"
  input: "ssd300/expanded_conv_2/depthwise/BatchNorm/Reshape"
  input: "ssd300/expanded_conv_2/depthwise/BatchNorm/batchnorm_1/mul_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ssd300/expanded_conv_2/depthwise/BatchNorm/batchnorm_1/Add_1"
  op: "Add"
  input: "ssd300/expanded_conv_2/depthwise/BatchNorm/batchnorm_1/mul"
  input: "ssd300/expanded_conv_2/depthwise/BatchNorm/batchnorm_1/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ssd300/expanded_conv_2/depthwise/Relu6"
  op: "Relu6"
  input: "ssd300/expanded_conv_2/depthwise/BatchNorm/batchnorm_1/Add_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ssd300/expanded_conv_2/project/weights/Initializer/random_uniform/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv_2/project/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000\220\000\000\000\030\000\000\000"
      }
    }
  }
}
node {
  name: "ssd300/expanded_conv_2/project/weights/Initializer/random_uniform/min"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv_2/project/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: -0.18898223340511322
      }
    }
  }
}
node {
  name: "ssd300/expanded_conv_2/project/weights/Initializer/random_uniform/max"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv_2/project/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.18898223340511322
      }
    }
  }
}
node {
  name: "ssd300/expanded_conv_2/project/weights/Initializer/random_uniform/RandomUniform"
  op: "RandomUniform"
  input: "ssd300/expanded_conv_2/project/weights/Initializer/random_uniform/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv_2/project/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "ssd300/expanded_conv_2/project/weights/Initializer/random_uniform/sub"
  op: "Sub"
  input: "ssd300/expanded_conv_2/project/weights/Initializer/random_uniform/max"
  input: "ssd300/expanded_conv_2/project/weights/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv_2/project/weights"
      }
    }
  }
}
node {
  name: "ssd300/expanded_conv_2/project/weights/Initializer/random_uniform/mul"
  op: "Mul"
  input: "ssd300/expanded_conv_2/project/weights/Initializer/random_uniform/RandomUniform"
  input: "ssd300/expanded_conv_2/project/weights/Initializer/random_uniform/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv_2/project/weights"
      }
    }
  }
}
node {
  name: "ssd300/expanded_conv_2/project/weights/Initializer/random_uniform"
  op: "Add"
  input: "ssd300/expanded_conv_2/project/weights/Initializer/random_uniform/mul"
  input: "ssd300/expanded_conv_2/project/weights/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv_2/project/weights"
      }
    }
  }
}
node {
  name: "ssd300/expanded_conv_2/project/weights"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv_2/project/weights"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
        dim {
          size: 1
        }
        dim {
          size: 144
        }
        dim {
          size: 24
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "ssd300/expanded_conv_2/project/weights/Assign"
  op: "Assign"
  input: "ssd300/expanded_conv_2/project/weights"
  input: "ssd300/expanded_conv_2/project/weights/Initializer/random_uniform"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv_2/project/weights"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "ssd300/expanded_conv_2/project/weights/read"
  op: "Identity"
  input: "ssd300/expanded_conv_2/project/weights"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv_2/project/weights"
      }
    }
  }
}
node {
  name: "ssd300/expanded_conv_2/project/layer_conv2d/Conv2D"
  op: "Conv2D"
  input: "ssd300/expanded_conv_2/depthwise/Relu6"
  input: "ssd300/expanded_conv_2/project/weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NCHW"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "explicit_paddings"
    value {
      list {
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "ssd300/expanded_conv_2/project/BatchNorm/beta/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv_2/project/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 24
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "ssd300/expanded_conv_2/project/BatchNorm/beta"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv_2/project/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 24
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "ssd300/expanded_conv_2/project/BatchNorm/beta/Assign"
  op: "Assign"
  input: "ssd300/expanded_conv_2/project/BatchNorm/beta"
  input: "ssd300/expanded_conv_2/project/BatchNorm/beta/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv_2/project/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "ssd300/expanded_conv_2/project/BatchNorm/beta/read"
  op: "Identity"
  input: "ssd300/expanded_conv_2/project/BatchNorm/beta"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv_2/project/BatchNorm/beta"
      }
    }
  }
}
node {
  name: "ssd300/expanded_conv_2/project/BatchNorm/moving_mean/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv_2/project/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 24
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "ssd300/expanded_conv_2/project/BatchNorm/moving_mean"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv_2/project/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 24
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "ssd300/expanded_conv_2/project/BatchNorm/moving_mean/Assign"
  op: "Assign"
  input: "ssd300/expanded_conv_2/project/BatchNorm/moving_mean"
  input: "ssd300/expanded_conv_2/project/BatchNorm/moving_mean/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv_2/project/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "ssd300/expanded_conv_2/project/BatchNorm/moving_mean/read"
  op: "Identity"
  input: "ssd300/expanded_conv_2/project/BatchNorm/moving_mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv_2/project/BatchNorm/moving_mean"
      }
    }
  }
}
node {
  name: "ssd300/expanded_conv_2/project/BatchNorm/moving_variance/Initializer/ones"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv_2/project/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 24
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "ssd300/expanded_conv_2/project/BatchNorm/moving_variance"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv_2/project/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 24
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "ssd300/expanded_conv_2/project/BatchNorm/moving_variance/Assign"
  op: "Assign"
  input: "ssd300/expanded_conv_2/project/BatchNorm/moving_variance"
  input: "ssd300/expanded_conv_2/project/BatchNorm/moving_variance/Initializer/ones"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv_2/project/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "ssd300/expanded_conv_2/project/BatchNorm/moving_variance/read"
  op: "Identity"
  input: "ssd300/expanded_conv_2/project/BatchNorm/moving_variance"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv_2/project/BatchNorm/moving_variance"
      }
    }
  }
}
node {
  name: "ssd300/expanded_conv_2/project/BatchNorm/Reshape/shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\030\000\000\000\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "ssd300/expanded_conv_2/project/BatchNorm/Reshape"
  op: "Reshape"
  input: "ssd300/expanded_conv_2/project/BatchNorm/beta/read"
  input: "ssd300/expanded_conv_2/project/BatchNorm/Reshape/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "ssd300/expanded_conv_2/project/BatchNorm/Reshape_1/shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\030\000\000\000\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "ssd300/expanded_conv_2/project/BatchNorm/Reshape_1"
  op: "Reshape"
  input: "ssd300/expanded_conv_2/project/BatchNorm/moving_mean/read"
  input: "ssd300/expanded_conv_2/project/BatchNorm/Reshape_1/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "ssd300/expanded_conv_2/project/BatchNorm/Reshape_2/shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\030\000\000\000\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "ssd300/expanded_conv_2/project/BatchNorm/Reshape_2"
  op: "Reshape"
  input: "ssd300/expanded_conv_2/project/BatchNorm/moving_variance/read"
  input: "ssd300/expanded_conv_2/project/BatchNorm/Reshape_2/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "ssd300/expanded_conv_2/project/BatchNorm/batchnorm_1/Add/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0010000000474974513
      }
    }
  }
}
node {
  name: "ssd300/expanded_conv_2/project/BatchNorm/batchnorm_1/Add"
  op: "Add"
  input: "ssd300/expanded_conv_2/project/BatchNorm/Reshape_2"
  input: "ssd300/expanded_conv_2/project/BatchNorm/batchnorm_1/Add/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ssd300/expanded_conv_2/project/BatchNorm/batchnorm_1/Rsqrt"
  op: "Rsqrt"
  input: "ssd300/expanded_conv_2/project/BatchNorm/batchnorm_1/Add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ssd300/expanded_conv_2/project/BatchNorm/batchnorm_1/mul"
  op: "Mul"
  input: "ssd300/expanded_conv_2/project/layer_conv2d/Conv2D"
  input: "ssd300/expanded_conv_2/project/BatchNorm/batchnorm_1/Rsqrt"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ssd300/expanded_conv_2/project/BatchNorm/batchnorm_1/mul_1"
  op: "Mul"
  input: "ssd300/expanded_conv_2/project/BatchNorm/Reshape_1"
  input: "ssd300/expanded_conv_2/project/BatchNorm/batchnorm_1/Rsqrt"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ssd300/expanded_conv_2/project/BatchNorm/batchnorm_1/sub"
  op: "Sub"
  input: "ssd300/expanded_conv_2/project/BatchNorm/Reshape"
  input: "ssd300/expanded_conv_2/project/BatchNorm/batchnorm_1/mul_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ssd300/expanded_conv_2/project/BatchNorm/batchnorm_1/Add_1"
  op: "Add"
  input: "ssd300/expanded_conv_2/project/BatchNorm/batchnorm_1/mul"
  input: "ssd300/expanded_conv_2/project/BatchNorm/batchnorm_1/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ssd300/expanded_conv_2/Add"
  op: "Add"
  input: "ssd300/expanded_conv_2/project/BatchNorm/batchnorm_1/Add_1"
  input: "ssd300/expanded_conv_1/project/BatchNorm/batchnorm_1/Add_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ssd300/expanded_conv_3/expand/weights/Initializer/random_uniform/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv_3/expand/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000\030\000\000\000\220\000\000\000"
      }
    }
  }
}
node {
  name: "ssd300/expanded_conv_3/expand/weights/Initializer/random_uniform/min"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv_3/expand/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: -0.18898223340511322
      }
    }
  }
}
node {
  name: "ssd300/expanded_conv_3/expand/weights/Initializer/random_uniform/max"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv_3/expand/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.18898223340511322
      }
    }
  }
}
node {
  name: "ssd300/expanded_conv_3/expand/weights/Initializer/random_uniform/RandomUniform"
  op: "RandomUniform"
  input: "ssd300/expanded_conv_3/expand/weights/Initializer/random_uniform/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv_3/expand/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "ssd300/expanded_conv_3/expand/weights/Initializer/random_uniform/sub"
  op: "Sub"
  input: "ssd300/expanded_conv_3/expand/weights/Initializer/random_uniform/max"
  input: "ssd300/expanded_conv_3/expand/weights/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv_3/expand/weights"
      }
    }
  }
}
node {
  name: "ssd300/expanded_conv_3/expand/weights/Initializer/random_uniform/mul"
  op: "Mul"
  input: "ssd300/expanded_conv_3/expand/weights/Initializer/random_uniform/RandomUniform"
  input: "ssd300/expanded_conv_3/expand/weights/Initializer/random_uniform/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv_3/expand/weights"
      }
    }
  }
}
node {
  name: "ssd300/expanded_conv_3/expand/weights/Initializer/random_uniform"
  op: "Add"
  input: "ssd300/expanded_conv_3/expand/weights/Initializer/random_uniform/mul"
  input: "ssd300/expanded_conv_3/expand/weights/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv_3/expand/weights"
      }
    }
  }
}
node {
  name: "ssd300/expanded_conv_3/expand/weights"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv_3/expand/weights"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
        dim {
          size: 1
        }
        dim {
          size: 24
        }
        dim {
          size: 144
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "ssd300/expanded_conv_3/expand/weights/Assign"
  op: "Assign"
  input: "ssd300/expanded_conv_3/expand/weights"
  input: "ssd300/expanded_conv_3/expand/weights/Initializer/random_uniform"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv_3/expand/weights"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "ssd300/expanded_conv_3/expand/weights/read"
  op: "Identity"
  input: "ssd300/expanded_conv_3/expand/weights"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv_3/expand/weights"
      }
    }
  }
}
node {
  name: "ssd300/expanded_conv_3/expand/layer_conv2d/Conv2D"
  op: "Conv2D"
  input: "ssd300/expanded_conv_2/Add"
  input: "ssd300/expanded_conv_3/expand/weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NCHW"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "explicit_paddings"
    value {
      list {
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "ssd300/expanded_conv_3/expand/BatchNorm/beta/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv_3/expand/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 144
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "ssd300/expanded_conv_3/expand/BatchNorm/beta"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv_3/expand/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 144
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "ssd300/expanded_conv_3/expand/BatchNorm/beta/Assign"
  op: "Assign"
  input: "ssd300/expanded_conv_3/expand/BatchNorm/beta"
  input: "ssd300/expanded_conv_3/expand/BatchNorm/beta/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv_3/expand/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "ssd300/expanded_conv_3/expand/BatchNorm/beta/read"
  op: "Identity"
  input: "ssd300/expanded_conv_3/expand/BatchNorm/beta"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv_3/expand/BatchNorm/beta"
      }
    }
  }
}
node {
  name: "ssd300/expanded_conv_3/expand/BatchNorm/moving_mean/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv_3/expand/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 144
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "ssd300/expanded_conv_3/expand/BatchNorm/moving_mean"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv_3/expand/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 144
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "ssd300/expanded_conv_3/expand/BatchNorm/moving_mean/Assign"
  op: "Assign"
  input: "ssd300/expanded_conv_3/expand/BatchNorm/moving_mean"
  input: "ssd300/expanded_conv_3/expand/BatchNorm/moving_mean/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv_3/expand/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "ssd300/expanded_conv_3/expand/BatchNorm/moving_mean/read"
  op: "Identity"
  input: "ssd300/expanded_conv_3/expand/BatchNorm/moving_mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv_3/expand/BatchNorm/moving_mean"
      }
    }
  }
}
node {
  name: "ssd300/expanded_conv_3/expand/BatchNorm/moving_variance/Initializer/ones"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv_3/expand/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 144
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "ssd300/expanded_conv_3/expand/BatchNorm/moving_variance"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv_3/expand/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 144
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "ssd300/expanded_conv_3/expand/BatchNorm/moving_variance/Assign"
  op: "Assign"
  input: "ssd300/expanded_conv_3/expand/BatchNorm/moving_variance"
  input: "ssd300/expanded_conv_3/expand/BatchNorm/moving_variance/Initializer/ones"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv_3/expand/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "ssd300/expanded_conv_3/expand/BatchNorm/moving_variance/read"
  op: "Identity"
  input: "ssd300/expanded_conv_3/expand/BatchNorm/moving_variance"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv_3/expand/BatchNorm/moving_variance"
      }
    }
  }
}
node {
  name: "ssd300/expanded_conv_3/expand/BatchNorm/Reshape/shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\220\000\000\000\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "ssd300/expanded_conv_3/expand/BatchNorm/Reshape"
  op: "Reshape"
  input: "ssd300/expanded_conv_3/expand/BatchNorm/beta/read"
  input: "ssd300/expanded_conv_3/expand/BatchNorm/Reshape/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "ssd300/expanded_conv_3/expand/BatchNorm/Reshape_1/shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\220\000\000\000\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "ssd300/expanded_conv_3/expand/BatchNorm/Reshape_1"
  op: "Reshape"
  input: "ssd300/expanded_conv_3/expand/BatchNorm/moving_mean/read"
  input: "ssd300/expanded_conv_3/expand/BatchNorm/Reshape_1/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "ssd300/expanded_conv_3/expand/BatchNorm/Reshape_2/shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\220\000\000\000\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "ssd300/expanded_conv_3/expand/BatchNorm/Reshape_2"
  op: "Reshape"
  input: "ssd300/expanded_conv_3/expand/BatchNorm/moving_variance/read"
  input: "ssd300/expanded_conv_3/expand/BatchNorm/Reshape_2/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "ssd300/expanded_conv_3/expand/BatchNorm/batchnorm_1/Add/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0010000000474974513
      }
    }
  }
}
node {
  name: "ssd300/expanded_conv_3/expand/BatchNorm/batchnorm_1/Add"
  op: "Add"
  input: "ssd300/expanded_conv_3/expand/BatchNorm/Reshape_2"
  input: "ssd300/expanded_conv_3/expand/BatchNorm/batchnorm_1/Add/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ssd300/expanded_conv_3/expand/BatchNorm/batchnorm_1/Rsqrt"
  op: "Rsqrt"
  input: "ssd300/expanded_conv_3/expand/BatchNorm/batchnorm_1/Add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ssd300/expanded_conv_3/expand/BatchNorm/batchnorm_1/mul"
  op: "Mul"
  input: "ssd300/expanded_conv_3/expand/layer_conv2d/Conv2D"
  input: "ssd300/expanded_conv_3/expand/BatchNorm/batchnorm_1/Rsqrt"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ssd300/expanded_conv_3/expand/BatchNorm/batchnorm_1/mul_1"
  op: "Mul"
  input: "ssd300/expanded_conv_3/expand/BatchNorm/Reshape_1"
  input: "ssd300/expanded_conv_3/expand/BatchNorm/batchnorm_1/Rsqrt"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ssd300/expanded_conv_3/expand/BatchNorm/batchnorm_1/sub"
  op: "Sub"
  input: "ssd300/expanded_conv_3/expand/BatchNorm/Reshape"
  input: "ssd300/expanded_conv_3/expand/BatchNorm/batchnorm_1/mul_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ssd300/expanded_conv_3/expand/BatchNorm/batchnorm_1/Add_1"
  op: "Add"
  input: "ssd300/expanded_conv_3/expand/BatchNorm/batchnorm_1/mul"
  input: "ssd300/expanded_conv_3/expand/BatchNorm/batchnorm_1/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ssd300/expanded_conv_3/expand/Relu6"
  op: "Relu6"
  input: "ssd300/expanded_conv_3/expand/BatchNorm/batchnorm_1/Add_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ssd300/expanded_conv_3/depthwise/depthwise_weights/Initializer/random_uniform/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv_3/depthwise/depthwise_weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\003\000\000\000\003\000\000\000\220\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "ssd300/expanded_conv_3/depthwise/depthwise_weights/Initializer/random_uniform/min"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv_3/depthwise/depthwise_weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: -0.06780634820461273
      }
    }
  }
}
node {
  name: "ssd300/expanded_conv_3/depthwise/depthwise_weights/Initializer/random_uniform/max"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv_3/depthwise/depthwise_weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.06780634820461273
      }
    }
  }
}
node {
  name: "ssd300/expanded_conv_3/depthwise/depthwise_weights/Initializer/random_uniform/RandomUniform"
  op: "RandomUniform"
  input: "ssd300/expanded_conv_3/depthwise/depthwise_weights/Initializer/random_uniform/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv_3/depthwise/depthwise_weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "ssd300/expanded_conv_3/depthwise/depthwise_weights/Initializer/random_uniform/sub"
  op: "Sub"
  input: "ssd300/expanded_conv_3/depthwise/depthwise_weights/Initializer/random_uniform/max"
  input: "ssd300/expanded_conv_3/depthwise/depthwise_weights/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv_3/depthwise/depthwise_weights"
      }
    }
  }
}
node {
  name: "ssd300/expanded_conv_3/depthwise/depthwise_weights/Initializer/random_uniform/mul"
  op: "Mul"
  input: "ssd300/expanded_conv_3/depthwise/depthwise_weights/Initializer/random_uniform/RandomUniform"
  input: "ssd300/expanded_conv_3/depthwise/depthwise_weights/Initializer/random_uniform/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv_3/depthwise/depthwise_weights"
      }
    }
  }
}
node {
  name: "ssd300/expanded_conv_3/depthwise/depthwise_weights/Initializer/random_uniform"
  op: "Add"
  input: "ssd300/expanded_conv_3/depthwise/depthwise_weights/Initializer/random_uniform/mul"
  input: "ssd300/expanded_conv_3/depthwise/depthwise_weights/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv_3/depthwise/depthwise_weights"
      }
    }
  }
}
node {
  name: "ssd300/expanded_conv_3/depthwise/depthwise_weights"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv_3/depthwise/depthwise_weights"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 3
        }
        dim {
          size: 3
        }
        dim {
          size: 144
        }
        dim {
          size: 1
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "ssd300/expanded_conv_3/depthwise/depthwise_weights/Assign"
  op: "Assign"
  input: "ssd300/expanded_conv_3/depthwise/depthwise_weights"
  input: "ssd300/expanded_conv_3/depthwise/depthwise_weights/Initializer/random_uniform"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv_3/depthwise/depthwise_weights"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "ssd300/expanded_conv_3/depthwise/depthwise_weights/read"
  op: "Identity"
  input: "ssd300/expanded_conv_3/depthwise/depthwise_weights"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv_3/depthwise/depthwise_weights"
      }
    }
  }
}
node {
  name: "ssd300/expanded_conv_3/depthwise/layer_conv2d/depthwise/Shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\003\000\000\000\003\000\000\000\220\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "ssd300/expanded_conv_3/depthwise/layer_conv2d/depthwise/dilation_rate"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "ssd300/expanded_conv_3/depthwise/layer_conv2d/depthwise"
  op: "DepthwiseConv2dNative"
  input: "ssd300/expanded_conv_3/expand/Relu6"
  input: "ssd300/expanded_conv_3/depthwise/depthwise_weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NCHW"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 2
        i: 2
      }
    }
  }
}
node {
  name: "ssd300/expanded_conv_3/depthwise/BatchNorm/beta/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv_3/depthwise/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 144
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "ssd300/expanded_conv_3/depthwise/BatchNorm/beta"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv_3/depthwise/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 144
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "ssd300/expanded_conv_3/depthwise/BatchNorm/beta/Assign"
  op: "Assign"
  input: "ssd300/expanded_conv_3/depthwise/BatchNorm/beta"
  input: "ssd300/expanded_conv_3/depthwise/BatchNorm/beta/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv_3/depthwise/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "ssd300/expanded_conv_3/depthwise/BatchNorm/beta/read"
  op: "Identity"
  input: "ssd300/expanded_conv_3/depthwise/BatchNorm/beta"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv_3/depthwise/BatchNorm/beta"
      }
    }
  }
}
node {
  name: "ssd300/expanded_conv_3/depthwise/BatchNorm/moving_mean/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv_3/depthwise/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 144
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "ssd300/expanded_conv_3/depthwise/BatchNorm/moving_mean"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv_3/depthwise/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 144
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "ssd300/expanded_conv_3/depthwise/BatchNorm/moving_mean/Assign"
  op: "Assign"
  input: "ssd300/expanded_conv_3/depthwise/BatchNorm/moving_mean"
  input: "ssd300/expanded_conv_3/depthwise/BatchNorm/moving_mean/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv_3/depthwise/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "ssd300/expanded_conv_3/depthwise/BatchNorm/moving_mean/read"
  op: "Identity"
  input: "ssd300/expanded_conv_3/depthwise/BatchNorm/moving_mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv_3/depthwise/BatchNorm/moving_mean"
      }
    }
  }
}
node {
  name: "ssd300/expanded_conv_3/depthwise/BatchNorm/moving_variance/Initializer/ones"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv_3/depthwise/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 144
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "ssd300/expanded_conv_3/depthwise/BatchNorm/moving_variance"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv_3/depthwise/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 144
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "ssd300/expanded_conv_3/depthwise/BatchNorm/moving_variance/Assign"
  op: "Assign"
  input: "ssd300/expanded_conv_3/depthwise/BatchNorm/moving_variance"
  input: "ssd300/expanded_conv_3/depthwise/BatchNorm/moving_variance/Initializer/ones"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv_3/depthwise/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "ssd300/expanded_conv_3/depthwise/BatchNorm/moving_variance/read"
  op: "Identity"
  input: "ssd300/expanded_conv_3/depthwise/BatchNorm/moving_variance"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv_3/depthwise/BatchNorm/moving_variance"
      }
    }
  }
}
node {
  name: "ssd300/expanded_conv_3/depthwise/BatchNorm/Reshape/shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\220\000\000\000\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "ssd300/expanded_conv_3/depthwise/BatchNorm/Reshape"
  op: "Reshape"
  input: "ssd300/expanded_conv_3/depthwise/BatchNorm/beta/read"
  input: "ssd300/expanded_conv_3/depthwise/BatchNorm/Reshape/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "ssd300/expanded_conv_3/depthwise/BatchNorm/Reshape_1/shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\220\000\000\000\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "ssd300/expanded_conv_3/depthwise/BatchNorm/Reshape_1"
  op: "Reshape"
  input: "ssd300/expanded_conv_3/depthwise/BatchNorm/moving_mean/read"
  input: "ssd300/expanded_conv_3/depthwise/BatchNorm/Reshape_1/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "ssd300/expanded_conv_3/depthwise/BatchNorm/Reshape_2/shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\220\000\000\000\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "ssd300/expanded_conv_3/depthwise/BatchNorm/Reshape_2"
  op: "Reshape"
  input: "ssd300/expanded_conv_3/depthwise/BatchNorm/moving_variance/read"
  input: "ssd300/expanded_conv_3/depthwise/BatchNorm/Reshape_2/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "ssd300/expanded_conv_3/depthwise/BatchNorm/batchnorm_1/Add/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0010000000474974513
      }
    }
  }
}
node {
  name: "ssd300/expanded_conv_3/depthwise/BatchNorm/batchnorm_1/Add"
  op: "Add"
  input: "ssd300/expanded_conv_3/depthwise/BatchNorm/Reshape_2"
  input: "ssd300/expanded_conv_3/depthwise/BatchNorm/batchnorm_1/Add/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ssd300/expanded_conv_3/depthwise/BatchNorm/batchnorm_1/Rsqrt"
  op: "Rsqrt"
  input: "ssd300/expanded_conv_3/depthwise/BatchNorm/batchnorm_1/Add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ssd300/expanded_conv_3/depthwise/BatchNorm/batchnorm_1/mul"
  op: "Mul"
  input: "ssd300/expanded_conv_3/depthwise/layer_conv2d/depthwise"
  input: "ssd300/expanded_conv_3/depthwise/BatchNorm/batchnorm_1/Rsqrt"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ssd300/expanded_conv_3/depthwise/BatchNorm/batchnorm_1/mul_1"
  op: "Mul"
  input: "ssd300/expanded_conv_3/depthwise/BatchNorm/Reshape_1"
  input: "ssd300/expanded_conv_3/depthwise/BatchNorm/batchnorm_1/Rsqrt"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ssd300/expanded_conv_3/depthwise/BatchNorm/batchnorm_1/sub"
  op: "Sub"
  input: "ssd300/expanded_conv_3/depthwise/BatchNorm/Reshape"
  input: "ssd300/expanded_conv_3/depthwise/BatchNorm/batchnorm_1/mul_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ssd300/expanded_conv_3/depthwise/BatchNorm/batchnorm_1/Add_1"
  op: "Add"
  input: "ssd300/expanded_conv_3/depthwise/BatchNorm/batchnorm_1/mul"
  input: "ssd300/expanded_conv_3/depthwise/BatchNorm/batchnorm_1/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ssd300/expanded_conv_3/depthwise/Relu6"
  op: "Relu6"
  input: "ssd300/expanded_conv_3/depthwise/BatchNorm/batchnorm_1/Add_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ssd300/expanded_conv_3/project/weights/Initializer/random_uniform/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv_3/project/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000\220\000\000\000 \000\000\000"
      }
    }
  }
}
node {
  name: "ssd300/expanded_conv_3/project/weights/Initializer/random_uniform/min"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv_3/project/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: -0.18463723361492157
      }
    }
  }
}
node {
  name: "ssd300/expanded_conv_3/project/weights/Initializer/random_uniform/max"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv_3/project/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.18463723361492157
      }
    }
  }
}
node {
  name: "ssd300/expanded_conv_3/project/weights/Initializer/random_uniform/RandomUniform"
  op: "RandomUniform"
  input: "ssd300/expanded_conv_3/project/weights/Initializer/random_uniform/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv_3/project/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "ssd300/expanded_conv_3/project/weights/Initializer/random_uniform/sub"
  op: "Sub"
  input: "ssd300/expanded_conv_3/project/weights/Initializer/random_uniform/max"
  input: "ssd300/expanded_conv_3/project/weights/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv_3/project/weights"
      }
    }
  }
}
node {
  name: "ssd300/expanded_conv_3/project/weights/Initializer/random_uniform/mul"
  op: "Mul"
  input: "ssd300/expanded_conv_3/project/weights/Initializer/random_uniform/RandomUniform"
  input: "ssd300/expanded_conv_3/project/weights/Initializer/random_uniform/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv_3/project/weights"
      }
    }
  }
}
node {
  name: "ssd300/expanded_conv_3/project/weights/Initializer/random_uniform"
  op: "Add"
  input: "ssd300/expanded_conv_3/project/weights/Initializer/random_uniform/mul"
  input: "ssd300/expanded_conv_3/project/weights/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv_3/project/weights"
      }
    }
  }
}
node {
  name: "ssd300/expanded_conv_3/project/weights"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv_3/project/weights"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
        dim {
          size: 1
        }
        dim {
          size: 144
        }
        dim {
          size: 32
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "ssd300/expanded_conv_3/project/weights/Assign"
  op: "Assign"
  input: "ssd300/expanded_conv_3/project/weights"
  input: "ssd300/expanded_conv_3/project/weights/Initializer/random_uniform"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv_3/project/weights"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "ssd300/expanded_conv_3/project/weights/read"
  op: "Identity"
  input: "ssd300/expanded_conv_3/project/weights"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv_3/project/weights"
      }
    }
  }
}
node {
  name: "ssd300/expanded_conv_3/project/layer_conv2d/Conv2D"
  op: "Conv2D"
  input: "ssd300/expanded_conv_3/depthwise/Relu6"
  input: "ssd300/expanded_conv_3/project/weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NCHW"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "explicit_paddings"
    value {
      list {
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "ssd300/expanded_conv_3/project/BatchNorm/beta/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv_3/project/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 32
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "ssd300/expanded_conv_3/project/BatchNorm/beta"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv_3/project/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 32
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "ssd300/expanded_conv_3/project/BatchNorm/beta/Assign"
  op: "Assign"
  input: "ssd300/expanded_conv_3/project/BatchNorm/beta"
  input: "ssd300/expanded_conv_3/project/BatchNorm/beta/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv_3/project/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "ssd300/expanded_conv_3/project/BatchNorm/beta/read"
  op: "Identity"
  input: "ssd300/expanded_conv_3/project/BatchNorm/beta"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv_3/project/BatchNorm/beta"
      }
    }
  }
}
node {
  name: "ssd300/expanded_conv_3/project/BatchNorm/moving_mean/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv_3/project/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 32
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "ssd300/expanded_conv_3/project/BatchNorm/moving_mean"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv_3/project/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 32
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "ssd300/expanded_conv_3/project/BatchNorm/moving_mean/Assign"
  op: "Assign"
  input: "ssd300/expanded_conv_3/project/BatchNorm/moving_mean"
  input: "ssd300/expanded_conv_3/project/BatchNorm/moving_mean/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv_3/project/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "ssd300/expanded_conv_3/project/BatchNorm/moving_mean/read"
  op: "Identity"
  input: "ssd300/expanded_conv_3/project/BatchNorm/moving_mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv_3/project/BatchNorm/moving_mean"
      }
    }
  }
}
node {
  name: "ssd300/expanded_conv_3/project/BatchNorm/moving_variance/Initializer/ones"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv_3/project/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 32
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "ssd300/expanded_conv_3/project/BatchNorm/moving_variance"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv_3/project/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 32
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "ssd300/expanded_conv_3/project/BatchNorm/moving_variance/Assign"
  op: "Assign"
  input: "ssd300/expanded_conv_3/project/BatchNorm/moving_variance"
  input: "ssd300/expanded_conv_3/project/BatchNorm/moving_variance/Initializer/ones"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv_3/project/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "ssd300/expanded_conv_3/project/BatchNorm/moving_variance/read"
  op: "Identity"
  input: "ssd300/expanded_conv_3/project/BatchNorm/moving_variance"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv_3/project/BatchNorm/moving_variance"
      }
    }
  }
}
node {
  name: "ssd300/expanded_conv_3/project/BatchNorm/Reshape/shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000 \000\000\000\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "ssd300/expanded_conv_3/project/BatchNorm/Reshape"
  op: "Reshape"
  input: "ssd300/expanded_conv_3/project/BatchNorm/beta/read"
  input: "ssd300/expanded_conv_3/project/BatchNorm/Reshape/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "ssd300/expanded_conv_3/project/BatchNorm/Reshape_1/shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000 \000\000\000\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "ssd300/expanded_conv_3/project/BatchNorm/Reshape_1"
  op: "Reshape"
  input: "ssd300/expanded_conv_3/project/BatchNorm/moving_mean/read"
  input: "ssd300/expanded_conv_3/project/BatchNorm/Reshape_1/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "ssd300/expanded_conv_3/project/BatchNorm/Reshape_2/shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000 \000\000\000\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "ssd300/expanded_conv_3/project/BatchNorm/Reshape_2"
  op: "Reshape"
  input: "ssd300/expanded_conv_3/project/BatchNorm/moving_variance/read"
  input: "ssd300/expanded_conv_3/project/BatchNorm/Reshape_2/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "ssd300/expanded_conv_3/project/BatchNorm/batchnorm_1/Add/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0010000000474974513
      }
    }
  }
}
node {
  name: "ssd300/expanded_conv_3/project/BatchNorm/batchnorm_1/Add"
  op: "Add"
  input: "ssd300/expanded_conv_3/project/BatchNorm/Reshape_2"
  input: "ssd300/expanded_conv_3/project/BatchNorm/batchnorm_1/Add/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ssd300/expanded_conv_3/project/BatchNorm/batchnorm_1/Rsqrt"
  op: "Rsqrt"
  input: "ssd300/expanded_conv_3/project/BatchNorm/batchnorm_1/Add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ssd300/expanded_conv_3/project/BatchNorm/batchnorm_1/mul"
  op: "Mul"
  input: "ssd300/expanded_conv_3/project/layer_conv2d/Conv2D"
  input: "ssd300/expanded_conv_3/project/BatchNorm/batchnorm_1/Rsqrt"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ssd300/expanded_conv_3/project/BatchNorm/batchnorm_1/mul_1"
  op: "Mul"
  input: "ssd300/expanded_conv_3/project/BatchNorm/Reshape_1"
  input: "ssd300/expanded_conv_3/project/BatchNorm/batchnorm_1/Rsqrt"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ssd300/expanded_conv_3/project/BatchNorm/batchnorm_1/sub"
  op: "Sub"
  input: "ssd300/expanded_conv_3/project/BatchNorm/Reshape"
  input: "ssd300/expanded_conv_3/project/BatchNorm/batchnorm_1/mul_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ssd300/expanded_conv_3/project/BatchNorm/batchnorm_1/Add_1"
  op: "Add"
  input: "ssd300/expanded_conv_3/project/BatchNorm/batchnorm_1/mul"
  input: "ssd300/expanded_conv_3/project/BatchNorm/batchnorm_1/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ssd300/expanded_conv_4/expand/weights/Initializer/random_uniform/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv_4/expand/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000 \000\000\000\300\000\000\000"
      }
    }
  }
}
node {
  name: "ssd300/expanded_conv_4/expand/weights/Initializer/random_uniform/min"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv_4/expand/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: -0.16366341710090637
      }
    }
  }
}
node {
  name: "ssd300/expanded_conv_4/expand/weights/Initializer/random_uniform/max"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv_4/expand/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.16366341710090637
      }
    }
  }
}
node {
  name: "ssd300/expanded_conv_4/expand/weights/Initializer/random_uniform/RandomUniform"
  op: "RandomUniform"
  input: "ssd300/expanded_conv_4/expand/weights/Initializer/random_uniform/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv_4/expand/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "ssd300/expanded_conv_4/expand/weights/Initializer/random_uniform/sub"
  op: "Sub"
  input: "ssd300/expanded_conv_4/expand/weights/Initializer/random_uniform/max"
  input: "ssd300/expanded_conv_4/expand/weights/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv_4/expand/weights"
      }
    }
  }
}
node {
  name: "ssd300/expanded_conv_4/expand/weights/Initializer/random_uniform/mul"
  op: "Mul"
  input: "ssd300/expanded_conv_4/expand/weights/Initializer/random_uniform/RandomUniform"
  input: "ssd300/expanded_conv_4/expand/weights/Initializer/random_uniform/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv_4/expand/weights"
      }
    }
  }
}
node {
  name: "ssd300/expanded_conv_4/expand/weights/Initializer/random_uniform"
  op: "Add"
  input: "ssd300/expanded_conv_4/expand/weights/Initializer/random_uniform/mul"
  input: "ssd300/expanded_conv_4/expand/weights/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv_4/expand/weights"
      }
    }
  }
}
node {
  name: "ssd300/expanded_conv_4/expand/weights"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv_4/expand/weights"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
        dim {
          size: 1
        }
        dim {
          size: 32
        }
        dim {
          size: 192
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "ssd300/expanded_conv_4/expand/weights/Assign"
  op: "Assign"
  input: "ssd300/expanded_conv_4/expand/weights"
  input: "ssd300/expanded_conv_4/expand/weights/Initializer/random_uniform"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv_4/expand/weights"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "ssd300/expanded_conv_4/expand/weights/read"
  op: "Identity"
  input: "ssd300/expanded_conv_4/expand/weights"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv_4/expand/weights"
      }
    }
  }
}
node {
  name: "ssd300/expanded_conv_4/expand/layer_conv2d/Conv2D"
  op: "Conv2D"
  input: "ssd300/expanded_conv_3/project/BatchNorm/batchnorm_1/Add_1"
  input: "ssd300/expanded_conv_4/expand/weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NCHW"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "explicit_paddings"
    value {
      list {
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "ssd300/expanded_conv_4/expand/BatchNorm/beta/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv_4/expand/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 192
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "ssd300/expanded_conv_4/expand/BatchNorm/beta"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv_4/expand/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 192
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "ssd300/expanded_conv_4/expand/BatchNorm/beta/Assign"
  op: "Assign"
  input: "ssd300/expanded_conv_4/expand/BatchNorm/beta"
  input: "ssd300/expanded_conv_4/expand/BatchNorm/beta/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv_4/expand/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "ssd300/expanded_conv_4/expand/BatchNorm/beta/read"
  op: "Identity"
  input: "ssd300/expanded_conv_4/expand/BatchNorm/beta"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv_4/expand/BatchNorm/beta"
      }
    }
  }
}
node {
  name: "ssd300/expanded_conv_4/expand/BatchNorm/moving_mean/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv_4/expand/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 192
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "ssd300/expanded_conv_4/expand/BatchNorm/moving_mean"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv_4/expand/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 192
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "ssd300/expanded_conv_4/expand/BatchNorm/moving_mean/Assign"
  op: "Assign"
  input: "ssd300/expanded_conv_4/expand/BatchNorm/moving_mean"
  input: "ssd300/expanded_conv_4/expand/BatchNorm/moving_mean/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv_4/expand/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "ssd300/expanded_conv_4/expand/BatchNorm/moving_mean/read"
  op: "Identity"
  input: "ssd300/expanded_conv_4/expand/BatchNorm/moving_mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv_4/expand/BatchNorm/moving_mean"
      }
    }
  }
}
node {
  name: "ssd300/expanded_conv_4/expand/BatchNorm/moving_variance/Initializer/ones"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv_4/expand/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 192
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "ssd300/expanded_conv_4/expand/BatchNorm/moving_variance"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv_4/expand/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 192
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "ssd300/expanded_conv_4/expand/BatchNorm/moving_variance/Assign"
  op: "Assign"
  input: "ssd300/expanded_conv_4/expand/BatchNorm/moving_variance"
  input: "ssd300/expanded_conv_4/expand/BatchNorm/moving_variance/Initializer/ones"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv_4/expand/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "ssd300/expanded_conv_4/expand/BatchNorm/moving_variance/read"
  op: "Identity"
  input: "ssd300/expanded_conv_4/expand/BatchNorm/moving_variance"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv_4/expand/BatchNorm/moving_variance"
      }
    }
  }
}
node {
  name: "ssd300/expanded_conv_4/expand/BatchNorm/Reshape/shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\300\000\000\000\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "ssd300/expanded_conv_4/expand/BatchNorm/Reshape"
  op: "Reshape"
  input: "ssd300/expanded_conv_4/expand/BatchNorm/beta/read"
  input: "ssd300/expanded_conv_4/expand/BatchNorm/Reshape/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "ssd300/expanded_conv_4/expand/BatchNorm/Reshape_1/shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\300\000\000\000\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "ssd300/expanded_conv_4/expand/BatchNorm/Reshape_1"
  op: "Reshape"
  input: "ssd300/expanded_conv_4/expand/BatchNorm/moving_mean/read"
  input: "ssd300/expanded_conv_4/expand/BatchNorm/Reshape_1/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "ssd300/expanded_conv_4/expand/BatchNorm/Reshape_2/shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\300\000\000\000\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "ssd300/expanded_conv_4/expand/BatchNorm/Reshape_2"
  op: "Reshape"
  input: "ssd300/expanded_conv_4/expand/BatchNorm/moving_variance/read"
  input: "ssd300/expanded_conv_4/expand/BatchNorm/Reshape_2/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "ssd300/expanded_conv_4/expand/BatchNorm/batchnorm_1/Add/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0010000000474974513
      }
    }
  }
}
node {
  name: "ssd300/expanded_conv_4/expand/BatchNorm/batchnorm_1/Add"
  op: "Add"
  input: "ssd300/expanded_conv_4/expand/BatchNorm/Reshape_2"
  input: "ssd300/expanded_conv_4/expand/BatchNorm/batchnorm_1/Add/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ssd300/expanded_conv_4/expand/BatchNorm/batchnorm_1/Rsqrt"
  op: "Rsqrt"
  input: "ssd300/expanded_conv_4/expand/BatchNorm/batchnorm_1/Add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ssd300/expanded_conv_4/expand/BatchNorm/batchnorm_1/mul"
  op: "Mul"
  input: "ssd300/expanded_conv_4/expand/layer_conv2d/Conv2D"
  input: "ssd300/expanded_conv_4/expand/BatchNorm/batchnorm_1/Rsqrt"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ssd300/expanded_conv_4/expand/BatchNorm/batchnorm_1/mul_1"
  op: "Mul"
  input: "ssd300/expanded_conv_4/expand/BatchNorm/Reshape_1"
  input: "ssd300/expanded_conv_4/expand/BatchNorm/batchnorm_1/Rsqrt"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ssd300/expanded_conv_4/expand/BatchNorm/batchnorm_1/sub"
  op: "Sub"
  input: "ssd300/expanded_conv_4/expand/BatchNorm/Reshape"
  input: "ssd300/expanded_conv_4/expand/BatchNorm/batchnorm_1/mul_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ssd300/expanded_conv_4/expand/BatchNorm/batchnorm_1/Add_1"
  op: "Add"
  input: "ssd300/expanded_conv_4/expand/BatchNorm/batchnorm_1/mul"
  input: "ssd300/expanded_conv_4/expand/BatchNorm/batchnorm_1/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ssd300/expanded_conv_4/expand/Relu6"
  op: "Relu6"
  input: "ssd300/expanded_conv_4/expand/BatchNorm/batchnorm_1/Add_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ssd300/expanded_conv_4/depthwise/depthwise_weights/Initializer/random_uniform/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv_4/depthwise/depthwise_weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\003\000\000\000\003\000\000\000\300\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "ssd300/expanded_conv_4/depthwise/depthwise_weights/Initializer/random_uniform/min"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv_4/depthwise/depthwise_weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: -0.05877270922064781
      }
    }
  }
}
node {
  name: "ssd300/expanded_conv_4/depthwise/depthwise_weights/Initializer/random_uniform/max"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv_4/depthwise/depthwise_weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.05877270922064781
      }
    }
  }
}
node {
  name: "ssd300/expanded_conv_4/depthwise/depthwise_weights/Initializer/random_uniform/RandomUniform"
  op: "RandomUniform"
  input: "ssd300/expanded_conv_4/depthwise/depthwise_weights/Initializer/random_uniform/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv_4/depthwise/depthwise_weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "ssd300/expanded_conv_4/depthwise/depthwise_weights/Initializer/random_uniform/sub"
  op: "Sub"
  input: "ssd300/expanded_conv_4/depthwise/depthwise_weights/Initializer/random_uniform/max"
  input: "ssd300/expanded_conv_4/depthwise/depthwise_weights/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv_4/depthwise/depthwise_weights"
      }
    }
  }
}
node {
  name: "ssd300/expanded_conv_4/depthwise/depthwise_weights/Initializer/random_uniform/mul"
  op: "Mul"
  input: "ssd300/expanded_conv_4/depthwise/depthwise_weights/Initializer/random_uniform/RandomUniform"
  input: "ssd300/expanded_conv_4/depthwise/depthwise_weights/Initializer/random_uniform/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv_4/depthwise/depthwise_weights"
      }
    }
  }
}
node {
  name: "ssd300/expanded_conv_4/depthwise/depthwise_weights/Initializer/random_uniform"
  op: "Add"
  input: "ssd300/expanded_conv_4/depthwise/depthwise_weights/Initializer/random_uniform/mul"
  input: "ssd300/expanded_conv_4/depthwise/depthwise_weights/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv_4/depthwise/depthwise_weights"
      }
    }
  }
}
node {
  name: "ssd300/expanded_conv_4/depthwise/depthwise_weights"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv_4/depthwise/depthwise_weights"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 3
        }
        dim {
          size: 3
        }
        dim {
          size: 192
        }
        dim {
          size: 1
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "ssd300/expanded_conv_4/depthwise/depthwise_weights/Assign"
  op: "Assign"
  input: "ssd300/expanded_conv_4/depthwise/depthwise_weights"
  input: "ssd300/expanded_conv_4/depthwise/depthwise_weights/Initializer/random_uniform"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv_4/depthwise/depthwise_weights"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "ssd300/expanded_conv_4/depthwise/depthwise_weights/read"
  op: "Identity"
  input: "ssd300/expanded_conv_4/depthwise/depthwise_weights"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv_4/depthwise/depthwise_weights"
      }
    }
  }
}
node {
  name: "ssd300/expanded_conv_4/depthwise/layer_conv2d/depthwise/Shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\003\000\000\000\003\000\000\000\300\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "ssd300/expanded_conv_4/depthwise/layer_conv2d/depthwise/dilation_rate"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "ssd300/expanded_conv_4/depthwise/layer_conv2d/depthwise"
  op: "DepthwiseConv2dNative"
  input: "ssd300/expanded_conv_4/expand/Relu6"
  input: "ssd300/expanded_conv_4/depthwise/depthwise_weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NCHW"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
}
node {
  name: "ssd300/expanded_conv_4/depthwise/BatchNorm/beta/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv_4/depthwise/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 192
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "ssd300/expanded_conv_4/depthwise/BatchNorm/beta"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv_4/depthwise/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 192
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "ssd300/expanded_conv_4/depthwise/BatchNorm/beta/Assign"
  op: "Assign"
  input: "ssd300/expanded_conv_4/depthwise/BatchNorm/beta"
  input: "ssd300/expanded_conv_4/depthwise/BatchNorm/beta/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv_4/depthwise/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "ssd300/expanded_conv_4/depthwise/BatchNorm/beta/read"
  op: "Identity"
  input: "ssd300/expanded_conv_4/depthwise/BatchNorm/beta"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv_4/depthwise/BatchNorm/beta"
      }
    }
  }
}
node {
  name: "ssd300/expanded_conv_4/depthwise/BatchNorm/moving_mean/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv_4/depthwise/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 192
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "ssd300/expanded_conv_4/depthwise/BatchNorm/moving_mean"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv_4/depthwise/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 192
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "ssd300/expanded_conv_4/depthwise/BatchNorm/moving_mean/Assign"
  op: "Assign"
  input: "ssd300/expanded_conv_4/depthwise/BatchNorm/moving_mean"
  input: "ssd300/expanded_conv_4/depthwise/BatchNorm/moving_mean/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv_4/depthwise/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "ssd300/expanded_conv_4/depthwise/BatchNorm/moving_mean/read"
  op: "Identity"
  input: "ssd300/expanded_conv_4/depthwise/BatchNorm/moving_mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv_4/depthwise/BatchNorm/moving_mean"
      }
    }
  }
}
node {
  name: "ssd300/expanded_conv_4/depthwise/BatchNorm/moving_variance/Initializer/ones"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv_4/depthwise/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 192
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "ssd300/expanded_conv_4/depthwise/BatchNorm/moving_variance"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv_4/depthwise/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 192
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "ssd300/expanded_conv_4/depthwise/BatchNorm/moving_variance/Assign"
  op: "Assign"
  input: "ssd300/expanded_conv_4/depthwise/BatchNorm/moving_variance"
  input: "ssd300/expanded_conv_4/depthwise/BatchNorm/moving_variance/Initializer/ones"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv_4/depthwise/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "ssd300/expanded_conv_4/depthwise/BatchNorm/moving_variance/read"
  op: "Identity"
  input: "ssd300/expanded_conv_4/depthwise/BatchNorm/moving_variance"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv_4/depthwise/BatchNorm/moving_variance"
      }
    }
  }
}
node {
  name: "ssd300/expanded_conv_4/depthwise/BatchNorm/Reshape/shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\300\000\000\000\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "ssd300/expanded_conv_4/depthwise/BatchNorm/Reshape"
  op: "Reshape"
  input: "ssd300/expanded_conv_4/depthwise/BatchNorm/beta/read"
  input: "ssd300/expanded_conv_4/depthwise/BatchNorm/Reshape/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "ssd300/expanded_conv_4/depthwise/BatchNorm/Reshape_1/shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\300\000\000\000\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "ssd300/expanded_conv_4/depthwise/BatchNorm/Reshape_1"
  op: "Reshape"
  input: "ssd300/expanded_conv_4/depthwise/BatchNorm/moving_mean/read"
  input: "ssd300/expanded_conv_4/depthwise/BatchNorm/Reshape_1/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "ssd300/expanded_conv_4/depthwise/BatchNorm/Reshape_2/shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\300\000\000\000\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "ssd300/expanded_conv_4/depthwise/BatchNorm/Reshape_2"
  op: "Reshape"
  input: "ssd300/expanded_conv_4/depthwise/BatchNorm/moving_variance/read"
  input: "ssd300/expanded_conv_4/depthwise/BatchNorm/Reshape_2/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "ssd300/expanded_conv_4/depthwise/BatchNorm/batchnorm_1/Add/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0010000000474974513
      }
    }
  }
}
node {
  name: "ssd300/expanded_conv_4/depthwise/BatchNorm/batchnorm_1/Add"
  op: "Add"
  input: "ssd300/expanded_conv_4/depthwise/BatchNorm/Reshape_2"
  input: "ssd300/expanded_conv_4/depthwise/BatchNorm/batchnorm_1/Add/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ssd300/expanded_conv_4/depthwise/BatchNorm/batchnorm_1/Rsqrt"
  op: "Rsqrt"
  input: "ssd300/expanded_conv_4/depthwise/BatchNorm/batchnorm_1/Add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ssd300/expanded_conv_4/depthwise/BatchNorm/batchnorm_1/mul"
  op: "Mul"
  input: "ssd300/expanded_conv_4/depthwise/layer_conv2d/depthwise"
  input: "ssd300/expanded_conv_4/depthwise/BatchNorm/batchnorm_1/Rsqrt"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ssd300/expanded_conv_4/depthwise/BatchNorm/batchnorm_1/mul_1"
  op: "Mul"
  input: "ssd300/expanded_conv_4/depthwise/BatchNorm/Reshape_1"
  input: "ssd300/expanded_conv_4/depthwise/BatchNorm/batchnorm_1/Rsqrt"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ssd300/expanded_conv_4/depthwise/BatchNorm/batchnorm_1/sub"
  op: "Sub"
  input: "ssd300/expanded_conv_4/depthwise/BatchNorm/Reshape"
  input: "ssd300/expanded_conv_4/depthwise/BatchNorm/batchnorm_1/mul_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ssd300/expanded_conv_4/depthwise/BatchNorm/batchnorm_1/Add_1"
  op: "Add"
  input: "ssd300/expanded_conv_4/depthwise/BatchNorm/batchnorm_1/mul"
  input: "ssd300/expanded_conv_4/depthwise/BatchNorm/batchnorm_1/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ssd300/expanded_conv_4/depthwise/Relu6"
  op: "Relu6"
  input: "ssd300/expanded_conv_4/depthwise/BatchNorm/batchnorm_1/Add_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ssd300/expanded_conv_4/project/weights/Initializer/random_uniform/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv_4/project/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000\300\000\000\000 \000\000\000"
      }
    }
  }
}
node {
  name: "ssd300/expanded_conv_4/project/weights/Initializer/random_uniform/min"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv_4/project/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: -0.16366341710090637
      }
    }
  }
}
node {
  name: "ssd300/expanded_conv_4/project/weights/Initializer/random_uniform/max"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv_4/project/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.16366341710090637
      }
    }
  }
}
node {
  name: "ssd300/expanded_conv_4/project/weights/Initializer/random_uniform/RandomUniform"
  op: "RandomUniform"
  input: "ssd300/expanded_conv_4/project/weights/Initializer/random_uniform/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv_4/project/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "ssd300/expanded_conv_4/project/weights/Initializer/random_uniform/sub"
  op: "Sub"
  input: "ssd300/expanded_conv_4/project/weights/Initializer/random_uniform/max"
  input: "ssd300/expanded_conv_4/project/weights/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv_4/project/weights"
      }
    }
  }
}
node {
  name: "ssd300/expanded_conv_4/project/weights/Initializer/random_uniform/mul"
  op: "Mul"
  input: "ssd300/expanded_conv_4/project/weights/Initializer/random_uniform/RandomUniform"
  input: "ssd300/expanded_conv_4/project/weights/Initializer/random_uniform/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv_4/project/weights"
      }
    }
  }
}
node {
  name: "ssd300/expanded_conv_4/project/weights/Initializer/random_uniform"
  op: "Add"
  input: "ssd300/expanded_conv_4/project/weights/Initializer/random_uniform/mul"
  input: "ssd300/expanded_conv_4/project/weights/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv_4/project/weights"
      }
    }
  }
}
node {
  name: "ssd300/expanded_conv_4/project/weights"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv_4/project/weights"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
        dim {
          size: 1
        }
        dim {
          size: 192
        }
        dim {
          size: 32
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "ssd300/expanded_conv_4/project/weights/Assign"
  op: "Assign"
  input: "ssd300/expanded_conv_4/project/weights"
  input: "ssd300/expanded_conv_4/project/weights/Initializer/random_uniform"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv_4/project/weights"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "ssd300/expanded_conv_4/project/weights/read"
  op: "Identity"
  input: "ssd300/expanded_conv_4/project/weights"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv_4/project/weights"
      }
    }
  }
}
node {
  name: "ssd300/expanded_conv_4/project/layer_conv2d/Conv2D"
  op: "Conv2D"
  input: "ssd300/expanded_conv_4/depthwise/Relu6"
  input: "ssd300/expanded_conv_4/project/weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NCHW"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "explicit_paddings"
    value {
      list {
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "ssd300/expanded_conv_4/project/BatchNorm/beta/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv_4/project/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 32
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "ssd300/expanded_conv_4/project/BatchNorm/beta"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv_4/project/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 32
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "ssd300/expanded_conv_4/project/BatchNorm/beta/Assign"
  op: "Assign"
  input: "ssd300/expanded_conv_4/project/BatchNorm/beta"
  input: "ssd300/expanded_conv_4/project/BatchNorm/beta/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv_4/project/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "ssd300/expanded_conv_4/project/BatchNorm/beta/read"
  op: "Identity"
  input: "ssd300/expanded_conv_4/project/BatchNorm/beta"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv_4/project/BatchNorm/beta"
      }
    }
  }
}
node {
  name: "ssd300/expanded_conv_4/project/BatchNorm/moving_mean/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv_4/project/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 32
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "ssd300/expanded_conv_4/project/BatchNorm/moving_mean"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv_4/project/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 32
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "ssd300/expanded_conv_4/project/BatchNorm/moving_mean/Assign"
  op: "Assign"
  input: "ssd300/expanded_conv_4/project/BatchNorm/moving_mean"
  input: "ssd300/expanded_conv_4/project/BatchNorm/moving_mean/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv_4/project/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "ssd300/expanded_conv_4/project/BatchNorm/moving_mean/read"
  op: "Identity"
  input: "ssd300/expanded_conv_4/project/BatchNorm/moving_mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv_4/project/BatchNorm/moving_mean"
      }
    }
  }
}
node {
  name: "ssd300/expanded_conv_4/project/BatchNorm/moving_variance/Initializer/ones"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv_4/project/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 32
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "ssd300/expanded_conv_4/project/BatchNorm/moving_variance"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv_4/project/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 32
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "ssd300/expanded_conv_4/project/BatchNorm/moving_variance/Assign"
  op: "Assign"
  input: "ssd300/expanded_conv_4/project/BatchNorm/moving_variance"
  input: "ssd300/expanded_conv_4/project/BatchNorm/moving_variance/Initializer/ones"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv_4/project/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "ssd300/expanded_conv_4/project/BatchNorm/moving_variance/read"
  op: "Identity"
  input: "ssd300/expanded_conv_4/project/BatchNorm/moving_variance"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv_4/project/BatchNorm/moving_variance"
      }
    }
  }
}
node {
  name: "ssd300/expanded_conv_4/project/BatchNorm/Reshape/shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000 \000\000\000\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "ssd300/expanded_conv_4/project/BatchNorm/Reshape"
  op: "Reshape"
  input: "ssd300/expanded_conv_4/project/BatchNorm/beta/read"
  input: "ssd300/expanded_conv_4/project/BatchNorm/Reshape/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "ssd300/expanded_conv_4/project/BatchNorm/Reshape_1/shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000 \000\000\000\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "ssd300/expanded_conv_4/project/BatchNorm/Reshape_1"
  op: "Reshape"
  input: "ssd300/expanded_conv_4/project/BatchNorm/moving_mean/read"
  input: "ssd300/expanded_conv_4/project/BatchNorm/Reshape_1/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "ssd300/expanded_conv_4/project/BatchNorm/Reshape_2/shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000 \000\000\000\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "ssd300/expanded_conv_4/project/BatchNorm/Reshape_2"
  op: "Reshape"
  input: "ssd300/expanded_conv_4/project/BatchNorm/moving_variance/read"
  input: "ssd300/expanded_conv_4/project/BatchNorm/Reshape_2/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "ssd300/expanded_conv_4/project/BatchNorm/batchnorm_1/Add/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0010000000474974513
      }
    }
  }
}
node {
  name: "ssd300/expanded_conv_4/project/BatchNorm/batchnorm_1/Add"
  op: "Add"
  input: "ssd300/expanded_conv_4/project/BatchNorm/Reshape_2"
  input: "ssd300/expanded_conv_4/project/BatchNorm/batchnorm_1/Add/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ssd300/expanded_conv_4/project/BatchNorm/batchnorm_1/Rsqrt"
  op: "Rsqrt"
  input: "ssd300/expanded_conv_4/project/BatchNorm/batchnorm_1/Add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ssd300/expanded_conv_4/project/BatchNorm/batchnorm_1/mul"
  op: "Mul"
  input: "ssd300/expanded_conv_4/project/layer_conv2d/Conv2D"
  input: "ssd300/expanded_conv_4/project/BatchNorm/batchnorm_1/Rsqrt"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ssd300/expanded_conv_4/project/BatchNorm/batchnorm_1/mul_1"
  op: "Mul"
  input: "ssd300/expanded_conv_4/project/BatchNorm/Reshape_1"
  input: "ssd300/expanded_conv_4/project/BatchNorm/batchnorm_1/Rsqrt"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ssd300/expanded_conv_4/project/BatchNorm/batchnorm_1/sub"
  op: "Sub"
  input: "ssd300/expanded_conv_4/project/BatchNorm/Reshape"
  input: "ssd300/expanded_conv_4/project/BatchNorm/batchnorm_1/mul_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ssd300/expanded_conv_4/project/BatchNorm/batchnorm_1/Add_1"
  op: "Add"
  input: "ssd300/expanded_conv_4/project/BatchNorm/batchnorm_1/mul"
  input: "ssd300/expanded_conv_4/project/BatchNorm/batchnorm_1/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ssd300/expanded_conv_4/Add"
  op: "Add"
  input: "ssd300/expanded_conv_4/project/BatchNorm/batchnorm_1/Add_1"
  input: "ssd300/expanded_conv_3/project/BatchNorm/batchnorm_1/Add_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ssd300/expanded_conv_5/expand/weights/Initializer/random_uniform/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv_5/expand/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000 \000\000\000\300\000\000\000"
      }
    }
  }
}
node {
  name: "ssd300/expanded_conv_5/expand/weights/Initializer/random_uniform/min"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv_5/expand/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: -0.16366341710090637
      }
    }
  }
}
node {
  name: "ssd300/expanded_conv_5/expand/weights/Initializer/random_uniform/max"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv_5/expand/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.16366341710090637
      }
    }
  }
}
node {
  name: "ssd300/expanded_conv_5/expand/weights/Initializer/random_uniform/RandomUniform"
  op: "RandomUniform"
  input: "ssd300/expanded_conv_5/expand/weights/Initializer/random_uniform/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv_5/expand/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "ssd300/expanded_conv_5/expand/weights/Initializer/random_uniform/sub"
  op: "Sub"
  input: "ssd300/expanded_conv_5/expand/weights/Initializer/random_uniform/max"
  input: "ssd300/expanded_conv_5/expand/weights/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv_5/expand/weights"
      }
    }
  }
}
node {
  name: "ssd300/expanded_conv_5/expand/weights/Initializer/random_uniform/mul"
  op: "Mul"
  input: "ssd300/expanded_conv_5/expand/weights/Initializer/random_uniform/RandomUniform"
  input: "ssd300/expanded_conv_5/expand/weights/Initializer/random_uniform/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv_5/expand/weights"
      }
    }
  }
}
node {
  name: "ssd300/expanded_conv_5/expand/weights/Initializer/random_uniform"
  op: "Add"
  input: "ssd300/expanded_conv_5/expand/weights/Initializer/random_uniform/mul"
  input: "ssd300/expanded_conv_5/expand/weights/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv_5/expand/weights"
      }
    }
  }
}
node {
  name: "ssd300/expanded_conv_5/expand/weights"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv_5/expand/weights"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
        dim {
          size: 1
        }
        dim {
          size: 32
        }
        dim {
          size: 192
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "ssd300/expanded_conv_5/expand/weights/Assign"
  op: "Assign"
  input: "ssd300/expanded_conv_5/expand/weights"
  input: "ssd300/expanded_conv_5/expand/weights/Initializer/random_uniform"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv_5/expand/weights"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "ssd300/expanded_conv_5/expand/weights/read"
  op: "Identity"
  input: "ssd300/expanded_conv_5/expand/weights"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv_5/expand/weights"
      }
    }
  }
}
node {
  name: "ssd300/expanded_conv_5/expand/layer_conv2d/Conv2D"
  op: "Conv2D"
  input: "ssd300/expanded_conv_4/Add"
  input: "ssd300/expanded_conv_5/expand/weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NCHW"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "explicit_paddings"
    value {
      list {
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "ssd300/expanded_conv_5/expand/BatchNorm/beta/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv_5/expand/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 192
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "ssd300/expanded_conv_5/expand/BatchNorm/beta"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv_5/expand/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 192
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "ssd300/expanded_conv_5/expand/BatchNorm/beta/Assign"
  op: "Assign"
  input: "ssd300/expanded_conv_5/expand/BatchNorm/beta"
  input: "ssd300/expanded_conv_5/expand/BatchNorm/beta/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv_5/expand/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "ssd300/expanded_conv_5/expand/BatchNorm/beta/read"
  op: "Identity"
  input: "ssd300/expanded_conv_5/expand/BatchNorm/beta"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv_5/expand/BatchNorm/beta"
      }
    }
  }
}
node {
  name: "ssd300/expanded_conv_5/expand/BatchNorm/moving_mean/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv_5/expand/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 192
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "ssd300/expanded_conv_5/expand/BatchNorm/moving_mean"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv_5/expand/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 192
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "ssd300/expanded_conv_5/expand/BatchNorm/moving_mean/Assign"
  op: "Assign"
  input: "ssd300/expanded_conv_5/expand/BatchNorm/moving_mean"
  input: "ssd300/expanded_conv_5/expand/BatchNorm/moving_mean/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv_5/expand/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "ssd300/expanded_conv_5/expand/BatchNorm/moving_mean/read"
  op: "Identity"
  input: "ssd300/expanded_conv_5/expand/BatchNorm/moving_mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv_5/expand/BatchNorm/moving_mean"
      }
    }
  }
}
node {
  name: "ssd300/expanded_conv_5/expand/BatchNorm/moving_variance/Initializer/ones"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv_5/expand/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 192
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "ssd300/expanded_conv_5/expand/BatchNorm/moving_variance"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv_5/expand/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 192
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "ssd300/expanded_conv_5/expand/BatchNorm/moving_variance/Assign"
  op: "Assign"
  input: "ssd300/expanded_conv_5/expand/BatchNorm/moving_variance"
  input: "ssd300/expanded_conv_5/expand/BatchNorm/moving_variance/Initializer/ones"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv_5/expand/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "ssd300/expanded_conv_5/expand/BatchNorm/moving_variance/read"
  op: "Identity"
  input: "ssd300/expanded_conv_5/expand/BatchNorm/moving_variance"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv_5/expand/BatchNorm/moving_variance"
      }
    }
  }
}
node {
  name: "ssd300/expanded_conv_5/expand/BatchNorm/Reshape/shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\300\000\000\000\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "ssd300/expanded_conv_5/expand/BatchNorm/Reshape"
  op: "Reshape"
  input: "ssd300/expanded_conv_5/expand/BatchNorm/beta/read"
  input: "ssd300/expanded_conv_5/expand/BatchNorm/Reshape/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "ssd300/expanded_conv_5/expand/BatchNorm/Reshape_1/shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\300\000\000\000\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "ssd300/expanded_conv_5/expand/BatchNorm/Reshape_1"
  op: "Reshape"
  input: "ssd300/expanded_conv_5/expand/BatchNorm/moving_mean/read"
  input: "ssd300/expanded_conv_5/expand/BatchNorm/Reshape_1/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "ssd300/expanded_conv_5/expand/BatchNorm/Reshape_2/shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\300\000\000\000\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "ssd300/expanded_conv_5/expand/BatchNorm/Reshape_2"
  op: "Reshape"
  input: "ssd300/expanded_conv_5/expand/BatchNorm/moving_variance/read"
  input: "ssd300/expanded_conv_5/expand/BatchNorm/Reshape_2/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "ssd300/expanded_conv_5/expand/BatchNorm/batchnorm_1/Add/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0010000000474974513
      }
    }
  }
}
node {
  name: "ssd300/expanded_conv_5/expand/BatchNorm/batchnorm_1/Add"
  op: "Add"
  input: "ssd300/expanded_conv_5/expand/BatchNorm/Reshape_2"
  input: "ssd300/expanded_conv_5/expand/BatchNorm/batchnorm_1/Add/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ssd300/expanded_conv_5/expand/BatchNorm/batchnorm_1/Rsqrt"
  op: "Rsqrt"
  input: "ssd300/expanded_conv_5/expand/BatchNorm/batchnorm_1/Add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ssd300/expanded_conv_5/expand/BatchNorm/batchnorm_1/mul"
  op: "Mul"
  input: "ssd300/expanded_conv_5/expand/layer_conv2d/Conv2D"
  input: "ssd300/expanded_conv_5/expand/BatchNorm/batchnorm_1/Rsqrt"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ssd300/expanded_conv_5/expand/BatchNorm/batchnorm_1/mul_1"
  op: "Mul"
  input: "ssd300/expanded_conv_5/expand/BatchNorm/Reshape_1"
  input: "ssd300/expanded_conv_5/expand/BatchNorm/batchnorm_1/Rsqrt"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ssd300/expanded_conv_5/expand/BatchNorm/batchnorm_1/sub"
  op: "Sub"
  input: "ssd300/expanded_conv_5/expand/BatchNorm/Reshape"
  input: "ssd300/expanded_conv_5/expand/BatchNorm/batchnorm_1/mul_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ssd300/expanded_conv_5/expand/BatchNorm/batchnorm_1/Add_1"
  op: "Add"
  input: "ssd300/expanded_conv_5/expand/BatchNorm/batchnorm_1/mul"
  input: "ssd300/expanded_conv_5/expand/BatchNorm/batchnorm_1/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ssd300/expanded_conv_5/expand/Relu6"
  op: "Relu6"
  input: "ssd300/expanded_conv_5/expand/BatchNorm/batchnorm_1/Add_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ssd300/expanded_conv_5/depthwise/depthwise_weights/Initializer/random_uniform/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv_5/depthwise/depthwise_weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\003\000\000\000\003\000\000\000\300\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "ssd300/expanded_conv_5/depthwise/depthwise_weights/Initializer/random_uniform/min"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv_5/depthwise/depthwise_weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: -0.05877270922064781
      }
    }
  }
}
node {
  name: "ssd300/expanded_conv_5/depthwise/depthwise_weights/Initializer/random_uniform/max"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv_5/depthwise/depthwise_weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.05877270922064781
      }
    }
  }
}
node {
  name: "ssd300/expanded_conv_5/depthwise/depthwise_weights/Initializer/random_uniform/RandomUniform"
  op: "RandomUniform"
  input: "ssd300/expanded_conv_5/depthwise/depthwise_weights/Initializer/random_uniform/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv_5/depthwise/depthwise_weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "ssd300/expanded_conv_5/depthwise/depthwise_weights/Initializer/random_uniform/sub"
  op: "Sub"
  input: "ssd300/expanded_conv_5/depthwise/depthwise_weights/Initializer/random_uniform/max"
  input: "ssd300/expanded_conv_5/depthwise/depthwise_weights/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv_5/depthwise/depthwise_weights"
      }
    }
  }
}
node {
  name: "ssd300/expanded_conv_5/depthwise/depthwise_weights/Initializer/random_uniform/mul"
  op: "Mul"
  input: "ssd300/expanded_conv_5/depthwise/depthwise_weights/Initializer/random_uniform/RandomUniform"
  input: "ssd300/expanded_conv_5/depthwise/depthwise_weights/Initializer/random_uniform/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv_5/depthwise/depthwise_weights"
      }
    }
  }
}
node {
  name: "ssd300/expanded_conv_5/depthwise/depthwise_weights/Initializer/random_uniform"
  op: "Add"
  input: "ssd300/expanded_conv_5/depthwise/depthwise_weights/Initializer/random_uniform/mul"
  input: "ssd300/expanded_conv_5/depthwise/depthwise_weights/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv_5/depthwise/depthwise_weights"
      }
    }
  }
}
node {
  name: "ssd300/expanded_conv_5/depthwise/depthwise_weights"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv_5/depthwise/depthwise_weights"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 3
        }
        dim {
          size: 3
        }
        dim {
          size: 192
        }
        dim {
          size: 1
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "ssd300/expanded_conv_5/depthwise/depthwise_weights/Assign"
  op: "Assign"
  input: "ssd300/expanded_conv_5/depthwise/depthwise_weights"
  input: "ssd300/expanded_conv_5/depthwise/depthwise_weights/Initializer/random_uniform"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv_5/depthwise/depthwise_weights"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "ssd300/expanded_conv_5/depthwise/depthwise_weights/read"
  op: "Identity"
  input: "ssd300/expanded_conv_5/depthwise/depthwise_weights"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv_5/depthwise/depthwise_weights"
      }
    }
  }
}
node {
  name: "ssd300/expanded_conv_5/depthwise/layer_conv2d/depthwise/Shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\003\000\000\000\003\000\000\000\300\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "ssd300/expanded_conv_5/depthwise/layer_conv2d/depthwise/dilation_rate"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "ssd300/expanded_conv_5/depthwise/layer_conv2d/depthwise"
  op: "DepthwiseConv2dNative"
  input: "ssd300/expanded_conv_5/expand/Relu6"
  input: "ssd300/expanded_conv_5/depthwise/depthwise_weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NCHW"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
}
node {
  name: "ssd300/expanded_conv_5/depthwise/BatchNorm/beta/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv_5/depthwise/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 192
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "ssd300/expanded_conv_5/depthwise/BatchNorm/beta"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv_5/depthwise/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 192
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "ssd300/expanded_conv_5/depthwise/BatchNorm/beta/Assign"
  op: "Assign"
  input: "ssd300/expanded_conv_5/depthwise/BatchNorm/beta"
  input: "ssd300/expanded_conv_5/depthwise/BatchNorm/beta/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv_5/depthwise/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "ssd300/expanded_conv_5/depthwise/BatchNorm/beta/read"
  op: "Identity"
  input: "ssd300/expanded_conv_5/depthwise/BatchNorm/beta"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv_5/depthwise/BatchNorm/beta"
      }
    }
  }
}
node {
  name: "ssd300/expanded_conv_5/depthwise/BatchNorm/moving_mean/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv_5/depthwise/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 192
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "ssd300/expanded_conv_5/depthwise/BatchNorm/moving_mean"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv_5/depthwise/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 192
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "ssd300/expanded_conv_5/depthwise/BatchNorm/moving_mean/Assign"
  op: "Assign"
  input: "ssd300/expanded_conv_5/depthwise/BatchNorm/moving_mean"
  input: "ssd300/expanded_conv_5/depthwise/BatchNorm/moving_mean/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv_5/depthwise/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "ssd300/expanded_conv_5/depthwise/BatchNorm/moving_mean/read"
  op: "Identity"
  input: "ssd300/expanded_conv_5/depthwise/BatchNorm/moving_mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv_5/depthwise/BatchNorm/moving_mean"
      }
    }
  }
}
node {
  name: "ssd300/expanded_conv_5/depthwise/BatchNorm/moving_variance/Initializer/ones"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv_5/depthwise/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 192
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "ssd300/expanded_conv_5/depthwise/BatchNorm/moving_variance"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv_5/depthwise/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 192
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "ssd300/expanded_conv_5/depthwise/BatchNorm/moving_variance/Assign"
  op: "Assign"
  input: "ssd300/expanded_conv_5/depthwise/BatchNorm/moving_variance"
  input: "ssd300/expanded_conv_5/depthwise/BatchNorm/moving_variance/Initializer/ones"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv_5/depthwise/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "ssd300/expanded_conv_5/depthwise/BatchNorm/moving_variance/read"
  op: "Identity"
  input: "ssd300/expanded_conv_5/depthwise/BatchNorm/moving_variance"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv_5/depthwise/BatchNorm/moving_variance"
      }
    }
  }
}
node {
  name: "ssd300/expanded_conv_5/depthwise/BatchNorm/Reshape/shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\300\000\000\000\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "ssd300/expanded_conv_5/depthwise/BatchNorm/Reshape"
  op: "Reshape"
  input: "ssd300/expanded_conv_5/depthwise/BatchNorm/beta/read"
  input: "ssd300/expanded_conv_5/depthwise/BatchNorm/Reshape/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "ssd300/expanded_conv_5/depthwise/BatchNorm/Reshape_1/shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\300\000\000\000\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "ssd300/expanded_conv_5/depthwise/BatchNorm/Reshape_1"
  op: "Reshape"
  input: "ssd300/expanded_conv_5/depthwise/BatchNorm/moving_mean/read"
  input: "ssd300/expanded_conv_5/depthwise/BatchNorm/Reshape_1/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "ssd300/expanded_conv_5/depthwise/BatchNorm/Reshape_2/shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\300\000\000\000\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "ssd300/expanded_conv_5/depthwise/BatchNorm/Reshape_2"
  op: "Reshape"
  input: "ssd300/expanded_conv_5/depthwise/BatchNorm/moving_variance/read"
  input: "ssd300/expanded_conv_5/depthwise/BatchNorm/Reshape_2/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "ssd300/expanded_conv_5/depthwise/BatchNorm/batchnorm_1/Add/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0010000000474974513
      }
    }
  }
}
node {
  name: "ssd300/expanded_conv_5/depthwise/BatchNorm/batchnorm_1/Add"
  op: "Add"
  input: "ssd300/expanded_conv_5/depthwise/BatchNorm/Reshape_2"
  input: "ssd300/expanded_conv_5/depthwise/BatchNorm/batchnorm_1/Add/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ssd300/expanded_conv_5/depthwise/BatchNorm/batchnorm_1/Rsqrt"
  op: "Rsqrt"
  input: "ssd300/expanded_conv_5/depthwise/BatchNorm/batchnorm_1/Add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ssd300/expanded_conv_5/depthwise/BatchNorm/batchnorm_1/mul"
  op: "Mul"
  input: "ssd300/expanded_conv_5/depthwise/layer_conv2d/depthwise"
  input: "ssd300/expanded_conv_5/depthwise/BatchNorm/batchnorm_1/Rsqrt"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ssd300/expanded_conv_5/depthwise/BatchNorm/batchnorm_1/mul_1"
  op: "Mul"
  input: "ssd300/expanded_conv_5/depthwise/BatchNorm/Reshape_1"
  input: "ssd300/expanded_conv_5/depthwise/BatchNorm/batchnorm_1/Rsqrt"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ssd300/expanded_conv_5/depthwise/BatchNorm/batchnorm_1/sub"
  op: "Sub"
  input: "ssd300/expanded_conv_5/depthwise/BatchNorm/Reshape"
  input: "ssd300/expanded_conv_5/depthwise/BatchNorm/batchnorm_1/mul_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ssd300/expanded_conv_5/depthwise/BatchNorm/batchnorm_1/Add_1"
  op: "Add"
  input: "ssd300/expanded_conv_5/depthwise/BatchNorm/batchnorm_1/mul"
  input: "ssd300/expanded_conv_5/depthwise/BatchNorm/batchnorm_1/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ssd300/expanded_conv_5/depthwise/Relu6"
  op: "Relu6"
  input: "ssd300/expanded_conv_5/depthwise/BatchNorm/batchnorm_1/Add_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ssd300/expanded_conv_5/project/weights/Initializer/random_uniform/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv_5/project/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000\300\000\000\000 \000\000\000"
      }
    }
  }
}
node {
  name: "ssd300/expanded_conv_5/project/weights/Initializer/random_uniform/min"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv_5/project/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: -0.16366341710090637
      }
    }
  }
}
node {
  name: "ssd300/expanded_conv_5/project/weights/Initializer/random_uniform/max"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv_5/project/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.16366341710090637
      }
    }
  }
}
node {
  name: "ssd300/expanded_conv_5/project/weights/Initializer/random_uniform/RandomUniform"
  op: "RandomUniform"
  input: "ssd300/expanded_conv_5/project/weights/Initializer/random_uniform/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv_5/project/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "ssd300/expanded_conv_5/project/weights/Initializer/random_uniform/sub"
  op: "Sub"
  input: "ssd300/expanded_conv_5/project/weights/Initializer/random_uniform/max"
  input: "ssd300/expanded_conv_5/project/weights/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv_5/project/weights"
      }
    }
  }
}
node {
  name: "ssd300/expanded_conv_5/project/weights/Initializer/random_uniform/mul"
  op: "Mul"
  input: "ssd300/expanded_conv_5/project/weights/Initializer/random_uniform/RandomUniform"
  input: "ssd300/expanded_conv_5/project/weights/Initializer/random_uniform/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv_5/project/weights"
      }
    }
  }
}
node {
  name: "ssd300/expanded_conv_5/project/weights/Initializer/random_uniform"
  op: "Add"
  input: "ssd300/expanded_conv_5/project/weights/Initializer/random_uniform/mul"
  input: "ssd300/expanded_conv_5/project/weights/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv_5/project/weights"
      }
    }
  }
}
node {
  name: "ssd300/expanded_conv_5/project/weights"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv_5/project/weights"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
        dim {
          size: 1
        }
        dim {
          size: 192
        }
        dim {
          size: 32
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "ssd300/expanded_conv_5/project/weights/Assign"
  op: "Assign"
  input: "ssd300/expanded_conv_5/project/weights"
  input: "ssd300/expanded_conv_5/project/weights/Initializer/random_uniform"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv_5/project/weights"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "ssd300/expanded_conv_5/project/weights/read"
  op: "Identity"
  input: "ssd300/expanded_conv_5/project/weights"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv_5/project/weights"
      }
    }
  }
}
node {
  name: "ssd300/expanded_conv_5/project/layer_conv2d/Conv2D"
  op: "Conv2D"
  input: "ssd300/expanded_conv_5/depthwise/Relu6"
  input: "ssd300/expanded_conv_5/project/weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NCHW"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "explicit_paddings"
    value {
      list {
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "ssd300/expanded_conv_5/project/BatchNorm/beta/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv_5/project/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 32
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "ssd300/expanded_conv_5/project/BatchNorm/beta"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv_5/project/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 32
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "ssd300/expanded_conv_5/project/BatchNorm/beta/Assign"
  op: "Assign"
  input: "ssd300/expanded_conv_5/project/BatchNorm/beta"
  input: "ssd300/expanded_conv_5/project/BatchNorm/beta/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv_5/project/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "ssd300/expanded_conv_5/project/BatchNorm/beta/read"
  op: "Identity"
  input: "ssd300/expanded_conv_5/project/BatchNorm/beta"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv_5/project/BatchNorm/beta"
      }
    }
  }
}
node {
  name: "ssd300/expanded_conv_5/project/BatchNorm/moving_mean/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv_5/project/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 32
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "ssd300/expanded_conv_5/project/BatchNorm/moving_mean"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv_5/project/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 32
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "ssd300/expanded_conv_5/project/BatchNorm/moving_mean/Assign"
  op: "Assign"
  input: "ssd300/expanded_conv_5/project/BatchNorm/moving_mean"
  input: "ssd300/expanded_conv_5/project/BatchNorm/moving_mean/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv_5/project/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "ssd300/expanded_conv_5/project/BatchNorm/moving_mean/read"
  op: "Identity"
  input: "ssd300/expanded_conv_5/project/BatchNorm/moving_mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv_5/project/BatchNorm/moving_mean"
      }
    }
  }
}
node {
  name: "ssd300/expanded_conv_5/project/BatchNorm/moving_variance/Initializer/ones"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv_5/project/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 32
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "ssd300/expanded_conv_5/project/BatchNorm/moving_variance"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv_5/project/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 32
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "ssd300/expanded_conv_5/project/BatchNorm/moving_variance/Assign"
  op: "Assign"
  input: "ssd300/expanded_conv_5/project/BatchNorm/moving_variance"
  input: "ssd300/expanded_conv_5/project/BatchNorm/moving_variance/Initializer/ones"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv_5/project/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "ssd300/expanded_conv_5/project/BatchNorm/moving_variance/read"
  op: "Identity"
  input: "ssd300/expanded_conv_5/project/BatchNorm/moving_variance"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv_5/project/BatchNorm/moving_variance"
      }
    }
  }
}
node {
  name: "ssd300/expanded_conv_5/project/BatchNorm/Reshape/shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000 \000\000\000\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "ssd300/expanded_conv_5/project/BatchNorm/Reshape"
  op: "Reshape"
  input: "ssd300/expanded_conv_5/project/BatchNorm/beta/read"
  input: "ssd300/expanded_conv_5/project/BatchNorm/Reshape/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "ssd300/expanded_conv_5/project/BatchNorm/Reshape_1/shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000 \000\000\000\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "ssd300/expanded_conv_5/project/BatchNorm/Reshape_1"
  op: "Reshape"
  input: "ssd300/expanded_conv_5/project/BatchNorm/moving_mean/read"
  input: "ssd300/expanded_conv_5/project/BatchNorm/Reshape_1/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "ssd300/expanded_conv_5/project/BatchNorm/Reshape_2/shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000 \000\000\000\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "ssd300/expanded_conv_5/project/BatchNorm/Reshape_2"
  op: "Reshape"
  input: "ssd300/expanded_conv_5/project/BatchNorm/moving_variance/read"
  input: "ssd300/expanded_conv_5/project/BatchNorm/Reshape_2/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "ssd300/expanded_conv_5/project/BatchNorm/batchnorm_1/Add/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0010000000474974513
      }
    }
  }
}
node {
  name: "ssd300/expanded_conv_5/project/BatchNorm/batchnorm_1/Add"
  op: "Add"
  input: "ssd300/expanded_conv_5/project/BatchNorm/Reshape_2"
  input: "ssd300/expanded_conv_5/project/BatchNorm/batchnorm_1/Add/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ssd300/expanded_conv_5/project/BatchNorm/batchnorm_1/Rsqrt"
  op: "Rsqrt"
  input: "ssd300/expanded_conv_5/project/BatchNorm/batchnorm_1/Add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ssd300/expanded_conv_5/project/BatchNorm/batchnorm_1/mul"
  op: "Mul"
  input: "ssd300/expanded_conv_5/project/layer_conv2d/Conv2D"
  input: "ssd300/expanded_conv_5/project/BatchNorm/batchnorm_1/Rsqrt"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ssd300/expanded_conv_5/project/BatchNorm/batchnorm_1/mul_1"
  op: "Mul"
  input: "ssd300/expanded_conv_5/project/BatchNorm/Reshape_1"
  input: "ssd300/expanded_conv_5/project/BatchNorm/batchnorm_1/Rsqrt"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ssd300/expanded_conv_5/project/BatchNorm/batchnorm_1/sub"
  op: "Sub"
  input: "ssd300/expanded_conv_5/project/BatchNorm/Reshape"
  input: "ssd300/expanded_conv_5/project/BatchNorm/batchnorm_1/mul_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ssd300/expanded_conv_5/project/BatchNorm/batchnorm_1/Add_1"
  op: "Add"
  input: "ssd300/expanded_conv_5/project/BatchNorm/batchnorm_1/mul"
  input: "ssd300/expanded_conv_5/project/BatchNorm/batchnorm_1/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ssd300/expanded_conv_5/Add"
  op: "Add"
  input: "ssd300/expanded_conv_5/project/BatchNorm/batchnorm_1/Add_1"
  input: "ssd300/expanded_conv_4/Add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ssd300/expanded_conv_6/expand/weights/Initializer/random_uniform/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv_6/expand/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000 \000\000\000\300\000\000\000"
      }
    }
  }
}
node {
  name: "ssd300/expanded_conv_6/expand/weights/Initializer/random_uniform/min"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv_6/expand/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: -0.16366341710090637
      }
    }
  }
}
node {
  name: "ssd300/expanded_conv_6/expand/weights/Initializer/random_uniform/max"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv_6/expand/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.16366341710090637
      }
    }
  }
}
node {
  name: "ssd300/expanded_conv_6/expand/weights/Initializer/random_uniform/RandomUniform"
  op: "RandomUniform"
  input: "ssd300/expanded_conv_6/expand/weights/Initializer/random_uniform/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv_6/expand/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "ssd300/expanded_conv_6/expand/weights/Initializer/random_uniform/sub"
  op: "Sub"
  input: "ssd300/expanded_conv_6/expand/weights/Initializer/random_uniform/max"
  input: "ssd300/expanded_conv_6/expand/weights/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv_6/expand/weights"
      }
    }
  }
}
node {
  name: "ssd300/expanded_conv_6/expand/weights/Initializer/random_uniform/mul"
  op: "Mul"
  input: "ssd300/expanded_conv_6/expand/weights/Initializer/random_uniform/RandomUniform"
  input: "ssd300/expanded_conv_6/expand/weights/Initializer/random_uniform/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv_6/expand/weights"
      }
    }
  }
}
node {
  name: "ssd300/expanded_conv_6/expand/weights/Initializer/random_uniform"
  op: "Add"
  input: "ssd300/expanded_conv_6/expand/weights/Initializer/random_uniform/mul"
  input: "ssd300/expanded_conv_6/expand/weights/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv_6/expand/weights"
      }
    }
  }
}
node {
  name: "ssd300/expanded_conv_6/expand/weights"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv_6/expand/weights"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
        dim {
          size: 1
        }
        dim {
          size: 32
        }
        dim {
          size: 192
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "ssd300/expanded_conv_6/expand/weights/Assign"
  op: "Assign"
  input: "ssd300/expanded_conv_6/expand/weights"
  input: "ssd300/expanded_conv_6/expand/weights/Initializer/random_uniform"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv_6/expand/weights"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "ssd300/expanded_conv_6/expand/weights/read"
  op: "Identity"
  input: "ssd300/expanded_conv_6/expand/weights"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv_6/expand/weights"
      }
    }
  }
}
node {
  name: "ssd300/expanded_conv_6/expand/layer_conv2d/Conv2D"
  op: "Conv2D"
  input: "ssd300/expanded_conv_5/Add"
  input: "ssd300/expanded_conv_6/expand/weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NCHW"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "explicit_paddings"
    value {
      list {
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "ssd300/expanded_conv_6/expand/BatchNorm/beta/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv_6/expand/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 192
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "ssd300/expanded_conv_6/expand/BatchNorm/beta"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv_6/expand/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 192
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "ssd300/expanded_conv_6/expand/BatchNorm/beta/Assign"
  op: "Assign"
  input: "ssd300/expanded_conv_6/expand/BatchNorm/beta"
  input: "ssd300/expanded_conv_6/expand/BatchNorm/beta/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv_6/expand/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "ssd300/expanded_conv_6/expand/BatchNorm/beta/read"
  op: "Identity"
  input: "ssd300/expanded_conv_6/expand/BatchNorm/beta"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv_6/expand/BatchNorm/beta"
      }
    }
  }
}
node {
  name: "ssd300/expanded_conv_6/expand/BatchNorm/moving_mean/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv_6/expand/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 192
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "ssd300/expanded_conv_6/expand/BatchNorm/moving_mean"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv_6/expand/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 192
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "ssd300/expanded_conv_6/expand/BatchNorm/moving_mean/Assign"
  op: "Assign"
  input: "ssd300/expanded_conv_6/expand/BatchNorm/moving_mean"
  input: "ssd300/expanded_conv_6/expand/BatchNorm/moving_mean/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv_6/expand/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "ssd300/expanded_conv_6/expand/BatchNorm/moving_mean/read"
  op: "Identity"
  input: "ssd300/expanded_conv_6/expand/BatchNorm/moving_mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv_6/expand/BatchNorm/moving_mean"
      }
    }
  }
}
node {
  name: "ssd300/expanded_conv_6/expand/BatchNorm/moving_variance/Initializer/ones"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv_6/expand/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 192
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "ssd300/expanded_conv_6/expand/BatchNorm/moving_variance"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv_6/expand/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 192
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "ssd300/expanded_conv_6/expand/BatchNorm/moving_variance/Assign"
  op: "Assign"
  input: "ssd300/expanded_conv_6/expand/BatchNorm/moving_variance"
  input: "ssd300/expanded_conv_6/expand/BatchNorm/moving_variance/Initializer/ones"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv_6/expand/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "ssd300/expanded_conv_6/expand/BatchNorm/moving_variance/read"
  op: "Identity"
  input: "ssd300/expanded_conv_6/expand/BatchNorm/moving_variance"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv_6/expand/BatchNorm/moving_variance"
      }
    }
  }
}
node {
  name: "ssd300/expanded_conv_6/expand/BatchNorm/Reshape/shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\300\000\000\000\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "ssd300/expanded_conv_6/expand/BatchNorm/Reshape"
  op: "Reshape"
  input: "ssd300/expanded_conv_6/expand/BatchNorm/beta/read"
  input: "ssd300/expanded_conv_6/expand/BatchNorm/Reshape/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "ssd300/expanded_conv_6/expand/BatchNorm/Reshape_1/shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\300\000\000\000\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "ssd300/expanded_conv_6/expand/BatchNorm/Reshape_1"
  op: "Reshape"
  input: "ssd300/expanded_conv_6/expand/BatchNorm/moving_mean/read"
  input: "ssd300/expanded_conv_6/expand/BatchNorm/Reshape_1/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "ssd300/expanded_conv_6/expand/BatchNorm/Reshape_2/shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\300\000\000\000\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "ssd300/expanded_conv_6/expand/BatchNorm/Reshape_2"
  op: "Reshape"
  input: "ssd300/expanded_conv_6/expand/BatchNorm/moving_variance/read"
  input: "ssd300/expanded_conv_6/expand/BatchNorm/Reshape_2/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "ssd300/expanded_conv_6/expand/BatchNorm/batchnorm_1/Add/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0010000000474974513
      }
    }
  }
}
node {
  name: "ssd300/expanded_conv_6/expand/BatchNorm/batchnorm_1/Add"
  op: "Add"
  input: "ssd300/expanded_conv_6/expand/BatchNorm/Reshape_2"
  input: "ssd300/expanded_conv_6/expand/BatchNorm/batchnorm_1/Add/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ssd300/expanded_conv_6/expand/BatchNorm/batchnorm_1/Rsqrt"
  op: "Rsqrt"
  input: "ssd300/expanded_conv_6/expand/BatchNorm/batchnorm_1/Add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ssd300/expanded_conv_6/expand/BatchNorm/batchnorm_1/mul"
  op: "Mul"
  input: "ssd300/expanded_conv_6/expand/layer_conv2d/Conv2D"
  input: "ssd300/expanded_conv_6/expand/BatchNorm/batchnorm_1/Rsqrt"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ssd300/expanded_conv_6/expand/BatchNorm/batchnorm_1/mul_1"
  op: "Mul"
  input: "ssd300/expanded_conv_6/expand/BatchNorm/Reshape_1"
  input: "ssd300/expanded_conv_6/expand/BatchNorm/batchnorm_1/Rsqrt"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ssd300/expanded_conv_6/expand/BatchNorm/batchnorm_1/sub"
  op: "Sub"
  input: "ssd300/expanded_conv_6/expand/BatchNorm/Reshape"
  input: "ssd300/expanded_conv_6/expand/BatchNorm/batchnorm_1/mul_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ssd300/expanded_conv_6/expand/BatchNorm/batchnorm_1/Add_1"
  op: "Add"
  input: "ssd300/expanded_conv_6/expand/BatchNorm/batchnorm_1/mul"
  input: "ssd300/expanded_conv_6/expand/BatchNorm/batchnorm_1/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ssd300/expanded_conv_6/expand/Relu6"
  op: "Relu6"
  input: "ssd300/expanded_conv_6/expand/BatchNorm/batchnorm_1/Add_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ssd300/expanded_conv_6/depthwise/depthwise_weights/Initializer/random_uniform/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv_6/depthwise/depthwise_weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\003\000\000\000\003\000\000\000\300\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "ssd300/expanded_conv_6/depthwise/depthwise_weights/Initializer/random_uniform/min"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv_6/depthwise/depthwise_weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: -0.05877270922064781
      }
    }
  }
}
node {
  name: "ssd300/expanded_conv_6/depthwise/depthwise_weights/Initializer/random_uniform/max"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv_6/depthwise/depthwise_weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.05877270922064781
      }
    }
  }
}
node {
  name: "ssd300/expanded_conv_6/depthwise/depthwise_weights/Initializer/random_uniform/RandomUniform"
  op: "RandomUniform"
  input: "ssd300/expanded_conv_6/depthwise/depthwise_weights/Initializer/random_uniform/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv_6/depthwise/depthwise_weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "ssd300/expanded_conv_6/depthwise/depthwise_weights/Initializer/random_uniform/sub"
  op: "Sub"
  input: "ssd300/expanded_conv_6/depthwise/depthwise_weights/Initializer/random_uniform/max"
  input: "ssd300/expanded_conv_6/depthwise/depthwise_weights/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv_6/depthwise/depthwise_weights"
      }
    }
  }
}
node {
  name: "ssd300/expanded_conv_6/depthwise/depthwise_weights/Initializer/random_uniform/mul"
  op: "Mul"
  input: "ssd300/expanded_conv_6/depthwise/depthwise_weights/Initializer/random_uniform/RandomUniform"
  input: "ssd300/expanded_conv_6/depthwise/depthwise_weights/Initializer/random_uniform/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv_6/depthwise/depthwise_weights"
      }
    }
  }
}
node {
  name: "ssd300/expanded_conv_6/depthwise/depthwise_weights/Initializer/random_uniform"
  op: "Add"
  input: "ssd300/expanded_conv_6/depthwise/depthwise_weights/Initializer/random_uniform/mul"
  input: "ssd300/expanded_conv_6/depthwise/depthwise_weights/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv_6/depthwise/depthwise_weights"
      }
    }
  }
}
node {
  name: "ssd300/expanded_conv_6/depthwise/depthwise_weights"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv_6/depthwise/depthwise_weights"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 3
        }
        dim {
          size: 3
        }
        dim {
          size: 192
        }
        dim {
          size: 1
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "ssd300/expanded_conv_6/depthwise/depthwise_weights/Assign"
  op: "Assign"
  input: "ssd300/expanded_conv_6/depthwise/depthwise_weights"
  input: "ssd300/expanded_conv_6/depthwise/depthwise_weights/Initializer/random_uniform"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv_6/depthwise/depthwise_weights"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "ssd300/expanded_conv_6/depthwise/depthwise_weights/read"
  op: "Identity"
  input: "ssd300/expanded_conv_6/depthwise/depthwise_weights"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv_6/depthwise/depthwise_weights"
      }
    }
  }
}
node {
  name: "ssd300/expanded_conv_6/depthwise/layer_conv2d/depthwise/Shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\003\000\000\000\003\000\000\000\300\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "ssd300/expanded_conv_6/depthwise/layer_conv2d/depthwise/dilation_rate"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "ssd300/expanded_conv_6/depthwise/layer_conv2d/depthwise"
  op: "DepthwiseConv2dNative"
  input: "ssd300/expanded_conv_6/expand/Relu6"
  input: "ssd300/expanded_conv_6/depthwise/depthwise_weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NCHW"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 2
        i: 2
      }
    }
  }
}
node {
  name: "ssd300/expanded_conv_6/depthwise/BatchNorm/beta/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv_6/depthwise/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 192
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "ssd300/expanded_conv_6/depthwise/BatchNorm/beta"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv_6/depthwise/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 192
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "ssd300/expanded_conv_6/depthwise/BatchNorm/beta/Assign"
  op: "Assign"
  input: "ssd300/expanded_conv_6/depthwise/BatchNorm/beta"
  input: "ssd300/expanded_conv_6/depthwise/BatchNorm/beta/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv_6/depthwise/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "ssd300/expanded_conv_6/depthwise/BatchNorm/beta/read"
  op: "Identity"
  input: "ssd300/expanded_conv_6/depthwise/BatchNorm/beta"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv_6/depthwise/BatchNorm/beta"
      }
    }
  }
}
node {
  name: "ssd300/expanded_conv_6/depthwise/BatchNorm/moving_mean/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv_6/depthwise/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 192
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "ssd300/expanded_conv_6/depthwise/BatchNorm/moving_mean"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv_6/depthwise/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 192
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "ssd300/expanded_conv_6/depthwise/BatchNorm/moving_mean/Assign"
  op: "Assign"
  input: "ssd300/expanded_conv_6/depthwise/BatchNorm/moving_mean"
  input: "ssd300/expanded_conv_6/depthwise/BatchNorm/moving_mean/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv_6/depthwise/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "ssd300/expanded_conv_6/depthwise/BatchNorm/moving_mean/read"
  op: "Identity"
  input: "ssd300/expanded_conv_6/depthwise/BatchNorm/moving_mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv_6/depthwise/BatchNorm/moving_mean"
      }
    }
  }
}
node {
  name: "ssd300/expanded_conv_6/depthwise/BatchNorm/moving_variance/Initializer/ones"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv_6/depthwise/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 192
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "ssd300/expanded_conv_6/depthwise/BatchNorm/moving_variance"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv_6/depthwise/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 192
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "ssd300/expanded_conv_6/depthwise/BatchNorm/moving_variance/Assign"
  op: "Assign"
  input: "ssd300/expanded_conv_6/depthwise/BatchNorm/moving_variance"
  input: "ssd300/expanded_conv_6/depthwise/BatchNorm/moving_variance/Initializer/ones"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv_6/depthwise/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "ssd300/expanded_conv_6/depthwise/BatchNorm/moving_variance/read"
  op: "Identity"
  input: "ssd300/expanded_conv_6/depthwise/BatchNorm/moving_variance"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv_6/depthwise/BatchNorm/moving_variance"
      }
    }
  }
}
node {
  name: "ssd300/expanded_conv_6/depthwise/BatchNorm/Reshape/shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\300\000\000\000\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "ssd300/expanded_conv_6/depthwise/BatchNorm/Reshape"
  op: "Reshape"
  input: "ssd300/expanded_conv_6/depthwise/BatchNorm/beta/read"
  input: "ssd300/expanded_conv_6/depthwise/BatchNorm/Reshape/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "ssd300/expanded_conv_6/depthwise/BatchNorm/Reshape_1/shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\300\000\000\000\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "ssd300/expanded_conv_6/depthwise/BatchNorm/Reshape_1"
  op: "Reshape"
  input: "ssd300/expanded_conv_6/depthwise/BatchNorm/moving_mean/read"
  input: "ssd300/expanded_conv_6/depthwise/BatchNorm/Reshape_1/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "ssd300/expanded_conv_6/depthwise/BatchNorm/Reshape_2/shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\300\000\000\000\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "ssd300/expanded_conv_6/depthwise/BatchNorm/Reshape_2"
  op: "Reshape"
  input: "ssd300/expanded_conv_6/depthwise/BatchNorm/moving_variance/read"
  input: "ssd300/expanded_conv_6/depthwise/BatchNorm/Reshape_2/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "ssd300/expanded_conv_6/depthwise/BatchNorm/batchnorm_1/Add/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0010000000474974513
      }
    }
  }
}
node {
  name: "ssd300/expanded_conv_6/depthwise/BatchNorm/batchnorm_1/Add"
  op: "Add"
  input: "ssd300/expanded_conv_6/depthwise/BatchNorm/Reshape_2"
  input: "ssd300/expanded_conv_6/depthwise/BatchNorm/batchnorm_1/Add/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ssd300/expanded_conv_6/depthwise/BatchNorm/batchnorm_1/Rsqrt"
  op: "Rsqrt"
  input: "ssd300/expanded_conv_6/depthwise/BatchNorm/batchnorm_1/Add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ssd300/expanded_conv_6/depthwise/BatchNorm/batchnorm_1/mul"
  op: "Mul"
  input: "ssd300/expanded_conv_6/depthwise/layer_conv2d/depthwise"
  input: "ssd300/expanded_conv_6/depthwise/BatchNorm/batchnorm_1/Rsqrt"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ssd300/expanded_conv_6/depthwise/BatchNorm/batchnorm_1/mul_1"
  op: "Mul"
  input: "ssd300/expanded_conv_6/depthwise/BatchNorm/Reshape_1"
  input: "ssd300/expanded_conv_6/depthwise/BatchNorm/batchnorm_1/Rsqrt"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ssd300/expanded_conv_6/depthwise/BatchNorm/batchnorm_1/sub"
  op: "Sub"
  input: "ssd300/expanded_conv_6/depthwise/BatchNorm/Reshape"
  input: "ssd300/expanded_conv_6/depthwise/BatchNorm/batchnorm_1/mul_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ssd300/expanded_conv_6/depthwise/BatchNorm/batchnorm_1/Add_1"
  op: "Add"
  input: "ssd300/expanded_conv_6/depthwise/BatchNorm/batchnorm_1/mul"
  input: "ssd300/expanded_conv_6/depthwise/BatchNorm/batchnorm_1/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ssd300/expanded_conv_6/depthwise/Relu6"
  op: "Relu6"
  input: "ssd300/expanded_conv_6/depthwise/BatchNorm/batchnorm_1/Add_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ssd300/expanded_conv_6/project/weights/Initializer/random_uniform/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv_6/project/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000\300\000\000\000@\000\000\000"
      }
    }
  }
}
node {
  name: "ssd300/expanded_conv_6/project/weights/Initializer/random_uniform/min"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv_6/project/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: -0.1530931144952774
      }
    }
  }
}
node {
  name: "ssd300/expanded_conv_6/project/weights/Initializer/random_uniform/max"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv_6/project/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.1530931144952774
      }
    }
  }
}
node {
  name: "ssd300/expanded_conv_6/project/weights/Initializer/random_uniform/RandomUniform"
  op: "RandomUniform"
  input: "ssd300/expanded_conv_6/project/weights/Initializer/random_uniform/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv_6/project/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "ssd300/expanded_conv_6/project/weights/Initializer/random_uniform/sub"
  op: "Sub"
  input: "ssd300/expanded_conv_6/project/weights/Initializer/random_uniform/max"
  input: "ssd300/expanded_conv_6/project/weights/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv_6/project/weights"
      }
    }
  }
}
node {
  name: "ssd300/expanded_conv_6/project/weights/Initializer/random_uniform/mul"
  op: "Mul"
  input: "ssd300/expanded_conv_6/project/weights/Initializer/random_uniform/RandomUniform"
  input: "ssd300/expanded_conv_6/project/weights/Initializer/random_uniform/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv_6/project/weights"
      }
    }
  }
}
node {
  name: "ssd300/expanded_conv_6/project/weights/Initializer/random_uniform"
  op: "Add"
  input: "ssd300/expanded_conv_6/project/weights/Initializer/random_uniform/mul"
  input: "ssd300/expanded_conv_6/project/weights/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv_6/project/weights"
      }
    }
  }
}
node {
  name: "ssd300/expanded_conv_6/project/weights"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv_6/project/weights"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
        dim {
          size: 1
        }
        dim {
          size: 192
        }
        dim {
          size: 64
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "ssd300/expanded_conv_6/project/weights/Assign"
  op: "Assign"
  input: "ssd300/expanded_conv_6/project/weights"
  input: "ssd300/expanded_conv_6/project/weights/Initializer/random_uniform"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv_6/project/weights"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "ssd300/expanded_conv_6/project/weights/read"
  op: "Identity"
  input: "ssd300/expanded_conv_6/project/weights"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv_6/project/weights"
      }
    }
  }
}
node {
  name: "ssd300/expanded_conv_6/project/layer_conv2d/Conv2D"
  op: "Conv2D"
  input: "ssd300/expanded_conv_6/depthwise/Relu6"
  input: "ssd300/expanded_conv_6/project/weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NCHW"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "explicit_paddings"
    value {
      list {
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "ssd300/expanded_conv_6/project/BatchNorm/beta/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv_6/project/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 64
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "ssd300/expanded_conv_6/project/BatchNorm/beta"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv_6/project/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 64
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "ssd300/expanded_conv_6/project/BatchNorm/beta/Assign"
  op: "Assign"
  input: "ssd300/expanded_conv_6/project/BatchNorm/beta"
  input: "ssd300/expanded_conv_6/project/BatchNorm/beta/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv_6/project/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "ssd300/expanded_conv_6/project/BatchNorm/beta/read"
  op: "Identity"
  input: "ssd300/expanded_conv_6/project/BatchNorm/beta"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv_6/project/BatchNorm/beta"
      }
    }
  }
}
node {
  name: "ssd300/expanded_conv_6/project/BatchNorm/moving_mean/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv_6/project/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 64
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "ssd300/expanded_conv_6/project/BatchNorm/moving_mean"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv_6/project/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 64
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "ssd300/expanded_conv_6/project/BatchNorm/moving_mean/Assign"
  op: "Assign"
  input: "ssd300/expanded_conv_6/project/BatchNorm/moving_mean"
  input: "ssd300/expanded_conv_6/project/BatchNorm/moving_mean/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv_6/project/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "ssd300/expanded_conv_6/project/BatchNorm/moving_mean/read"
  op: "Identity"
  input: "ssd300/expanded_conv_6/project/BatchNorm/moving_mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv_6/project/BatchNorm/moving_mean"
      }
    }
  }
}
node {
  name: "ssd300/expanded_conv_6/project/BatchNorm/moving_variance/Initializer/ones"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv_6/project/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 64
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "ssd300/expanded_conv_6/project/BatchNorm/moving_variance"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv_6/project/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 64
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "ssd300/expanded_conv_6/project/BatchNorm/moving_variance/Assign"
  op: "Assign"
  input: "ssd300/expanded_conv_6/project/BatchNorm/moving_variance"
  input: "ssd300/expanded_conv_6/project/BatchNorm/moving_variance/Initializer/ones"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv_6/project/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "ssd300/expanded_conv_6/project/BatchNorm/moving_variance/read"
  op: "Identity"
  input: "ssd300/expanded_conv_6/project/BatchNorm/moving_variance"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv_6/project/BatchNorm/moving_variance"
      }
    }
  }
}
node {
  name: "ssd300/expanded_conv_6/project/BatchNorm/Reshape/shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000@\000\000\000\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "ssd300/expanded_conv_6/project/BatchNorm/Reshape"
  op: "Reshape"
  input: "ssd300/expanded_conv_6/project/BatchNorm/beta/read"
  input: "ssd300/expanded_conv_6/project/BatchNorm/Reshape/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "ssd300/expanded_conv_6/project/BatchNorm/Reshape_1/shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000@\000\000\000\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "ssd300/expanded_conv_6/project/BatchNorm/Reshape_1"
  op: "Reshape"
  input: "ssd300/expanded_conv_6/project/BatchNorm/moving_mean/read"
  input: "ssd300/expanded_conv_6/project/BatchNorm/Reshape_1/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "ssd300/expanded_conv_6/project/BatchNorm/Reshape_2/shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000@\000\000\000\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "ssd300/expanded_conv_6/project/BatchNorm/Reshape_2"
  op: "Reshape"
  input: "ssd300/expanded_conv_6/project/BatchNorm/moving_variance/read"
  input: "ssd300/expanded_conv_6/project/BatchNorm/Reshape_2/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "ssd300/expanded_conv_6/project/BatchNorm/batchnorm_1/Add/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0010000000474974513
      }
    }
  }
}
node {
  name: "ssd300/expanded_conv_6/project/BatchNorm/batchnorm_1/Add"
  op: "Add"
  input: "ssd300/expanded_conv_6/project/BatchNorm/Reshape_2"
  input: "ssd300/expanded_conv_6/project/BatchNorm/batchnorm_1/Add/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ssd300/expanded_conv_6/project/BatchNorm/batchnorm_1/Rsqrt"
  op: "Rsqrt"
  input: "ssd300/expanded_conv_6/project/BatchNorm/batchnorm_1/Add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ssd300/expanded_conv_6/project/BatchNorm/batchnorm_1/mul"
  op: "Mul"
  input: "ssd300/expanded_conv_6/project/layer_conv2d/Conv2D"
  input: "ssd300/expanded_conv_6/project/BatchNorm/batchnorm_1/Rsqrt"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ssd300/expanded_conv_6/project/BatchNorm/batchnorm_1/mul_1"
  op: "Mul"
  input: "ssd300/expanded_conv_6/project/BatchNorm/Reshape_1"
  input: "ssd300/expanded_conv_6/project/BatchNorm/batchnorm_1/Rsqrt"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ssd300/expanded_conv_6/project/BatchNorm/batchnorm_1/sub"
  op: "Sub"
  input: "ssd300/expanded_conv_6/project/BatchNorm/Reshape"
  input: "ssd300/expanded_conv_6/project/BatchNorm/batchnorm_1/mul_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ssd300/expanded_conv_6/project/BatchNorm/batchnorm_1/Add_1"
  op: "Add"
  input: "ssd300/expanded_conv_6/project/BatchNorm/batchnorm_1/mul"
  input: "ssd300/expanded_conv_6/project/BatchNorm/batchnorm_1/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ssd300/expanded_conv_7/expand/weights/Initializer/random_uniform/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv_7/expand/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000@\000\000\000\200\001\000\000"
      }
    }
  }
}
node {
  name: "ssd300/expanded_conv_7/expand/weights/Initializer/random_uniform/min"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv_7/expand/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: -0.1157275140285492
      }
    }
  }
}
node {
  name: "ssd300/expanded_conv_7/expand/weights/Initializer/random_uniform/max"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv_7/expand/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.1157275140285492
      }
    }
  }
}
node {
  name: "ssd300/expanded_conv_7/expand/weights/Initializer/random_uniform/RandomUniform"
  op: "RandomUniform"
  input: "ssd300/expanded_conv_7/expand/weights/Initializer/random_uniform/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv_7/expand/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "ssd300/expanded_conv_7/expand/weights/Initializer/random_uniform/sub"
  op: "Sub"
  input: "ssd300/expanded_conv_7/expand/weights/Initializer/random_uniform/max"
  input: "ssd300/expanded_conv_7/expand/weights/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv_7/expand/weights"
      }
    }
  }
}
node {
  name: "ssd300/expanded_conv_7/expand/weights/Initializer/random_uniform/mul"
  op: "Mul"
  input: "ssd300/expanded_conv_7/expand/weights/Initializer/random_uniform/RandomUniform"
  input: "ssd300/expanded_conv_7/expand/weights/Initializer/random_uniform/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv_7/expand/weights"
      }
    }
  }
}
node {
  name: "ssd300/expanded_conv_7/expand/weights/Initializer/random_uniform"
  op: "Add"
  input: "ssd300/expanded_conv_7/expand/weights/Initializer/random_uniform/mul"
  input: "ssd300/expanded_conv_7/expand/weights/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv_7/expand/weights"
      }
    }
  }
}
node {
  name: "ssd300/expanded_conv_7/expand/weights"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv_7/expand/weights"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
        dim {
          size: 1
        }
        dim {
          size: 64
        }
        dim {
          size: 384
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "ssd300/expanded_conv_7/expand/weights/Assign"
  op: "Assign"
  input: "ssd300/expanded_conv_7/expand/weights"
  input: "ssd300/expanded_conv_7/expand/weights/Initializer/random_uniform"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv_7/expand/weights"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "ssd300/expanded_conv_7/expand/weights/read"
  op: "Identity"
  input: "ssd300/expanded_conv_7/expand/weights"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv_7/expand/weights"
      }
    }
  }
}
node {
  name: "ssd300/expanded_conv_7/expand/layer_conv2d/Conv2D"
  op: "Conv2D"
  input: "ssd300/expanded_conv_6/project/BatchNorm/batchnorm_1/Add_1"
  input: "ssd300/expanded_conv_7/expand/weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NCHW"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "explicit_paddings"
    value {
      list {
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "ssd300/expanded_conv_7/expand/BatchNorm/beta/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv_7/expand/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 384
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "ssd300/expanded_conv_7/expand/BatchNorm/beta"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv_7/expand/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 384
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "ssd300/expanded_conv_7/expand/BatchNorm/beta/Assign"
  op: "Assign"
  input: "ssd300/expanded_conv_7/expand/BatchNorm/beta"
  input: "ssd300/expanded_conv_7/expand/BatchNorm/beta/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv_7/expand/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "ssd300/expanded_conv_7/expand/BatchNorm/beta/read"
  op: "Identity"
  input: "ssd300/expanded_conv_7/expand/BatchNorm/beta"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv_7/expand/BatchNorm/beta"
      }
    }
  }
}
node {
  name: "ssd300/expanded_conv_7/expand/BatchNorm/moving_mean/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv_7/expand/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 384
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "ssd300/expanded_conv_7/expand/BatchNorm/moving_mean"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv_7/expand/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 384
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "ssd300/expanded_conv_7/expand/BatchNorm/moving_mean/Assign"
  op: "Assign"
  input: "ssd300/expanded_conv_7/expand/BatchNorm/moving_mean"
  input: "ssd300/expanded_conv_7/expand/BatchNorm/moving_mean/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv_7/expand/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "ssd300/expanded_conv_7/expand/BatchNorm/moving_mean/read"
  op: "Identity"
  input: "ssd300/expanded_conv_7/expand/BatchNorm/moving_mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv_7/expand/BatchNorm/moving_mean"
      }
    }
  }
}
node {
  name: "ssd300/expanded_conv_7/expand/BatchNorm/moving_variance/Initializer/ones"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv_7/expand/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 384
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "ssd300/expanded_conv_7/expand/BatchNorm/moving_variance"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv_7/expand/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 384
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "ssd300/expanded_conv_7/expand/BatchNorm/moving_variance/Assign"
  op: "Assign"
  input: "ssd300/expanded_conv_7/expand/BatchNorm/moving_variance"
  input: "ssd300/expanded_conv_7/expand/BatchNorm/moving_variance/Initializer/ones"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv_7/expand/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "ssd300/expanded_conv_7/expand/BatchNorm/moving_variance/read"
  op: "Identity"
  input: "ssd300/expanded_conv_7/expand/BatchNorm/moving_variance"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv_7/expand/BatchNorm/moving_variance"
      }
    }
  }
}
node {
  name: "ssd300/expanded_conv_7/expand/BatchNorm/Reshape/shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\200\001\000\000\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "ssd300/expanded_conv_7/expand/BatchNorm/Reshape"
  op: "Reshape"
  input: "ssd300/expanded_conv_7/expand/BatchNorm/beta/read"
  input: "ssd300/expanded_conv_7/expand/BatchNorm/Reshape/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "ssd300/expanded_conv_7/expand/BatchNorm/Reshape_1/shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\200\001\000\000\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "ssd300/expanded_conv_7/expand/BatchNorm/Reshape_1"
  op: "Reshape"
  input: "ssd300/expanded_conv_7/expand/BatchNorm/moving_mean/read"
  input: "ssd300/expanded_conv_7/expand/BatchNorm/Reshape_1/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "ssd300/expanded_conv_7/expand/BatchNorm/Reshape_2/shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\200\001\000\000\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "ssd300/expanded_conv_7/expand/BatchNorm/Reshape_2"
  op: "Reshape"
  input: "ssd300/expanded_conv_7/expand/BatchNorm/moving_variance/read"
  input: "ssd300/expanded_conv_7/expand/BatchNorm/Reshape_2/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "ssd300/expanded_conv_7/expand/BatchNorm/batchnorm_1/Add/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0010000000474974513
      }
    }
  }
}
node {
  name: "ssd300/expanded_conv_7/expand/BatchNorm/batchnorm_1/Add"
  op: "Add"
  input: "ssd300/expanded_conv_7/expand/BatchNorm/Reshape_2"
  input: "ssd300/expanded_conv_7/expand/BatchNorm/batchnorm_1/Add/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ssd300/expanded_conv_7/expand/BatchNorm/batchnorm_1/Rsqrt"
  op: "Rsqrt"
  input: "ssd300/expanded_conv_7/expand/BatchNorm/batchnorm_1/Add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ssd300/expanded_conv_7/expand/BatchNorm/batchnorm_1/mul"
  op: "Mul"
  input: "ssd300/expanded_conv_7/expand/layer_conv2d/Conv2D"
  input: "ssd300/expanded_conv_7/expand/BatchNorm/batchnorm_1/Rsqrt"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ssd300/expanded_conv_7/expand/BatchNorm/batchnorm_1/mul_1"
  op: "Mul"
  input: "ssd300/expanded_conv_7/expand/BatchNorm/Reshape_1"
  input: "ssd300/expanded_conv_7/expand/BatchNorm/batchnorm_1/Rsqrt"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ssd300/expanded_conv_7/expand/BatchNorm/batchnorm_1/sub"
  op: "Sub"
  input: "ssd300/expanded_conv_7/expand/BatchNorm/Reshape"
  input: "ssd300/expanded_conv_7/expand/BatchNorm/batchnorm_1/mul_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ssd300/expanded_conv_7/expand/BatchNorm/batchnorm_1/Add_1"
  op: "Add"
  input: "ssd300/expanded_conv_7/expand/BatchNorm/batchnorm_1/mul"
  input: "ssd300/expanded_conv_7/expand/BatchNorm/batchnorm_1/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ssd300/expanded_conv_7/expand/Relu6"
  op: "Relu6"
  input: "ssd300/expanded_conv_7/expand/BatchNorm/batchnorm_1/Add_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ssd300/expanded_conv_7/depthwise/depthwise_weights/Initializer/random_uniform/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv_7/depthwise/depthwise_weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\003\000\000\000\003\000\000\000\200\001\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "ssd300/expanded_conv_7/depthwise/depthwise_weights/Initializer/random_uniform/min"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv_7/depthwise/depthwise_weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: -0.04161251708865166
      }
    }
  }
}
node {
  name: "ssd300/expanded_conv_7/depthwise/depthwise_weights/Initializer/random_uniform/max"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv_7/depthwise/depthwise_weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.04161251708865166
      }
    }
  }
}
node {
  name: "ssd300/expanded_conv_7/depthwise/depthwise_weights/Initializer/random_uniform/RandomUniform"
  op: "RandomUniform"
  input: "ssd300/expanded_conv_7/depthwise/depthwise_weights/Initializer/random_uniform/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv_7/depthwise/depthwise_weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "ssd300/expanded_conv_7/depthwise/depthwise_weights/Initializer/random_uniform/sub"
  op: "Sub"
  input: "ssd300/expanded_conv_7/depthwise/depthwise_weights/Initializer/random_uniform/max"
  input: "ssd300/expanded_conv_7/depthwise/depthwise_weights/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv_7/depthwise/depthwise_weights"
      }
    }
  }
}
node {
  name: "ssd300/expanded_conv_7/depthwise/depthwise_weights/Initializer/random_uniform/mul"
  op: "Mul"
  input: "ssd300/expanded_conv_7/depthwise/depthwise_weights/Initializer/random_uniform/RandomUniform"
  input: "ssd300/expanded_conv_7/depthwise/depthwise_weights/Initializer/random_uniform/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv_7/depthwise/depthwise_weights"
      }
    }
  }
}
node {
  name: "ssd300/expanded_conv_7/depthwise/depthwise_weights/Initializer/random_uniform"
  op: "Add"
  input: "ssd300/expanded_conv_7/depthwise/depthwise_weights/Initializer/random_uniform/mul"
  input: "ssd300/expanded_conv_7/depthwise/depthwise_weights/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv_7/depthwise/depthwise_weights"
      }
    }
  }
}
node {
  name: "ssd300/expanded_conv_7/depthwise/depthwise_weights"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv_7/depthwise/depthwise_weights"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 3
        }
        dim {
          size: 3
        }
        dim {
          size: 384
        }
        dim {
          size: 1
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "ssd300/expanded_conv_7/depthwise/depthwise_weights/Assign"
  op: "Assign"
  input: "ssd300/expanded_conv_7/depthwise/depthwise_weights"
  input: "ssd300/expanded_conv_7/depthwise/depthwise_weights/Initializer/random_uniform"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv_7/depthwise/depthwise_weights"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "ssd300/expanded_conv_7/depthwise/depthwise_weights/read"
  op: "Identity"
  input: "ssd300/expanded_conv_7/depthwise/depthwise_weights"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv_7/depthwise/depthwise_weights"
      }
    }
  }
}
node {
  name: "ssd300/expanded_conv_7/depthwise/layer_conv2d/depthwise/Shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\003\000\000\000\003\000\000\000\200\001\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "ssd300/expanded_conv_7/depthwise/layer_conv2d/depthwise/dilation_rate"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "ssd300/expanded_conv_7/depthwise/layer_conv2d/depthwise"
  op: "DepthwiseConv2dNative"
  input: "ssd300/expanded_conv_7/expand/Relu6"
  input: "ssd300/expanded_conv_7/depthwise/depthwise_weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NCHW"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
}
node {
  name: "ssd300/expanded_conv_7/depthwise/BatchNorm/beta/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv_7/depthwise/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 384
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "ssd300/expanded_conv_7/depthwise/BatchNorm/beta"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv_7/depthwise/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 384
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "ssd300/expanded_conv_7/depthwise/BatchNorm/beta/Assign"
  op: "Assign"
  input: "ssd300/expanded_conv_7/depthwise/BatchNorm/beta"
  input: "ssd300/expanded_conv_7/depthwise/BatchNorm/beta/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv_7/depthwise/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "ssd300/expanded_conv_7/depthwise/BatchNorm/beta/read"
  op: "Identity"
  input: "ssd300/expanded_conv_7/depthwise/BatchNorm/beta"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv_7/depthwise/BatchNorm/beta"
      }
    }
  }
}
node {
  name: "ssd300/expanded_conv_7/depthwise/BatchNorm/moving_mean/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv_7/depthwise/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 384
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "ssd300/expanded_conv_7/depthwise/BatchNorm/moving_mean"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv_7/depthwise/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 384
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "ssd300/expanded_conv_7/depthwise/BatchNorm/moving_mean/Assign"
  op: "Assign"
  input: "ssd300/expanded_conv_7/depthwise/BatchNorm/moving_mean"
  input: "ssd300/expanded_conv_7/depthwise/BatchNorm/moving_mean/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv_7/depthwise/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "ssd300/expanded_conv_7/depthwise/BatchNorm/moving_mean/read"
  op: "Identity"
  input: "ssd300/expanded_conv_7/depthwise/BatchNorm/moving_mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv_7/depthwise/BatchNorm/moving_mean"
      }
    }
  }
}
node {
  name: "ssd300/expanded_conv_7/depthwise/BatchNorm/moving_variance/Initializer/ones"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv_7/depthwise/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 384
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "ssd300/expanded_conv_7/depthwise/BatchNorm/moving_variance"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv_7/depthwise/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 384
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "ssd300/expanded_conv_7/depthwise/BatchNorm/moving_variance/Assign"
  op: "Assign"
  input: "ssd300/expanded_conv_7/depthwise/BatchNorm/moving_variance"
  input: "ssd300/expanded_conv_7/depthwise/BatchNorm/moving_variance/Initializer/ones"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv_7/depthwise/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "ssd300/expanded_conv_7/depthwise/BatchNorm/moving_variance/read"
  op: "Identity"
  input: "ssd300/expanded_conv_7/depthwise/BatchNorm/moving_variance"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv_7/depthwise/BatchNorm/moving_variance"
      }
    }
  }
}
node {
  name: "ssd300/expanded_conv_7/depthwise/BatchNorm/Reshape/shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\200\001\000\000\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "ssd300/expanded_conv_7/depthwise/BatchNorm/Reshape"
  op: "Reshape"
  input: "ssd300/expanded_conv_7/depthwise/BatchNorm/beta/read"
  input: "ssd300/expanded_conv_7/depthwise/BatchNorm/Reshape/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "ssd300/expanded_conv_7/depthwise/BatchNorm/Reshape_1/shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\200\001\000\000\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "ssd300/expanded_conv_7/depthwise/BatchNorm/Reshape_1"
  op: "Reshape"
  input: "ssd300/expanded_conv_7/depthwise/BatchNorm/moving_mean/read"
  input: "ssd300/expanded_conv_7/depthwise/BatchNorm/Reshape_1/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "ssd300/expanded_conv_7/depthwise/BatchNorm/Reshape_2/shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\200\001\000\000\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "ssd300/expanded_conv_7/depthwise/BatchNorm/Reshape_2"
  op: "Reshape"
  input: "ssd300/expanded_conv_7/depthwise/BatchNorm/moving_variance/read"
  input: "ssd300/expanded_conv_7/depthwise/BatchNorm/Reshape_2/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "ssd300/expanded_conv_7/depthwise/BatchNorm/batchnorm_1/Add/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0010000000474974513
      }
    }
  }
}
node {
  name: "ssd300/expanded_conv_7/depthwise/BatchNorm/batchnorm_1/Add"
  op: "Add"
  input: "ssd300/expanded_conv_7/depthwise/BatchNorm/Reshape_2"
  input: "ssd300/expanded_conv_7/depthwise/BatchNorm/batchnorm_1/Add/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ssd300/expanded_conv_7/depthwise/BatchNorm/batchnorm_1/Rsqrt"
  op: "Rsqrt"
  input: "ssd300/expanded_conv_7/depthwise/BatchNorm/batchnorm_1/Add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ssd300/expanded_conv_7/depthwise/BatchNorm/batchnorm_1/mul"
  op: "Mul"
  input: "ssd300/expanded_conv_7/depthwise/layer_conv2d/depthwise"
  input: "ssd300/expanded_conv_7/depthwise/BatchNorm/batchnorm_1/Rsqrt"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ssd300/expanded_conv_7/depthwise/BatchNorm/batchnorm_1/mul_1"
  op: "Mul"
  input: "ssd300/expanded_conv_7/depthwise/BatchNorm/Reshape_1"
  input: "ssd300/expanded_conv_7/depthwise/BatchNorm/batchnorm_1/Rsqrt"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ssd300/expanded_conv_7/depthwise/BatchNorm/batchnorm_1/sub"
  op: "Sub"
  input: "ssd300/expanded_conv_7/depthwise/BatchNorm/Reshape"
  input: "ssd300/expanded_conv_7/depthwise/BatchNorm/batchnorm_1/mul_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ssd300/expanded_conv_7/depthwise/BatchNorm/batchnorm_1/Add_1"
  op: "Add"
  input: "ssd300/expanded_conv_7/depthwise/BatchNorm/batchnorm_1/mul"
  input: "ssd300/expanded_conv_7/depthwise/BatchNorm/batchnorm_1/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ssd300/expanded_conv_7/depthwise/Relu6"
  op: "Relu6"
  input: "ssd300/expanded_conv_7/depthwise/BatchNorm/batchnorm_1/Add_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ssd300/expanded_conv_7/project/weights/Initializer/random_uniform/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv_7/project/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000\200\001\000\000@\000\000\000"
      }
    }
  }
}
node {
  name: "ssd300/expanded_conv_7/project/weights/Initializer/random_uniform/min"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv_7/project/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: -0.1157275140285492
      }
    }
  }
}
node {
  name: "ssd300/expanded_conv_7/project/weights/Initializer/random_uniform/max"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv_7/project/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.1157275140285492
      }
    }
  }
}
node {
  name: "ssd300/expanded_conv_7/project/weights/Initializer/random_uniform/RandomUniform"
  op: "RandomUniform"
  input: "ssd300/expanded_conv_7/project/weights/Initializer/random_uniform/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv_7/project/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "ssd300/expanded_conv_7/project/weights/Initializer/random_uniform/sub"
  op: "Sub"
  input: "ssd300/expanded_conv_7/project/weights/Initializer/random_uniform/max"
  input: "ssd300/expanded_conv_7/project/weights/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv_7/project/weights"
      }
    }
  }
}
node {
  name: "ssd300/expanded_conv_7/project/weights/Initializer/random_uniform/mul"
  op: "Mul"
  input: "ssd300/expanded_conv_7/project/weights/Initializer/random_uniform/RandomUniform"
  input: "ssd300/expanded_conv_7/project/weights/Initializer/random_uniform/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv_7/project/weights"
      }
    }
  }
}
node {
  name: "ssd300/expanded_conv_7/project/weights/Initializer/random_uniform"
  op: "Add"
  input: "ssd300/expanded_conv_7/project/weights/Initializer/random_uniform/mul"
  input: "ssd300/expanded_conv_7/project/weights/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv_7/project/weights"
      }
    }
  }
}
node {
  name: "ssd300/expanded_conv_7/project/weights"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv_7/project/weights"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
        dim {
          size: 1
        }
        dim {
          size: 384
        }
        dim {
          size: 64
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "ssd300/expanded_conv_7/project/weights/Assign"
  op: "Assign"
  input: "ssd300/expanded_conv_7/project/weights"
  input: "ssd300/expanded_conv_7/project/weights/Initializer/random_uniform"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv_7/project/weights"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "ssd300/expanded_conv_7/project/weights/read"
  op: "Identity"
  input: "ssd300/expanded_conv_7/project/weights"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv_7/project/weights"
      }
    }
  }
}
node {
  name: "ssd300/expanded_conv_7/project/layer_conv2d/Conv2D"
  op: "Conv2D"
  input: "ssd300/expanded_conv_7/depthwise/Relu6"
  input: "ssd300/expanded_conv_7/project/weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NCHW"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "explicit_paddings"
    value {
      list {
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "ssd300/expanded_conv_7/project/BatchNorm/beta/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv_7/project/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 64
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "ssd300/expanded_conv_7/project/BatchNorm/beta"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv_7/project/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 64
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "ssd300/expanded_conv_7/project/BatchNorm/beta/Assign"
  op: "Assign"
  input: "ssd300/expanded_conv_7/project/BatchNorm/beta"
  input: "ssd300/expanded_conv_7/project/BatchNorm/beta/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv_7/project/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "ssd300/expanded_conv_7/project/BatchNorm/beta/read"
  op: "Identity"
  input: "ssd300/expanded_conv_7/project/BatchNorm/beta"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv_7/project/BatchNorm/beta"
      }
    }
  }
}
node {
  name: "ssd300/expanded_conv_7/project/BatchNorm/moving_mean/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv_7/project/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 64
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "ssd300/expanded_conv_7/project/BatchNorm/moving_mean"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv_7/project/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 64
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "ssd300/expanded_conv_7/project/BatchNorm/moving_mean/Assign"
  op: "Assign"
  input: "ssd300/expanded_conv_7/project/BatchNorm/moving_mean"
  input: "ssd300/expanded_conv_7/project/BatchNorm/moving_mean/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv_7/project/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "ssd300/expanded_conv_7/project/BatchNorm/moving_mean/read"
  op: "Identity"
  input: "ssd300/expanded_conv_7/project/BatchNorm/moving_mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv_7/project/BatchNorm/moving_mean"
      }
    }
  }
}
node {
  name: "ssd300/expanded_conv_7/project/BatchNorm/moving_variance/Initializer/ones"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv_7/project/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 64
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "ssd300/expanded_conv_7/project/BatchNorm/moving_variance"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv_7/project/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 64
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "ssd300/expanded_conv_7/project/BatchNorm/moving_variance/Assign"
  op: "Assign"
  input: "ssd300/expanded_conv_7/project/BatchNorm/moving_variance"
  input: "ssd300/expanded_conv_7/project/BatchNorm/moving_variance/Initializer/ones"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv_7/project/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "ssd300/expanded_conv_7/project/BatchNorm/moving_variance/read"
  op: "Identity"
  input: "ssd300/expanded_conv_7/project/BatchNorm/moving_variance"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv_7/project/BatchNorm/moving_variance"
      }
    }
  }
}
node {
  name: "ssd300/expanded_conv_7/project/BatchNorm/Reshape/shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000@\000\000\000\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "ssd300/expanded_conv_7/project/BatchNorm/Reshape"
  op: "Reshape"
  input: "ssd300/expanded_conv_7/project/BatchNorm/beta/read"
  input: "ssd300/expanded_conv_7/project/BatchNorm/Reshape/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "ssd300/expanded_conv_7/project/BatchNorm/Reshape_1/shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000@\000\000\000\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "ssd300/expanded_conv_7/project/BatchNorm/Reshape_1"
  op: "Reshape"
  input: "ssd300/expanded_conv_7/project/BatchNorm/moving_mean/read"
  input: "ssd300/expanded_conv_7/project/BatchNorm/Reshape_1/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "ssd300/expanded_conv_7/project/BatchNorm/Reshape_2/shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000@\000\000\000\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "ssd300/expanded_conv_7/project/BatchNorm/Reshape_2"
  op: "Reshape"
  input: "ssd300/expanded_conv_7/project/BatchNorm/moving_variance/read"
  input: "ssd300/expanded_conv_7/project/BatchNorm/Reshape_2/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "ssd300/expanded_conv_7/project/BatchNorm/batchnorm_1/Add/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0010000000474974513
      }
    }
  }
}
node {
  name: "ssd300/expanded_conv_7/project/BatchNorm/batchnorm_1/Add"
  op: "Add"
  input: "ssd300/expanded_conv_7/project/BatchNorm/Reshape_2"
  input: "ssd300/expanded_conv_7/project/BatchNorm/batchnorm_1/Add/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ssd300/expanded_conv_7/project/BatchNorm/batchnorm_1/Rsqrt"
  op: "Rsqrt"
  input: "ssd300/expanded_conv_7/project/BatchNorm/batchnorm_1/Add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ssd300/expanded_conv_7/project/BatchNorm/batchnorm_1/mul"
  op: "Mul"
  input: "ssd300/expanded_conv_7/project/layer_conv2d/Conv2D"
  input: "ssd300/expanded_conv_7/project/BatchNorm/batchnorm_1/Rsqrt"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ssd300/expanded_conv_7/project/BatchNorm/batchnorm_1/mul_1"
  op: "Mul"
  input: "ssd300/expanded_conv_7/project/BatchNorm/Reshape_1"
  input: "ssd300/expanded_conv_7/project/BatchNorm/batchnorm_1/Rsqrt"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ssd300/expanded_conv_7/project/BatchNorm/batchnorm_1/sub"
  op: "Sub"
  input: "ssd300/expanded_conv_7/project/BatchNorm/Reshape"
  input: "ssd300/expanded_conv_7/project/BatchNorm/batchnorm_1/mul_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ssd300/expanded_conv_7/project/BatchNorm/batchnorm_1/Add_1"
  op: "Add"
  input: "ssd300/expanded_conv_7/project/BatchNorm/batchnorm_1/mul"
  input: "ssd300/expanded_conv_7/project/BatchNorm/batchnorm_1/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ssd300/expanded_conv_7/Add"
  op: "Add"
  input: "ssd300/expanded_conv_7/project/BatchNorm/batchnorm_1/Add_1"
  input: "ssd300/expanded_conv_6/project/BatchNorm/batchnorm_1/Add_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ssd300/expanded_conv_8/expand/weights/Initializer/random_uniform/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv_8/expand/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000@\000\000\000\200\001\000\000"
      }
    }
  }
}
node {
  name: "ssd300/expanded_conv_8/expand/weights/Initializer/random_uniform/min"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv_8/expand/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: -0.1157275140285492
      }
    }
  }
}
node {
  name: "ssd300/expanded_conv_8/expand/weights/Initializer/random_uniform/max"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv_8/expand/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.1157275140285492
      }
    }
  }
}
node {
  name: "ssd300/expanded_conv_8/expand/weights/Initializer/random_uniform/RandomUniform"
  op: "RandomUniform"
  input: "ssd300/expanded_conv_8/expand/weights/Initializer/random_uniform/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv_8/expand/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "ssd300/expanded_conv_8/expand/weights/Initializer/random_uniform/sub"
  op: "Sub"
  input: "ssd300/expanded_conv_8/expand/weights/Initializer/random_uniform/max"
  input: "ssd300/expanded_conv_8/expand/weights/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv_8/expand/weights"
      }
    }
  }
}
node {
  name: "ssd300/expanded_conv_8/expand/weights/Initializer/random_uniform/mul"
  op: "Mul"
  input: "ssd300/expanded_conv_8/expand/weights/Initializer/random_uniform/RandomUniform"
  input: "ssd300/expanded_conv_8/expand/weights/Initializer/random_uniform/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv_8/expand/weights"
      }
    }
  }
}
node {
  name: "ssd300/expanded_conv_8/expand/weights/Initializer/random_uniform"
  op: "Add"
  input: "ssd300/expanded_conv_8/expand/weights/Initializer/random_uniform/mul"
  input: "ssd300/expanded_conv_8/expand/weights/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv_8/expand/weights"
      }
    }
  }
}
node {
  name: "ssd300/expanded_conv_8/expand/weights"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv_8/expand/weights"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
        dim {
          size: 1
        }
        dim {
          size: 64
        }
        dim {
          size: 384
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "ssd300/expanded_conv_8/expand/weights/Assign"
  op: "Assign"
  input: "ssd300/expanded_conv_8/expand/weights"
  input: "ssd300/expanded_conv_8/expand/weights/Initializer/random_uniform"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv_8/expand/weights"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "ssd300/expanded_conv_8/expand/weights/read"
  op: "Identity"
  input: "ssd300/expanded_conv_8/expand/weights"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv_8/expand/weights"
      }
    }
  }
}
node {
  name: "ssd300/expanded_conv_8/expand/layer_conv2d/Conv2D"
  op: "Conv2D"
  input: "ssd300/expanded_conv_7/Add"
  input: "ssd300/expanded_conv_8/expand/weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NCHW"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "explicit_paddings"
    value {
      list {
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "ssd300/expanded_conv_8/expand/BatchNorm/beta/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv_8/expand/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 384
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "ssd300/expanded_conv_8/expand/BatchNorm/beta"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv_8/expand/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 384
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "ssd300/expanded_conv_8/expand/BatchNorm/beta/Assign"
  op: "Assign"
  input: "ssd300/expanded_conv_8/expand/BatchNorm/beta"
  input: "ssd300/expanded_conv_8/expand/BatchNorm/beta/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv_8/expand/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "ssd300/expanded_conv_8/expand/BatchNorm/beta/read"
  op: "Identity"
  input: "ssd300/expanded_conv_8/expand/BatchNorm/beta"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv_8/expand/BatchNorm/beta"
      }
    }
  }
}
node {
  name: "ssd300/expanded_conv_8/expand/BatchNorm/moving_mean/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv_8/expand/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 384
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "ssd300/expanded_conv_8/expand/BatchNorm/moving_mean"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv_8/expand/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 384
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "ssd300/expanded_conv_8/expand/BatchNorm/moving_mean/Assign"
  op: "Assign"
  input: "ssd300/expanded_conv_8/expand/BatchNorm/moving_mean"
  input: "ssd300/expanded_conv_8/expand/BatchNorm/moving_mean/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv_8/expand/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "ssd300/expanded_conv_8/expand/BatchNorm/moving_mean/read"
  op: "Identity"
  input: "ssd300/expanded_conv_8/expand/BatchNorm/moving_mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv_8/expand/BatchNorm/moving_mean"
      }
    }
  }
}
node {
  name: "ssd300/expanded_conv_8/expand/BatchNorm/moving_variance/Initializer/ones"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv_8/expand/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 384
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "ssd300/expanded_conv_8/expand/BatchNorm/moving_variance"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv_8/expand/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 384
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "ssd300/expanded_conv_8/expand/BatchNorm/moving_variance/Assign"
  op: "Assign"
  input: "ssd300/expanded_conv_8/expand/BatchNorm/moving_variance"
  input: "ssd300/expanded_conv_8/expand/BatchNorm/moving_variance/Initializer/ones"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv_8/expand/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "ssd300/expanded_conv_8/expand/BatchNorm/moving_variance/read"
  op: "Identity"
  input: "ssd300/expanded_conv_8/expand/BatchNorm/moving_variance"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv_8/expand/BatchNorm/moving_variance"
      }
    }
  }
}
node {
  name: "ssd300/expanded_conv_8/expand/BatchNorm/Reshape/shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\200\001\000\000\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "ssd300/expanded_conv_8/expand/BatchNorm/Reshape"
  op: "Reshape"
  input: "ssd300/expanded_conv_8/expand/BatchNorm/beta/read"
  input: "ssd300/expanded_conv_8/expand/BatchNorm/Reshape/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "ssd300/expanded_conv_8/expand/BatchNorm/Reshape_1/shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\200\001\000\000\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "ssd300/expanded_conv_8/expand/BatchNorm/Reshape_1"
  op: "Reshape"
  input: "ssd300/expanded_conv_8/expand/BatchNorm/moving_mean/read"
  input: "ssd300/expanded_conv_8/expand/BatchNorm/Reshape_1/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "ssd300/expanded_conv_8/expand/BatchNorm/Reshape_2/shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\200\001\000\000\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "ssd300/expanded_conv_8/expand/BatchNorm/Reshape_2"
  op: "Reshape"
  input: "ssd300/expanded_conv_8/expand/BatchNorm/moving_variance/read"
  input: "ssd300/expanded_conv_8/expand/BatchNorm/Reshape_2/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "ssd300/expanded_conv_8/expand/BatchNorm/batchnorm_1/Add/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0010000000474974513
      }
    }
  }
}
node {
  name: "ssd300/expanded_conv_8/expand/BatchNorm/batchnorm_1/Add"
  op: "Add"
  input: "ssd300/expanded_conv_8/expand/BatchNorm/Reshape_2"
  input: "ssd300/expanded_conv_8/expand/BatchNorm/batchnorm_1/Add/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ssd300/expanded_conv_8/expand/BatchNorm/batchnorm_1/Rsqrt"
  op: "Rsqrt"
  input: "ssd300/expanded_conv_8/expand/BatchNorm/batchnorm_1/Add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ssd300/expanded_conv_8/expand/BatchNorm/batchnorm_1/mul"
  op: "Mul"
  input: "ssd300/expanded_conv_8/expand/layer_conv2d/Conv2D"
  input: "ssd300/expanded_conv_8/expand/BatchNorm/batchnorm_1/Rsqrt"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ssd300/expanded_conv_8/expand/BatchNorm/batchnorm_1/mul_1"
  op: "Mul"
  input: "ssd300/expanded_conv_8/expand/BatchNorm/Reshape_1"
  input: "ssd300/expanded_conv_8/expand/BatchNorm/batchnorm_1/Rsqrt"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ssd300/expanded_conv_8/expand/BatchNorm/batchnorm_1/sub"
  op: "Sub"
  input: "ssd300/expanded_conv_8/expand/BatchNorm/Reshape"
  input: "ssd300/expanded_conv_8/expand/BatchNorm/batchnorm_1/mul_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ssd300/expanded_conv_8/expand/BatchNorm/batchnorm_1/Add_1"
  op: "Add"
  input: "ssd300/expanded_conv_8/expand/BatchNorm/batchnorm_1/mul"
  input: "ssd300/expanded_conv_8/expand/BatchNorm/batchnorm_1/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ssd300/expanded_conv_8/expand/Relu6"
  op: "Relu6"
  input: "ssd300/expanded_conv_8/expand/BatchNorm/batchnorm_1/Add_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ssd300/expanded_conv_8/depthwise/depthwise_weights/Initializer/random_uniform/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv_8/depthwise/depthwise_weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\003\000\000\000\003\000\000\000\200\001\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "ssd300/expanded_conv_8/depthwise/depthwise_weights/Initializer/random_uniform/min"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv_8/depthwise/depthwise_weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: -0.04161251708865166
      }
    }
  }
}
node {
  name: "ssd300/expanded_conv_8/depthwise/depthwise_weights/Initializer/random_uniform/max"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv_8/depthwise/depthwise_weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.04161251708865166
      }
    }
  }
}
node {
  name: "ssd300/expanded_conv_8/depthwise/depthwise_weights/Initializer/random_uniform/RandomUniform"
  op: "RandomUniform"
  input: "ssd300/expanded_conv_8/depthwise/depthwise_weights/Initializer/random_uniform/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv_8/depthwise/depthwise_weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "ssd300/expanded_conv_8/depthwise/depthwise_weights/Initializer/random_uniform/sub"
  op: "Sub"
  input: "ssd300/expanded_conv_8/depthwise/depthwise_weights/Initializer/random_uniform/max"
  input: "ssd300/expanded_conv_8/depthwise/depthwise_weights/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv_8/depthwise/depthwise_weights"
      }
    }
  }
}
node {
  name: "ssd300/expanded_conv_8/depthwise/depthwise_weights/Initializer/random_uniform/mul"
  op: "Mul"
  input: "ssd300/expanded_conv_8/depthwise/depthwise_weights/Initializer/random_uniform/RandomUniform"
  input: "ssd300/expanded_conv_8/depthwise/depthwise_weights/Initializer/random_uniform/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv_8/depthwise/depthwise_weights"
      }
    }
  }
}
node {
  name: "ssd300/expanded_conv_8/depthwise/depthwise_weights/Initializer/random_uniform"
  op: "Add"
  input: "ssd300/expanded_conv_8/depthwise/depthwise_weights/Initializer/random_uniform/mul"
  input: "ssd300/expanded_conv_8/depthwise/depthwise_weights/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv_8/depthwise/depthwise_weights"
      }
    }
  }
}
node {
  name: "ssd300/expanded_conv_8/depthwise/depthwise_weights"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv_8/depthwise/depthwise_weights"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 3
        }
        dim {
          size: 3
        }
        dim {
          size: 384
        }
        dim {
          size: 1
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "ssd300/expanded_conv_8/depthwise/depthwise_weights/Assign"
  op: "Assign"
  input: "ssd300/expanded_conv_8/depthwise/depthwise_weights"
  input: "ssd300/expanded_conv_8/depthwise/depthwise_weights/Initializer/random_uniform"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv_8/depthwise/depthwise_weights"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "ssd300/expanded_conv_8/depthwise/depthwise_weights/read"
  op: "Identity"
  input: "ssd300/expanded_conv_8/depthwise/depthwise_weights"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv_8/depthwise/depthwise_weights"
      }
    }
  }
}
node {
  name: "ssd300/expanded_conv_8/depthwise/layer_conv2d/depthwise/Shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\003\000\000\000\003\000\000\000\200\001\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "ssd300/expanded_conv_8/depthwise/layer_conv2d/depthwise/dilation_rate"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "ssd300/expanded_conv_8/depthwise/layer_conv2d/depthwise"
  op: "DepthwiseConv2dNative"
  input: "ssd300/expanded_conv_8/expand/Relu6"
  input: "ssd300/expanded_conv_8/depthwise/depthwise_weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NCHW"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
}
node {
  name: "ssd300/expanded_conv_8/depthwise/BatchNorm/beta/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv_8/depthwise/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 384
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "ssd300/expanded_conv_8/depthwise/BatchNorm/beta"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv_8/depthwise/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 384
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "ssd300/expanded_conv_8/depthwise/BatchNorm/beta/Assign"
  op: "Assign"
  input: "ssd300/expanded_conv_8/depthwise/BatchNorm/beta"
  input: "ssd300/expanded_conv_8/depthwise/BatchNorm/beta/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv_8/depthwise/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "ssd300/expanded_conv_8/depthwise/BatchNorm/beta/read"
  op: "Identity"
  input: "ssd300/expanded_conv_8/depthwise/BatchNorm/beta"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv_8/depthwise/BatchNorm/beta"
      }
    }
  }
}
node {
  name: "ssd300/expanded_conv_8/depthwise/BatchNorm/moving_mean/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv_8/depthwise/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 384
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "ssd300/expanded_conv_8/depthwise/BatchNorm/moving_mean"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv_8/depthwise/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 384
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "ssd300/expanded_conv_8/depthwise/BatchNorm/moving_mean/Assign"
  op: "Assign"
  input: "ssd300/expanded_conv_8/depthwise/BatchNorm/moving_mean"
  input: "ssd300/expanded_conv_8/depthwise/BatchNorm/moving_mean/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv_8/depthwise/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "ssd300/expanded_conv_8/depthwise/BatchNorm/moving_mean/read"
  op: "Identity"
  input: "ssd300/expanded_conv_8/depthwise/BatchNorm/moving_mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv_8/depthwise/BatchNorm/moving_mean"
      }
    }
  }
}
node {
  name: "ssd300/expanded_conv_8/depthwise/BatchNorm/moving_variance/Initializer/ones"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv_8/depthwise/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 384
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "ssd300/expanded_conv_8/depthwise/BatchNorm/moving_variance"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv_8/depthwise/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 384
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "ssd300/expanded_conv_8/depthwise/BatchNorm/moving_variance/Assign"
  op: "Assign"
  input: "ssd300/expanded_conv_8/depthwise/BatchNorm/moving_variance"
  input: "ssd300/expanded_conv_8/depthwise/BatchNorm/moving_variance/Initializer/ones"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv_8/depthwise/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "ssd300/expanded_conv_8/depthwise/BatchNorm/moving_variance/read"
  op: "Identity"
  input: "ssd300/expanded_conv_8/depthwise/BatchNorm/moving_variance"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv_8/depthwise/BatchNorm/moving_variance"
      }
    }
  }
}
node {
  name: "ssd300/expanded_conv_8/depthwise/BatchNorm/Reshape/shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\200\001\000\000\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "ssd300/expanded_conv_8/depthwise/BatchNorm/Reshape"
  op: "Reshape"
  input: "ssd300/expanded_conv_8/depthwise/BatchNorm/beta/read"
  input: "ssd300/expanded_conv_8/depthwise/BatchNorm/Reshape/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "ssd300/expanded_conv_8/depthwise/BatchNorm/Reshape_1/shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\200\001\000\000\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "ssd300/expanded_conv_8/depthwise/BatchNorm/Reshape_1"
  op: "Reshape"
  input: "ssd300/expanded_conv_8/depthwise/BatchNorm/moving_mean/read"
  input: "ssd300/expanded_conv_8/depthwise/BatchNorm/Reshape_1/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "ssd300/expanded_conv_8/depthwise/BatchNorm/Reshape_2/shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\200\001\000\000\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "ssd300/expanded_conv_8/depthwise/BatchNorm/Reshape_2"
  op: "Reshape"
  input: "ssd300/expanded_conv_8/depthwise/BatchNorm/moving_variance/read"
  input: "ssd300/expanded_conv_8/depthwise/BatchNorm/Reshape_2/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "ssd300/expanded_conv_8/depthwise/BatchNorm/batchnorm_1/Add/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0010000000474974513
      }
    }
  }
}
node {
  name: "ssd300/expanded_conv_8/depthwise/BatchNorm/batchnorm_1/Add"
  op: "Add"
  input: "ssd300/expanded_conv_8/depthwise/BatchNorm/Reshape_2"
  input: "ssd300/expanded_conv_8/depthwise/BatchNorm/batchnorm_1/Add/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ssd300/expanded_conv_8/depthwise/BatchNorm/batchnorm_1/Rsqrt"
  op: "Rsqrt"
  input: "ssd300/expanded_conv_8/depthwise/BatchNorm/batchnorm_1/Add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ssd300/expanded_conv_8/depthwise/BatchNorm/batchnorm_1/mul"
  op: "Mul"
  input: "ssd300/expanded_conv_8/depthwise/layer_conv2d/depthwise"
  input: "ssd300/expanded_conv_8/depthwise/BatchNorm/batchnorm_1/Rsqrt"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ssd300/expanded_conv_8/depthwise/BatchNorm/batchnorm_1/mul_1"
  op: "Mul"
  input: "ssd300/expanded_conv_8/depthwise/BatchNorm/Reshape_1"
  input: "ssd300/expanded_conv_8/depthwise/BatchNorm/batchnorm_1/Rsqrt"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ssd300/expanded_conv_8/depthwise/BatchNorm/batchnorm_1/sub"
  op: "Sub"
  input: "ssd300/expanded_conv_8/depthwise/BatchNorm/Reshape"
  input: "ssd300/expanded_conv_8/depthwise/BatchNorm/batchnorm_1/mul_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ssd300/expanded_conv_8/depthwise/BatchNorm/batchnorm_1/Add_1"
  op: "Add"
  input: "ssd300/expanded_conv_8/depthwise/BatchNorm/batchnorm_1/mul"
  input: "ssd300/expanded_conv_8/depthwise/BatchNorm/batchnorm_1/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ssd300/expanded_conv_8/depthwise/Relu6"
  op: "Relu6"
  input: "ssd300/expanded_conv_8/depthwise/BatchNorm/batchnorm_1/Add_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ssd300/expanded_conv_8/project/weights/Initializer/random_uniform/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv_8/project/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000\200\001\000\000@\000\000\000"
      }
    }
  }
}
node {
  name: "ssd300/expanded_conv_8/project/weights/Initializer/random_uniform/min"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv_8/project/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: -0.1157275140285492
      }
    }
  }
}
node {
  name: "ssd300/expanded_conv_8/project/weights/Initializer/random_uniform/max"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv_8/project/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.1157275140285492
      }
    }
  }
}
node {
  name: "ssd300/expanded_conv_8/project/weights/Initializer/random_uniform/RandomUniform"
  op: "RandomUniform"
  input: "ssd300/expanded_conv_8/project/weights/Initializer/random_uniform/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv_8/project/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "ssd300/expanded_conv_8/project/weights/Initializer/random_uniform/sub"
  op: "Sub"
  input: "ssd300/expanded_conv_8/project/weights/Initializer/random_uniform/max"
  input: "ssd300/expanded_conv_8/project/weights/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv_8/project/weights"
      }
    }
  }
}
node {
  name: "ssd300/expanded_conv_8/project/weights/Initializer/random_uniform/mul"
  op: "Mul"
  input: "ssd300/expanded_conv_8/project/weights/Initializer/random_uniform/RandomUniform"
  input: "ssd300/expanded_conv_8/project/weights/Initializer/random_uniform/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv_8/project/weights"
      }
    }
  }
}
node {
  name: "ssd300/expanded_conv_8/project/weights/Initializer/random_uniform"
  op: "Add"
  input: "ssd300/expanded_conv_8/project/weights/Initializer/random_uniform/mul"
  input: "ssd300/expanded_conv_8/project/weights/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv_8/project/weights"
      }
    }
  }
}
node {
  name: "ssd300/expanded_conv_8/project/weights"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv_8/project/weights"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
        dim {
          size: 1
        }
        dim {
          size: 384
        }
        dim {
          size: 64
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "ssd300/expanded_conv_8/project/weights/Assign"
  op: "Assign"
  input: "ssd300/expanded_conv_8/project/weights"
  input: "ssd300/expanded_conv_8/project/weights/Initializer/random_uniform"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv_8/project/weights"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "ssd300/expanded_conv_8/project/weights/read"
  op: "Identity"
  input: "ssd300/expanded_conv_8/project/weights"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv_8/project/weights"
      }
    }
  }
}
node {
  name: "ssd300/expanded_conv_8/project/layer_conv2d/Conv2D"
  op: "Conv2D"
  input: "ssd300/expanded_conv_8/depthwise/Relu6"
  input: "ssd300/expanded_conv_8/project/weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NCHW"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "explicit_paddings"
    value {
      list {
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "ssd300/expanded_conv_8/project/BatchNorm/beta/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv_8/project/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 64
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "ssd300/expanded_conv_8/project/BatchNorm/beta"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv_8/project/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 64
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "ssd300/expanded_conv_8/project/BatchNorm/beta/Assign"
  op: "Assign"
  input: "ssd300/expanded_conv_8/project/BatchNorm/beta"
  input: "ssd300/expanded_conv_8/project/BatchNorm/beta/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv_8/project/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "ssd300/expanded_conv_8/project/BatchNorm/beta/read"
  op: "Identity"
  input: "ssd300/expanded_conv_8/project/BatchNorm/beta"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv_8/project/BatchNorm/beta"
      }
    }
  }
}
node {
  name: "ssd300/expanded_conv_8/project/BatchNorm/moving_mean/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv_8/project/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 64
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "ssd300/expanded_conv_8/project/BatchNorm/moving_mean"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv_8/project/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 64
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "ssd300/expanded_conv_8/project/BatchNorm/moving_mean/Assign"
  op: "Assign"
  input: "ssd300/expanded_conv_8/project/BatchNorm/moving_mean"
  input: "ssd300/expanded_conv_8/project/BatchNorm/moving_mean/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv_8/project/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "ssd300/expanded_conv_8/project/BatchNorm/moving_mean/read"
  op: "Identity"
  input: "ssd300/expanded_conv_8/project/BatchNorm/moving_mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv_8/project/BatchNorm/moving_mean"
      }
    }
  }
}
node {
  name: "ssd300/expanded_conv_8/project/BatchNorm/moving_variance/Initializer/ones"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv_8/project/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 64
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "ssd300/expanded_conv_8/project/BatchNorm/moving_variance"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv_8/project/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 64
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "ssd300/expanded_conv_8/project/BatchNorm/moving_variance/Assign"
  op: "Assign"
  input: "ssd300/expanded_conv_8/project/BatchNorm/moving_variance"
  input: "ssd300/expanded_conv_8/project/BatchNorm/moving_variance/Initializer/ones"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv_8/project/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "ssd300/expanded_conv_8/project/BatchNorm/moving_variance/read"
  op: "Identity"
  input: "ssd300/expanded_conv_8/project/BatchNorm/moving_variance"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv_8/project/BatchNorm/moving_variance"
      }
    }
  }
}
node {
  name: "ssd300/expanded_conv_8/project/BatchNorm/Reshape/shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000@\000\000\000\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "ssd300/expanded_conv_8/project/BatchNorm/Reshape"
  op: "Reshape"
  input: "ssd300/expanded_conv_8/project/BatchNorm/beta/read"
  input: "ssd300/expanded_conv_8/project/BatchNorm/Reshape/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "ssd300/expanded_conv_8/project/BatchNorm/Reshape_1/shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000@\000\000\000\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "ssd300/expanded_conv_8/project/BatchNorm/Reshape_1"
  op: "Reshape"
  input: "ssd300/expanded_conv_8/project/BatchNorm/moving_mean/read"
  input: "ssd300/expanded_conv_8/project/BatchNorm/Reshape_1/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "ssd300/expanded_conv_8/project/BatchNorm/Reshape_2/shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000@\000\000\000\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "ssd300/expanded_conv_8/project/BatchNorm/Reshape_2"
  op: "Reshape"
  input: "ssd300/expanded_conv_8/project/BatchNorm/moving_variance/read"
  input: "ssd300/expanded_conv_8/project/BatchNorm/Reshape_2/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "ssd300/expanded_conv_8/project/BatchNorm/batchnorm_1/Add/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0010000000474974513
      }
    }
  }
}
node {
  name: "ssd300/expanded_conv_8/project/BatchNorm/batchnorm_1/Add"
  op: "Add"
  input: "ssd300/expanded_conv_8/project/BatchNorm/Reshape_2"
  input: "ssd300/expanded_conv_8/project/BatchNorm/batchnorm_1/Add/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ssd300/expanded_conv_8/project/BatchNorm/batchnorm_1/Rsqrt"
  op: "Rsqrt"
  input: "ssd300/expanded_conv_8/project/BatchNorm/batchnorm_1/Add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ssd300/expanded_conv_8/project/BatchNorm/batchnorm_1/mul"
  op: "Mul"
  input: "ssd300/expanded_conv_8/project/layer_conv2d/Conv2D"
  input: "ssd300/expanded_conv_8/project/BatchNorm/batchnorm_1/Rsqrt"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ssd300/expanded_conv_8/project/BatchNorm/batchnorm_1/mul_1"
  op: "Mul"
  input: "ssd300/expanded_conv_8/project/BatchNorm/Reshape_1"
  input: "ssd300/expanded_conv_8/project/BatchNorm/batchnorm_1/Rsqrt"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ssd300/expanded_conv_8/project/BatchNorm/batchnorm_1/sub"
  op: "Sub"
  input: "ssd300/expanded_conv_8/project/BatchNorm/Reshape"
  input: "ssd300/expanded_conv_8/project/BatchNorm/batchnorm_1/mul_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ssd300/expanded_conv_8/project/BatchNorm/batchnorm_1/Add_1"
  op: "Add"
  input: "ssd300/expanded_conv_8/project/BatchNorm/batchnorm_1/mul"
  input: "ssd300/expanded_conv_8/project/BatchNorm/batchnorm_1/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ssd300/expanded_conv_8/Add"
  op: "Add"
  input: "ssd300/expanded_conv_8/project/BatchNorm/batchnorm_1/Add_1"
  input: "ssd300/expanded_conv_7/Add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ssd300/expanded_conv_9/expand/weights/Initializer/random_uniform/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv_9/expand/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000@\000\000\000\200\001\000\000"
      }
    }
  }
}
node {
  name: "ssd300/expanded_conv_9/expand/weights/Initializer/random_uniform/min"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv_9/expand/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: -0.1157275140285492
      }
    }
  }
}
node {
  name: "ssd300/expanded_conv_9/expand/weights/Initializer/random_uniform/max"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv_9/expand/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.1157275140285492
      }
    }
  }
}
node {
  name: "ssd300/expanded_conv_9/expand/weights/Initializer/random_uniform/RandomUniform"
  op: "RandomUniform"
  input: "ssd300/expanded_conv_9/expand/weights/Initializer/random_uniform/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv_9/expand/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "ssd300/expanded_conv_9/expand/weights/Initializer/random_uniform/sub"
  op: "Sub"
  input: "ssd300/expanded_conv_9/expand/weights/Initializer/random_uniform/max"
  input: "ssd300/expanded_conv_9/expand/weights/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv_9/expand/weights"
      }
    }
  }
}
node {
  name: "ssd300/expanded_conv_9/expand/weights/Initializer/random_uniform/mul"
  op: "Mul"
  input: "ssd300/expanded_conv_9/expand/weights/Initializer/random_uniform/RandomUniform"
  input: "ssd300/expanded_conv_9/expand/weights/Initializer/random_uniform/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv_9/expand/weights"
      }
    }
  }
}
node {
  name: "ssd300/expanded_conv_9/expand/weights/Initializer/random_uniform"
  op: "Add"
  input: "ssd300/expanded_conv_9/expand/weights/Initializer/random_uniform/mul"
  input: "ssd300/expanded_conv_9/expand/weights/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv_9/expand/weights"
      }
    }
  }
}
node {
  name: "ssd300/expanded_conv_9/expand/weights"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv_9/expand/weights"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
        dim {
          size: 1
        }
        dim {
          size: 64
        }
        dim {
          size: 384
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "ssd300/expanded_conv_9/expand/weights/Assign"
  op: "Assign"
  input: "ssd300/expanded_conv_9/expand/weights"
  input: "ssd300/expanded_conv_9/expand/weights/Initializer/random_uniform"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv_9/expand/weights"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "ssd300/expanded_conv_9/expand/weights/read"
  op: "Identity"
  input: "ssd300/expanded_conv_9/expand/weights"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv_9/expand/weights"
      }
    }
  }
}
node {
  name: "ssd300/expanded_conv_9/expand/layer_conv2d/Conv2D"
  op: "Conv2D"
  input: "ssd300/expanded_conv_8/Add"
  input: "ssd300/expanded_conv_9/expand/weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NCHW"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "explicit_paddings"
    value {
      list {
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "ssd300/expanded_conv_9/expand/BatchNorm/beta/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv_9/expand/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 384
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "ssd300/expanded_conv_9/expand/BatchNorm/beta"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv_9/expand/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 384
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "ssd300/expanded_conv_9/expand/BatchNorm/beta/Assign"
  op: "Assign"
  input: "ssd300/expanded_conv_9/expand/BatchNorm/beta"
  input: "ssd300/expanded_conv_9/expand/BatchNorm/beta/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv_9/expand/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "ssd300/expanded_conv_9/expand/BatchNorm/beta/read"
  op: "Identity"
  input: "ssd300/expanded_conv_9/expand/BatchNorm/beta"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv_9/expand/BatchNorm/beta"
      }
    }
  }
}
node {
  name: "ssd300/expanded_conv_9/expand/BatchNorm/moving_mean/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv_9/expand/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 384
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "ssd300/expanded_conv_9/expand/BatchNorm/moving_mean"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv_9/expand/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 384
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "ssd300/expanded_conv_9/expand/BatchNorm/moving_mean/Assign"
  op: "Assign"
  input: "ssd300/expanded_conv_9/expand/BatchNorm/moving_mean"
  input: "ssd300/expanded_conv_9/expand/BatchNorm/moving_mean/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv_9/expand/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "ssd300/expanded_conv_9/expand/BatchNorm/moving_mean/read"
  op: "Identity"
  input: "ssd300/expanded_conv_9/expand/BatchNorm/moving_mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv_9/expand/BatchNorm/moving_mean"
      }
    }
  }
}
node {
  name: "ssd300/expanded_conv_9/expand/BatchNorm/moving_variance/Initializer/ones"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv_9/expand/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 384
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "ssd300/expanded_conv_9/expand/BatchNorm/moving_variance"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv_9/expand/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 384
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "ssd300/expanded_conv_9/expand/BatchNorm/moving_variance/Assign"
  op: "Assign"
  input: "ssd300/expanded_conv_9/expand/BatchNorm/moving_variance"
  input: "ssd300/expanded_conv_9/expand/BatchNorm/moving_variance/Initializer/ones"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv_9/expand/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "ssd300/expanded_conv_9/expand/BatchNorm/moving_variance/read"
  op: "Identity"
  input: "ssd300/expanded_conv_9/expand/BatchNorm/moving_variance"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv_9/expand/BatchNorm/moving_variance"
      }
    }
  }
}
node {
  name: "ssd300/expanded_conv_9/expand/BatchNorm/Reshape/shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\200\001\000\000\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "ssd300/expanded_conv_9/expand/BatchNorm/Reshape"
  op: "Reshape"
  input: "ssd300/expanded_conv_9/expand/BatchNorm/beta/read"
  input: "ssd300/expanded_conv_9/expand/BatchNorm/Reshape/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "ssd300/expanded_conv_9/expand/BatchNorm/Reshape_1/shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\200\001\000\000\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "ssd300/expanded_conv_9/expand/BatchNorm/Reshape_1"
  op: "Reshape"
  input: "ssd300/expanded_conv_9/expand/BatchNorm/moving_mean/read"
  input: "ssd300/expanded_conv_9/expand/BatchNorm/Reshape_1/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "ssd300/expanded_conv_9/expand/BatchNorm/Reshape_2/shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\200\001\000\000\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "ssd300/expanded_conv_9/expand/BatchNorm/Reshape_2"
  op: "Reshape"
  input: "ssd300/expanded_conv_9/expand/BatchNorm/moving_variance/read"
  input: "ssd300/expanded_conv_9/expand/BatchNorm/Reshape_2/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "ssd300/expanded_conv_9/expand/BatchNorm/batchnorm_1/Add/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0010000000474974513
      }
    }
  }
}
node {
  name: "ssd300/expanded_conv_9/expand/BatchNorm/batchnorm_1/Add"
  op: "Add"
  input: "ssd300/expanded_conv_9/expand/BatchNorm/Reshape_2"
  input: "ssd300/expanded_conv_9/expand/BatchNorm/batchnorm_1/Add/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ssd300/expanded_conv_9/expand/BatchNorm/batchnorm_1/Rsqrt"
  op: "Rsqrt"
  input: "ssd300/expanded_conv_9/expand/BatchNorm/batchnorm_1/Add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ssd300/expanded_conv_9/expand/BatchNorm/batchnorm_1/mul"
  op: "Mul"
  input: "ssd300/expanded_conv_9/expand/layer_conv2d/Conv2D"
  input: "ssd300/expanded_conv_9/expand/BatchNorm/batchnorm_1/Rsqrt"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ssd300/expanded_conv_9/expand/BatchNorm/batchnorm_1/mul_1"
  op: "Mul"
  input: "ssd300/expanded_conv_9/expand/BatchNorm/Reshape_1"
  input: "ssd300/expanded_conv_9/expand/BatchNorm/batchnorm_1/Rsqrt"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ssd300/expanded_conv_9/expand/BatchNorm/batchnorm_1/sub"
  op: "Sub"
  input: "ssd300/expanded_conv_9/expand/BatchNorm/Reshape"
  input: "ssd300/expanded_conv_9/expand/BatchNorm/batchnorm_1/mul_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ssd300/expanded_conv_9/expand/BatchNorm/batchnorm_1/Add_1"
  op: "Add"
  input: "ssd300/expanded_conv_9/expand/BatchNorm/batchnorm_1/mul"
  input: "ssd300/expanded_conv_9/expand/BatchNorm/batchnorm_1/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ssd300/expanded_conv_9/expand/Relu6"
  op: "Relu6"
  input: "ssd300/expanded_conv_9/expand/BatchNorm/batchnorm_1/Add_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ssd300/expanded_conv_9/depthwise/depthwise_weights/Initializer/random_uniform/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv_9/depthwise/depthwise_weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\003\000\000\000\003\000\000\000\200\001\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "ssd300/expanded_conv_9/depthwise/depthwise_weights/Initializer/random_uniform/min"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv_9/depthwise/depthwise_weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: -0.04161251708865166
      }
    }
  }
}
node {
  name: "ssd300/expanded_conv_9/depthwise/depthwise_weights/Initializer/random_uniform/max"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv_9/depthwise/depthwise_weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.04161251708865166
      }
    }
  }
}
node {
  name: "ssd300/expanded_conv_9/depthwise/depthwise_weights/Initializer/random_uniform/RandomUniform"
  op: "RandomUniform"
  input: "ssd300/expanded_conv_9/depthwise/depthwise_weights/Initializer/random_uniform/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv_9/depthwise/depthwise_weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "ssd300/expanded_conv_9/depthwise/depthwise_weights/Initializer/random_uniform/sub"
  op: "Sub"
  input: "ssd300/expanded_conv_9/depthwise/depthwise_weights/Initializer/random_uniform/max"
  input: "ssd300/expanded_conv_9/depthwise/depthwise_weights/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv_9/depthwise/depthwise_weights"
      }
    }
  }
}
node {
  name: "ssd300/expanded_conv_9/depthwise/depthwise_weights/Initializer/random_uniform/mul"
  op: "Mul"
  input: "ssd300/expanded_conv_9/depthwise/depthwise_weights/Initializer/random_uniform/RandomUniform"
  input: "ssd300/expanded_conv_9/depthwise/depthwise_weights/Initializer/random_uniform/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv_9/depthwise/depthwise_weights"
      }
    }
  }
}
node {
  name: "ssd300/expanded_conv_9/depthwise/depthwise_weights/Initializer/random_uniform"
  op: "Add"
  input: "ssd300/expanded_conv_9/depthwise/depthwise_weights/Initializer/random_uniform/mul"
  input: "ssd300/expanded_conv_9/depthwise/depthwise_weights/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv_9/depthwise/depthwise_weights"
      }
    }
  }
}
node {
  name: "ssd300/expanded_conv_9/depthwise/depthwise_weights"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv_9/depthwise/depthwise_weights"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 3
        }
        dim {
          size: 3
        }
        dim {
          size: 384
        }
        dim {
          size: 1
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "ssd300/expanded_conv_9/depthwise/depthwise_weights/Assign"
  op: "Assign"
  input: "ssd300/expanded_conv_9/depthwise/depthwise_weights"
  input: "ssd300/expanded_conv_9/depthwise/depthwise_weights/Initializer/random_uniform"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv_9/depthwise/depthwise_weights"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "ssd300/expanded_conv_9/depthwise/depthwise_weights/read"
  op: "Identity"
  input: "ssd300/expanded_conv_9/depthwise/depthwise_weights"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv_9/depthwise/depthwise_weights"
      }
    }
  }
}
node {
  name: "ssd300/expanded_conv_9/depthwise/layer_conv2d/depthwise/Shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\003\000\000\000\003\000\000\000\200\001\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "ssd300/expanded_conv_9/depthwise/layer_conv2d/depthwise/dilation_rate"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "ssd300/expanded_conv_9/depthwise/layer_conv2d/depthwise"
  op: "DepthwiseConv2dNative"
  input: "ssd300/expanded_conv_9/expand/Relu6"
  input: "ssd300/expanded_conv_9/depthwise/depthwise_weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NCHW"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
}
node {
  name: "ssd300/expanded_conv_9/depthwise/BatchNorm/beta/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv_9/depthwise/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 384
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "ssd300/expanded_conv_9/depthwise/BatchNorm/beta"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv_9/depthwise/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 384
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "ssd300/expanded_conv_9/depthwise/BatchNorm/beta/Assign"
  op: "Assign"
  input: "ssd300/expanded_conv_9/depthwise/BatchNorm/beta"
  input: "ssd300/expanded_conv_9/depthwise/BatchNorm/beta/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv_9/depthwise/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "ssd300/expanded_conv_9/depthwise/BatchNorm/beta/read"
  op: "Identity"
  input: "ssd300/expanded_conv_9/depthwise/BatchNorm/beta"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv_9/depthwise/BatchNorm/beta"
      }
    }
  }
}
node {
  name: "ssd300/expanded_conv_9/depthwise/BatchNorm/moving_mean/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv_9/depthwise/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 384
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "ssd300/expanded_conv_9/depthwise/BatchNorm/moving_mean"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv_9/depthwise/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 384
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "ssd300/expanded_conv_9/depthwise/BatchNorm/moving_mean/Assign"
  op: "Assign"
  input: "ssd300/expanded_conv_9/depthwise/BatchNorm/moving_mean"
  input: "ssd300/expanded_conv_9/depthwise/BatchNorm/moving_mean/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv_9/depthwise/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "ssd300/expanded_conv_9/depthwise/BatchNorm/moving_mean/read"
  op: "Identity"
  input: "ssd300/expanded_conv_9/depthwise/BatchNorm/moving_mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv_9/depthwise/BatchNorm/moving_mean"
      }
    }
  }
}
node {
  name: "ssd300/expanded_conv_9/depthwise/BatchNorm/moving_variance/Initializer/ones"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv_9/depthwise/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 384
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "ssd300/expanded_conv_9/depthwise/BatchNorm/moving_variance"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv_9/depthwise/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 384
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "ssd300/expanded_conv_9/depthwise/BatchNorm/moving_variance/Assign"
  op: "Assign"
  input: "ssd300/expanded_conv_9/depthwise/BatchNorm/moving_variance"
  input: "ssd300/expanded_conv_9/depthwise/BatchNorm/moving_variance/Initializer/ones"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv_9/depthwise/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "ssd300/expanded_conv_9/depthwise/BatchNorm/moving_variance/read"
  op: "Identity"
  input: "ssd300/expanded_conv_9/depthwise/BatchNorm/moving_variance"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv_9/depthwise/BatchNorm/moving_variance"
      }
    }
  }
}
node {
  name: "ssd300/expanded_conv_9/depthwise/BatchNorm/Reshape/shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\200\001\000\000\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "ssd300/expanded_conv_9/depthwise/BatchNorm/Reshape"
  op: "Reshape"
  input: "ssd300/expanded_conv_9/depthwise/BatchNorm/beta/read"
  input: "ssd300/expanded_conv_9/depthwise/BatchNorm/Reshape/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "ssd300/expanded_conv_9/depthwise/BatchNorm/Reshape_1/shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\200\001\000\000\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "ssd300/expanded_conv_9/depthwise/BatchNorm/Reshape_1"
  op: "Reshape"
  input: "ssd300/expanded_conv_9/depthwise/BatchNorm/moving_mean/read"
  input: "ssd300/expanded_conv_9/depthwise/BatchNorm/Reshape_1/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "ssd300/expanded_conv_9/depthwise/BatchNorm/Reshape_2/shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\200\001\000\000\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "ssd300/expanded_conv_9/depthwise/BatchNorm/Reshape_2"
  op: "Reshape"
  input: "ssd300/expanded_conv_9/depthwise/BatchNorm/moving_variance/read"
  input: "ssd300/expanded_conv_9/depthwise/BatchNorm/Reshape_2/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "ssd300/expanded_conv_9/depthwise/BatchNorm/batchnorm_1/Add/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0010000000474974513
      }
    }
  }
}
node {
  name: "ssd300/expanded_conv_9/depthwise/BatchNorm/batchnorm_1/Add"
  op: "Add"
  input: "ssd300/expanded_conv_9/depthwise/BatchNorm/Reshape_2"
  input: "ssd300/expanded_conv_9/depthwise/BatchNorm/batchnorm_1/Add/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ssd300/expanded_conv_9/depthwise/BatchNorm/batchnorm_1/Rsqrt"
  op: "Rsqrt"
  input: "ssd300/expanded_conv_9/depthwise/BatchNorm/batchnorm_1/Add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ssd300/expanded_conv_9/depthwise/BatchNorm/batchnorm_1/mul"
  op: "Mul"
  input: "ssd300/expanded_conv_9/depthwise/layer_conv2d/depthwise"
  input: "ssd300/expanded_conv_9/depthwise/BatchNorm/batchnorm_1/Rsqrt"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ssd300/expanded_conv_9/depthwise/BatchNorm/batchnorm_1/mul_1"
  op: "Mul"
  input: "ssd300/expanded_conv_9/depthwise/BatchNorm/Reshape_1"
  input: "ssd300/expanded_conv_9/depthwise/BatchNorm/batchnorm_1/Rsqrt"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ssd300/expanded_conv_9/depthwise/BatchNorm/batchnorm_1/sub"
  op: "Sub"
  input: "ssd300/expanded_conv_9/depthwise/BatchNorm/Reshape"
  input: "ssd300/expanded_conv_9/depthwise/BatchNorm/batchnorm_1/mul_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ssd300/expanded_conv_9/depthwise/BatchNorm/batchnorm_1/Add_1"
  op: "Add"
  input: "ssd300/expanded_conv_9/depthwise/BatchNorm/batchnorm_1/mul"
  input: "ssd300/expanded_conv_9/depthwise/BatchNorm/batchnorm_1/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ssd300/expanded_conv_9/depthwise/Relu6"
  op: "Relu6"
  input: "ssd300/expanded_conv_9/depthwise/BatchNorm/batchnorm_1/Add_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ssd300/expanded_conv_9/project/weights/Initializer/random_uniform/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv_9/project/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000\200\001\000\000@\000\000\000"
      }
    }
  }
}
node {
  name: "ssd300/expanded_conv_9/project/weights/Initializer/random_uniform/min"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv_9/project/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: -0.1157275140285492
      }
    }
  }
}
node {
  name: "ssd300/expanded_conv_9/project/weights/Initializer/random_uniform/max"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv_9/project/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.1157275140285492
      }
    }
  }
}
node {
  name: "ssd300/expanded_conv_9/project/weights/Initializer/random_uniform/RandomUniform"
  op: "RandomUniform"
  input: "ssd300/expanded_conv_9/project/weights/Initializer/random_uniform/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv_9/project/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "ssd300/expanded_conv_9/project/weights/Initializer/random_uniform/sub"
  op: "Sub"
  input: "ssd300/expanded_conv_9/project/weights/Initializer/random_uniform/max"
  input: "ssd300/expanded_conv_9/project/weights/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv_9/project/weights"
      }
    }
  }
}
node {
  name: "ssd300/expanded_conv_9/project/weights/Initializer/random_uniform/mul"
  op: "Mul"
  input: "ssd300/expanded_conv_9/project/weights/Initializer/random_uniform/RandomUniform"
  input: "ssd300/expanded_conv_9/project/weights/Initializer/random_uniform/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv_9/project/weights"
      }
    }
  }
}
node {
  name: "ssd300/expanded_conv_9/project/weights/Initializer/random_uniform"
  op: "Add"
  input: "ssd300/expanded_conv_9/project/weights/Initializer/random_uniform/mul"
  input: "ssd300/expanded_conv_9/project/weights/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv_9/project/weights"
      }
    }
  }
}
node {
  name: "ssd300/expanded_conv_9/project/weights"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv_9/project/weights"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
        dim {
          size: 1
        }
        dim {
          size: 384
        }
        dim {
          size: 64
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "ssd300/expanded_conv_9/project/weights/Assign"
  op: "Assign"
  input: "ssd300/expanded_conv_9/project/weights"
  input: "ssd300/expanded_conv_9/project/weights/Initializer/random_uniform"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv_9/project/weights"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "ssd300/expanded_conv_9/project/weights/read"
  op: "Identity"
  input: "ssd300/expanded_conv_9/project/weights"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv_9/project/weights"
      }
    }
  }
}
node {
  name: "ssd300/expanded_conv_9/project/layer_conv2d/Conv2D"
  op: "Conv2D"
  input: "ssd300/expanded_conv_9/depthwise/Relu6"
  input: "ssd300/expanded_conv_9/project/weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NCHW"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "explicit_paddings"
    value {
      list {
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "ssd300/expanded_conv_9/project/BatchNorm/beta/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv_9/project/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 64
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "ssd300/expanded_conv_9/project/BatchNorm/beta"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv_9/project/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 64
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "ssd300/expanded_conv_9/project/BatchNorm/beta/Assign"
  op: "Assign"
  input: "ssd300/expanded_conv_9/project/BatchNorm/beta"
  input: "ssd300/expanded_conv_9/project/BatchNorm/beta/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv_9/project/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "ssd300/expanded_conv_9/project/BatchNorm/beta/read"
  op: "Identity"
  input: "ssd300/expanded_conv_9/project/BatchNorm/beta"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv_9/project/BatchNorm/beta"
      }
    }
  }
}
node {
  name: "ssd300/expanded_conv_9/project/BatchNorm/moving_mean/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv_9/project/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 64
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "ssd300/expanded_conv_9/project/BatchNorm/moving_mean"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv_9/project/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 64
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "ssd300/expanded_conv_9/project/BatchNorm/moving_mean/Assign"
  op: "Assign"
  input: "ssd300/expanded_conv_9/project/BatchNorm/moving_mean"
  input: "ssd300/expanded_conv_9/project/BatchNorm/moving_mean/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv_9/project/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "ssd300/expanded_conv_9/project/BatchNorm/moving_mean/read"
  op: "Identity"
  input: "ssd300/expanded_conv_9/project/BatchNorm/moving_mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv_9/project/BatchNorm/moving_mean"
      }
    }
  }
}
node {
  name: "ssd300/expanded_conv_9/project/BatchNorm/moving_variance/Initializer/ones"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv_9/project/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 64
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "ssd300/expanded_conv_9/project/BatchNorm/moving_variance"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv_9/project/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 64
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "ssd300/expanded_conv_9/project/BatchNorm/moving_variance/Assign"
  op: "Assign"
  input: "ssd300/expanded_conv_9/project/BatchNorm/moving_variance"
  input: "ssd300/expanded_conv_9/project/BatchNorm/moving_variance/Initializer/ones"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv_9/project/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "ssd300/expanded_conv_9/project/BatchNorm/moving_variance/read"
  op: "Identity"
  input: "ssd300/expanded_conv_9/project/BatchNorm/moving_variance"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv_9/project/BatchNorm/moving_variance"
      }
    }
  }
}
node {
  name: "ssd300/expanded_conv_9/project/BatchNorm/Reshape/shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000@\000\000\000\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "ssd300/expanded_conv_9/project/BatchNorm/Reshape"
  op: "Reshape"
  input: "ssd300/expanded_conv_9/project/BatchNorm/beta/read"
  input: "ssd300/expanded_conv_9/project/BatchNorm/Reshape/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "ssd300/expanded_conv_9/project/BatchNorm/Reshape_1/shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000@\000\000\000\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "ssd300/expanded_conv_9/project/BatchNorm/Reshape_1"
  op: "Reshape"
  input: "ssd300/expanded_conv_9/project/BatchNorm/moving_mean/read"
  input: "ssd300/expanded_conv_9/project/BatchNorm/Reshape_1/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "ssd300/expanded_conv_9/project/BatchNorm/Reshape_2/shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000@\000\000\000\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "ssd300/expanded_conv_9/project/BatchNorm/Reshape_2"
  op: "Reshape"
  input: "ssd300/expanded_conv_9/project/BatchNorm/moving_variance/read"
  input: "ssd300/expanded_conv_9/project/BatchNorm/Reshape_2/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "ssd300/expanded_conv_9/project/BatchNorm/batchnorm_1/Add/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0010000000474974513
      }
    }
  }
}
node {
  name: "ssd300/expanded_conv_9/project/BatchNorm/batchnorm_1/Add"
  op: "Add"
  input: "ssd300/expanded_conv_9/project/BatchNorm/Reshape_2"
  input: "ssd300/expanded_conv_9/project/BatchNorm/batchnorm_1/Add/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ssd300/expanded_conv_9/project/BatchNorm/batchnorm_1/Rsqrt"
  op: "Rsqrt"
  input: "ssd300/expanded_conv_9/project/BatchNorm/batchnorm_1/Add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ssd300/expanded_conv_9/project/BatchNorm/batchnorm_1/mul"
  op: "Mul"
  input: "ssd300/expanded_conv_9/project/layer_conv2d/Conv2D"
  input: "ssd300/expanded_conv_9/project/BatchNorm/batchnorm_1/Rsqrt"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ssd300/expanded_conv_9/project/BatchNorm/batchnorm_1/mul_1"
  op: "Mul"
  input: "ssd300/expanded_conv_9/project/BatchNorm/Reshape_1"
  input: "ssd300/expanded_conv_9/project/BatchNorm/batchnorm_1/Rsqrt"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ssd300/expanded_conv_9/project/BatchNorm/batchnorm_1/sub"
  op: "Sub"
  input: "ssd300/expanded_conv_9/project/BatchNorm/Reshape"
  input: "ssd300/expanded_conv_9/project/BatchNorm/batchnorm_1/mul_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ssd300/expanded_conv_9/project/BatchNorm/batchnorm_1/Add_1"
  op: "Add"
  input: "ssd300/expanded_conv_9/project/BatchNorm/batchnorm_1/mul"
  input: "ssd300/expanded_conv_9/project/BatchNorm/batchnorm_1/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ssd300/expanded_conv_9/Add"
  op: "Add"
  input: "ssd300/expanded_conv_9/project/BatchNorm/batchnorm_1/Add_1"
  input: "ssd300/expanded_conv_8/Add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ssd300/expanded_conv_10/expand/weights/Initializer/random_uniform/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv_10/expand/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000@\000\000\000\200\001\000\000"
      }
    }
  }
}
node {
  name: "ssd300/expanded_conv_10/expand/weights/Initializer/random_uniform/min"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv_10/expand/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: -0.1157275140285492
      }
    }
  }
}
node {
  name: "ssd300/expanded_conv_10/expand/weights/Initializer/random_uniform/max"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv_10/expand/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.1157275140285492
      }
    }
  }
}
node {
  name: "ssd300/expanded_conv_10/expand/weights/Initializer/random_uniform/RandomUniform"
  op: "RandomUniform"
  input: "ssd300/expanded_conv_10/expand/weights/Initializer/random_uniform/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv_10/expand/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "ssd300/expanded_conv_10/expand/weights/Initializer/random_uniform/sub"
  op: "Sub"
  input: "ssd300/expanded_conv_10/expand/weights/Initializer/random_uniform/max"
  input: "ssd300/expanded_conv_10/expand/weights/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv_10/expand/weights"
      }
    }
  }
}
node {
  name: "ssd300/expanded_conv_10/expand/weights/Initializer/random_uniform/mul"
  op: "Mul"
  input: "ssd300/expanded_conv_10/expand/weights/Initializer/random_uniform/RandomUniform"
  input: "ssd300/expanded_conv_10/expand/weights/Initializer/random_uniform/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv_10/expand/weights"
      }
    }
  }
}
node {
  name: "ssd300/expanded_conv_10/expand/weights/Initializer/random_uniform"
  op: "Add"
  input: "ssd300/expanded_conv_10/expand/weights/Initializer/random_uniform/mul"
  input: "ssd300/expanded_conv_10/expand/weights/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv_10/expand/weights"
      }
    }
  }
}
node {
  name: "ssd300/expanded_conv_10/expand/weights"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv_10/expand/weights"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
        dim {
          size: 1
        }
        dim {
          size: 64
        }
        dim {
          size: 384
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "ssd300/expanded_conv_10/expand/weights/Assign"
  op: "Assign"
  input: "ssd300/expanded_conv_10/expand/weights"
  input: "ssd300/expanded_conv_10/expand/weights/Initializer/random_uniform"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv_10/expand/weights"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "ssd300/expanded_conv_10/expand/weights/read"
  op: "Identity"
  input: "ssd300/expanded_conv_10/expand/weights"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv_10/expand/weights"
      }
    }
  }
}
node {
  name: "ssd300/expanded_conv_10/expand/layer_conv2d/Conv2D"
  op: "Conv2D"
  input: "ssd300/expanded_conv_9/Add"
  input: "ssd300/expanded_conv_10/expand/weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NCHW"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "explicit_paddings"
    value {
      list {
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "ssd300/expanded_conv_10/expand/BatchNorm/beta/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv_10/expand/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 384
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "ssd300/expanded_conv_10/expand/BatchNorm/beta"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv_10/expand/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 384
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "ssd300/expanded_conv_10/expand/BatchNorm/beta/Assign"
  op: "Assign"
  input: "ssd300/expanded_conv_10/expand/BatchNorm/beta"
  input: "ssd300/expanded_conv_10/expand/BatchNorm/beta/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv_10/expand/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "ssd300/expanded_conv_10/expand/BatchNorm/beta/read"
  op: "Identity"
  input: "ssd300/expanded_conv_10/expand/BatchNorm/beta"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv_10/expand/BatchNorm/beta"
      }
    }
  }
}
node {
  name: "ssd300/expanded_conv_10/expand/BatchNorm/moving_mean/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv_10/expand/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 384
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "ssd300/expanded_conv_10/expand/BatchNorm/moving_mean"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv_10/expand/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 384
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "ssd300/expanded_conv_10/expand/BatchNorm/moving_mean/Assign"
  op: "Assign"
  input: "ssd300/expanded_conv_10/expand/BatchNorm/moving_mean"
  input: "ssd300/expanded_conv_10/expand/BatchNorm/moving_mean/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv_10/expand/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "ssd300/expanded_conv_10/expand/BatchNorm/moving_mean/read"
  op: "Identity"
  input: "ssd300/expanded_conv_10/expand/BatchNorm/moving_mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv_10/expand/BatchNorm/moving_mean"
      }
    }
  }
}
node {
  name: "ssd300/expanded_conv_10/expand/BatchNorm/moving_variance/Initializer/ones"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv_10/expand/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 384
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "ssd300/expanded_conv_10/expand/BatchNorm/moving_variance"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv_10/expand/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 384
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "ssd300/expanded_conv_10/expand/BatchNorm/moving_variance/Assign"
  op: "Assign"
  input: "ssd300/expanded_conv_10/expand/BatchNorm/moving_variance"
  input: "ssd300/expanded_conv_10/expand/BatchNorm/moving_variance/Initializer/ones"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv_10/expand/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "ssd300/expanded_conv_10/expand/BatchNorm/moving_variance/read"
  op: "Identity"
  input: "ssd300/expanded_conv_10/expand/BatchNorm/moving_variance"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv_10/expand/BatchNorm/moving_variance"
      }
    }
  }
}
node {
  name: "ssd300/expanded_conv_10/expand/BatchNorm/Reshape/shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\200\001\000\000\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "ssd300/expanded_conv_10/expand/BatchNorm/Reshape"
  op: "Reshape"
  input: "ssd300/expanded_conv_10/expand/BatchNorm/beta/read"
  input: "ssd300/expanded_conv_10/expand/BatchNorm/Reshape/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "ssd300/expanded_conv_10/expand/BatchNorm/Reshape_1/shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\200\001\000\000\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "ssd300/expanded_conv_10/expand/BatchNorm/Reshape_1"
  op: "Reshape"
  input: "ssd300/expanded_conv_10/expand/BatchNorm/moving_mean/read"
  input: "ssd300/expanded_conv_10/expand/BatchNorm/Reshape_1/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "ssd300/expanded_conv_10/expand/BatchNorm/Reshape_2/shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\200\001\000\000\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "ssd300/expanded_conv_10/expand/BatchNorm/Reshape_2"
  op: "Reshape"
  input: "ssd300/expanded_conv_10/expand/BatchNorm/moving_variance/read"
  input: "ssd300/expanded_conv_10/expand/BatchNorm/Reshape_2/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "ssd300/expanded_conv_10/expand/BatchNorm/batchnorm_1/Add/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0010000000474974513
      }
    }
  }
}
node {
  name: "ssd300/expanded_conv_10/expand/BatchNorm/batchnorm_1/Add"
  op: "Add"
  input: "ssd300/expanded_conv_10/expand/BatchNorm/Reshape_2"
  input: "ssd300/expanded_conv_10/expand/BatchNorm/batchnorm_1/Add/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ssd300/expanded_conv_10/expand/BatchNorm/batchnorm_1/Rsqrt"
  op: "Rsqrt"
  input: "ssd300/expanded_conv_10/expand/BatchNorm/batchnorm_1/Add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ssd300/expanded_conv_10/expand/BatchNorm/batchnorm_1/mul"
  op: "Mul"
  input: "ssd300/expanded_conv_10/expand/layer_conv2d/Conv2D"
  input: "ssd300/expanded_conv_10/expand/BatchNorm/batchnorm_1/Rsqrt"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ssd300/expanded_conv_10/expand/BatchNorm/batchnorm_1/mul_1"
  op: "Mul"
  input: "ssd300/expanded_conv_10/expand/BatchNorm/Reshape_1"
  input: "ssd300/expanded_conv_10/expand/BatchNorm/batchnorm_1/Rsqrt"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ssd300/expanded_conv_10/expand/BatchNorm/batchnorm_1/sub"
  op: "Sub"
  input: "ssd300/expanded_conv_10/expand/BatchNorm/Reshape"
  input: "ssd300/expanded_conv_10/expand/BatchNorm/batchnorm_1/mul_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ssd300/expanded_conv_10/expand/BatchNorm/batchnorm_1/Add_1"
  op: "Add"
  input: "ssd300/expanded_conv_10/expand/BatchNorm/batchnorm_1/mul"
  input: "ssd300/expanded_conv_10/expand/BatchNorm/batchnorm_1/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ssd300/expanded_conv_10/expand/Relu6"
  op: "Relu6"
  input: "ssd300/expanded_conv_10/expand/BatchNorm/batchnorm_1/Add_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ssd300/expanded_conv_10/depthwise/depthwise_weights/Initializer/random_uniform/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv_10/depthwise/depthwise_weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\003\000\000\000\003\000\000\000\200\001\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "ssd300/expanded_conv_10/depthwise/depthwise_weights/Initializer/random_uniform/min"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv_10/depthwise/depthwise_weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: -0.04161251708865166
      }
    }
  }
}
node {
  name: "ssd300/expanded_conv_10/depthwise/depthwise_weights/Initializer/random_uniform/max"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv_10/depthwise/depthwise_weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.04161251708865166
      }
    }
  }
}
node {
  name: "ssd300/expanded_conv_10/depthwise/depthwise_weights/Initializer/random_uniform/RandomUniform"
  op: "RandomUniform"
  input: "ssd300/expanded_conv_10/depthwise/depthwise_weights/Initializer/random_uniform/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv_10/depthwise/depthwise_weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "ssd300/expanded_conv_10/depthwise/depthwise_weights/Initializer/random_uniform/sub"
  op: "Sub"
  input: "ssd300/expanded_conv_10/depthwise/depthwise_weights/Initializer/random_uniform/max"
  input: "ssd300/expanded_conv_10/depthwise/depthwise_weights/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv_10/depthwise/depthwise_weights"
      }
    }
  }
}
node {
  name: "ssd300/expanded_conv_10/depthwise/depthwise_weights/Initializer/random_uniform/mul"
  op: "Mul"
  input: "ssd300/expanded_conv_10/depthwise/depthwise_weights/Initializer/random_uniform/RandomUniform"
  input: "ssd300/expanded_conv_10/depthwise/depthwise_weights/Initializer/random_uniform/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv_10/depthwise/depthwise_weights"
      }
    }
  }
}
node {
  name: "ssd300/expanded_conv_10/depthwise/depthwise_weights/Initializer/random_uniform"
  op: "Add"
  input: "ssd300/expanded_conv_10/depthwise/depthwise_weights/Initializer/random_uniform/mul"
  input: "ssd300/expanded_conv_10/depthwise/depthwise_weights/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv_10/depthwise/depthwise_weights"
      }
    }
  }
}
node {
  name: "ssd300/expanded_conv_10/depthwise/depthwise_weights"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv_10/depthwise/depthwise_weights"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 3
        }
        dim {
          size: 3
        }
        dim {
          size: 384
        }
        dim {
          size: 1
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "ssd300/expanded_conv_10/depthwise/depthwise_weights/Assign"
  op: "Assign"
  input: "ssd300/expanded_conv_10/depthwise/depthwise_weights"
  input: "ssd300/expanded_conv_10/depthwise/depthwise_weights/Initializer/random_uniform"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv_10/depthwise/depthwise_weights"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "ssd300/expanded_conv_10/depthwise/depthwise_weights/read"
  op: "Identity"
  input: "ssd300/expanded_conv_10/depthwise/depthwise_weights"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv_10/depthwise/depthwise_weights"
      }
    }
  }
}
node {
  name: "ssd300/expanded_conv_10/depthwise/layer_conv2d/depthwise/Shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\003\000\000\000\003\000\000\000\200\001\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "ssd300/expanded_conv_10/depthwise/layer_conv2d/depthwise/dilation_rate"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "ssd300/expanded_conv_10/depthwise/layer_conv2d/depthwise"
  op: "DepthwiseConv2dNative"
  input: "ssd300/expanded_conv_10/expand/Relu6"
  input: "ssd300/expanded_conv_10/depthwise/depthwise_weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NCHW"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
}
node {
  name: "ssd300/expanded_conv_10/depthwise/BatchNorm/beta/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv_10/depthwise/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 384
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "ssd300/expanded_conv_10/depthwise/BatchNorm/beta"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv_10/depthwise/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 384
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "ssd300/expanded_conv_10/depthwise/BatchNorm/beta/Assign"
  op: "Assign"
  input: "ssd300/expanded_conv_10/depthwise/BatchNorm/beta"
  input: "ssd300/expanded_conv_10/depthwise/BatchNorm/beta/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv_10/depthwise/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "ssd300/expanded_conv_10/depthwise/BatchNorm/beta/read"
  op: "Identity"
  input: "ssd300/expanded_conv_10/depthwise/BatchNorm/beta"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv_10/depthwise/BatchNorm/beta"
      }
    }
  }
}
node {
  name: "ssd300/expanded_conv_10/depthwise/BatchNorm/moving_mean/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv_10/depthwise/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 384
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "ssd300/expanded_conv_10/depthwise/BatchNorm/moving_mean"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv_10/depthwise/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 384
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "ssd300/expanded_conv_10/depthwise/BatchNorm/moving_mean/Assign"
  op: "Assign"
  input: "ssd300/expanded_conv_10/depthwise/BatchNorm/moving_mean"
  input: "ssd300/expanded_conv_10/depthwise/BatchNorm/moving_mean/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv_10/depthwise/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "ssd300/expanded_conv_10/depthwise/BatchNorm/moving_mean/read"
  op: "Identity"
  input: "ssd300/expanded_conv_10/depthwise/BatchNorm/moving_mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv_10/depthwise/BatchNorm/moving_mean"
      }
    }
  }
}
node {
  name: "ssd300/expanded_conv_10/depthwise/BatchNorm/moving_variance/Initializer/ones"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv_10/depthwise/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 384
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "ssd300/expanded_conv_10/depthwise/BatchNorm/moving_variance"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv_10/depthwise/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 384
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "ssd300/expanded_conv_10/depthwise/BatchNorm/moving_variance/Assign"
  op: "Assign"
  input: "ssd300/expanded_conv_10/depthwise/BatchNorm/moving_variance"
  input: "ssd300/expanded_conv_10/depthwise/BatchNorm/moving_variance/Initializer/ones"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv_10/depthwise/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "ssd300/expanded_conv_10/depthwise/BatchNorm/moving_variance/read"
  op: "Identity"
  input: "ssd300/expanded_conv_10/depthwise/BatchNorm/moving_variance"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv_10/depthwise/BatchNorm/moving_variance"
      }
    }
  }
}
node {
  name: "ssd300/expanded_conv_10/depthwise/BatchNorm/Reshape/shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\200\001\000\000\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "ssd300/expanded_conv_10/depthwise/BatchNorm/Reshape"
  op: "Reshape"
  input: "ssd300/expanded_conv_10/depthwise/BatchNorm/beta/read"
  input: "ssd300/expanded_conv_10/depthwise/BatchNorm/Reshape/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "ssd300/expanded_conv_10/depthwise/BatchNorm/Reshape_1/shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\200\001\000\000\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "ssd300/expanded_conv_10/depthwise/BatchNorm/Reshape_1"
  op: "Reshape"
  input: "ssd300/expanded_conv_10/depthwise/BatchNorm/moving_mean/read"
  input: "ssd300/expanded_conv_10/depthwise/BatchNorm/Reshape_1/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "ssd300/expanded_conv_10/depthwise/BatchNorm/Reshape_2/shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\200\001\000\000\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "ssd300/expanded_conv_10/depthwise/BatchNorm/Reshape_2"
  op: "Reshape"
  input: "ssd300/expanded_conv_10/depthwise/BatchNorm/moving_variance/read"
  input: "ssd300/expanded_conv_10/depthwise/BatchNorm/Reshape_2/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "ssd300/expanded_conv_10/depthwise/BatchNorm/batchnorm_1/Add/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0010000000474974513
      }
    }
  }
}
node {
  name: "ssd300/expanded_conv_10/depthwise/BatchNorm/batchnorm_1/Add"
  op: "Add"
  input: "ssd300/expanded_conv_10/depthwise/BatchNorm/Reshape_2"
  input: "ssd300/expanded_conv_10/depthwise/BatchNorm/batchnorm_1/Add/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ssd300/expanded_conv_10/depthwise/BatchNorm/batchnorm_1/Rsqrt"
  op: "Rsqrt"
  input: "ssd300/expanded_conv_10/depthwise/BatchNorm/batchnorm_1/Add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ssd300/expanded_conv_10/depthwise/BatchNorm/batchnorm_1/mul"
  op: "Mul"
  input: "ssd300/expanded_conv_10/depthwise/layer_conv2d/depthwise"
  input: "ssd300/expanded_conv_10/depthwise/BatchNorm/batchnorm_1/Rsqrt"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ssd300/expanded_conv_10/depthwise/BatchNorm/batchnorm_1/mul_1"
  op: "Mul"
  input: "ssd300/expanded_conv_10/depthwise/BatchNorm/Reshape_1"
  input: "ssd300/expanded_conv_10/depthwise/BatchNorm/batchnorm_1/Rsqrt"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ssd300/expanded_conv_10/depthwise/BatchNorm/batchnorm_1/sub"
  op: "Sub"
  input: "ssd300/expanded_conv_10/depthwise/BatchNorm/Reshape"
  input: "ssd300/expanded_conv_10/depthwise/BatchNorm/batchnorm_1/mul_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ssd300/expanded_conv_10/depthwise/BatchNorm/batchnorm_1/Add_1"
  op: "Add"
  input: "ssd300/expanded_conv_10/depthwise/BatchNorm/batchnorm_1/mul"
  input: "ssd300/expanded_conv_10/depthwise/BatchNorm/batchnorm_1/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ssd300/expanded_conv_10/depthwise/Relu6"
  op: "Relu6"
  input: "ssd300/expanded_conv_10/depthwise/BatchNorm/batchnorm_1/Add_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ssd300/expanded_conv_10/project/weights/Initializer/random_uniform/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv_10/project/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000\200\001\000\000`\000\000\000"
      }
    }
  }
}
node {
  name: "ssd300/expanded_conv_10/project/weights/Initializer/random_uniform/min"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv_10/project/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: -0.11180339753627777
      }
    }
  }
}
node {
  name: "ssd300/expanded_conv_10/project/weights/Initializer/random_uniform/max"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv_10/project/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.11180339753627777
      }
    }
  }
}
node {
  name: "ssd300/expanded_conv_10/project/weights/Initializer/random_uniform/RandomUniform"
  op: "RandomUniform"
  input: "ssd300/expanded_conv_10/project/weights/Initializer/random_uniform/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv_10/project/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "ssd300/expanded_conv_10/project/weights/Initializer/random_uniform/sub"
  op: "Sub"
  input: "ssd300/expanded_conv_10/project/weights/Initializer/random_uniform/max"
  input: "ssd300/expanded_conv_10/project/weights/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv_10/project/weights"
      }
    }
  }
}
node {
  name: "ssd300/expanded_conv_10/project/weights/Initializer/random_uniform/mul"
  op: "Mul"
  input: "ssd300/expanded_conv_10/project/weights/Initializer/random_uniform/RandomUniform"
  input: "ssd300/expanded_conv_10/project/weights/Initializer/random_uniform/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv_10/project/weights"
      }
    }
  }
}
node {
  name: "ssd300/expanded_conv_10/project/weights/Initializer/random_uniform"
  op: "Add"
  input: "ssd300/expanded_conv_10/project/weights/Initializer/random_uniform/mul"
  input: "ssd300/expanded_conv_10/project/weights/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv_10/project/weights"
      }
    }
  }
}
node {
  name: "ssd300/expanded_conv_10/project/weights"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv_10/project/weights"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
        dim {
          size: 1
        }
        dim {
          size: 384
        }
        dim {
          size: 96
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "ssd300/expanded_conv_10/project/weights/Assign"
  op: "Assign"
  input: "ssd300/expanded_conv_10/project/weights"
  input: "ssd300/expanded_conv_10/project/weights/Initializer/random_uniform"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv_10/project/weights"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "ssd300/expanded_conv_10/project/weights/read"
  op: "Identity"
  input: "ssd300/expanded_conv_10/project/weights"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv_10/project/weights"
      }
    }
  }
}
node {
  name: "ssd300/expanded_conv_10/project/layer_conv2d/Conv2D"
  op: "Conv2D"
  input: "ssd300/expanded_conv_10/depthwise/Relu6"
  input: "ssd300/expanded_conv_10/project/weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NCHW"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "explicit_paddings"
    value {
      list {
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "ssd300/expanded_conv_10/project/BatchNorm/beta/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv_10/project/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 96
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "ssd300/expanded_conv_10/project/BatchNorm/beta"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv_10/project/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 96
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "ssd300/expanded_conv_10/project/BatchNorm/beta/Assign"
  op: "Assign"
  input: "ssd300/expanded_conv_10/project/BatchNorm/beta"
  input: "ssd300/expanded_conv_10/project/BatchNorm/beta/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv_10/project/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "ssd300/expanded_conv_10/project/BatchNorm/beta/read"
  op: "Identity"
  input: "ssd300/expanded_conv_10/project/BatchNorm/beta"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv_10/project/BatchNorm/beta"
      }
    }
  }
}
node {
  name: "ssd300/expanded_conv_10/project/BatchNorm/moving_mean/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv_10/project/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 96
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "ssd300/expanded_conv_10/project/BatchNorm/moving_mean"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv_10/project/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 96
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "ssd300/expanded_conv_10/project/BatchNorm/moving_mean/Assign"
  op: "Assign"
  input: "ssd300/expanded_conv_10/project/BatchNorm/moving_mean"
  input: "ssd300/expanded_conv_10/project/BatchNorm/moving_mean/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv_10/project/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "ssd300/expanded_conv_10/project/BatchNorm/moving_mean/read"
  op: "Identity"
  input: "ssd300/expanded_conv_10/project/BatchNorm/moving_mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv_10/project/BatchNorm/moving_mean"
      }
    }
  }
}
node {
  name: "ssd300/expanded_conv_10/project/BatchNorm/moving_variance/Initializer/ones"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv_10/project/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 96
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "ssd300/expanded_conv_10/project/BatchNorm/moving_variance"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv_10/project/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 96
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "ssd300/expanded_conv_10/project/BatchNorm/moving_variance/Assign"
  op: "Assign"
  input: "ssd300/expanded_conv_10/project/BatchNorm/moving_variance"
  input: "ssd300/expanded_conv_10/project/BatchNorm/moving_variance/Initializer/ones"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv_10/project/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "ssd300/expanded_conv_10/project/BatchNorm/moving_variance/read"
  op: "Identity"
  input: "ssd300/expanded_conv_10/project/BatchNorm/moving_variance"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv_10/project/BatchNorm/moving_variance"
      }
    }
  }
}
node {
  name: "ssd300/expanded_conv_10/project/BatchNorm/Reshape/shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000`\000\000\000\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "ssd300/expanded_conv_10/project/BatchNorm/Reshape"
  op: "Reshape"
  input: "ssd300/expanded_conv_10/project/BatchNorm/beta/read"
  input: "ssd300/expanded_conv_10/project/BatchNorm/Reshape/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "ssd300/expanded_conv_10/project/BatchNorm/Reshape_1/shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000`\000\000\000\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "ssd300/expanded_conv_10/project/BatchNorm/Reshape_1"
  op: "Reshape"
  input: "ssd300/expanded_conv_10/project/BatchNorm/moving_mean/read"
  input: "ssd300/expanded_conv_10/project/BatchNorm/Reshape_1/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "ssd300/expanded_conv_10/project/BatchNorm/Reshape_2/shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000`\000\000\000\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "ssd300/expanded_conv_10/project/BatchNorm/Reshape_2"
  op: "Reshape"
  input: "ssd300/expanded_conv_10/project/BatchNorm/moving_variance/read"
  input: "ssd300/expanded_conv_10/project/BatchNorm/Reshape_2/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "ssd300/expanded_conv_10/project/BatchNorm/batchnorm_1/Add/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0010000000474974513
      }
    }
  }
}
node {
  name: "ssd300/expanded_conv_10/project/BatchNorm/batchnorm_1/Add"
  op: "Add"
  input: "ssd300/expanded_conv_10/project/BatchNorm/Reshape_2"
  input: "ssd300/expanded_conv_10/project/BatchNorm/batchnorm_1/Add/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ssd300/expanded_conv_10/project/BatchNorm/batchnorm_1/Rsqrt"
  op: "Rsqrt"
  input: "ssd300/expanded_conv_10/project/BatchNorm/batchnorm_1/Add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ssd300/expanded_conv_10/project/BatchNorm/batchnorm_1/mul"
  op: "Mul"
  input: "ssd300/expanded_conv_10/project/layer_conv2d/Conv2D"
  input: "ssd300/expanded_conv_10/project/BatchNorm/batchnorm_1/Rsqrt"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ssd300/expanded_conv_10/project/BatchNorm/batchnorm_1/mul_1"
  op: "Mul"
  input: "ssd300/expanded_conv_10/project/BatchNorm/Reshape_1"
  input: "ssd300/expanded_conv_10/project/BatchNorm/batchnorm_1/Rsqrt"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ssd300/expanded_conv_10/project/BatchNorm/batchnorm_1/sub"
  op: "Sub"
  input: "ssd300/expanded_conv_10/project/BatchNorm/Reshape"
  input: "ssd300/expanded_conv_10/project/BatchNorm/batchnorm_1/mul_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ssd300/expanded_conv_10/project/BatchNorm/batchnorm_1/Add_1"
  op: "Add"
  input: "ssd300/expanded_conv_10/project/BatchNorm/batchnorm_1/mul"
  input: "ssd300/expanded_conv_10/project/BatchNorm/batchnorm_1/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ssd300/expanded_conv_11/expand/weights/Initializer/random_uniform/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv_11/expand/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000`\000\000\000@\002\000\000"
      }
    }
  }
}
node {
  name: "ssd300/expanded_conv_11/expand/weights/Initializer/random_uniform/min"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv_11/expand/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: -0.09449111670255661
      }
    }
  }
}
node {
  name: "ssd300/expanded_conv_11/expand/weights/Initializer/random_uniform/max"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv_11/expand/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.09449111670255661
      }
    }
  }
}
node {
  name: "ssd300/expanded_conv_11/expand/weights/Initializer/random_uniform/RandomUniform"
  op: "RandomUniform"
  input: "ssd300/expanded_conv_11/expand/weights/Initializer/random_uniform/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv_11/expand/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "ssd300/expanded_conv_11/expand/weights/Initializer/random_uniform/sub"
  op: "Sub"
  input: "ssd300/expanded_conv_11/expand/weights/Initializer/random_uniform/max"
  input: "ssd300/expanded_conv_11/expand/weights/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv_11/expand/weights"
      }
    }
  }
}
node {
  name: "ssd300/expanded_conv_11/expand/weights/Initializer/random_uniform/mul"
  op: "Mul"
  input: "ssd300/expanded_conv_11/expand/weights/Initializer/random_uniform/RandomUniform"
  input: "ssd300/expanded_conv_11/expand/weights/Initializer/random_uniform/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv_11/expand/weights"
      }
    }
  }
}
node {
  name: "ssd300/expanded_conv_11/expand/weights/Initializer/random_uniform"
  op: "Add"
  input: "ssd300/expanded_conv_11/expand/weights/Initializer/random_uniform/mul"
  input: "ssd300/expanded_conv_11/expand/weights/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv_11/expand/weights"
      }
    }
  }
}
node {
  name: "ssd300/expanded_conv_11/expand/weights"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv_11/expand/weights"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
        dim {
          size: 1
        }
        dim {
          size: 96
        }
        dim {
          size: 576
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "ssd300/expanded_conv_11/expand/weights/Assign"
  op: "Assign"
  input: "ssd300/expanded_conv_11/expand/weights"
  input: "ssd300/expanded_conv_11/expand/weights/Initializer/random_uniform"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv_11/expand/weights"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "ssd300/expanded_conv_11/expand/weights/read"
  op: "Identity"
  input: "ssd300/expanded_conv_11/expand/weights"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv_11/expand/weights"
      }
    }
  }
}
node {
  name: "ssd300/expanded_conv_11/expand/layer_conv2d/Conv2D"
  op: "Conv2D"
  input: "ssd300/expanded_conv_10/project/BatchNorm/batchnorm_1/Add_1"
  input: "ssd300/expanded_conv_11/expand/weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NCHW"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "explicit_paddings"
    value {
      list {
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "ssd300/expanded_conv_11/expand/BatchNorm/beta/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv_11/expand/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 576
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "ssd300/expanded_conv_11/expand/BatchNorm/beta"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv_11/expand/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 576
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "ssd300/expanded_conv_11/expand/BatchNorm/beta/Assign"
  op: "Assign"
  input: "ssd300/expanded_conv_11/expand/BatchNorm/beta"
  input: "ssd300/expanded_conv_11/expand/BatchNorm/beta/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv_11/expand/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "ssd300/expanded_conv_11/expand/BatchNorm/beta/read"
  op: "Identity"
  input: "ssd300/expanded_conv_11/expand/BatchNorm/beta"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv_11/expand/BatchNorm/beta"
      }
    }
  }
}
node {
  name: "ssd300/expanded_conv_11/expand/BatchNorm/moving_mean/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv_11/expand/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 576
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "ssd300/expanded_conv_11/expand/BatchNorm/moving_mean"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv_11/expand/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 576
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "ssd300/expanded_conv_11/expand/BatchNorm/moving_mean/Assign"
  op: "Assign"
  input: "ssd300/expanded_conv_11/expand/BatchNorm/moving_mean"
  input: "ssd300/expanded_conv_11/expand/BatchNorm/moving_mean/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv_11/expand/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "ssd300/expanded_conv_11/expand/BatchNorm/moving_mean/read"
  op: "Identity"
  input: "ssd300/expanded_conv_11/expand/BatchNorm/moving_mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv_11/expand/BatchNorm/moving_mean"
      }
    }
  }
}
node {
  name: "ssd300/expanded_conv_11/expand/BatchNorm/moving_variance/Initializer/ones"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv_11/expand/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 576
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "ssd300/expanded_conv_11/expand/BatchNorm/moving_variance"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv_11/expand/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 576
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "ssd300/expanded_conv_11/expand/BatchNorm/moving_variance/Assign"
  op: "Assign"
  input: "ssd300/expanded_conv_11/expand/BatchNorm/moving_variance"
  input: "ssd300/expanded_conv_11/expand/BatchNorm/moving_variance/Initializer/ones"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv_11/expand/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "ssd300/expanded_conv_11/expand/BatchNorm/moving_variance/read"
  op: "Identity"
  input: "ssd300/expanded_conv_11/expand/BatchNorm/moving_variance"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv_11/expand/BatchNorm/moving_variance"
      }
    }
  }
}
node {
  name: "ssd300/expanded_conv_11/expand/BatchNorm/Reshape/shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000@\002\000\000\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "ssd300/expanded_conv_11/expand/BatchNorm/Reshape"
  op: "Reshape"
  input: "ssd300/expanded_conv_11/expand/BatchNorm/beta/read"
  input: "ssd300/expanded_conv_11/expand/BatchNorm/Reshape/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "ssd300/expanded_conv_11/expand/BatchNorm/Reshape_1/shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000@\002\000\000\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "ssd300/expanded_conv_11/expand/BatchNorm/Reshape_1"
  op: "Reshape"
  input: "ssd300/expanded_conv_11/expand/BatchNorm/moving_mean/read"
  input: "ssd300/expanded_conv_11/expand/BatchNorm/Reshape_1/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "ssd300/expanded_conv_11/expand/BatchNorm/Reshape_2/shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000@\002\000\000\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "ssd300/expanded_conv_11/expand/BatchNorm/Reshape_2"
  op: "Reshape"
  input: "ssd300/expanded_conv_11/expand/BatchNorm/moving_variance/read"
  input: "ssd300/expanded_conv_11/expand/BatchNorm/Reshape_2/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "ssd300/expanded_conv_11/expand/BatchNorm/batchnorm_1/Add/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0010000000474974513
      }
    }
  }
}
node {
  name: "ssd300/expanded_conv_11/expand/BatchNorm/batchnorm_1/Add"
  op: "Add"
  input: "ssd300/expanded_conv_11/expand/BatchNorm/Reshape_2"
  input: "ssd300/expanded_conv_11/expand/BatchNorm/batchnorm_1/Add/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ssd300/expanded_conv_11/expand/BatchNorm/batchnorm_1/Rsqrt"
  op: "Rsqrt"
  input: "ssd300/expanded_conv_11/expand/BatchNorm/batchnorm_1/Add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ssd300/expanded_conv_11/expand/BatchNorm/batchnorm_1/mul"
  op: "Mul"
  input: "ssd300/expanded_conv_11/expand/layer_conv2d/Conv2D"
  input: "ssd300/expanded_conv_11/expand/BatchNorm/batchnorm_1/Rsqrt"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ssd300/expanded_conv_11/expand/BatchNorm/batchnorm_1/mul_1"
  op: "Mul"
  input: "ssd300/expanded_conv_11/expand/BatchNorm/Reshape_1"
  input: "ssd300/expanded_conv_11/expand/BatchNorm/batchnorm_1/Rsqrt"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ssd300/expanded_conv_11/expand/BatchNorm/batchnorm_1/sub"
  op: "Sub"
  input: "ssd300/expanded_conv_11/expand/BatchNorm/Reshape"
  input: "ssd300/expanded_conv_11/expand/BatchNorm/batchnorm_1/mul_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ssd300/expanded_conv_11/expand/BatchNorm/batchnorm_1/Add_1"
  op: "Add"
  input: "ssd300/expanded_conv_11/expand/BatchNorm/batchnorm_1/mul"
  input: "ssd300/expanded_conv_11/expand/BatchNorm/batchnorm_1/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ssd300/expanded_conv_11/expand/Relu6"
  op: "Relu6"
  input: "ssd300/expanded_conv_11/expand/BatchNorm/batchnorm_1/Add_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ssd300/expanded_conv_11/depthwise/depthwise_weights/Initializer/random_uniform/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv_11/depthwise/depthwise_weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\003\000\000\000\003\000\000\000@\002\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "ssd300/expanded_conv_11/depthwise/depthwise_weights/Initializer/random_uniform/min"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv_11/depthwise/depthwise_weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: -0.03399119898676872
      }
    }
  }
}
node {
  name: "ssd300/expanded_conv_11/depthwise/depthwise_weights/Initializer/random_uniform/max"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv_11/depthwise/depthwise_weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.03399119898676872
      }
    }
  }
}
node {
  name: "ssd300/expanded_conv_11/depthwise/depthwise_weights/Initializer/random_uniform/RandomUniform"
  op: "RandomUniform"
  input: "ssd300/expanded_conv_11/depthwise/depthwise_weights/Initializer/random_uniform/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv_11/depthwise/depthwise_weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "ssd300/expanded_conv_11/depthwise/depthwise_weights/Initializer/random_uniform/sub"
  op: "Sub"
  input: "ssd300/expanded_conv_11/depthwise/depthwise_weights/Initializer/random_uniform/max"
  input: "ssd300/expanded_conv_11/depthwise/depthwise_weights/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv_11/depthwise/depthwise_weights"
      }
    }
  }
}
node {
  name: "ssd300/expanded_conv_11/depthwise/depthwise_weights/Initializer/random_uniform/mul"
  op: "Mul"
  input: "ssd300/expanded_conv_11/depthwise/depthwise_weights/Initializer/random_uniform/RandomUniform"
  input: "ssd300/expanded_conv_11/depthwise/depthwise_weights/Initializer/random_uniform/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv_11/depthwise/depthwise_weights"
      }
    }
  }
}
node {
  name: "ssd300/expanded_conv_11/depthwise/depthwise_weights/Initializer/random_uniform"
  op: "Add"
  input: "ssd300/expanded_conv_11/depthwise/depthwise_weights/Initializer/random_uniform/mul"
  input: "ssd300/expanded_conv_11/depthwise/depthwise_weights/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv_11/depthwise/depthwise_weights"
      }
    }
  }
}
node {
  name: "ssd300/expanded_conv_11/depthwise/depthwise_weights"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv_11/depthwise/depthwise_weights"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 3
        }
        dim {
          size: 3
        }
        dim {
          size: 576
        }
        dim {
          size: 1
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "ssd300/expanded_conv_11/depthwise/depthwise_weights/Assign"
  op: "Assign"
  input: "ssd300/expanded_conv_11/depthwise/depthwise_weights"
  input: "ssd300/expanded_conv_11/depthwise/depthwise_weights/Initializer/random_uniform"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv_11/depthwise/depthwise_weights"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "ssd300/expanded_conv_11/depthwise/depthwise_weights/read"
  op: "Identity"
  input: "ssd300/expanded_conv_11/depthwise/depthwise_weights"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv_11/depthwise/depthwise_weights"
      }
    }
  }
}
node {
  name: "ssd300/expanded_conv_11/depthwise/layer_conv2d/depthwise/Shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\003\000\000\000\003\000\000\000@\002\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "ssd300/expanded_conv_11/depthwise/layer_conv2d/depthwise/dilation_rate"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "ssd300/expanded_conv_11/depthwise/layer_conv2d/depthwise"
  op: "DepthwiseConv2dNative"
  input: "ssd300/expanded_conv_11/expand/Relu6"
  input: "ssd300/expanded_conv_11/depthwise/depthwise_weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NCHW"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
}
node {
  name: "ssd300/expanded_conv_11/depthwise/BatchNorm/beta/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv_11/depthwise/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 576
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "ssd300/expanded_conv_11/depthwise/BatchNorm/beta"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv_11/depthwise/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 576
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "ssd300/expanded_conv_11/depthwise/BatchNorm/beta/Assign"
  op: "Assign"
  input: "ssd300/expanded_conv_11/depthwise/BatchNorm/beta"
  input: "ssd300/expanded_conv_11/depthwise/BatchNorm/beta/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv_11/depthwise/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "ssd300/expanded_conv_11/depthwise/BatchNorm/beta/read"
  op: "Identity"
  input: "ssd300/expanded_conv_11/depthwise/BatchNorm/beta"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv_11/depthwise/BatchNorm/beta"
      }
    }
  }
}
node {
  name: "ssd300/expanded_conv_11/depthwise/BatchNorm/moving_mean/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv_11/depthwise/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 576
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "ssd300/expanded_conv_11/depthwise/BatchNorm/moving_mean"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv_11/depthwise/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 576
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "ssd300/expanded_conv_11/depthwise/BatchNorm/moving_mean/Assign"
  op: "Assign"
  input: "ssd300/expanded_conv_11/depthwise/BatchNorm/moving_mean"
  input: "ssd300/expanded_conv_11/depthwise/BatchNorm/moving_mean/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv_11/depthwise/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "ssd300/expanded_conv_11/depthwise/BatchNorm/moving_mean/read"
  op: "Identity"
  input: "ssd300/expanded_conv_11/depthwise/BatchNorm/moving_mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv_11/depthwise/BatchNorm/moving_mean"
      }
    }
  }
}
node {
  name: "ssd300/expanded_conv_11/depthwise/BatchNorm/moving_variance/Initializer/ones"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv_11/depthwise/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 576
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "ssd300/expanded_conv_11/depthwise/BatchNorm/moving_variance"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv_11/depthwise/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 576
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "ssd300/expanded_conv_11/depthwise/BatchNorm/moving_variance/Assign"
  op: "Assign"
  input: "ssd300/expanded_conv_11/depthwise/BatchNorm/moving_variance"
  input: "ssd300/expanded_conv_11/depthwise/BatchNorm/moving_variance/Initializer/ones"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv_11/depthwise/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "ssd300/expanded_conv_11/depthwise/BatchNorm/moving_variance/read"
  op: "Identity"
  input: "ssd300/expanded_conv_11/depthwise/BatchNorm/moving_variance"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv_11/depthwise/BatchNorm/moving_variance"
      }
    }
  }
}
node {
  name: "ssd300/expanded_conv_11/depthwise/BatchNorm/Reshape/shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000@\002\000\000\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "ssd300/expanded_conv_11/depthwise/BatchNorm/Reshape"
  op: "Reshape"
  input: "ssd300/expanded_conv_11/depthwise/BatchNorm/beta/read"
  input: "ssd300/expanded_conv_11/depthwise/BatchNorm/Reshape/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "ssd300/expanded_conv_11/depthwise/BatchNorm/Reshape_1/shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000@\002\000\000\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "ssd300/expanded_conv_11/depthwise/BatchNorm/Reshape_1"
  op: "Reshape"
  input: "ssd300/expanded_conv_11/depthwise/BatchNorm/moving_mean/read"
  input: "ssd300/expanded_conv_11/depthwise/BatchNorm/Reshape_1/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "ssd300/expanded_conv_11/depthwise/BatchNorm/Reshape_2/shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000@\002\000\000\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "ssd300/expanded_conv_11/depthwise/BatchNorm/Reshape_2"
  op: "Reshape"
  input: "ssd300/expanded_conv_11/depthwise/BatchNorm/moving_variance/read"
  input: "ssd300/expanded_conv_11/depthwise/BatchNorm/Reshape_2/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "ssd300/expanded_conv_11/depthwise/BatchNorm/batchnorm_1/Add/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0010000000474974513
      }
    }
  }
}
node {
  name: "ssd300/expanded_conv_11/depthwise/BatchNorm/batchnorm_1/Add"
  op: "Add"
  input: "ssd300/expanded_conv_11/depthwise/BatchNorm/Reshape_2"
  input: "ssd300/expanded_conv_11/depthwise/BatchNorm/batchnorm_1/Add/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ssd300/expanded_conv_11/depthwise/BatchNorm/batchnorm_1/Rsqrt"
  op: "Rsqrt"
  input: "ssd300/expanded_conv_11/depthwise/BatchNorm/batchnorm_1/Add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ssd300/expanded_conv_11/depthwise/BatchNorm/batchnorm_1/mul"
  op: "Mul"
  input: "ssd300/expanded_conv_11/depthwise/layer_conv2d/depthwise"
  input: "ssd300/expanded_conv_11/depthwise/BatchNorm/batchnorm_1/Rsqrt"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ssd300/expanded_conv_11/depthwise/BatchNorm/batchnorm_1/mul_1"
  op: "Mul"
  input: "ssd300/expanded_conv_11/depthwise/BatchNorm/Reshape_1"
  input: "ssd300/expanded_conv_11/depthwise/BatchNorm/batchnorm_1/Rsqrt"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ssd300/expanded_conv_11/depthwise/BatchNorm/batchnorm_1/sub"
  op: "Sub"
  input: "ssd300/expanded_conv_11/depthwise/BatchNorm/Reshape"
  input: "ssd300/expanded_conv_11/depthwise/BatchNorm/batchnorm_1/mul_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ssd300/expanded_conv_11/depthwise/BatchNorm/batchnorm_1/Add_1"
  op: "Add"
  input: "ssd300/expanded_conv_11/depthwise/BatchNorm/batchnorm_1/mul"
  input: "ssd300/expanded_conv_11/depthwise/BatchNorm/batchnorm_1/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ssd300/expanded_conv_11/depthwise/Relu6"
  op: "Relu6"
  input: "ssd300/expanded_conv_11/depthwise/BatchNorm/batchnorm_1/Add_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ssd300/expanded_conv_11/project/weights/Initializer/random_uniform/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv_11/project/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000@\002\000\000`\000\000\000"
      }
    }
  }
}
node {
  name: "ssd300/expanded_conv_11/project/weights/Initializer/random_uniform/min"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv_11/project/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: -0.09449111670255661
      }
    }
  }
}
node {
  name: "ssd300/expanded_conv_11/project/weights/Initializer/random_uniform/max"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv_11/project/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.09449111670255661
      }
    }
  }
}
node {
  name: "ssd300/expanded_conv_11/project/weights/Initializer/random_uniform/RandomUniform"
  op: "RandomUniform"
  input: "ssd300/expanded_conv_11/project/weights/Initializer/random_uniform/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv_11/project/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "ssd300/expanded_conv_11/project/weights/Initializer/random_uniform/sub"
  op: "Sub"
  input: "ssd300/expanded_conv_11/project/weights/Initializer/random_uniform/max"
  input: "ssd300/expanded_conv_11/project/weights/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv_11/project/weights"
      }
    }
  }
}
node {
  name: "ssd300/expanded_conv_11/project/weights/Initializer/random_uniform/mul"
  op: "Mul"
  input: "ssd300/expanded_conv_11/project/weights/Initializer/random_uniform/RandomUniform"
  input: "ssd300/expanded_conv_11/project/weights/Initializer/random_uniform/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv_11/project/weights"
      }
    }
  }
}
node {
  name: "ssd300/expanded_conv_11/project/weights/Initializer/random_uniform"
  op: "Add"
  input: "ssd300/expanded_conv_11/project/weights/Initializer/random_uniform/mul"
  input: "ssd300/expanded_conv_11/project/weights/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv_11/project/weights"
      }
    }
  }
}
node {
  name: "ssd300/expanded_conv_11/project/weights"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv_11/project/weights"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
        dim {
          size: 1
        }
        dim {
          size: 576
        }
        dim {
          size: 96
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "ssd300/expanded_conv_11/project/weights/Assign"
  op: "Assign"
  input: "ssd300/expanded_conv_11/project/weights"
  input: "ssd300/expanded_conv_11/project/weights/Initializer/random_uniform"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv_11/project/weights"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "ssd300/expanded_conv_11/project/weights/read"
  op: "Identity"
  input: "ssd300/expanded_conv_11/project/weights"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv_11/project/weights"
      }
    }
  }
}
node {
  name: "ssd300/expanded_conv_11/project/layer_conv2d/Conv2D"
  op: "Conv2D"
  input: "ssd300/expanded_conv_11/depthwise/Relu6"
  input: "ssd300/expanded_conv_11/project/weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NCHW"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "explicit_paddings"
    value {
      list {
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "ssd300/expanded_conv_11/project/BatchNorm/beta/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv_11/project/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 96
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "ssd300/expanded_conv_11/project/BatchNorm/beta"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv_11/project/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 96
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "ssd300/expanded_conv_11/project/BatchNorm/beta/Assign"
  op: "Assign"
  input: "ssd300/expanded_conv_11/project/BatchNorm/beta"
  input: "ssd300/expanded_conv_11/project/BatchNorm/beta/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv_11/project/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "ssd300/expanded_conv_11/project/BatchNorm/beta/read"
  op: "Identity"
  input: "ssd300/expanded_conv_11/project/BatchNorm/beta"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv_11/project/BatchNorm/beta"
      }
    }
  }
}
node {
  name: "ssd300/expanded_conv_11/project/BatchNorm/moving_mean/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv_11/project/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 96
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "ssd300/expanded_conv_11/project/BatchNorm/moving_mean"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv_11/project/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 96
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "ssd300/expanded_conv_11/project/BatchNorm/moving_mean/Assign"
  op: "Assign"
  input: "ssd300/expanded_conv_11/project/BatchNorm/moving_mean"
  input: "ssd300/expanded_conv_11/project/BatchNorm/moving_mean/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv_11/project/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "ssd300/expanded_conv_11/project/BatchNorm/moving_mean/read"
  op: "Identity"
  input: "ssd300/expanded_conv_11/project/BatchNorm/moving_mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv_11/project/BatchNorm/moving_mean"
      }
    }
  }
}
node {
  name: "ssd300/expanded_conv_11/project/BatchNorm/moving_variance/Initializer/ones"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv_11/project/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 96
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "ssd300/expanded_conv_11/project/BatchNorm/moving_variance"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv_11/project/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 96
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "ssd300/expanded_conv_11/project/BatchNorm/moving_variance/Assign"
  op: "Assign"
  input: "ssd300/expanded_conv_11/project/BatchNorm/moving_variance"
  input: "ssd300/expanded_conv_11/project/BatchNorm/moving_variance/Initializer/ones"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv_11/project/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "ssd300/expanded_conv_11/project/BatchNorm/moving_variance/read"
  op: "Identity"
  input: "ssd300/expanded_conv_11/project/BatchNorm/moving_variance"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv_11/project/BatchNorm/moving_variance"
      }
    }
  }
}
node {
  name: "ssd300/expanded_conv_11/project/BatchNorm/Reshape/shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000`\000\000\000\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "ssd300/expanded_conv_11/project/BatchNorm/Reshape"
  op: "Reshape"
  input: "ssd300/expanded_conv_11/project/BatchNorm/beta/read"
  input: "ssd300/expanded_conv_11/project/BatchNorm/Reshape/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "ssd300/expanded_conv_11/project/BatchNorm/Reshape_1/shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000`\000\000\000\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "ssd300/expanded_conv_11/project/BatchNorm/Reshape_1"
  op: "Reshape"
  input: "ssd300/expanded_conv_11/project/BatchNorm/moving_mean/read"
  input: "ssd300/expanded_conv_11/project/BatchNorm/Reshape_1/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "ssd300/expanded_conv_11/project/BatchNorm/Reshape_2/shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000`\000\000\000\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "ssd300/expanded_conv_11/project/BatchNorm/Reshape_2"
  op: "Reshape"
  input: "ssd300/expanded_conv_11/project/BatchNorm/moving_variance/read"
  input: "ssd300/expanded_conv_11/project/BatchNorm/Reshape_2/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "ssd300/expanded_conv_11/project/BatchNorm/batchnorm_1/Add/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0010000000474974513
      }
    }
  }
}
node {
  name: "ssd300/expanded_conv_11/project/BatchNorm/batchnorm_1/Add"
  op: "Add"
  input: "ssd300/expanded_conv_11/project/BatchNorm/Reshape_2"
  input: "ssd300/expanded_conv_11/project/BatchNorm/batchnorm_1/Add/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ssd300/expanded_conv_11/project/BatchNorm/batchnorm_1/Rsqrt"
  op: "Rsqrt"
  input: "ssd300/expanded_conv_11/project/BatchNorm/batchnorm_1/Add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ssd300/expanded_conv_11/project/BatchNorm/batchnorm_1/mul"
  op: "Mul"
  input: "ssd300/expanded_conv_11/project/layer_conv2d/Conv2D"
  input: "ssd300/expanded_conv_11/project/BatchNorm/batchnorm_1/Rsqrt"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ssd300/expanded_conv_11/project/BatchNorm/batchnorm_1/mul_1"
  op: "Mul"
  input: "ssd300/expanded_conv_11/project/BatchNorm/Reshape_1"
  input: "ssd300/expanded_conv_11/project/BatchNorm/batchnorm_1/Rsqrt"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ssd300/expanded_conv_11/project/BatchNorm/batchnorm_1/sub"
  op: "Sub"
  input: "ssd300/expanded_conv_11/project/BatchNorm/Reshape"
  input: "ssd300/expanded_conv_11/project/BatchNorm/batchnorm_1/mul_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ssd300/expanded_conv_11/project/BatchNorm/batchnorm_1/Add_1"
  op: "Add"
  input: "ssd300/expanded_conv_11/project/BatchNorm/batchnorm_1/mul"
  input: "ssd300/expanded_conv_11/project/BatchNorm/batchnorm_1/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ssd300/expanded_conv_11/Add"
  op: "Add"
  input: "ssd300/expanded_conv_11/project/BatchNorm/batchnorm_1/Add_1"
  input: "ssd300/expanded_conv_10/project/BatchNorm/batchnorm_1/Add_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ssd300/expanded_conv_12/expand/weights/Initializer/random_uniform/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv_12/expand/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000`\000\000\000@\002\000\000"
      }
    }
  }
}
node {
  name: "ssd300/expanded_conv_12/expand/weights/Initializer/random_uniform/min"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv_12/expand/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: -0.09449111670255661
      }
    }
  }
}
node {
  name: "ssd300/expanded_conv_12/expand/weights/Initializer/random_uniform/max"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv_12/expand/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.09449111670255661
      }
    }
  }
}
node {
  name: "ssd300/expanded_conv_12/expand/weights/Initializer/random_uniform/RandomUniform"
  op: "RandomUniform"
  input: "ssd300/expanded_conv_12/expand/weights/Initializer/random_uniform/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv_12/expand/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "ssd300/expanded_conv_12/expand/weights/Initializer/random_uniform/sub"
  op: "Sub"
  input: "ssd300/expanded_conv_12/expand/weights/Initializer/random_uniform/max"
  input: "ssd300/expanded_conv_12/expand/weights/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv_12/expand/weights"
      }
    }
  }
}
node {
  name: "ssd300/expanded_conv_12/expand/weights/Initializer/random_uniform/mul"
  op: "Mul"
  input: "ssd300/expanded_conv_12/expand/weights/Initializer/random_uniform/RandomUniform"
  input: "ssd300/expanded_conv_12/expand/weights/Initializer/random_uniform/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv_12/expand/weights"
      }
    }
  }
}
node {
  name: "ssd300/expanded_conv_12/expand/weights/Initializer/random_uniform"
  op: "Add"
  input: "ssd300/expanded_conv_12/expand/weights/Initializer/random_uniform/mul"
  input: "ssd300/expanded_conv_12/expand/weights/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv_12/expand/weights"
      }
    }
  }
}
node {
  name: "ssd300/expanded_conv_12/expand/weights"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv_12/expand/weights"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
        dim {
          size: 1
        }
        dim {
          size: 96
        }
        dim {
          size: 576
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "ssd300/expanded_conv_12/expand/weights/Assign"
  op: "Assign"
  input: "ssd300/expanded_conv_12/expand/weights"
  input: "ssd300/expanded_conv_12/expand/weights/Initializer/random_uniform"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv_12/expand/weights"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "ssd300/expanded_conv_12/expand/weights/read"
  op: "Identity"
  input: "ssd300/expanded_conv_12/expand/weights"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv_12/expand/weights"
      }
    }
  }
}
node {
  name: "ssd300/expanded_conv_12/expand/layer_conv2d/Conv2D"
  op: "Conv2D"
  input: "ssd300/expanded_conv_11/Add"
  input: "ssd300/expanded_conv_12/expand/weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NCHW"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "explicit_paddings"
    value {
      list {
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "ssd300/expanded_conv_12/expand/BatchNorm/beta/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv_12/expand/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 576
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "ssd300/expanded_conv_12/expand/BatchNorm/beta"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv_12/expand/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 576
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "ssd300/expanded_conv_12/expand/BatchNorm/beta/Assign"
  op: "Assign"
  input: "ssd300/expanded_conv_12/expand/BatchNorm/beta"
  input: "ssd300/expanded_conv_12/expand/BatchNorm/beta/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv_12/expand/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "ssd300/expanded_conv_12/expand/BatchNorm/beta/read"
  op: "Identity"
  input: "ssd300/expanded_conv_12/expand/BatchNorm/beta"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv_12/expand/BatchNorm/beta"
      }
    }
  }
}
node {
  name: "ssd300/expanded_conv_12/expand/BatchNorm/moving_mean/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv_12/expand/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 576
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "ssd300/expanded_conv_12/expand/BatchNorm/moving_mean"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv_12/expand/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 576
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "ssd300/expanded_conv_12/expand/BatchNorm/moving_mean/Assign"
  op: "Assign"
  input: "ssd300/expanded_conv_12/expand/BatchNorm/moving_mean"
  input: "ssd300/expanded_conv_12/expand/BatchNorm/moving_mean/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv_12/expand/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "ssd300/expanded_conv_12/expand/BatchNorm/moving_mean/read"
  op: "Identity"
  input: "ssd300/expanded_conv_12/expand/BatchNorm/moving_mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv_12/expand/BatchNorm/moving_mean"
      }
    }
  }
}
node {
  name: "ssd300/expanded_conv_12/expand/BatchNorm/moving_variance/Initializer/ones"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv_12/expand/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 576
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "ssd300/expanded_conv_12/expand/BatchNorm/moving_variance"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv_12/expand/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 576
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "ssd300/expanded_conv_12/expand/BatchNorm/moving_variance/Assign"
  op: "Assign"
  input: "ssd300/expanded_conv_12/expand/BatchNorm/moving_variance"
  input: "ssd300/expanded_conv_12/expand/BatchNorm/moving_variance/Initializer/ones"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv_12/expand/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "ssd300/expanded_conv_12/expand/BatchNorm/moving_variance/read"
  op: "Identity"
  input: "ssd300/expanded_conv_12/expand/BatchNorm/moving_variance"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv_12/expand/BatchNorm/moving_variance"
      }
    }
  }
}
node {
  name: "ssd300/expanded_conv_12/expand/BatchNorm/Reshape/shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000@\002\000\000\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "ssd300/expanded_conv_12/expand/BatchNorm/Reshape"
  op: "Reshape"
  input: "ssd300/expanded_conv_12/expand/BatchNorm/beta/read"
  input: "ssd300/expanded_conv_12/expand/BatchNorm/Reshape/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "ssd300/expanded_conv_12/expand/BatchNorm/Reshape_1/shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000@\002\000\000\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "ssd300/expanded_conv_12/expand/BatchNorm/Reshape_1"
  op: "Reshape"
  input: "ssd300/expanded_conv_12/expand/BatchNorm/moving_mean/read"
  input: "ssd300/expanded_conv_12/expand/BatchNorm/Reshape_1/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "ssd300/expanded_conv_12/expand/BatchNorm/Reshape_2/shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000@\002\000\000\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "ssd300/expanded_conv_12/expand/BatchNorm/Reshape_2"
  op: "Reshape"
  input: "ssd300/expanded_conv_12/expand/BatchNorm/moving_variance/read"
  input: "ssd300/expanded_conv_12/expand/BatchNorm/Reshape_2/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "ssd300/expanded_conv_12/expand/BatchNorm/batchnorm_1/Add/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0010000000474974513
      }
    }
  }
}
node {
  name: "ssd300/expanded_conv_12/expand/BatchNorm/batchnorm_1/Add"
  op: "Add"
  input: "ssd300/expanded_conv_12/expand/BatchNorm/Reshape_2"
  input: "ssd300/expanded_conv_12/expand/BatchNorm/batchnorm_1/Add/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ssd300/expanded_conv_12/expand/BatchNorm/batchnorm_1/Rsqrt"
  op: "Rsqrt"
  input: "ssd300/expanded_conv_12/expand/BatchNorm/batchnorm_1/Add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ssd300/expanded_conv_12/expand/BatchNorm/batchnorm_1/mul"
  op: "Mul"
  input: "ssd300/expanded_conv_12/expand/layer_conv2d/Conv2D"
  input: "ssd300/expanded_conv_12/expand/BatchNorm/batchnorm_1/Rsqrt"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ssd300/expanded_conv_12/expand/BatchNorm/batchnorm_1/mul_1"
  op: "Mul"
  input: "ssd300/expanded_conv_12/expand/BatchNorm/Reshape_1"
  input: "ssd300/expanded_conv_12/expand/BatchNorm/batchnorm_1/Rsqrt"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ssd300/expanded_conv_12/expand/BatchNorm/batchnorm_1/sub"
  op: "Sub"
  input: "ssd300/expanded_conv_12/expand/BatchNorm/Reshape"
  input: "ssd300/expanded_conv_12/expand/BatchNorm/batchnorm_1/mul_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ssd300/expanded_conv_12/expand/BatchNorm/batchnorm_1/Add_1"
  op: "Add"
  input: "ssd300/expanded_conv_12/expand/BatchNorm/batchnorm_1/mul"
  input: "ssd300/expanded_conv_12/expand/BatchNorm/batchnorm_1/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ssd300/expanded_conv_12/expand/Relu6"
  op: "Relu6"
  input: "ssd300/expanded_conv_12/expand/BatchNorm/batchnorm_1/Add_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ssd300/expanded_conv_12/depthwise/depthwise_weights/Initializer/random_uniform/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv_12/depthwise/depthwise_weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\003\000\000\000\003\000\000\000@\002\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "ssd300/expanded_conv_12/depthwise/depthwise_weights/Initializer/random_uniform/min"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv_12/depthwise/depthwise_weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: -0.03399119898676872
      }
    }
  }
}
node {
  name: "ssd300/expanded_conv_12/depthwise/depthwise_weights/Initializer/random_uniform/max"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv_12/depthwise/depthwise_weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.03399119898676872
      }
    }
  }
}
node {
  name: "ssd300/expanded_conv_12/depthwise/depthwise_weights/Initializer/random_uniform/RandomUniform"
  op: "RandomUniform"
  input: "ssd300/expanded_conv_12/depthwise/depthwise_weights/Initializer/random_uniform/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv_12/depthwise/depthwise_weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "ssd300/expanded_conv_12/depthwise/depthwise_weights/Initializer/random_uniform/sub"
  op: "Sub"
  input: "ssd300/expanded_conv_12/depthwise/depthwise_weights/Initializer/random_uniform/max"
  input: "ssd300/expanded_conv_12/depthwise/depthwise_weights/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv_12/depthwise/depthwise_weights"
      }
    }
  }
}
node {
  name: "ssd300/expanded_conv_12/depthwise/depthwise_weights/Initializer/random_uniform/mul"
  op: "Mul"
  input: "ssd300/expanded_conv_12/depthwise/depthwise_weights/Initializer/random_uniform/RandomUniform"
  input: "ssd300/expanded_conv_12/depthwise/depthwise_weights/Initializer/random_uniform/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv_12/depthwise/depthwise_weights"
      }
    }
  }
}
node {
  name: "ssd300/expanded_conv_12/depthwise/depthwise_weights/Initializer/random_uniform"
  op: "Add"
  input: "ssd300/expanded_conv_12/depthwise/depthwise_weights/Initializer/random_uniform/mul"
  input: "ssd300/expanded_conv_12/depthwise/depthwise_weights/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv_12/depthwise/depthwise_weights"
      }
    }
  }
}
node {
  name: "ssd300/expanded_conv_12/depthwise/depthwise_weights"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv_12/depthwise/depthwise_weights"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 3
        }
        dim {
          size: 3
        }
        dim {
          size: 576
        }
        dim {
          size: 1
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "ssd300/expanded_conv_12/depthwise/depthwise_weights/Assign"
  op: "Assign"
  input: "ssd300/expanded_conv_12/depthwise/depthwise_weights"
  input: "ssd300/expanded_conv_12/depthwise/depthwise_weights/Initializer/random_uniform"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv_12/depthwise/depthwise_weights"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "ssd300/expanded_conv_12/depthwise/depthwise_weights/read"
  op: "Identity"
  input: "ssd300/expanded_conv_12/depthwise/depthwise_weights"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv_12/depthwise/depthwise_weights"
      }
    }
  }
}
node {
  name: "ssd300/expanded_conv_12/depthwise/layer_conv2d/depthwise/Shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\003\000\000\000\003\000\000\000@\002\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "ssd300/expanded_conv_12/depthwise/layer_conv2d/depthwise/dilation_rate"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "ssd300/expanded_conv_12/depthwise/layer_conv2d/depthwise"
  op: "DepthwiseConv2dNative"
  input: "ssd300/expanded_conv_12/expand/Relu6"
  input: "ssd300/expanded_conv_12/depthwise/depthwise_weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NCHW"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
}
node {
  name: "ssd300/expanded_conv_12/depthwise/BatchNorm/beta/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv_12/depthwise/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 576
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "ssd300/expanded_conv_12/depthwise/BatchNorm/beta"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv_12/depthwise/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 576
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "ssd300/expanded_conv_12/depthwise/BatchNorm/beta/Assign"
  op: "Assign"
  input: "ssd300/expanded_conv_12/depthwise/BatchNorm/beta"
  input: "ssd300/expanded_conv_12/depthwise/BatchNorm/beta/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv_12/depthwise/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "ssd300/expanded_conv_12/depthwise/BatchNorm/beta/read"
  op: "Identity"
  input: "ssd300/expanded_conv_12/depthwise/BatchNorm/beta"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv_12/depthwise/BatchNorm/beta"
      }
    }
  }
}
node {
  name: "ssd300/expanded_conv_12/depthwise/BatchNorm/moving_mean/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv_12/depthwise/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 576
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "ssd300/expanded_conv_12/depthwise/BatchNorm/moving_mean"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv_12/depthwise/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 576
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "ssd300/expanded_conv_12/depthwise/BatchNorm/moving_mean/Assign"
  op: "Assign"
  input: "ssd300/expanded_conv_12/depthwise/BatchNorm/moving_mean"
  input: "ssd300/expanded_conv_12/depthwise/BatchNorm/moving_mean/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv_12/depthwise/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "ssd300/expanded_conv_12/depthwise/BatchNorm/moving_mean/read"
  op: "Identity"
  input: "ssd300/expanded_conv_12/depthwise/BatchNorm/moving_mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv_12/depthwise/BatchNorm/moving_mean"
      }
    }
  }
}
node {
  name: "ssd300/expanded_conv_12/depthwise/BatchNorm/moving_variance/Initializer/ones"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv_12/depthwise/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 576
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "ssd300/expanded_conv_12/depthwise/BatchNorm/moving_variance"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv_12/depthwise/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 576
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "ssd300/expanded_conv_12/depthwise/BatchNorm/moving_variance/Assign"
  op: "Assign"
  input: "ssd300/expanded_conv_12/depthwise/BatchNorm/moving_variance"
  input: "ssd300/expanded_conv_12/depthwise/BatchNorm/moving_variance/Initializer/ones"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv_12/depthwise/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "ssd300/expanded_conv_12/depthwise/BatchNorm/moving_variance/read"
  op: "Identity"
  input: "ssd300/expanded_conv_12/depthwise/BatchNorm/moving_variance"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv_12/depthwise/BatchNorm/moving_variance"
      }
    }
  }
}
node {
  name: "ssd300/expanded_conv_12/depthwise/BatchNorm/Reshape/shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000@\002\000\000\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "ssd300/expanded_conv_12/depthwise/BatchNorm/Reshape"
  op: "Reshape"
  input: "ssd300/expanded_conv_12/depthwise/BatchNorm/beta/read"
  input: "ssd300/expanded_conv_12/depthwise/BatchNorm/Reshape/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "ssd300/expanded_conv_12/depthwise/BatchNorm/Reshape_1/shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000@\002\000\000\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "ssd300/expanded_conv_12/depthwise/BatchNorm/Reshape_1"
  op: "Reshape"
  input: "ssd300/expanded_conv_12/depthwise/BatchNorm/moving_mean/read"
  input: "ssd300/expanded_conv_12/depthwise/BatchNorm/Reshape_1/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "ssd300/expanded_conv_12/depthwise/BatchNorm/Reshape_2/shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000@\002\000\000\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "ssd300/expanded_conv_12/depthwise/BatchNorm/Reshape_2"
  op: "Reshape"
  input: "ssd300/expanded_conv_12/depthwise/BatchNorm/moving_variance/read"
  input: "ssd300/expanded_conv_12/depthwise/BatchNorm/Reshape_2/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "ssd300/expanded_conv_12/depthwise/BatchNorm/batchnorm_1/Add/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0010000000474974513
      }
    }
  }
}
node {
  name: "ssd300/expanded_conv_12/depthwise/BatchNorm/batchnorm_1/Add"
  op: "Add"
  input: "ssd300/expanded_conv_12/depthwise/BatchNorm/Reshape_2"
  input: "ssd300/expanded_conv_12/depthwise/BatchNorm/batchnorm_1/Add/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ssd300/expanded_conv_12/depthwise/BatchNorm/batchnorm_1/Rsqrt"
  op: "Rsqrt"
  input: "ssd300/expanded_conv_12/depthwise/BatchNorm/batchnorm_1/Add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ssd300/expanded_conv_12/depthwise/BatchNorm/batchnorm_1/mul"
  op: "Mul"
  input: "ssd300/expanded_conv_12/depthwise/layer_conv2d/depthwise"
  input: "ssd300/expanded_conv_12/depthwise/BatchNorm/batchnorm_1/Rsqrt"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ssd300/expanded_conv_12/depthwise/BatchNorm/batchnorm_1/mul_1"
  op: "Mul"
  input: "ssd300/expanded_conv_12/depthwise/BatchNorm/Reshape_1"
  input: "ssd300/expanded_conv_12/depthwise/BatchNorm/batchnorm_1/Rsqrt"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ssd300/expanded_conv_12/depthwise/BatchNorm/batchnorm_1/sub"
  op: "Sub"
  input: "ssd300/expanded_conv_12/depthwise/BatchNorm/Reshape"
  input: "ssd300/expanded_conv_12/depthwise/BatchNorm/batchnorm_1/mul_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ssd300/expanded_conv_12/depthwise/BatchNorm/batchnorm_1/Add_1"
  op: "Add"
  input: "ssd300/expanded_conv_12/depthwise/BatchNorm/batchnorm_1/mul"
  input: "ssd300/expanded_conv_12/depthwise/BatchNorm/batchnorm_1/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ssd300/expanded_conv_12/depthwise/Relu6"
  op: "Relu6"
  input: "ssd300/expanded_conv_12/depthwise/BatchNorm/batchnorm_1/Add_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ssd300/expanded_conv_12/project/weights/Initializer/random_uniform/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv_12/project/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000@\002\000\000`\000\000\000"
      }
    }
  }
}
node {
  name: "ssd300/expanded_conv_12/project/weights/Initializer/random_uniform/min"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv_12/project/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: -0.09449111670255661
      }
    }
  }
}
node {
  name: "ssd300/expanded_conv_12/project/weights/Initializer/random_uniform/max"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv_12/project/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.09449111670255661
      }
    }
  }
}
node {
  name: "ssd300/expanded_conv_12/project/weights/Initializer/random_uniform/RandomUniform"
  op: "RandomUniform"
  input: "ssd300/expanded_conv_12/project/weights/Initializer/random_uniform/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv_12/project/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "ssd300/expanded_conv_12/project/weights/Initializer/random_uniform/sub"
  op: "Sub"
  input: "ssd300/expanded_conv_12/project/weights/Initializer/random_uniform/max"
  input: "ssd300/expanded_conv_12/project/weights/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv_12/project/weights"
      }
    }
  }
}
node {
  name: "ssd300/expanded_conv_12/project/weights/Initializer/random_uniform/mul"
  op: "Mul"
  input: "ssd300/expanded_conv_12/project/weights/Initializer/random_uniform/RandomUniform"
  input: "ssd300/expanded_conv_12/project/weights/Initializer/random_uniform/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv_12/project/weights"
      }
    }
  }
}
node {
  name: "ssd300/expanded_conv_12/project/weights/Initializer/random_uniform"
  op: "Add"
  input: "ssd300/expanded_conv_12/project/weights/Initializer/random_uniform/mul"
  input: "ssd300/expanded_conv_12/project/weights/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv_12/project/weights"
      }
    }
  }
}
node {
  name: "ssd300/expanded_conv_12/project/weights"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv_12/project/weights"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
        dim {
          size: 1
        }
        dim {
          size: 576
        }
        dim {
          size: 96
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "ssd300/expanded_conv_12/project/weights/Assign"
  op: "Assign"
  input: "ssd300/expanded_conv_12/project/weights"
  input: "ssd300/expanded_conv_12/project/weights/Initializer/random_uniform"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv_12/project/weights"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "ssd300/expanded_conv_12/project/weights/read"
  op: "Identity"
  input: "ssd300/expanded_conv_12/project/weights"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv_12/project/weights"
      }
    }
  }
}
node {
  name: "ssd300/expanded_conv_12/project/layer_conv2d/Conv2D"
  op: "Conv2D"
  input: "ssd300/expanded_conv_12/depthwise/Relu6"
  input: "ssd300/expanded_conv_12/project/weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NCHW"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "explicit_paddings"
    value {
      list {
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "ssd300/expanded_conv_12/project/BatchNorm/beta/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv_12/project/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 96
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "ssd300/expanded_conv_12/project/BatchNorm/beta"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv_12/project/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 96
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "ssd300/expanded_conv_12/project/BatchNorm/beta/Assign"
  op: "Assign"
  input: "ssd300/expanded_conv_12/project/BatchNorm/beta"
  input: "ssd300/expanded_conv_12/project/BatchNorm/beta/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv_12/project/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "ssd300/expanded_conv_12/project/BatchNorm/beta/read"
  op: "Identity"
  input: "ssd300/expanded_conv_12/project/BatchNorm/beta"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv_12/project/BatchNorm/beta"
      }
    }
  }
}
node {
  name: "ssd300/expanded_conv_12/project/BatchNorm/moving_mean/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv_12/project/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 96
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "ssd300/expanded_conv_12/project/BatchNorm/moving_mean"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv_12/project/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 96
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "ssd300/expanded_conv_12/project/BatchNorm/moving_mean/Assign"
  op: "Assign"
  input: "ssd300/expanded_conv_12/project/BatchNorm/moving_mean"
  input: "ssd300/expanded_conv_12/project/BatchNorm/moving_mean/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv_12/project/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "ssd300/expanded_conv_12/project/BatchNorm/moving_mean/read"
  op: "Identity"
  input: "ssd300/expanded_conv_12/project/BatchNorm/moving_mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv_12/project/BatchNorm/moving_mean"
      }
    }
  }
}
node {
  name: "ssd300/expanded_conv_12/project/BatchNorm/moving_variance/Initializer/ones"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv_12/project/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 96
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "ssd300/expanded_conv_12/project/BatchNorm/moving_variance"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv_12/project/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 96
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "ssd300/expanded_conv_12/project/BatchNorm/moving_variance/Assign"
  op: "Assign"
  input: "ssd300/expanded_conv_12/project/BatchNorm/moving_variance"
  input: "ssd300/expanded_conv_12/project/BatchNorm/moving_variance/Initializer/ones"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv_12/project/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "ssd300/expanded_conv_12/project/BatchNorm/moving_variance/read"
  op: "Identity"
  input: "ssd300/expanded_conv_12/project/BatchNorm/moving_variance"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv_12/project/BatchNorm/moving_variance"
      }
    }
  }
}
node {
  name: "ssd300/expanded_conv_12/project/BatchNorm/Reshape/shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000`\000\000\000\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "ssd300/expanded_conv_12/project/BatchNorm/Reshape"
  op: "Reshape"
  input: "ssd300/expanded_conv_12/project/BatchNorm/beta/read"
  input: "ssd300/expanded_conv_12/project/BatchNorm/Reshape/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "ssd300/expanded_conv_12/project/BatchNorm/Reshape_1/shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000`\000\000\000\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "ssd300/expanded_conv_12/project/BatchNorm/Reshape_1"
  op: "Reshape"
  input: "ssd300/expanded_conv_12/project/BatchNorm/moving_mean/read"
  input: "ssd300/expanded_conv_12/project/BatchNorm/Reshape_1/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "ssd300/expanded_conv_12/project/BatchNorm/Reshape_2/shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000`\000\000\000\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "ssd300/expanded_conv_12/project/BatchNorm/Reshape_2"
  op: "Reshape"
  input: "ssd300/expanded_conv_12/project/BatchNorm/moving_variance/read"
  input: "ssd300/expanded_conv_12/project/BatchNorm/Reshape_2/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "ssd300/expanded_conv_12/project/BatchNorm/batchnorm_1/Add/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0010000000474974513
      }
    }
  }
}
node {
  name: "ssd300/expanded_conv_12/project/BatchNorm/batchnorm_1/Add"
  op: "Add"
  input: "ssd300/expanded_conv_12/project/BatchNorm/Reshape_2"
  input: "ssd300/expanded_conv_12/project/BatchNorm/batchnorm_1/Add/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ssd300/expanded_conv_12/project/BatchNorm/batchnorm_1/Rsqrt"
  op: "Rsqrt"
  input: "ssd300/expanded_conv_12/project/BatchNorm/batchnorm_1/Add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ssd300/expanded_conv_12/project/BatchNorm/batchnorm_1/mul"
  op: "Mul"
  input: "ssd300/expanded_conv_12/project/layer_conv2d/Conv2D"
  input: "ssd300/expanded_conv_12/project/BatchNorm/batchnorm_1/Rsqrt"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ssd300/expanded_conv_12/project/BatchNorm/batchnorm_1/mul_1"
  op: "Mul"
  input: "ssd300/expanded_conv_12/project/BatchNorm/Reshape_1"
  input: "ssd300/expanded_conv_12/project/BatchNorm/batchnorm_1/Rsqrt"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ssd300/expanded_conv_12/project/BatchNorm/batchnorm_1/sub"
  op: "Sub"
  input: "ssd300/expanded_conv_12/project/BatchNorm/Reshape"
  input: "ssd300/expanded_conv_12/project/BatchNorm/batchnorm_1/mul_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ssd300/expanded_conv_12/project/BatchNorm/batchnorm_1/Add_1"
  op: "Add"
  input: "ssd300/expanded_conv_12/project/BatchNorm/batchnorm_1/mul"
  input: "ssd300/expanded_conv_12/project/BatchNorm/batchnorm_1/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ssd300/expanded_conv_12/Add"
  op: "Add"
  input: "ssd300/expanded_conv_12/project/BatchNorm/batchnorm_1/Add_1"
  input: "ssd300/expanded_conv_11/Add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ssd300/expanded_conv_13/expand/weights/Initializer/random_uniform/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv_13/expand/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000`\000\000\000@\002\000\000"
      }
    }
  }
}
node {
  name: "ssd300/expanded_conv_13/expand/weights/Initializer/random_uniform/min"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv_13/expand/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: -0.09449111670255661
      }
    }
  }
}
node {
  name: "ssd300/expanded_conv_13/expand/weights/Initializer/random_uniform/max"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv_13/expand/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.09449111670255661
      }
    }
  }
}
node {
  name: "ssd300/expanded_conv_13/expand/weights/Initializer/random_uniform/RandomUniform"
  op: "RandomUniform"
  input: "ssd300/expanded_conv_13/expand/weights/Initializer/random_uniform/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv_13/expand/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "ssd300/expanded_conv_13/expand/weights/Initializer/random_uniform/sub"
  op: "Sub"
  input: "ssd300/expanded_conv_13/expand/weights/Initializer/random_uniform/max"
  input: "ssd300/expanded_conv_13/expand/weights/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv_13/expand/weights"
      }
    }
  }
}
node {
  name: "ssd300/expanded_conv_13/expand/weights/Initializer/random_uniform/mul"
  op: "Mul"
  input: "ssd300/expanded_conv_13/expand/weights/Initializer/random_uniform/RandomUniform"
  input: "ssd300/expanded_conv_13/expand/weights/Initializer/random_uniform/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv_13/expand/weights"
      }
    }
  }
}
node {
  name: "ssd300/expanded_conv_13/expand/weights/Initializer/random_uniform"
  op: "Add"
  input: "ssd300/expanded_conv_13/expand/weights/Initializer/random_uniform/mul"
  input: "ssd300/expanded_conv_13/expand/weights/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv_13/expand/weights"
      }
    }
  }
}
node {
  name: "ssd300/expanded_conv_13/expand/weights"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv_13/expand/weights"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
        dim {
          size: 1
        }
        dim {
          size: 96
        }
        dim {
          size: 576
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "ssd300/expanded_conv_13/expand/weights/Assign"
  op: "Assign"
  input: "ssd300/expanded_conv_13/expand/weights"
  input: "ssd300/expanded_conv_13/expand/weights/Initializer/random_uniform"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv_13/expand/weights"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "ssd300/expanded_conv_13/expand/weights/read"
  op: "Identity"
  input: "ssd300/expanded_conv_13/expand/weights"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv_13/expand/weights"
      }
    }
  }
}
node {
  name: "ssd300/expanded_conv_13/expand/layer_conv2d/Conv2D"
  op: "Conv2D"
  input: "ssd300/expanded_conv_12/Add"
  input: "ssd300/expanded_conv_13/expand/weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NCHW"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "explicit_paddings"
    value {
      list {
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "ssd300/expanded_conv_13/expand/BatchNorm/beta/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv_13/expand/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 576
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "ssd300/expanded_conv_13/expand/BatchNorm/beta"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv_13/expand/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 576
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "ssd300/expanded_conv_13/expand/BatchNorm/beta/Assign"
  op: "Assign"
  input: "ssd300/expanded_conv_13/expand/BatchNorm/beta"
  input: "ssd300/expanded_conv_13/expand/BatchNorm/beta/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv_13/expand/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "ssd300/expanded_conv_13/expand/BatchNorm/beta/read"
  op: "Identity"
  input: "ssd300/expanded_conv_13/expand/BatchNorm/beta"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv_13/expand/BatchNorm/beta"
      }
    }
  }
}
node {
  name: "ssd300/expanded_conv_13/expand/BatchNorm/moving_mean/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv_13/expand/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 576
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "ssd300/expanded_conv_13/expand/BatchNorm/moving_mean"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv_13/expand/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 576
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "ssd300/expanded_conv_13/expand/BatchNorm/moving_mean/Assign"
  op: "Assign"
  input: "ssd300/expanded_conv_13/expand/BatchNorm/moving_mean"
  input: "ssd300/expanded_conv_13/expand/BatchNorm/moving_mean/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv_13/expand/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "ssd300/expanded_conv_13/expand/BatchNorm/moving_mean/read"
  op: "Identity"
  input: "ssd300/expanded_conv_13/expand/BatchNorm/moving_mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv_13/expand/BatchNorm/moving_mean"
      }
    }
  }
}
node {
  name: "ssd300/expanded_conv_13/expand/BatchNorm/moving_variance/Initializer/ones"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv_13/expand/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 576
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "ssd300/expanded_conv_13/expand/BatchNorm/moving_variance"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv_13/expand/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 576
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "ssd300/expanded_conv_13/expand/BatchNorm/moving_variance/Assign"
  op: "Assign"
  input: "ssd300/expanded_conv_13/expand/BatchNorm/moving_variance"
  input: "ssd300/expanded_conv_13/expand/BatchNorm/moving_variance/Initializer/ones"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv_13/expand/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "ssd300/expanded_conv_13/expand/BatchNorm/moving_variance/read"
  op: "Identity"
  input: "ssd300/expanded_conv_13/expand/BatchNorm/moving_variance"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv_13/expand/BatchNorm/moving_variance"
      }
    }
  }
}
node {
  name: "ssd300/expanded_conv_13/expand/BatchNorm/Reshape/shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000@\002\000\000\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "ssd300/expanded_conv_13/expand/BatchNorm/Reshape"
  op: "Reshape"
  input: "ssd300/expanded_conv_13/expand/BatchNorm/beta/read"
  input: "ssd300/expanded_conv_13/expand/BatchNorm/Reshape/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "ssd300/expanded_conv_13/expand/BatchNorm/Reshape_1/shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000@\002\000\000\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "ssd300/expanded_conv_13/expand/BatchNorm/Reshape_1"
  op: "Reshape"
  input: "ssd300/expanded_conv_13/expand/BatchNorm/moving_mean/read"
  input: "ssd300/expanded_conv_13/expand/BatchNorm/Reshape_1/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "ssd300/expanded_conv_13/expand/BatchNorm/Reshape_2/shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000@\002\000\000\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "ssd300/expanded_conv_13/expand/BatchNorm/Reshape_2"
  op: "Reshape"
  input: "ssd300/expanded_conv_13/expand/BatchNorm/moving_variance/read"
  input: "ssd300/expanded_conv_13/expand/BatchNorm/Reshape_2/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "ssd300/expanded_conv_13/expand/BatchNorm/batchnorm_1/Add/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0010000000474974513
      }
    }
  }
}
node {
  name: "ssd300/expanded_conv_13/expand/BatchNorm/batchnorm_1/Add"
  op: "Add"
  input: "ssd300/expanded_conv_13/expand/BatchNorm/Reshape_2"
  input: "ssd300/expanded_conv_13/expand/BatchNorm/batchnorm_1/Add/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ssd300/expanded_conv_13/expand/BatchNorm/batchnorm_1/Rsqrt"
  op: "Rsqrt"
  input: "ssd300/expanded_conv_13/expand/BatchNorm/batchnorm_1/Add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ssd300/expanded_conv_13/expand/BatchNorm/batchnorm_1/mul"
  op: "Mul"
  input: "ssd300/expanded_conv_13/expand/layer_conv2d/Conv2D"
  input: "ssd300/expanded_conv_13/expand/BatchNorm/batchnorm_1/Rsqrt"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ssd300/expanded_conv_13/expand/BatchNorm/batchnorm_1/mul_1"
  op: "Mul"
  input: "ssd300/expanded_conv_13/expand/BatchNorm/Reshape_1"
  input: "ssd300/expanded_conv_13/expand/BatchNorm/batchnorm_1/Rsqrt"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ssd300/expanded_conv_13/expand/BatchNorm/batchnorm_1/sub"
  op: "Sub"
  input: "ssd300/expanded_conv_13/expand/BatchNorm/Reshape"
  input: "ssd300/expanded_conv_13/expand/BatchNorm/batchnorm_1/mul_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ssd300/expanded_conv_13/expand/BatchNorm/batchnorm_1/Add_1"
  op: "Add"
  input: "ssd300/expanded_conv_13/expand/BatchNorm/batchnorm_1/mul"
  input: "ssd300/expanded_conv_13/expand/BatchNorm/batchnorm_1/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ssd300/expanded_conv_13/expand/Relu6"
  op: "Relu6"
  input: "ssd300/expanded_conv_13/expand/BatchNorm/batchnorm_1/Add_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ssd300/expanded_conv_13/depthwise/depthwise_weights/Initializer/random_uniform/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv_13/depthwise/depthwise_weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\003\000\000\000\003\000\000\000@\002\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "ssd300/expanded_conv_13/depthwise/depthwise_weights/Initializer/random_uniform/min"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv_13/depthwise/depthwise_weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: -0.03399119898676872
      }
    }
  }
}
node {
  name: "ssd300/expanded_conv_13/depthwise/depthwise_weights/Initializer/random_uniform/max"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv_13/depthwise/depthwise_weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.03399119898676872
      }
    }
  }
}
node {
  name: "ssd300/expanded_conv_13/depthwise/depthwise_weights/Initializer/random_uniform/RandomUniform"
  op: "RandomUniform"
  input: "ssd300/expanded_conv_13/depthwise/depthwise_weights/Initializer/random_uniform/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv_13/depthwise/depthwise_weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "ssd300/expanded_conv_13/depthwise/depthwise_weights/Initializer/random_uniform/sub"
  op: "Sub"
  input: "ssd300/expanded_conv_13/depthwise/depthwise_weights/Initializer/random_uniform/max"
  input: "ssd300/expanded_conv_13/depthwise/depthwise_weights/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv_13/depthwise/depthwise_weights"
      }
    }
  }
}
node {
  name: "ssd300/expanded_conv_13/depthwise/depthwise_weights/Initializer/random_uniform/mul"
  op: "Mul"
  input: "ssd300/expanded_conv_13/depthwise/depthwise_weights/Initializer/random_uniform/RandomUniform"
  input: "ssd300/expanded_conv_13/depthwise/depthwise_weights/Initializer/random_uniform/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv_13/depthwise/depthwise_weights"
      }
    }
  }
}
node {
  name: "ssd300/expanded_conv_13/depthwise/depthwise_weights/Initializer/random_uniform"
  op: "Add"
  input: "ssd300/expanded_conv_13/depthwise/depthwise_weights/Initializer/random_uniform/mul"
  input: "ssd300/expanded_conv_13/depthwise/depthwise_weights/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv_13/depthwise/depthwise_weights"
      }
    }
  }
}
node {
  name: "ssd300/expanded_conv_13/depthwise/depthwise_weights"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv_13/depthwise/depthwise_weights"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 3
        }
        dim {
          size: 3
        }
        dim {
          size: 576
        }
        dim {
          size: 1
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "ssd300/expanded_conv_13/depthwise/depthwise_weights/Assign"
  op: "Assign"
  input: "ssd300/expanded_conv_13/depthwise/depthwise_weights"
  input: "ssd300/expanded_conv_13/depthwise/depthwise_weights/Initializer/random_uniform"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv_13/depthwise/depthwise_weights"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "ssd300/expanded_conv_13/depthwise/depthwise_weights/read"
  op: "Identity"
  input: "ssd300/expanded_conv_13/depthwise/depthwise_weights"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv_13/depthwise/depthwise_weights"
      }
    }
  }
}
node {
  name: "ssd300/expanded_conv_13/depthwise/layer_conv2d/depthwise/Shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\003\000\000\000\003\000\000\000@\002\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "ssd300/expanded_conv_13/depthwise/layer_conv2d/depthwise/dilation_rate"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "ssd300/expanded_conv_13/depthwise/layer_conv2d/depthwise"
  op: "DepthwiseConv2dNative"
  input: "ssd300/expanded_conv_13/expand/Relu6"
  input: "ssd300/expanded_conv_13/depthwise/depthwise_weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NCHW"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 2
        i: 2
      }
    }
  }
}
node {
  name: "ssd300/expanded_conv_13/depthwise/BatchNorm/beta/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv_13/depthwise/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 576
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "ssd300/expanded_conv_13/depthwise/BatchNorm/beta"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv_13/depthwise/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 576
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "ssd300/expanded_conv_13/depthwise/BatchNorm/beta/Assign"
  op: "Assign"
  input: "ssd300/expanded_conv_13/depthwise/BatchNorm/beta"
  input: "ssd300/expanded_conv_13/depthwise/BatchNorm/beta/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv_13/depthwise/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "ssd300/expanded_conv_13/depthwise/BatchNorm/beta/read"
  op: "Identity"
  input: "ssd300/expanded_conv_13/depthwise/BatchNorm/beta"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv_13/depthwise/BatchNorm/beta"
      }
    }
  }
}
node {
  name: "ssd300/expanded_conv_13/depthwise/BatchNorm/moving_mean/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv_13/depthwise/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 576
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "ssd300/expanded_conv_13/depthwise/BatchNorm/moving_mean"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv_13/depthwise/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 576
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "ssd300/expanded_conv_13/depthwise/BatchNorm/moving_mean/Assign"
  op: "Assign"
  input: "ssd300/expanded_conv_13/depthwise/BatchNorm/moving_mean"
  input: "ssd300/expanded_conv_13/depthwise/BatchNorm/moving_mean/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv_13/depthwise/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "ssd300/expanded_conv_13/depthwise/BatchNorm/moving_mean/read"
  op: "Identity"
  input: "ssd300/expanded_conv_13/depthwise/BatchNorm/moving_mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv_13/depthwise/BatchNorm/moving_mean"
      }
    }
  }
}
node {
  name: "ssd300/expanded_conv_13/depthwise/BatchNorm/moving_variance/Initializer/ones"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv_13/depthwise/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 576
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "ssd300/expanded_conv_13/depthwise/BatchNorm/moving_variance"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv_13/depthwise/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 576
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "ssd300/expanded_conv_13/depthwise/BatchNorm/moving_variance/Assign"
  op: "Assign"
  input: "ssd300/expanded_conv_13/depthwise/BatchNorm/moving_variance"
  input: "ssd300/expanded_conv_13/depthwise/BatchNorm/moving_variance/Initializer/ones"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv_13/depthwise/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "ssd300/expanded_conv_13/depthwise/BatchNorm/moving_variance/read"
  op: "Identity"
  input: "ssd300/expanded_conv_13/depthwise/BatchNorm/moving_variance"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv_13/depthwise/BatchNorm/moving_variance"
      }
    }
  }
}
node {
  name: "ssd300/expanded_conv_13/depthwise/BatchNorm/Reshape/shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000@\002\000\000\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "ssd300/expanded_conv_13/depthwise/BatchNorm/Reshape"
  op: "Reshape"
  input: "ssd300/expanded_conv_13/depthwise/BatchNorm/beta/read"
  input: "ssd300/expanded_conv_13/depthwise/BatchNorm/Reshape/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "ssd300/expanded_conv_13/depthwise/BatchNorm/Reshape_1/shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000@\002\000\000\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "ssd300/expanded_conv_13/depthwise/BatchNorm/Reshape_1"
  op: "Reshape"
  input: "ssd300/expanded_conv_13/depthwise/BatchNorm/moving_mean/read"
  input: "ssd300/expanded_conv_13/depthwise/BatchNorm/Reshape_1/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "ssd300/expanded_conv_13/depthwise/BatchNorm/Reshape_2/shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000@\002\000\000\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "ssd300/expanded_conv_13/depthwise/BatchNorm/Reshape_2"
  op: "Reshape"
  input: "ssd300/expanded_conv_13/depthwise/BatchNorm/moving_variance/read"
  input: "ssd300/expanded_conv_13/depthwise/BatchNorm/Reshape_2/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "ssd300/expanded_conv_13/depthwise/BatchNorm/batchnorm_1/Add/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0010000000474974513
      }
    }
  }
}
node {
  name: "ssd300/expanded_conv_13/depthwise/BatchNorm/batchnorm_1/Add"
  op: "Add"
  input: "ssd300/expanded_conv_13/depthwise/BatchNorm/Reshape_2"
  input: "ssd300/expanded_conv_13/depthwise/BatchNorm/batchnorm_1/Add/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ssd300/expanded_conv_13/depthwise/BatchNorm/batchnorm_1/Rsqrt"
  op: "Rsqrt"
  input: "ssd300/expanded_conv_13/depthwise/BatchNorm/batchnorm_1/Add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ssd300/expanded_conv_13/depthwise/BatchNorm/batchnorm_1/mul"
  op: "Mul"
  input: "ssd300/expanded_conv_13/depthwise/layer_conv2d/depthwise"
  input: "ssd300/expanded_conv_13/depthwise/BatchNorm/batchnorm_1/Rsqrt"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ssd300/expanded_conv_13/depthwise/BatchNorm/batchnorm_1/mul_1"
  op: "Mul"
  input: "ssd300/expanded_conv_13/depthwise/BatchNorm/Reshape_1"
  input: "ssd300/expanded_conv_13/depthwise/BatchNorm/batchnorm_1/Rsqrt"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ssd300/expanded_conv_13/depthwise/BatchNorm/batchnorm_1/sub"
  op: "Sub"
  input: "ssd300/expanded_conv_13/depthwise/BatchNorm/Reshape"
  input: "ssd300/expanded_conv_13/depthwise/BatchNorm/batchnorm_1/mul_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ssd300/expanded_conv_13/depthwise/BatchNorm/batchnorm_1/Add_1"
  op: "Add"
  input: "ssd300/expanded_conv_13/depthwise/BatchNorm/batchnorm_1/mul"
  input: "ssd300/expanded_conv_13/depthwise/BatchNorm/batchnorm_1/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ssd300/expanded_conv_13/depthwise/Relu6"
  op: "Relu6"
  input: "ssd300/expanded_conv_13/depthwise/BatchNorm/batchnorm_1/Add_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ssd300/expanded_conv_13/project/weights/Initializer/random_uniform/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv_13/project/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000@\002\000\000\240\000\000\000"
      }
    }
  }
}
node {
  name: "ssd300/expanded_conv_13/project/weights/Initializer/random_uniform/min"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv_13/project/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: -0.0902893915772438
      }
    }
  }
}
node {
  name: "ssd300/expanded_conv_13/project/weights/Initializer/random_uniform/max"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv_13/project/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0902893915772438
      }
    }
  }
}
node {
  name: "ssd300/expanded_conv_13/project/weights/Initializer/random_uniform/RandomUniform"
  op: "RandomUniform"
  input: "ssd300/expanded_conv_13/project/weights/Initializer/random_uniform/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv_13/project/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "ssd300/expanded_conv_13/project/weights/Initializer/random_uniform/sub"
  op: "Sub"
  input: "ssd300/expanded_conv_13/project/weights/Initializer/random_uniform/max"
  input: "ssd300/expanded_conv_13/project/weights/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv_13/project/weights"
      }
    }
  }
}
node {
  name: "ssd300/expanded_conv_13/project/weights/Initializer/random_uniform/mul"
  op: "Mul"
  input: "ssd300/expanded_conv_13/project/weights/Initializer/random_uniform/RandomUniform"
  input: "ssd300/expanded_conv_13/project/weights/Initializer/random_uniform/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv_13/project/weights"
      }
    }
  }
}
node {
  name: "ssd300/expanded_conv_13/project/weights/Initializer/random_uniform"
  op: "Add"
  input: "ssd300/expanded_conv_13/project/weights/Initializer/random_uniform/mul"
  input: "ssd300/expanded_conv_13/project/weights/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv_13/project/weights"
      }
    }
  }
}
node {
  name: "ssd300/expanded_conv_13/project/weights"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv_13/project/weights"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
        dim {
          size: 1
        }
        dim {
          size: 576
        }
        dim {
          size: 160
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "ssd300/expanded_conv_13/project/weights/Assign"
  op: "Assign"
  input: "ssd300/expanded_conv_13/project/weights"
  input: "ssd300/expanded_conv_13/project/weights/Initializer/random_uniform"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv_13/project/weights"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "ssd300/expanded_conv_13/project/weights/read"
  op: "Identity"
  input: "ssd300/expanded_conv_13/project/weights"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv_13/project/weights"
      }
    }
  }
}
node {
  name: "ssd300/expanded_conv_13/project/layer_conv2d/Conv2D"
  op: "Conv2D"
  input: "ssd300/expanded_conv_13/depthwise/Relu6"
  input: "ssd300/expanded_conv_13/project/weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NCHW"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "explicit_paddings"
    value {
      list {
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "ssd300/expanded_conv_13/project/BatchNorm/beta/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv_13/project/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 160
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "ssd300/expanded_conv_13/project/BatchNorm/beta"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv_13/project/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 160
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "ssd300/expanded_conv_13/project/BatchNorm/beta/Assign"
  op: "Assign"
  input: "ssd300/expanded_conv_13/project/BatchNorm/beta"
  input: "ssd300/expanded_conv_13/project/BatchNorm/beta/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv_13/project/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "ssd300/expanded_conv_13/project/BatchNorm/beta/read"
  op: "Identity"
  input: "ssd300/expanded_conv_13/project/BatchNorm/beta"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv_13/project/BatchNorm/beta"
      }
    }
  }
}
node {
  name: "ssd300/expanded_conv_13/project/BatchNorm/moving_mean/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv_13/project/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 160
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "ssd300/expanded_conv_13/project/BatchNorm/moving_mean"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv_13/project/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 160
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "ssd300/expanded_conv_13/project/BatchNorm/moving_mean/Assign"
  op: "Assign"
  input: "ssd300/expanded_conv_13/project/BatchNorm/moving_mean"
  input: "ssd300/expanded_conv_13/project/BatchNorm/moving_mean/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv_13/project/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "ssd300/expanded_conv_13/project/BatchNorm/moving_mean/read"
  op: "Identity"
  input: "ssd300/expanded_conv_13/project/BatchNorm/moving_mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv_13/project/BatchNorm/moving_mean"
      }
    }
  }
}
node {
  name: "ssd300/expanded_conv_13/project/BatchNorm/moving_variance/Initializer/ones"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv_13/project/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 160
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "ssd300/expanded_conv_13/project/BatchNorm/moving_variance"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv_13/project/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 160
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "ssd300/expanded_conv_13/project/BatchNorm/moving_variance/Assign"
  op: "Assign"
  input: "ssd300/expanded_conv_13/project/BatchNorm/moving_variance"
  input: "ssd300/expanded_conv_13/project/BatchNorm/moving_variance/Initializer/ones"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv_13/project/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "ssd300/expanded_conv_13/project/BatchNorm/moving_variance/read"
  op: "Identity"
  input: "ssd300/expanded_conv_13/project/BatchNorm/moving_variance"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv_13/project/BatchNorm/moving_variance"
      }
    }
  }
}
node {
  name: "ssd300/expanded_conv_13/project/BatchNorm/Reshape/shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\240\000\000\000\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "ssd300/expanded_conv_13/project/BatchNorm/Reshape"
  op: "Reshape"
  input: "ssd300/expanded_conv_13/project/BatchNorm/beta/read"
  input: "ssd300/expanded_conv_13/project/BatchNorm/Reshape/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "ssd300/expanded_conv_13/project/BatchNorm/Reshape_1/shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\240\000\000\000\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "ssd300/expanded_conv_13/project/BatchNorm/Reshape_1"
  op: "Reshape"
  input: "ssd300/expanded_conv_13/project/BatchNorm/moving_mean/read"
  input: "ssd300/expanded_conv_13/project/BatchNorm/Reshape_1/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "ssd300/expanded_conv_13/project/BatchNorm/Reshape_2/shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\240\000\000\000\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "ssd300/expanded_conv_13/project/BatchNorm/Reshape_2"
  op: "Reshape"
  input: "ssd300/expanded_conv_13/project/BatchNorm/moving_variance/read"
  input: "ssd300/expanded_conv_13/project/BatchNorm/Reshape_2/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "ssd300/expanded_conv_13/project/BatchNorm/batchnorm_1/Add/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0010000000474974513
      }
    }
  }
}
node {
  name: "ssd300/expanded_conv_13/project/BatchNorm/batchnorm_1/Add"
  op: "Add"
  input: "ssd300/expanded_conv_13/project/BatchNorm/Reshape_2"
  input: "ssd300/expanded_conv_13/project/BatchNorm/batchnorm_1/Add/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ssd300/expanded_conv_13/project/BatchNorm/batchnorm_1/Rsqrt"
  op: "Rsqrt"
  input: "ssd300/expanded_conv_13/project/BatchNorm/batchnorm_1/Add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ssd300/expanded_conv_13/project/BatchNorm/batchnorm_1/mul"
  op: "Mul"
  input: "ssd300/expanded_conv_13/project/layer_conv2d/Conv2D"
  input: "ssd300/expanded_conv_13/project/BatchNorm/batchnorm_1/Rsqrt"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ssd300/expanded_conv_13/project/BatchNorm/batchnorm_1/mul_1"
  op: "Mul"
  input: "ssd300/expanded_conv_13/project/BatchNorm/Reshape_1"
  input: "ssd300/expanded_conv_13/project/BatchNorm/batchnorm_1/Rsqrt"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ssd300/expanded_conv_13/project/BatchNorm/batchnorm_1/sub"
  op: "Sub"
  input: "ssd300/expanded_conv_13/project/BatchNorm/Reshape"
  input: "ssd300/expanded_conv_13/project/BatchNorm/batchnorm_1/mul_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ssd300/expanded_conv_13/project/BatchNorm/batchnorm_1/Add_1"
  op: "Add"
  input: "ssd300/expanded_conv_13/project/BatchNorm/batchnorm_1/mul"
  input: "ssd300/expanded_conv_13/project/BatchNorm/batchnorm_1/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ssd300/expanded_conv_14/expand/weights/Initializer/random_uniform/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv_14/expand/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000\240\000\000\000\300\003\000\000"
      }
    }
  }
}
node {
  name: "ssd300/expanded_conv_14/expand/weights/Initializer/random_uniform/min"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv_14/expand/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: -0.07319250702857971
      }
    }
  }
}
node {
  name: "ssd300/expanded_conv_14/expand/weights/Initializer/random_uniform/max"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv_14/expand/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.07319250702857971
      }
    }
  }
}
node {
  name: "ssd300/expanded_conv_14/expand/weights/Initializer/random_uniform/RandomUniform"
  op: "RandomUniform"
  input: "ssd300/expanded_conv_14/expand/weights/Initializer/random_uniform/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv_14/expand/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "ssd300/expanded_conv_14/expand/weights/Initializer/random_uniform/sub"
  op: "Sub"
  input: "ssd300/expanded_conv_14/expand/weights/Initializer/random_uniform/max"
  input: "ssd300/expanded_conv_14/expand/weights/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv_14/expand/weights"
      }
    }
  }
}
node {
  name: "ssd300/expanded_conv_14/expand/weights/Initializer/random_uniform/mul"
  op: "Mul"
  input: "ssd300/expanded_conv_14/expand/weights/Initializer/random_uniform/RandomUniform"
  input: "ssd300/expanded_conv_14/expand/weights/Initializer/random_uniform/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv_14/expand/weights"
      }
    }
  }
}
node {
  name: "ssd300/expanded_conv_14/expand/weights/Initializer/random_uniform"
  op: "Add"
  input: "ssd300/expanded_conv_14/expand/weights/Initializer/random_uniform/mul"
  input: "ssd300/expanded_conv_14/expand/weights/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv_14/expand/weights"
      }
    }
  }
}
node {
  name: "ssd300/expanded_conv_14/expand/weights"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv_14/expand/weights"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
        dim {
          size: 1
        }
        dim {
          size: 160
        }
        dim {
          size: 960
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "ssd300/expanded_conv_14/expand/weights/Assign"
  op: "Assign"
  input: "ssd300/expanded_conv_14/expand/weights"
  input: "ssd300/expanded_conv_14/expand/weights/Initializer/random_uniform"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv_14/expand/weights"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "ssd300/expanded_conv_14/expand/weights/read"
  op: "Identity"
  input: "ssd300/expanded_conv_14/expand/weights"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv_14/expand/weights"
      }
    }
  }
}
node {
  name: "ssd300/expanded_conv_14/expand/layer_conv2d/Conv2D"
  op: "Conv2D"
  input: "ssd300/expanded_conv_13/project/BatchNorm/batchnorm_1/Add_1"
  input: "ssd300/expanded_conv_14/expand/weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NCHW"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "explicit_paddings"
    value {
      list {
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "ssd300/expanded_conv_14/expand/BatchNorm/beta/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv_14/expand/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 960
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "ssd300/expanded_conv_14/expand/BatchNorm/beta"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv_14/expand/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 960
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "ssd300/expanded_conv_14/expand/BatchNorm/beta/Assign"
  op: "Assign"
  input: "ssd300/expanded_conv_14/expand/BatchNorm/beta"
  input: "ssd300/expanded_conv_14/expand/BatchNorm/beta/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv_14/expand/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "ssd300/expanded_conv_14/expand/BatchNorm/beta/read"
  op: "Identity"
  input: "ssd300/expanded_conv_14/expand/BatchNorm/beta"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv_14/expand/BatchNorm/beta"
      }
    }
  }
}
node {
  name: "ssd300/expanded_conv_14/expand/BatchNorm/moving_mean/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv_14/expand/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 960
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "ssd300/expanded_conv_14/expand/BatchNorm/moving_mean"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv_14/expand/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 960
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "ssd300/expanded_conv_14/expand/BatchNorm/moving_mean/Assign"
  op: "Assign"
  input: "ssd300/expanded_conv_14/expand/BatchNorm/moving_mean"
  input: "ssd300/expanded_conv_14/expand/BatchNorm/moving_mean/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv_14/expand/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "ssd300/expanded_conv_14/expand/BatchNorm/moving_mean/read"
  op: "Identity"
  input: "ssd300/expanded_conv_14/expand/BatchNorm/moving_mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv_14/expand/BatchNorm/moving_mean"
      }
    }
  }
}
node {
  name: "ssd300/expanded_conv_14/expand/BatchNorm/moving_variance/Initializer/ones"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv_14/expand/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 960
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "ssd300/expanded_conv_14/expand/BatchNorm/moving_variance"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv_14/expand/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 960
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "ssd300/expanded_conv_14/expand/BatchNorm/moving_variance/Assign"
  op: "Assign"
  input: "ssd300/expanded_conv_14/expand/BatchNorm/moving_variance"
  input: "ssd300/expanded_conv_14/expand/BatchNorm/moving_variance/Initializer/ones"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv_14/expand/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "ssd300/expanded_conv_14/expand/BatchNorm/moving_variance/read"
  op: "Identity"
  input: "ssd300/expanded_conv_14/expand/BatchNorm/moving_variance"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv_14/expand/BatchNorm/moving_variance"
      }
    }
  }
}
node {
  name: "ssd300/expanded_conv_14/expand/BatchNorm/Reshape/shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\300\003\000\000\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "ssd300/expanded_conv_14/expand/BatchNorm/Reshape"
  op: "Reshape"
  input: "ssd300/expanded_conv_14/expand/BatchNorm/beta/read"
  input: "ssd300/expanded_conv_14/expand/BatchNorm/Reshape/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "ssd300/expanded_conv_14/expand/BatchNorm/Reshape_1/shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\300\003\000\000\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "ssd300/expanded_conv_14/expand/BatchNorm/Reshape_1"
  op: "Reshape"
  input: "ssd300/expanded_conv_14/expand/BatchNorm/moving_mean/read"
  input: "ssd300/expanded_conv_14/expand/BatchNorm/Reshape_1/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "ssd300/expanded_conv_14/expand/BatchNorm/Reshape_2/shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\300\003\000\000\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "ssd300/expanded_conv_14/expand/BatchNorm/Reshape_2"
  op: "Reshape"
  input: "ssd300/expanded_conv_14/expand/BatchNorm/moving_variance/read"
  input: "ssd300/expanded_conv_14/expand/BatchNorm/Reshape_2/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "ssd300/expanded_conv_14/expand/BatchNorm/batchnorm_1/Add/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0010000000474974513
      }
    }
  }
}
node {
  name: "ssd300/expanded_conv_14/expand/BatchNorm/batchnorm_1/Add"
  op: "Add"
  input: "ssd300/expanded_conv_14/expand/BatchNorm/Reshape_2"
  input: "ssd300/expanded_conv_14/expand/BatchNorm/batchnorm_1/Add/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ssd300/expanded_conv_14/expand/BatchNorm/batchnorm_1/Rsqrt"
  op: "Rsqrt"
  input: "ssd300/expanded_conv_14/expand/BatchNorm/batchnorm_1/Add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ssd300/expanded_conv_14/expand/BatchNorm/batchnorm_1/mul"
  op: "Mul"
  input: "ssd300/expanded_conv_14/expand/layer_conv2d/Conv2D"
  input: "ssd300/expanded_conv_14/expand/BatchNorm/batchnorm_1/Rsqrt"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ssd300/expanded_conv_14/expand/BatchNorm/batchnorm_1/mul_1"
  op: "Mul"
  input: "ssd300/expanded_conv_14/expand/BatchNorm/Reshape_1"
  input: "ssd300/expanded_conv_14/expand/BatchNorm/batchnorm_1/Rsqrt"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ssd300/expanded_conv_14/expand/BatchNorm/batchnorm_1/sub"
  op: "Sub"
  input: "ssd300/expanded_conv_14/expand/BatchNorm/Reshape"
  input: "ssd300/expanded_conv_14/expand/BatchNorm/batchnorm_1/mul_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ssd300/expanded_conv_14/expand/BatchNorm/batchnorm_1/Add_1"
  op: "Add"
  input: "ssd300/expanded_conv_14/expand/BatchNorm/batchnorm_1/mul"
  input: "ssd300/expanded_conv_14/expand/BatchNorm/batchnorm_1/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ssd300/expanded_conv_14/expand/Relu6"
  op: "Relu6"
  input: "ssd300/expanded_conv_14/expand/BatchNorm/batchnorm_1/Add_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ssd300/expanded_conv_14/depthwise/depthwise_weights/Initializer/random_uniform/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv_14/depthwise/depthwise_weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\003\000\000\000\003\000\000\000\300\003\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "ssd300/expanded_conv_14/depthwise/depthwise_weights/Initializer/random_uniform/min"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv_14/depthwise/depthwise_weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: -0.026338599622249603
      }
    }
  }
}
node {
  name: "ssd300/expanded_conv_14/depthwise/depthwise_weights/Initializer/random_uniform/max"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv_14/depthwise/depthwise_weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.026338599622249603
      }
    }
  }
}
node {
  name: "ssd300/expanded_conv_14/depthwise/depthwise_weights/Initializer/random_uniform/RandomUniform"
  op: "RandomUniform"
  input: "ssd300/expanded_conv_14/depthwise/depthwise_weights/Initializer/random_uniform/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv_14/depthwise/depthwise_weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "ssd300/expanded_conv_14/depthwise/depthwise_weights/Initializer/random_uniform/sub"
  op: "Sub"
  input: "ssd300/expanded_conv_14/depthwise/depthwise_weights/Initializer/random_uniform/max"
  input: "ssd300/expanded_conv_14/depthwise/depthwise_weights/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv_14/depthwise/depthwise_weights"
      }
    }
  }
}
node {
  name: "ssd300/expanded_conv_14/depthwise/depthwise_weights/Initializer/random_uniform/mul"
  op: "Mul"
  input: "ssd300/expanded_conv_14/depthwise/depthwise_weights/Initializer/random_uniform/RandomUniform"
  input: "ssd300/expanded_conv_14/depthwise/depthwise_weights/Initializer/random_uniform/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv_14/depthwise/depthwise_weights"
      }
    }
  }
}
node {
  name: "ssd300/expanded_conv_14/depthwise/depthwise_weights/Initializer/random_uniform"
  op: "Add"
  input: "ssd300/expanded_conv_14/depthwise/depthwise_weights/Initializer/random_uniform/mul"
  input: "ssd300/expanded_conv_14/depthwise/depthwise_weights/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv_14/depthwise/depthwise_weights"
      }
    }
  }
}
node {
  name: "ssd300/expanded_conv_14/depthwise/depthwise_weights"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv_14/depthwise/depthwise_weights"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 3
        }
        dim {
          size: 3
        }
        dim {
          size: 960
        }
        dim {
          size: 1
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "ssd300/expanded_conv_14/depthwise/depthwise_weights/Assign"
  op: "Assign"
  input: "ssd300/expanded_conv_14/depthwise/depthwise_weights"
  input: "ssd300/expanded_conv_14/depthwise/depthwise_weights/Initializer/random_uniform"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv_14/depthwise/depthwise_weights"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "ssd300/expanded_conv_14/depthwise/depthwise_weights/read"
  op: "Identity"
  input: "ssd300/expanded_conv_14/depthwise/depthwise_weights"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv_14/depthwise/depthwise_weights"
      }
    }
  }
}
node {
  name: "ssd300/expanded_conv_14/depthwise/layer_conv2d/depthwise/Shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\003\000\000\000\003\000\000\000\300\003\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "ssd300/expanded_conv_14/depthwise/layer_conv2d/depthwise/dilation_rate"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "ssd300/expanded_conv_14/depthwise/layer_conv2d/depthwise"
  op: "DepthwiseConv2dNative"
  input: "ssd300/expanded_conv_14/expand/Relu6"
  input: "ssd300/expanded_conv_14/depthwise/depthwise_weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NCHW"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
}
node {
  name: "ssd300/expanded_conv_14/depthwise/BatchNorm/beta/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv_14/depthwise/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 960
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "ssd300/expanded_conv_14/depthwise/BatchNorm/beta"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv_14/depthwise/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 960
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "ssd300/expanded_conv_14/depthwise/BatchNorm/beta/Assign"
  op: "Assign"
  input: "ssd300/expanded_conv_14/depthwise/BatchNorm/beta"
  input: "ssd300/expanded_conv_14/depthwise/BatchNorm/beta/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv_14/depthwise/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "ssd300/expanded_conv_14/depthwise/BatchNorm/beta/read"
  op: "Identity"
  input: "ssd300/expanded_conv_14/depthwise/BatchNorm/beta"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv_14/depthwise/BatchNorm/beta"
      }
    }
  }
}
node {
  name: "ssd300/expanded_conv_14/depthwise/BatchNorm/moving_mean/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv_14/depthwise/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 960
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "ssd300/expanded_conv_14/depthwise/BatchNorm/moving_mean"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv_14/depthwise/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 960
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "ssd300/expanded_conv_14/depthwise/BatchNorm/moving_mean/Assign"
  op: "Assign"
  input: "ssd300/expanded_conv_14/depthwise/BatchNorm/moving_mean"
  input: "ssd300/expanded_conv_14/depthwise/BatchNorm/moving_mean/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv_14/depthwise/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "ssd300/expanded_conv_14/depthwise/BatchNorm/moving_mean/read"
  op: "Identity"
  input: "ssd300/expanded_conv_14/depthwise/BatchNorm/moving_mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv_14/depthwise/BatchNorm/moving_mean"
      }
    }
  }
}
node {
  name: "ssd300/expanded_conv_14/depthwise/BatchNorm/moving_variance/Initializer/ones"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv_14/depthwise/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 960
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "ssd300/expanded_conv_14/depthwise/BatchNorm/moving_variance"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv_14/depthwise/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 960
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "ssd300/expanded_conv_14/depthwise/BatchNorm/moving_variance/Assign"
  op: "Assign"
  input: "ssd300/expanded_conv_14/depthwise/BatchNorm/moving_variance"
  input: "ssd300/expanded_conv_14/depthwise/BatchNorm/moving_variance/Initializer/ones"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv_14/depthwise/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "ssd300/expanded_conv_14/depthwise/BatchNorm/moving_variance/read"
  op: "Identity"
  input: "ssd300/expanded_conv_14/depthwise/BatchNorm/moving_variance"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv_14/depthwise/BatchNorm/moving_variance"
      }
    }
  }
}
node {
  name: "ssd300/expanded_conv_14/depthwise/BatchNorm/Reshape/shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\300\003\000\000\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "ssd300/expanded_conv_14/depthwise/BatchNorm/Reshape"
  op: "Reshape"
  input: "ssd300/expanded_conv_14/depthwise/BatchNorm/beta/read"
  input: "ssd300/expanded_conv_14/depthwise/BatchNorm/Reshape/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "ssd300/expanded_conv_14/depthwise/BatchNorm/Reshape_1/shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\300\003\000\000\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "ssd300/expanded_conv_14/depthwise/BatchNorm/Reshape_1"
  op: "Reshape"
  input: "ssd300/expanded_conv_14/depthwise/BatchNorm/moving_mean/read"
  input: "ssd300/expanded_conv_14/depthwise/BatchNorm/Reshape_1/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "ssd300/expanded_conv_14/depthwise/BatchNorm/Reshape_2/shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\300\003\000\000\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "ssd300/expanded_conv_14/depthwise/BatchNorm/Reshape_2"
  op: "Reshape"
  input: "ssd300/expanded_conv_14/depthwise/BatchNorm/moving_variance/read"
  input: "ssd300/expanded_conv_14/depthwise/BatchNorm/Reshape_2/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "ssd300/expanded_conv_14/depthwise/BatchNorm/batchnorm_1/Add/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0010000000474974513
      }
    }
  }
}
node {
  name: "ssd300/expanded_conv_14/depthwise/BatchNorm/batchnorm_1/Add"
  op: "Add"
  input: "ssd300/expanded_conv_14/depthwise/BatchNorm/Reshape_2"
  input: "ssd300/expanded_conv_14/depthwise/BatchNorm/batchnorm_1/Add/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ssd300/expanded_conv_14/depthwise/BatchNorm/batchnorm_1/Rsqrt"
  op: "Rsqrt"
  input: "ssd300/expanded_conv_14/depthwise/BatchNorm/batchnorm_1/Add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ssd300/expanded_conv_14/depthwise/BatchNorm/batchnorm_1/mul"
  op: "Mul"
  input: "ssd300/expanded_conv_14/depthwise/layer_conv2d/depthwise"
  input: "ssd300/expanded_conv_14/depthwise/BatchNorm/batchnorm_1/Rsqrt"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ssd300/expanded_conv_14/depthwise/BatchNorm/batchnorm_1/mul_1"
  op: "Mul"
  input: "ssd300/expanded_conv_14/depthwise/BatchNorm/Reshape_1"
  input: "ssd300/expanded_conv_14/depthwise/BatchNorm/batchnorm_1/Rsqrt"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ssd300/expanded_conv_14/depthwise/BatchNorm/batchnorm_1/sub"
  op: "Sub"
  input: "ssd300/expanded_conv_14/depthwise/BatchNorm/Reshape"
  input: "ssd300/expanded_conv_14/depthwise/BatchNorm/batchnorm_1/mul_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ssd300/expanded_conv_14/depthwise/BatchNorm/batchnorm_1/Add_1"
  op: "Add"
  input: "ssd300/expanded_conv_14/depthwise/BatchNorm/batchnorm_1/mul"
  input: "ssd300/expanded_conv_14/depthwise/BatchNorm/batchnorm_1/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ssd300/expanded_conv_14/depthwise/Relu6"
  op: "Relu6"
  input: "ssd300/expanded_conv_14/depthwise/BatchNorm/batchnorm_1/Add_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ssd300/expanded_conv_14/project/weights/Initializer/random_uniform/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv_14/project/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000\300\003\000\000\240\000\000\000"
      }
    }
  }
}
node {
  name: "ssd300/expanded_conv_14/project/weights/Initializer/random_uniform/min"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv_14/project/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: -0.07319250702857971
      }
    }
  }
}
node {
  name: "ssd300/expanded_conv_14/project/weights/Initializer/random_uniform/max"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv_14/project/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.07319250702857971
      }
    }
  }
}
node {
  name: "ssd300/expanded_conv_14/project/weights/Initializer/random_uniform/RandomUniform"
  op: "RandomUniform"
  input: "ssd300/expanded_conv_14/project/weights/Initializer/random_uniform/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv_14/project/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "ssd300/expanded_conv_14/project/weights/Initializer/random_uniform/sub"
  op: "Sub"
  input: "ssd300/expanded_conv_14/project/weights/Initializer/random_uniform/max"
  input: "ssd300/expanded_conv_14/project/weights/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv_14/project/weights"
      }
    }
  }
}
node {
  name: "ssd300/expanded_conv_14/project/weights/Initializer/random_uniform/mul"
  op: "Mul"
  input: "ssd300/expanded_conv_14/project/weights/Initializer/random_uniform/RandomUniform"
  input: "ssd300/expanded_conv_14/project/weights/Initializer/random_uniform/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv_14/project/weights"
      }
    }
  }
}
node {
  name: "ssd300/expanded_conv_14/project/weights/Initializer/random_uniform"
  op: "Add"
  input: "ssd300/expanded_conv_14/project/weights/Initializer/random_uniform/mul"
  input: "ssd300/expanded_conv_14/project/weights/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv_14/project/weights"
      }
    }
  }
}
node {
  name: "ssd300/expanded_conv_14/project/weights"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv_14/project/weights"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
        dim {
          size: 1
        }
        dim {
          size: 960
        }
        dim {
          size: 160
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "ssd300/expanded_conv_14/project/weights/Assign"
  op: "Assign"
  input: "ssd300/expanded_conv_14/project/weights"
  input: "ssd300/expanded_conv_14/project/weights/Initializer/random_uniform"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv_14/project/weights"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "ssd300/expanded_conv_14/project/weights/read"
  op: "Identity"
  input: "ssd300/expanded_conv_14/project/weights"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv_14/project/weights"
      }
    }
  }
}
node {
  name: "ssd300/expanded_conv_14/project/layer_conv2d/Conv2D"
  op: "Conv2D"
  input: "ssd300/expanded_conv_14/depthwise/Relu6"
  input: "ssd300/expanded_conv_14/project/weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NCHW"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "explicit_paddings"
    value {
      list {
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "ssd300/expanded_conv_14/project/BatchNorm/beta/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv_14/project/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 160
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "ssd300/expanded_conv_14/project/BatchNorm/beta"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv_14/project/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 160
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "ssd300/expanded_conv_14/project/BatchNorm/beta/Assign"
  op: "Assign"
  input: "ssd300/expanded_conv_14/project/BatchNorm/beta"
  input: "ssd300/expanded_conv_14/project/BatchNorm/beta/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv_14/project/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "ssd300/expanded_conv_14/project/BatchNorm/beta/read"
  op: "Identity"
  input: "ssd300/expanded_conv_14/project/BatchNorm/beta"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv_14/project/BatchNorm/beta"
      }
    }
  }
}
node {
  name: "ssd300/expanded_conv_14/project/BatchNorm/moving_mean/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv_14/project/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 160
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "ssd300/expanded_conv_14/project/BatchNorm/moving_mean"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv_14/project/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 160
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "ssd300/expanded_conv_14/project/BatchNorm/moving_mean/Assign"
  op: "Assign"
  input: "ssd300/expanded_conv_14/project/BatchNorm/moving_mean"
  input: "ssd300/expanded_conv_14/project/BatchNorm/moving_mean/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv_14/project/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "ssd300/expanded_conv_14/project/BatchNorm/moving_mean/read"
  op: "Identity"
  input: "ssd300/expanded_conv_14/project/BatchNorm/moving_mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv_14/project/BatchNorm/moving_mean"
      }
    }
  }
}
node {
  name: "ssd300/expanded_conv_14/project/BatchNorm/moving_variance/Initializer/ones"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv_14/project/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 160
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "ssd300/expanded_conv_14/project/BatchNorm/moving_variance"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv_14/project/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 160
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "ssd300/expanded_conv_14/project/BatchNorm/moving_variance/Assign"
  op: "Assign"
  input: "ssd300/expanded_conv_14/project/BatchNorm/moving_variance"
  input: "ssd300/expanded_conv_14/project/BatchNorm/moving_variance/Initializer/ones"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv_14/project/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "ssd300/expanded_conv_14/project/BatchNorm/moving_variance/read"
  op: "Identity"
  input: "ssd300/expanded_conv_14/project/BatchNorm/moving_variance"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv_14/project/BatchNorm/moving_variance"
      }
    }
  }
}
node {
  name: "ssd300/expanded_conv_14/project/BatchNorm/Reshape/shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\240\000\000\000\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "ssd300/expanded_conv_14/project/BatchNorm/Reshape"
  op: "Reshape"
  input: "ssd300/expanded_conv_14/project/BatchNorm/beta/read"
  input: "ssd300/expanded_conv_14/project/BatchNorm/Reshape/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "ssd300/expanded_conv_14/project/BatchNorm/Reshape_1/shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\240\000\000\000\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "ssd300/expanded_conv_14/project/BatchNorm/Reshape_1"
  op: "Reshape"
  input: "ssd300/expanded_conv_14/project/BatchNorm/moving_mean/read"
  input: "ssd300/expanded_conv_14/project/BatchNorm/Reshape_1/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "ssd300/expanded_conv_14/project/BatchNorm/Reshape_2/shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\240\000\000\000\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "ssd300/expanded_conv_14/project/BatchNorm/Reshape_2"
  op: "Reshape"
  input: "ssd300/expanded_conv_14/project/BatchNorm/moving_variance/read"
  input: "ssd300/expanded_conv_14/project/BatchNorm/Reshape_2/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "ssd300/expanded_conv_14/project/BatchNorm/batchnorm_1/Add/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0010000000474974513
      }
    }
  }
}
node {
  name: "ssd300/expanded_conv_14/project/BatchNorm/batchnorm_1/Add"
  op: "Add"
  input: "ssd300/expanded_conv_14/project/BatchNorm/Reshape_2"
  input: "ssd300/expanded_conv_14/project/BatchNorm/batchnorm_1/Add/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ssd300/expanded_conv_14/project/BatchNorm/batchnorm_1/Rsqrt"
  op: "Rsqrt"
  input: "ssd300/expanded_conv_14/project/BatchNorm/batchnorm_1/Add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ssd300/expanded_conv_14/project/BatchNorm/batchnorm_1/mul"
  op: "Mul"
  input: "ssd300/expanded_conv_14/project/layer_conv2d/Conv2D"
  input: "ssd300/expanded_conv_14/project/BatchNorm/batchnorm_1/Rsqrt"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ssd300/expanded_conv_14/project/BatchNorm/batchnorm_1/mul_1"
  op: "Mul"
  input: "ssd300/expanded_conv_14/project/BatchNorm/Reshape_1"
  input: "ssd300/expanded_conv_14/project/BatchNorm/batchnorm_1/Rsqrt"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ssd300/expanded_conv_14/project/BatchNorm/batchnorm_1/sub"
  op: "Sub"
  input: "ssd300/expanded_conv_14/project/BatchNorm/Reshape"
  input: "ssd300/expanded_conv_14/project/BatchNorm/batchnorm_1/mul_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ssd300/expanded_conv_14/project/BatchNorm/batchnorm_1/Add_1"
  op: "Add"
  input: "ssd300/expanded_conv_14/project/BatchNorm/batchnorm_1/mul"
  input: "ssd300/expanded_conv_14/project/BatchNorm/batchnorm_1/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ssd300/expanded_conv_14/Add"
  op: "Add"
  input: "ssd300/expanded_conv_14/project/BatchNorm/batchnorm_1/Add_1"
  input: "ssd300/expanded_conv_13/project/BatchNorm/batchnorm_1/Add_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ssd300/expanded_conv_15/expand/weights/Initializer/random_uniform/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv_15/expand/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000\240\000\000\000\300\003\000\000"
      }
    }
  }
}
node {
  name: "ssd300/expanded_conv_15/expand/weights/Initializer/random_uniform/min"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv_15/expand/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: -0.07319250702857971
      }
    }
  }
}
node {
  name: "ssd300/expanded_conv_15/expand/weights/Initializer/random_uniform/max"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv_15/expand/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.07319250702857971
      }
    }
  }
}
node {
  name: "ssd300/expanded_conv_15/expand/weights/Initializer/random_uniform/RandomUniform"
  op: "RandomUniform"
  input: "ssd300/expanded_conv_15/expand/weights/Initializer/random_uniform/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv_15/expand/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "ssd300/expanded_conv_15/expand/weights/Initializer/random_uniform/sub"
  op: "Sub"
  input: "ssd300/expanded_conv_15/expand/weights/Initializer/random_uniform/max"
  input: "ssd300/expanded_conv_15/expand/weights/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv_15/expand/weights"
      }
    }
  }
}
node {
  name: "ssd300/expanded_conv_15/expand/weights/Initializer/random_uniform/mul"
  op: "Mul"
  input: "ssd300/expanded_conv_15/expand/weights/Initializer/random_uniform/RandomUniform"
  input: "ssd300/expanded_conv_15/expand/weights/Initializer/random_uniform/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv_15/expand/weights"
      }
    }
  }
}
node {
  name: "ssd300/expanded_conv_15/expand/weights/Initializer/random_uniform"
  op: "Add"
  input: "ssd300/expanded_conv_15/expand/weights/Initializer/random_uniform/mul"
  input: "ssd300/expanded_conv_15/expand/weights/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv_15/expand/weights"
      }
    }
  }
}
node {
  name: "ssd300/expanded_conv_15/expand/weights"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv_15/expand/weights"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
        dim {
          size: 1
        }
        dim {
          size: 160
        }
        dim {
          size: 960
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "ssd300/expanded_conv_15/expand/weights/Assign"
  op: "Assign"
  input: "ssd300/expanded_conv_15/expand/weights"
  input: "ssd300/expanded_conv_15/expand/weights/Initializer/random_uniform"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv_15/expand/weights"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "ssd300/expanded_conv_15/expand/weights/read"
  op: "Identity"
  input: "ssd300/expanded_conv_15/expand/weights"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv_15/expand/weights"
      }
    }
  }
}
node {
  name: "ssd300/expanded_conv_15/expand/layer_conv2d/Conv2D"
  op: "Conv2D"
  input: "ssd300/expanded_conv_14/Add"
  input: "ssd300/expanded_conv_15/expand/weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NCHW"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "explicit_paddings"
    value {
      list {
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "ssd300/expanded_conv_15/expand/BatchNorm/beta/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv_15/expand/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 960
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "ssd300/expanded_conv_15/expand/BatchNorm/beta"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv_15/expand/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 960
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "ssd300/expanded_conv_15/expand/BatchNorm/beta/Assign"
  op: "Assign"
  input: "ssd300/expanded_conv_15/expand/BatchNorm/beta"
  input: "ssd300/expanded_conv_15/expand/BatchNorm/beta/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv_15/expand/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "ssd300/expanded_conv_15/expand/BatchNorm/beta/read"
  op: "Identity"
  input: "ssd300/expanded_conv_15/expand/BatchNorm/beta"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv_15/expand/BatchNorm/beta"
      }
    }
  }
}
node {
  name: "ssd300/expanded_conv_15/expand/BatchNorm/moving_mean/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv_15/expand/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 960
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "ssd300/expanded_conv_15/expand/BatchNorm/moving_mean"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv_15/expand/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 960
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "ssd300/expanded_conv_15/expand/BatchNorm/moving_mean/Assign"
  op: "Assign"
  input: "ssd300/expanded_conv_15/expand/BatchNorm/moving_mean"
  input: "ssd300/expanded_conv_15/expand/BatchNorm/moving_mean/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv_15/expand/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "ssd300/expanded_conv_15/expand/BatchNorm/moving_mean/read"
  op: "Identity"
  input: "ssd300/expanded_conv_15/expand/BatchNorm/moving_mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv_15/expand/BatchNorm/moving_mean"
      }
    }
  }
}
node {
  name: "ssd300/expanded_conv_15/expand/BatchNorm/moving_variance/Initializer/ones"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv_15/expand/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 960
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "ssd300/expanded_conv_15/expand/BatchNorm/moving_variance"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv_15/expand/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 960
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "ssd300/expanded_conv_15/expand/BatchNorm/moving_variance/Assign"
  op: "Assign"
  input: "ssd300/expanded_conv_15/expand/BatchNorm/moving_variance"
  input: "ssd300/expanded_conv_15/expand/BatchNorm/moving_variance/Initializer/ones"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv_15/expand/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "ssd300/expanded_conv_15/expand/BatchNorm/moving_variance/read"
  op: "Identity"
  input: "ssd300/expanded_conv_15/expand/BatchNorm/moving_variance"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv_15/expand/BatchNorm/moving_variance"
      }
    }
  }
}
node {
  name: "ssd300/expanded_conv_15/expand/BatchNorm/Reshape/shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\300\003\000\000\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "ssd300/expanded_conv_15/expand/BatchNorm/Reshape"
  op: "Reshape"
  input: "ssd300/expanded_conv_15/expand/BatchNorm/beta/read"
  input: "ssd300/expanded_conv_15/expand/BatchNorm/Reshape/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "ssd300/expanded_conv_15/expand/BatchNorm/Reshape_1/shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\300\003\000\000\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "ssd300/expanded_conv_15/expand/BatchNorm/Reshape_1"
  op: "Reshape"
  input: "ssd300/expanded_conv_15/expand/BatchNorm/moving_mean/read"
  input: "ssd300/expanded_conv_15/expand/BatchNorm/Reshape_1/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "ssd300/expanded_conv_15/expand/BatchNorm/Reshape_2/shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\300\003\000\000\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "ssd300/expanded_conv_15/expand/BatchNorm/Reshape_2"
  op: "Reshape"
  input: "ssd300/expanded_conv_15/expand/BatchNorm/moving_variance/read"
  input: "ssd300/expanded_conv_15/expand/BatchNorm/Reshape_2/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "ssd300/expanded_conv_15/expand/BatchNorm/batchnorm_1/Add/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0010000000474974513
      }
    }
  }
}
node {
  name: "ssd300/expanded_conv_15/expand/BatchNorm/batchnorm_1/Add"
  op: "Add"
  input: "ssd300/expanded_conv_15/expand/BatchNorm/Reshape_2"
  input: "ssd300/expanded_conv_15/expand/BatchNorm/batchnorm_1/Add/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ssd300/expanded_conv_15/expand/BatchNorm/batchnorm_1/Rsqrt"
  op: "Rsqrt"
  input: "ssd300/expanded_conv_15/expand/BatchNorm/batchnorm_1/Add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ssd300/expanded_conv_15/expand/BatchNorm/batchnorm_1/mul"
  op: "Mul"
  input: "ssd300/expanded_conv_15/expand/layer_conv2d/Conv2D"
  input: "ssd300/expanded_conv_15/expand/BatchNorm/batchnorm_1/Rsqrt"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ssd300/expanded_conv_15/expand/BatchNorm/batchnorm_1/mul_1"
  op: "Mul"
  input: "ssd300/expanded_conv_15/expand/BatchNorm/Reshape_1"
  input: "ssd300/expanded_conv_15/expand/BatchNorm/batchnorm_1/Rsqrt"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ssd300/expanded_conv_15/expand/BatchNorm/batchnorm_1/sub"
  op: "Sub"
  input: "ssd300/expanded_conv_15/expand/BatchNorm/Reshape"
  input: "ssd300/expanded_conv_15/expand/BatchNorm/batchnorm_1/mul_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ssd300/expanded_conv_15/expand/BatchNorm/batchnorm_1/Add_1"
  op: "Add"
  input: "ssd300/expanded_conv_15/expand/BatchNorm/batchnorm_1/mul"
  input: "ssd300/expanded_conv_15/expand/BatchNorm/batchnorm_1/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ssd300/expanded_conv_15/expand/Relu6"
  op: "Relu6"
  input: "ssd300/expanded_conv_15/expand/BatchNorm/batchnorm_1/Add_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ssd300/expanded_conv_15/depthwise/depthwise_weights/Initializer/random_uniform/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv_15/depthwise/depthwise_weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\003\000\000\000\003\000\000\000\300\003\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "ssd300/expanded_conv_15/depthwise/depthwise_weights/Initializer/random_uniform/min"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv_15/depthwise/depthwise_weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: -0.026338599622249603
      }
    }
  }
}
node {
  name: "ssd300/expanded_conv_15/depthwise/depthwise_weights/Initializer/random_uniform/max"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv_15/depthwise/depthwise_weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.026338599622249603
      }
    }
  }
}
node {
  name: "ssd300/expanded_conv_15/depthwise/depthwise_weights/Initializer/random_uniform/RandomUniform"
  op: "RandomUniform"
  input: "ssd300/expanded_conv_15/depthwise/depthwise_weights/Initializer/random_uniform/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv_15/depthwise/depthwise_weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "ssd300/expanded_conv_15/depthwise/depthwise_weights/Initializer/random_uniform/sub"
  op: "Sub"
  input: "ssd300/expanded_conv_15/depthwise/depthwise_weights/Initializer/random_uniform/max"
  input: "ssd300/expanded_conv_15/depthwise/depthwise_weights/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv_15/depthwise/depthwise_weights"
      }
    }
  }
}
node {
  name: "ssd300/expanded_conv_15/depthwise/depthwise_weights/Initializer/random_uniform/mul"
  op: "Mul"
  input: "ssd300/expanded_conv_15/depthwise/depthwise_weights/Initializer/random_uniform/RandomUniform"
  input: "ssd300/expanded_conv_15/depthwise/depthwise_weights/Initializer/random_uniform/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv_15/depthwise/depthwise_weights"
      }
    }
  }
}
node {
  name: "ssd300/expanded_conv_15/depthwise/depthwise_weights/Initializer/random_uniform"
  op: "Add"
  input: "ssd300/expanded_conv_15/depthwise/depthwise_weights/Initializer/random_uniform/mul"
  input: "ssd300/expanded_conv_15/depthwise/depthwise_weights/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv_15/depthwise/depthwise_weights"
      }
    }
  }
}
node {
  name: "ssd300/expanded_conv_15/depthwise/depthwise_weights"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv_15/depthwise/depthwise_weights"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 3
        }
        dim {
          size: 3
        }
        dim {
          size: 960
        }
        dim {
          size: 1
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "ssd300/expanded_conv_15/depthwise/depthwise_weights/Assign"
  op: "Assign"
  input: "ssd300/expanded_conv_15/depthwise/depthwise_weights"
  input: "ssd300/expanded_conv_15/depthwise/depthwise_weights/Initializer/random_uniform"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv_15/depthwise/depthwise_weights"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "ssd300/expanded_conv_15/depthwise/depthwise_weights/read"
  op: "Identity"
  input: "ssd300/expanded_conv_15/depthwise/depthwise_weights"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv_15/depthwise/depthwise_weights"
      }
    }
  }
}
node {
  name: "ssd300/expanded_conv_15/depthwise/layer_conv2d/depthwise/Shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\003\000\000\000\003\000\000\000\300\003\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "ssd300/expanded_conv_15/depthwise/layer_conv2d/depthwise/dilation_rate"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "ssd300/expanded_conv_15/depthwise/layer_conv2d/depthwise"
  op: "DepthwiseConv2dNative"
  input: "ssd300/expanded_conv_15/expand/Relu6"
  input: "ssd300/expanded_conv_15/depthwise/depthwise_weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NCHW"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
}
node {
  name: "ssd300/expanded_conv_15/depthwise/BatchNorm/beta/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv_15/depthwise/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 960
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "ssd300/expanded_conv_15/depthwise/BatchNorm/beta"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv_15/depthwise/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 960
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "ssd300/expanded_conv_15/depthwise/BatchNorm/beta/Assign"
  op: "Assign"
  input: "ssd300/expanded_conv_15/depthwise/BatchNorm/beta"
  input: "ssd300/expanded_conv_15/depthwise/BatchNorm/beta/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv_15/depthwise/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "ssd300/expanded_conv_15/depthwise/BatchNorm/beta/read"
  op: "Identity"
  input: "ssd300/expanded_conv_15/depthwise/BatchNorm/beta"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv_15/depthwise/BatchNorm/beta"
      }
    }
  }
}
node {
  name: "ssd300/expanded_conv_15/depthwise/BatchNorm/moving_mean/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv_15/depthwise/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 960
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "ssd300/expanded_conv_15/depthwise/BatchNorm/moving_mean"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv_15/depthwise/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 960
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "ssd300/expanded_conv_15/depthwise/BatchNorm/moving_mean/Assign"
  op: "Assign"
  input: "ssd300/expanded_conv_15/depthwise/BatchNorm/moving_mean"
  input: "ssd300/expanded_conv_15/depthwise/BatchNorm/moving_mean/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv_15/depthwise/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "ssd300/expanded_conv_15/depthwise/BatchNorm/moving_mean/read"
  op: "Identity"
  input: "ssd300/expanded_conv_15/depthwise/BatchNorm/moving_mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv_15/depthwise/BatchNorm/moving_mean"
      }
    }
  }
}
node {
  name: "ssd300/expanded_conv_15/depthwise/BatchNorm/moving_variance/Initializer/ones"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv_15/depthwise/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 960
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "ssd300/expanded_conv_15/depthwise/BatchNorm/moving_variance"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv_15/depthwise/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 960
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "ssd300/expanded_conv_15/depthwise/BatchNorm/moving_variance/Assign"
  op: "Assign"
  input: "ssd300/expanded_conv_15/depthwise/BatchNorm/moving_variance"
  input: "ssd300/expanded_conv_15/depthwise/BatchNorm/moving_variance/Initializer/ones"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv_15/depthwise/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "ssd300/expanded_conv_15/depthwise/BatchNorm/moving_variance/read"
  op: "Identity"
  input: "ssd300/expanded_conv_15/depthwise/BatchNorm/moving_variance"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv_15/depthwise/BatchNorm/moving_variance"
      }
    }
  }
}
node {
  name: "ssd300/expanded_conv_15/depthwise/BatchNorm/Reshape/shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\300\003\000\000\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "ssd300/expanded_conv_15/depthwise/BatchNorm/Reshape"
  op: "Reshape"
  input: "ssd300/expanded_conv_15/depthwise/BatchNorm/beta/read"
  input: "ssd300/expanded_conv_15/depthwise/BatchNorm/Reshape/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "ssd300/expanded_conv_15/depthwise/BatchNorm/Reshape_1/shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\300\003\000\000\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "ssd300/expanded_conv_15/depthwise/BatchNorm/Reshape_1"
  op: "Reshape"
  input: "ssd300/expanded_conv_15/depthwise/BatchNorm/moving_mean/read"
  input: "ssd300/expanded_conv_15/depthwise/BatchNorm/Reshape_1/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "ssd300/expanded_conv_15/depthwise/BatchNorm/Reshape_2/shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\300\003\000\000\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "ssd300/expanded_conv_15/depthwise/BatchNorm/Reshape_2"
  op: "Reshape"
  input: "ssd300/expanded_conv_15/depthwise/BatchNorm/moving_variance/read"
  input: "ssd300/expanded_conv_15/depthwise/BatchNorm/Reshape_2/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "ssd300/expanded_conv_15/depthwise/BatchNorm/batchnorm_1/Add/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0010000000474974513
      }
    }
  }
}
node {
  name: "ssd300/expanded_conv_15/depthwise/BatchNorm/batchnorm_1/Add"
  op: "Add"
  input: "ssd300/expanded_conv_15/depthwise/BatchNorm/Reshape_2"
  input: "ssd300/expanded_conv_15/depthwise/BatchNorm/batchnorm_1/Add/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ssd300/expanded_conv_15/depthwise/BatchNorm/batchnorm_1/Rsqrt"
  op: "Rsqrt"
  input: "ssd300/expanded_conv_15/depthwise/BatchNorm/batchnorm_1/Add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ssd300/expanded_conv_15/depthwise/BatchNorm/batchnorm_1/mul"
  op: "Mul"
  input: "ssd300/expanded_conv_15/depthwise/layer_conv2d/depthwise"
  input: "ssd300/expanded_conv_15/depthwise/BatchNorm/batchnorm_1/Rsqrt"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ssd300/expanded_conv_15/depthwise/BatchNorm/batchnorm_1/mul_1"
  op: "Mul"
  input: "ssd300/expanded_conv_15/depthwise/BatchNorm/Reshape_1"
  input: "ssd300/expanded_conv_15/depthwise/BatchNorm/batchnorm_1/Rsqrt"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ssd300/expanded_conv_15/depthwise/BatchNorm/batchnorm_1/sub"
  op: "Sub"
  input: "ssd300/expanded_conv_15/depthwise/BatchNorm/Reshape"
  input: "ssd300/expanded_conv_15/depthwise/BatchNorm/batchnorm_1/mul_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ssd300/expanded_conv_15/depthwise/BatchNorm/batchnorm_1/Add_1"
  op: "Add"
  input: "ssd300/expanded_conv_15/depthwise/BatchNorm/batchnorm_1/mul"
  input: "ssd300/expanded_conv_15/depthwise/BatchNorm/batchnorm_1/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ssd300/expanded_conv_15/depthwise/Relu6"
  op: "Relu6"
  input: "ssd300/expanded_conv_15/depthwise/BatchNorm/batchnorm_1/Add_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ssd300/expanded_conv_15/project/weights/Initializer/random_uniform/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv_15/project/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000\300\003\000\000\240\000\000\000"
      }
    }
  }
}
node {
  name: "ssd300/expanded_conv_15/project/weights/Initializer/random_uniform/min"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv_15/project/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: -0.07319250702857971
      }
    }
  }
}
node {
  name: "ssd300/expanded_conv_15/project/weights/Initializer/random_uniform/max"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv_15/project/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.07319250702857971
      }
    }
  }
}
node {
  name: "ssd300/expanded_conv_15/project/weights/Initializer/random_uniform/RandomUniform"
  op: "RandomUniform"
  input: "ssd300/expanded_conv_15/project/weights/Initializer/random_uniform/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv_15/project/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "ssd300/expanded_conv_15/project/weights/Initializer/random_uniform/sub"
  op: "Sub"
  input: "ssd300/expanded_conv_15/project/weights/Initializer/random_uniform/max"
  input: "ssd300/expanded_conv_15/project/weights/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv_15/project/weights"
      }
    }
  }
}
node {
  name: "ssd300/expanded_conv_15/project/weights/Initializer/random_uniform/mul"
  op: "Mul"
  input: "ssd300/expanded_conv_15/project/weights/Initializer/random_uniform/RandomUniform"
  input: "ssd300/expanded_conv_15/project/weights/Initializer/random_uniform/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv_15/project/weights"
      }
    }
  }
}
node {
  name: "ssd300/expanded_conv_15/project/weights/Initializer/random_uniform"
  op: "Add"
  input: "ssd300/expanded_conv_15/project/weights/Initializer/random_uniform/mul"
  input: "ssd300/expanded_conv_15/project/weights/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv_15/project/weights"
      }
    }
  }
}
node {
  name: "ssd300/expanded_conv_15/project/weights"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv_15/project/weights"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
        dim {
          size: 1
        }
        dim {
          size: 960
        }
        dim {
          size: 160
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "ssd300/expanded_conv_15/project/weights/Assign"
  op: "Assign"
  input: "ssd300/expanded_conv_15/project/weights"
  input: "ssd300/expanded_conv_15/project/weights/Initializer/random_uniform"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv_15/project/weights"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "ssd300/expanded_conv_15/project/weights/read"
  op: "Identity"
  input: "ssd300/expanded_conv_15/project/weights"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv_15/project/weights"
      }
    }
  }
}
node {
  name: "ssd300/expanded_conv_15/project/layer_conv2d/Conv2D"
  op: "Conv2D"
  input: "ssd300/expanded_conv_15/depthwise/Relu6"
  input: "ssd300/expanded_conv_15/project/weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NCHW"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "explicit_paddings"
    value {
      list {
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "ssd300/expanded_conv_15/project/BatchNorm/beta/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv_15/project/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 160
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "ssd300/expanded_conv_15/project/BatchNorm/beta"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv_15/project/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 160
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "ssd300/expanded_conv_15/project/BatchNorm/beta/Assign"
  op: "Assign"
  input: "ssd300/expanded_conv_15/project/BatchNorm/beta"
  input: "ssd300/expanded_conv_15/project/BatchNorm/beta/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv_15/project/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "ssd300/expanded_conv_15/project/BatchNorm/beta/read"
  op: "Identity"
  input: "ssd300/expanded_conv_15/project/BatchNorm/beta"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv_15/project/BatchNorm/beta"
      }
    }
  }
}
node {
  name: "ssd300/expanded_conv_15/project/BatchNorm/moving_mean/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv_15/project/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 160
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "ssd300/expanded_conv_15/project/BatchNorm/moving_mean"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv_15/project/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 160
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "ssd300/expanded_conv_15/project/BatchNorm/moving_mean/Assign"
  op: "Assign"
  input: "ssd300/expanded_conv_15/project/BatchNorm/moving_mean"
  input: "ssd300/expanded_conv_15/project/BatchNorm/moving_mean/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv_15/project/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "ssd300/expanded_conv_15/project/BatchNorm/moving_mean/read"
  op: "Identity"
  input: "ssd300/expanded_conv_15/project/BatchNorm/moving_mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv_15/project/BatchNorm/moving_mean"
      }
    }
  }
}
node {
  name: "ssd300/expanded_conv_15/project/BatchNorm/moving_variance/Initializer/ones"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv_15/project/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 160
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "ssd300/expanded_conv_15/project/BatchNorm/moving_variance"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv_15/project/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 160
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "ssd300/expanded_conv_15/project/BatchNorm/moving_variance/Assign"
  op: "Assign"
  input: "ssd300/expanded_conv_15/project/BatchNorm/moving_variance"
  input: "ssd300/expanded_conv_15/project/BatchNorm/moving_variance/Initializer/ones"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv_15/project/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "ssd300/expanded_conv_15/project/BatchNorm/moving_variance/read"
  op: "Identity"
  input: "ssd300/expanded_conv_15/project/BatchNorm/moving_variance"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv_15/project/BatchNorm/moving_variance"
      }
    }
  }
}
node {
  name: "ssd300/expanded_conv_15/project/BatchNorm/Reshape/shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\240\000\000\000\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "ssd300/expanded_conv_15/project/BatchNorm/Reshape"
  op: "Reshape"
  input: "ssd300/expanded_conv_15/project/BatchNorm/beta/read"
  input: "ssd300/expanded_conv_15/project/BatchNorm/Reshape/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "ssd300/expanded_conv_15/project/BatchNorm/Reshape_1/shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\240\000\000\000\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "ssd300/expanded_conv_15/project/BatchNorm/Reshape_1"
  op: "Reshape"
  input: "ssd300/expanded_conv_15/project/BatchNorm/moving_mean/read"
  input: "ssd300/expanded_conv_15/project/BatchNorm/Reshape_1/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "ssd300/expanded_conv_15/project/BatchNorm/Reshape_2/shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\240\000\000\000\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "ssd300/expanded_conv_15/project/BatchNorm/Reshape_2"
  op: "Reshape"
  input: "ssd300/expanded_conv_15/project/BatchNorm/moving_variance/read"
  input: "ssd300/expanded_conv_15/project/BatchNorm/Reshape_2/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "ssd300/expanded_conv_15/project/BatchNorm/batchnorm_1/Add/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0010000000474974513
      }
    }
  }
}
node {
  name: "ssd300/expanded_conv_15/project/BatchNorm/batchnorm_1/Add"
  op: "Add"
  input: "ssd300/expanded_conv_15/project/BatchNorm/Reshape_2"
  input: "ssd300/expanded_conv_15/project/BatchNorm/batchnorm_1/Add/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ssd300/expanded_conv_15/project/BatchNorm/batchnorm_1/Rsqrt"
  op: "Rsqrt"
  input: "ssd300/expanded_conv_15/project/BatchNorm/batchnorm_1/Add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ssd300/expanded_conv_15/project/BatchNorm/batchnorm_1/mul"
  op: "Mul"
  input: "ssd300/expanded_conv_15/project/layer_conv2d/Conv2D"
  input: "ssd300/expanded_conv_15/project/BatchNorm/batchnorm_1/Rsqrt"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ssd300/expanded_conv_15/project/BatchNorm/batchnorm_1/mul_1"
  op: "Mul"
  input: "ssd300/expanded_conv_15/project/BatchNorm/Reshape_1"
  input: "ssd300/expanded_conv_15/project/BatchNorm/batchnorm_1/Rsqrt"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ssd300/expanded_conv_15/project/BatchNorm/batchnorm_1/sub"
  op: "Sub"
  input: "ssd300/expanded_conv_15/project/BatchNorm/Reshape"
  input: "ssd300/expanded_conv_15/project/BatchNorm/batchnorm_1/mul_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ssd300/expanded_conv_15/project/BatchNorm/batchnorm_1/Add_1"
  op: "Add"
  input: "ssd300/expanded_conv_15/project/BatchNorm/batchnorm_1/mul"
  input: "ssd300/expanded_conv_15/project/BatchNorm/batchnorm_1/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ssd300/expanded_conv_15/Add"
  op: "Add"
  input: "ssd300/expanded_conv_15/project/BatchNorm/batchnorm_1/Add_1"
  input: "ssd300/expanded_conv_14/Add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ssd300/expanded_conv_16/expand/weights/Initializer/random_uniform/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv_16/expand/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000\240\000\000\000\300\003\000\000"
      }
    }
  }
}
node {
  name: "ssd300/expanded_conv_16/expand/weights/Initializer/random_uniform/min"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv_16/expand/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: -0.07319250702857971
      }
    }
  }
}
node {
  name: "ssd300/expanded_conv_16/expand/weights/Initializer/random_uniform/max"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv_16/expand/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.07319250702857971
      }
    }
  }
}
node {
  name: "ssd300/expanded_conv_16/expand/weights/Initializer/random_uniform/RandomUniform"
  op: "RandomUniform"
  input: "ssd300/expanded_conv_16/expand/weights/Initializer/random_uniform/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv_16/expand/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "ssd300/expanded_conv_16/expand/weights/Initializer/random_uniform/sub"
  op: "Sub"
  input: "ssd300/expanded_conv_16/expand/weights/Initializer/random_uniform/max"
  input: "ssd300/expanded_conv_16/expand/weights/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv_16/expand/weights"
      }
    }
  }
}
node {
  name: "ssd300/expanded_conv_16/expand/weights/Initializer/random_uniform/mul"
  op: "Mul"
  input: "ssd300/expanded_conv_16/expand/weights/Initializer/random_uniform/RandomUniform"
  input: "ssd300/expanded_conv_16/expand/weights/Initializer/random_uniform/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv_16/expand/weights"
      }
    }
  }
}
node {
  name: "ssd300/expanded_conv_16/expand/weights/Initializer/random_uniform"
  op: "Add"
  input: "ssd300/expanded_conv_16/expand/weights/Initializer/random_uniform/mul"
  input: "ssd300/expanded_conv_16/expand/weights/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv_16/expand/weights"
      }
    }
  }
}
node {
  name: "ssd300/expanded_conv_16/expand/weights"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv_16/expand/weights"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
        dim {
          size: 1
        }
        dim {
          size: 160
        }
        dim {
          size: 960
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "ssd300/expanded_conv_16/expand/weights/Assign"
  op: "Assign"
  input: "ssd300/expanded_conv_16/expand/weights"
  input: "ssd300/expanded_conv_16/expand/weights/Initializer/random_uniform"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv_16/expand/weights"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "ssd300/expanded_conv_16/expand/weights/read"
  op: "Identity"
  input: "ssd300/expanded_conv_16/expand/weights"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv_16/expand/weights"
      }
    }
  }
}
node {
  name: "ssd300/expanded_conv_16/expand/layer_conv2d/Conv2D"
  op: "Conv2D"
  input: "ssd300/expanded_conv_15/Add"
  input: "ssd300/expanded_conv_16/expand/weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NCHW"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "explicit_paddings"
    value {
      list {
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "ssd300/expanded_conv_16/expand/BatchNorm/beta/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv_16/expand/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 960
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "ssd300/expanded_conv_16/expand/BatchNorm/beta"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv_16/expand/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 960
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "ssd300/expanded_conv_16/expand/BatchNorm/beta/Assign"
  op: "Assign"
  input: "ssd300/expanded_conv_16/expand/BatchNorm/beta"
  input: "ssd300/expanded_conv_16/expand/BatchNorm/beta/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv_16/expand/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "ssd300/expanded_conv_16/expand/BatchNorm/beta/read"
  op: "Identity"
  input: "ssd300/expanded_conv_16/expand/BatchNorm/beta"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv_16/expand/BatchNorm/beta"
      }
    }
  }
}
node {
  name: "ssd300/expanded_conv_16/expand/BatchNorm/moving_mean/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv_16/expand/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 960
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "ssd300/expanded_conv_16/expand/BatchNorm/moving_mean"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv_16/expand/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 960
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "ssd300/expanded_conv_16/expand/BatchNorm/moving_mean/Assign"
  op: "Assign"
  input: "ssd300/expanded_conv_16/expand/BatchNorm/moving_mean"
  input: "ssd300/expanded_conv_16/expand/BatchNorm/moving_mean/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv_16/expand/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "ssd300/expanded_conv_16/expand/BatchNorm/moving_mean/read"
  op: "Identity"
  input: "ssd300/expanded_conv_16/expand/BatchNorm/moving_mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv_16/expand/BatchNorm/moving_mean"
      }
    }
  }
}
node {
  name: "ssd300/expanded_conv_16/expand/BatchNorm/moving_variance/Initializer/ones"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv_16/expand/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 960
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "ssd300/expanded_conv_16/expand/BatchNorm/moving_variance"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv_16/expand/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 960
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "ssd300/expanded_conv_16/expand/BatchNorm/moving_variance/Assign"
  op: "Assign"
  input: "ssd300/expanded_conv_16/expand/BatchNorm/moving_variance"
  input: "ssd300/expanded_conv_16/expand/BatchNorm/moving_variance/Initializer/ones"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv_16/expand/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "ssd300/expanded_conv_16/expand/BatchNorm/moving_variance/read"
  op: "Identity"
  input: "ssd300/expanded_conv_16/expand/BatchNorm/moving_variance"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv_16/expand/BatchNorm/moving_variance"
      }
    }
  }
}
node {
  name: "ssd300/expanded_conv_16/expand/BatchNorm/Reshape/shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\300\003\000\000\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "ssd300/expanded_conv_16/expand/BatchNorm/Reshape"
  op: "Reshape"
  input: "ssd300/expanded_conv_16/expand/BatchNorm/beta/read"
  input: "ssd300/expanded_conv_16/expand/BatchNorm/Reshape/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "ssd300/expanded_conv_16/expand/BatchNorm/Reshape_1/shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\300\003\000\000\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "ssd300/expanded_conv_16/expand/BatchNorm/Reshape_1"
  op: "Reshape"
  input: "ssd300/expanded_conv_16/expand/BatchNorm/moving_mean/read"
  input: "ssd300/expanded_conv_16/expand/BatchNorm/Reshape_1/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "ssd300/expanded_conv_16/expand/BatchNorm/Reshape_2/shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\300\003\000\000\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "ssd300/expanded_conv_16/expand/BatchNorm/Reshape_2"
  op: "Reshape"
  input: "ssd300/expanded_conv_16/expand/BatchNorm/moving_variance/read"
  input: "ssd300/expanded_conv_16/expand/BatchNorm/Reshape_2/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "ssd300/expanded_conv_16/expand/BatchNorm/batchnorm_1/Add/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0010000000474974513
      }
    }
  }
}
node {
  name: "ssd300/expanded_conv_16/expand/BatchNorm/batchnorm_1/Add"
  op: "Add"
  input: "ssd300/expanded_conv_16/expand/BatchNorm/Reshape_2"
  input: "ssd300/expanded_conv_16/expand/BatchNorm/batchnorm_1/Add/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ssd300/expanded_conv_16/expand/BatchNorm/batchnorm_1/Rsqrt"
  op: "Rsqrt"
  input: "ssd300/expanded_conv_16/expand/BatchNorm/batchnorm_1/Add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ssd300/expanded_conv_16/expand/BatchNorm/batchnorm_1/mul"
  op: "Mul"
  input: "ssd300/expanded_conv_16/expand/layer_conv2d/Conv2D"
  input: "ssd300/expanded_conv_16/expand/BatchNorm/batchnorm_1/Rsqrt"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ssd300/expanded_conv_16/expand/BatchNorm/batchnorm_1/mul_1"
  op: "Mul"
  input: "ssd300/expanded_conv_16/expand/BatchNorm/Reshape_1"
  input: "ssd300/expanded_conv_16/expand/BatchNorm/batchnorm_1/Rsqrt"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ssd300/expanded_conv_16/expand/BatchNorm/batchnorm_1/sub"
  op: "Sub"
  input: "ssd300/expanded_conv_16/expand/BatchNorm/Reshape"
  input: "ssd300/expanded_conv_16/expand/BatchNorm/batchnorm_1/mul_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ssd300/expanded_conv_16/expand/BatchNorm/batchnorm_1/Add_1"
  op: "Add"
  input: "ssd300/expanded_conv_16/expand/BatchNorm/batchnorm_1/mul"
  input: "ssd300/expanded_conv_16/expand/BatchNorm/batchnorm_1/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ssd300/expanded_conv_16/expand/Relu6"
  op: "Relu6"
  input: "ssd300/expanded_conv_16/expand/BatchNorm/batchnorm_1/Add_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ssd300/expanded_conv_16/depthwise/depthwise_weights/Initializer/random_uniform/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv_16/depthwise/depthwise_weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\003\000\000\000\003\000\000\000\300\003\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "ssd300/expanded_conv_16/depthwise/depthwise_weights/Initializer/random_uniform/min"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv_16/depthwise/depthwise_weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: -0.026338599622249603
      }
    }
  }
}
node {
  name: "ssd300/expanded_conv_16/depthwise/depthwise_weights/Initializer/random_uniform/max"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv_16/depthwise/depthwise_weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.026338599622249603
      }
    }
  }
}
node {
  name: "ssd300/expanded_conv_16/depthwise/depthwise_weights/Initializer/random_uniform/RandomUniform"
  op: "RandomUniform"
  input: "ssd300/expanded_conv_16/depthwise/depthwise_weights/Initializer/random_uniform/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv_16/depthwise/depthwise_weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "ssd300/expanded_conv_16/depthwise/depthwise_weights/Initializer/random_uniform/sub"
  op: "Sub"
  input: "ssd300/expanded_conv_16/depthwise/depthwise_weights/Initializer/random_uniform/max"
  input: "ssd300/expanded_conv_16/depthwise/depthwise_weights/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv_16/depthwise/depthwise_weights"
      }
    }
  }
}
node {
  name: "ssd300/expanded_conv_16/depthwise/depthwise_weights/Initializer/random_uniform/mul"
  op: "Mul"
  input: "ssd300/expanded_conv_16/depthwise/depthwise_weights/Initializer/random_uniform/RandomUniform"
  input: "ssd300/expanded_conv_16/depthwise/depthwise_weights/Initializer/random_uniform/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv_16/depthwise/depthwise_weights"
      }
    }
  }
}
node {
  name: "ssd300/expanded_conv_16/depthwise/depthwise_weights/Initializer/random_uniform"
  op: "Add"
  input: "ssd300/expanded_conv_16/depthwise/depthwise_weights/Initializer/random_uniform/mul"
  input: "ssd300/expanded_conv_16/depthwise/depthwise_weights/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv_16/depthwise/depthwise_weights"
      }
    }
  }
}
node {
  name: "ssd300/expanded_conv_16/depthwise/depthwise_weights"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv_16/depthwise/depthwise_weights"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 3
        }
        dim {
          size: 3
        }
        dim {
          size: 960
        }
        dim {
          size: 1
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "ssd300/expanded_conv_16/depthwise/depthwise_weights/Assign"
  op: "Assign"
  input: "ssd300/expanded_conv_16/depthwise/depthwise_weights"
  input: "ssd300/expanded_conv_16/depthwise/depthwise_weights/Initializer/random_uniform"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv_16/depthwise/depthwise_weights"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "ssd300/expanded_conv_16/depthwise/depthwise_weights/read"
  op: "Identity"
  input: "ssd300/expanded_conv_16/depthwise/depthwise_weights"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv_16/depthwise/depthwise_weights"
      }
    }
  }
}
node {
  name: "ssd300/expanded_conv_16/depthwise/layer_conv2d/depthwise/Shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\003\000\000\000\003\000\000\000\300\003\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "ssd300/expanded_conv_16/depthwise/layer_conv2d/depthwise/dilation_rate"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "ssd300/expanded_conv_16/depthwise/layer_conv2d/depthwise"
  op: "DepthwiseConv2dNative"
  input: "ssd300/expanded_conv_16/expand/Relu6"
  input: "ssd300/expanded_conv_16/depthwise/depthwise_weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NCHW"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
}
node {
  name: "ssd300/expanded_conv_16/depthwise/BatchNorm/beta/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv_16/depthwise/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 960
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "ssd300/expanded_conv_16/depthwise/BatchNorm/beta"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv_16/depthwise/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 960
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "ssd300/expanded_conv_16/depthwise/BatchNorm/beta/Assign"
  op: "Assign"
  input: "ssd300/expanded_conv_16/depthwise/BatchNorm/beta"
  input: "ssd300/expanded_conv_16/depthwise/BatchNorm/beta/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv_16/depthwise/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "ssd300/expanded_conv_16/depthwise/BatchNorm/beta/read"
  op: "Identity"
  input: "ssd300/expanded_conv_16/depthwise/BatchNorm/beta"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv_16/depthwise/BatchNorm/beta"
      }
    }
  }
}
node {
  name: "ssd300/expanded_conv_16/depthwise/BatchNorm/moving_mean/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv_16/depthwise/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 960
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "ssd300/expanded_conv_16/depthwise/BatchNorm/moving_mean"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv_16/depthwise/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 960
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "ssd300/expanded_conv_16/depthwise/BatchNorm/moving_mean/Assign"
  op: "Assign"
  input: "ssd300/expanded_conv_16/depthwise/BatchNorm/moving_mean"
  input: "ssd300/expanded_conv_16/depthwise/BatchNorm/moving_mean/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv_16/depthwise/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "ssd300/expanded_conv_16/depthwise/BatchNorm/moving_mean/read"
  op: "Identity"
  input: "ssd300/expanded_conv_16/depthwise/BatchNorm/moving_mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv_16/depthwise/BatchNorm/moving_mean"
      }
    }
  }
}
node {
  name: "ssd300/expanded_conv_16/depthwise/BatchNorm/moving_variance/Initializer/ones"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv_16/depthwise/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 960
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "ssd300/expanded_conv_16/depthwise/BatchNorm/moving_variance"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv_16/depthwise/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 960
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "ssd300/expanded_conv_16/depthwise/BatchNorm/moving_variance/Assign"
  op: "Assign"
  input: "ssd300/expanded_conv_16/depthwise/BatchNorm/moving_variance"
  input: "ssd300/expanded_conv_16/depthwise/BatchNorm/moving_variance/Initializer/ones"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv_16/depthwise/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "ssd300/expanded_conv_16/depthwise/BatchNorm/moving_variance/read"
  op: "Identity"
  input: "ssd300/expanded_conv_16/depthwise/BatchNorm/moving_variance"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv_16/depthwise/BatchNorm/moving_variance"
      }
    }
  }
}
node {
  name: "ssd300/expanded_conv_16/depthwise/BatchNorm/Reshape/shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\300\003\000\000\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "ssd300/expanded_conv_16/depthwise/BatchNorm/Reshape"
  op: "Reshape"
  input: "ssd300/expanded_conv_16/depthwise/BatchNorm/beta/read"
  input: "ssd300/expanded_conv_16/depthwise/BatchNorm/Reshape/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "ssd300/expanded_conv_16/depthwise/BatchNorm/Reshape_1/shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\300\003\000\000\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "ssd300/expanded_conv_16/depthwise/BatchNorm/Reshape_1"
  op: "Reshape"
  input: "ssd300/expanded_conv_16/depthwise/BatchNorm/moving_mean/read"
  input: "ssd300/expanded_conv_16/depthwise/BatchNorm/Reshape_1/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "ssd300/expanded_conv_16/depthwise/BatchNorm/Reshape_2/shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\300\003\000\000\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "ssd300/expanded_conv_16/depthwise/BatchNorm/Reshape_2"
  op: "Reshape"
  input: "ssd300/expanded_conv_16/depthwise/BatchNorm/moving_variance/read"
  input: "ssd300/expanded_conv_16/depthwise/BatchNorm/Reshape_2/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "ssd300/expanded_conv_16/depthwise/BatchNorm/batchnorm_1/Add/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0010000000474974513
      }
    }
  }
}
node {
  name: "ssd300/expanded_conv_16/depthwise/BatchNorm/batchnorm_1/Add"
  op: "Add"
  input: "ssd300/expanded_conv_16/depthwise/BatchNorm/Reshape_2"
  input: "ssd300/expanded_conv_16/depthwise/BatchNorm/batchnorm_1/Add/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ssd300/expanded_conv_16/depthwise/BatchNorm/batchnorm_1/Rsqrt"
  op: "Rsqrt"
  input: "ssd300/expanded_conv_16/depthwise/BatchNorm/batchnorm_1/Add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ssd300/expanded_conv_16/depthwise/BatchNorm/batchnorm_1/mul"
  op: "Mul"
  input: "ssd300/expanded_conv_16/depthwise/layer_conv2d/depthwise"
  input: "ssd300/expanded_conv_16/depthwise/BatchNorm/batchnorm_1/Rsqrt"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ssd300/expanded_conv_16/depthwise/BatchNorm/batchnorm_1/mul_1"
  op: "Mul"
  input: "ssd300/expanded_conv_16/depthwise/BatchNorm/Reshape_1"
  input: "ssd300/expanded_conv_16/depthwise/BatchNorm/batchnorm_1/Rsqrt"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ssd300/expanded_conv_16/depthwise/BatchNorm/batchnorm_1/sub"
  op: "Sub"
  input: "ssd300/expanded_conv_16/depthwise/BatchNorm/Reshape"
  input: "ssd300/expanded_conv_16/depthwise/BatchNorm/batchnorm_1/mul_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ssd300/expanded_conv_16/depthwise/BatchNorm/batchnorm_1/Add_1"
  op: "Add"
  input: "ssd300/expanded_conv_16/depthwise/BatchNorm/batchnorm_1/mul"
  input: "ssd300/expanded_conv_16/depthwise/BatchNorm/batchnorm_1/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ssd300/expanded_conv_16/depthwise/Relu6"
  op: "Relu6"
  input: "ssd300/expanded_conv_16/depthwise/BatchNorm/batchnorm_1/Add_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ssd300/expanded_conv_16/project/weights/Initializer/random_uniform/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv_16/project/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000\300\003\000\000@\001\000\000"
      }
    }
  }
}
node {
  name: "ssd300/expanded_conv_16/project/weights/Initializer/random_uniform/min"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv_16/project/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: -0.06846532225608826
      }
    }
  }
}
node {
  name: "ssd300/expanded_conv_16/project/weights/Initializer/random_uniform/max"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv_16/project/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.06846532225608826
      }
    }
  }
}
node {
  name: "ssd300/expanded_conv_16/project/weights/Initializer/random_uniform/RandomUniform"
  op: "RandomUniform"
  input: "ssd300/expanded_conv_16/project/weights/Initializer/random_uniform/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv_16/project/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "ssd300/expanded_conv_16/project/weights/Initializer/random_uniform/sub"
  op: "Sub"
  input: "ssd300/expanded_conv_16/project/weights/Initializer/random_uniform/max"
  input: "ssd300/expanded_conv_16/project/weights/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv_16/project/weights"
      }
    }
  }
}
node {
  name: "ssd300/expanded_conv_16/project/weights/Initializer/random_uniform/mul"
  op: "Mul"
  input: "ssd300/expanded_conv_16/project/weights/Initializer/random_uniform/RandomUniform"
  input: "ssd300/expanded_conv_16/project/weights/Initializer/random_uniform/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv_16/project/weights"
      }
    }
  }
}
node {
  name: "ssd300/expanded_conv_16/project/weights/Initializer/random_uniform"
  op: "Add"
  input: "ssd300/expanded_conv_16/project/weights/Initializer/random_uniform/mul"
  input: "ssd300/expanded_conv_16/project/weights/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv_16/project/weights"
      }
    }
  }
}
node {
  name: "ssd300/expanded_conv_16/project/weights"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv_16/project/weights"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
        dim {
          size: 1
        }
        dim {
          size: 960
        }
        dim {
          size: 320
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "ssd300/expanded_conv_16/project/weights/Assign"
  op: "Assign"
  input: "ssd300/expanded_conv_16/project/weights"
  input: "ssd300/expanded_conv_16/project/weights/Initializer/random_uniform"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv_16/project/weights"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "ssd300/expanded_conv_16/project/weights/read"
  op: "Identity"
  input: "ssd300/expanded_conv_16/project/weights"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv_16/project/weights"
      }
    }
  }
}
node {
  name: "ssd300/expanded_conv_16/project/layer_conv2d/Conv2D"
  op: "Conv2D"
  input: "ssd300/expanded_conv_16/depthwise/Relu6"
  input: "ssd300/expanded_conv_16/project/weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NCHW"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "explicit_paddings"
    value {
      list {
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "ssd300/expanded_conv_16/project/BatchNorm/beta/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv_16/project/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 320
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "ssd300/expanded_conv_16/project/BatchNorm/beta"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv_16/project/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 320
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "ssd300/expanded_conv_16/project/BatchNorm/beta/Assign"
  op: "Assign"
  input: "ssd300/expanded_conv_16/project/BatchNorm/beta"
  input: "ssd300/expanded_conv_16/project/BatchNorm/beta/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv_16/project/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "ssd300/expanded_conv_16/project/BatchNorm/beta/read"
  op: "Identity"
  input: "ssd300/expanded_conv_16/project/BatchNorm/beta"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv_16/project/BatchNorm/beta"
      }
    }
  }
}
node {
  name: "ssd300/expanded_conv_16/project/BatchNorm/moving_mean/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv_16/project/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 320
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "ssd300/expanded_conv_16/project/BatchNorm/moving_mean"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv_16/project/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 320
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "ssd300/expanded_conv_16/project/BatchNorm/moving_mean/Assign"
  op: "Assign"
  input: "ssd300/expanded_conv_16/project/BatchNorm/moving_mean"
  input: "ssd300/expanded_conv_16/project/BatchNorm/moving_mean/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv_16/project/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "ssd300/expanded_conv_16/project/BatchNorm/moving_mean/read"
  op: "Identity"
  input: "ssd300/expanded_conv_16/project/BatchNorm/moving_mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv_16/project/BatchNorm/moving_mean"
      }
    }
  }
}
node {
  name: "ssd300/expanded_conv_16/project/BatchNorm/moving_variance/Initializer/ones"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv_16/project/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 320
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "ssd300/expanded_conv_16/project/BatchNorm/moving_variance"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv_16/project/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 320
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "ssd300/expanded_conv_16/project/BatchNorm/moving_variance/Assign"
  op: "Assign"
  input: "ssd300/expanded_conv_16/project/BatchNorm/moving_variance"
  input: "ssd300/expanded_conv_16/project/BatchNorm/moving_variance/Initializer/ones"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv_16/project/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "ssd300/expanded_conv_16/project/BatchNorm/moving_variance/read"
  op: "Identity"
  input: "ssd300/expanded_conv_16/project/BatchNorm/moving_variance"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv_16/project/BatchNorm/moving_variance"
      }
    }
  }
}
node {
  name: "ssd300/expanded_conv_16/project/BatchNorm/Reshape/shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000@\001\000\000\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "ssd300/expanded_conv_16/project/BatchNorm/Reshape"
  op: "Reshape"
  input: "ssd300/expanded_conv_16/project/BatchNorm/beta/read"
  input: "ssd300/expanded_conv_16/project/BatchNorm/Reshape/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "ssd300/expanded_conv_16/project/BatchNorm/Reshape_1/shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000@\001\000\000\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "ssd300/expanded_conv_16/project/BatchNorm/Reshape_1"
  op: "Reshape"
  input: "ssd300/expanded_conv_16/project/BatchNorm/moving_mean/read"
  input: "ssd300/expanded_conv_16/project/BatchNorm/Reshape_1/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "ssd300/expanded_conv_16/project/BatchNorm/Reshape_2/shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000@\001\000\000\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "ssd300/expanded_conv_16/project/BatchNorm/Reshape_2"
  op: "Reshape"
  input: "ssd300/expanded_conv_16/project/BatchNorm/moving_variance/read"
  input: "ssd300/expanded_conv_16/project/BatchNorm/Reshape_2/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "ssd300/expanded_conv_16/project/BatchNorm/batchnorm_1/Add/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0010000000474974513
      }
    }
  }
}
node {
  name: "ssd300/expanded_conv_16/project/BatchNorm/batchnorm_1/Add"
  op: "Add"
  input: "ssd300/expanded_conv_16/project/BatchNorm/Reshape_2"
  input: "ssd300/expanded_conv_16/project/BatchNorm/batchnorm_1/Add/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ssd300/expanded_conv_16/project/BatchNorm/batchnorm_1/Rsqrt"
  op: "Rsqrt"
  input: "ssd300/expanded_conv_16/project/BatchNorm/batchnorm_1/Add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ssd300/expanded_conv_16/project/BatchNorm/batchnorm_1/mul"
  op: "Mul"
  input: "ssd300/expanded_conv_16/project/layer_conv2d/Conv2D"
  input: "ssd300/expanded_conv_16/project/BatchNorm/batchnorm_1/Rsqrt"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ssd300/expanded_conv_16/project/BatchNorm/batchnorm_1/mul_1"
  op: "Mul"
  input: "ssd300/expanded_conv_16/project/BatchNorm/Reshape_1"
  input: "ssd300/expanded_conv_16/project/BatchNorm/batchnorm_1/Rsqrt"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ssd300/expanded_conv_16/project/BatchNorm/batchnorm_1/sub"
  op: "Sub"
  input: "ssd300/expanded_conv_16/project/BatchNorm/Reshape"
  input: "ssd300/expanded_conv_16/project/BatchNorm/batchnorm_1/mul_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ssd300/expanded_conv_16/project/BatchNorm/batchnorm_1/Add_1"
  op: "Add"
  input: "ssd300/expanded_conv_16/project/BatchNorm/batchnorm_1/mul"
  input: "ssd300/expanded_conv_16/project/BatchNorm/batchnorm_1/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ssd300/Conv_1/weights/Initializer/random_uniform/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/Conv_1/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000@\001\000\000\000\005\000\000"
      }
    }
  }
}
node {
  name: "ssd300/Conv_1/weights/Initializer/random_uniform/min"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/Conv_1/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: -0.06123724207282066
      }
    }
  }
}
node {
  name: "ssd300/Conv_1/weights/Initializer/random_uniform/max"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/Conv_1/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.06123724207282066
      }
    }
  }
}
node {
  name: "ssd300/Conv_1/weights/Initializer/random_uniform/RandomUniform"
  op: "RandomUniform"
  input: "ssd300/Conv_1/weights/Initializer/random_uniform/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/Conv_1/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "ssd300/Conv_1/weights/Initializer/random_uniform/sub"
  op: "Sub"
  input: "ssd300/Conv_1/weights/Initializer/random_uniform/max"
  input: "ssd300/Conv_1/weights/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/Conv_1/weights"
      }
    }
  }
}
node {
  name: "ssd300/Conv_1/weights/Initializer/random_uniform/mul"
  op: "Mul"
  input: "ssd300/Conv_1/weights/Initializer/random_uniform/RandomUniform"
  input: "ssd300/Conv_1/weights/Initializer/random_uniform/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/Conv_1/weights"
      }
    }
  }
}
node {
  name: "ssd300/Conv_1/weights/Initializer/random_uniform"
  op: "Add"
  input: "ssd300/Conv_1/weights/Initializer/random_uniform/mul"
  input: "ssd300/Conv_1/weights/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/Conv_1/weights"
      }
    }
  }
}
node {
  name: "ssd300/Conv_1/weights"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/Conv_1/weights"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
        dim {
          size: 1
        }
        dim {
          size: 320
        }
        dim {
          size: 1280
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "ssd300/Conv_1/weights/Assign"
  op: "Assign"
  input: "ssd300/Conv_1/weights"
  input: "ssd300/Conv_1/weights/Initializer/random_uniform"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/Conv_1/weights"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "ssd300/Conv_1/weights/read"
  op: "Identity"
  input: "ssd300/Conv_1/weights"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/Conv_1/weights"
      }
    }
  }
}
node {
  name: "ssd300/Conv_1/layer_conv2d/Conv2D"
  op: "Conv2D"
  input: "ssd300/expanded_conv_16/project/BatchNorm/batchnorm_1/Add_1"
  input: "ssd300/Conv_1/weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NCHW"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "explicit_paddings"
    value {
      list {
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "ssd300/Conv_1/BatchNorm/beta/Initializer/zeros/shape_as_tensor"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/Conv_1/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1280
      }
    }
  }
}
node {
  name: "ssd300/Conv_1/BatchNorm/beta/Initializer/zeros/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/Conv_1/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "ssd300/Conv_1/BatchNorm/beta/Initializer/zeros"
  op: "Fill"
  input: "ssd300/Conv_1/BatchNorm/beta/Initializer/zeros/shape_as_tensor"
  input: "ssd300/Conv_1/BatchNorm/beta/Initializer/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/Conv_1/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "ssd300/Conv_1/BatchNorm/beta"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/Conv_1/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1280
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "ssd300/Conv_1/BatchNorm/beta/Assign"
  op: "Assign"
  input: "ssd300/Conv_1/BatchNorm/beta"
  input: "ssd300/Conv_1/BatchNorm/beta/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/Conv_1/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "ssd300/Conv_1/BatchNorm/beta/read"
  op: "Identity"
  input: "ssd300/Conv_1/BatchNorm/beta"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/Conv_1/BatchNorm/beta"
      }
    }
  }
}
node {
  name: "ssd300/Conv_1/BatchNorm/moving_mean/Initializer/zeros/shape_as_tensor"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/Conv_1/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1280
      }
    }
  }
}
node {
  name: "ssd300/Conv_1/BatchNorm/moving_mean/Initializer/zeros/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/Conv_1/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "ssd300/Conv_1/BatchNorm/moving_mean/Initializer/zeros"
  op: "Fill"
  input: "ssd300/Conv_1/BatchNorm/moving_mean/Initializer/zeros/shape_as_tensor"
  input: "ssd300/Conv_1/BatchNorm/moving_mean/Initializer/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/Conv_1/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "ssd300/Conv_1/BatchNorm/moving_mean"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/Conv_1/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1280
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "ssd300/Conv_1/BatchNorm/moving_mean/Assign"
  op: "Assign"
  input: "ssd300/Conv_1/BatchNorm/moving_mean"
  input: "ssd300/Conv_1/BatchNorm/moving_mean/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/Conv_1/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "ssd300/Conv_1/BatchNorm/moving_mean/read"
  op: "Identity"
  input: "ssd300/Conv_1/BatchNorm/moving_mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/Conv_1/BatchNorm/moving_mean"
      }
    }
  }
}
node {
  name: "ssd300/Conv_1/BatchNorm/moving_variance/Initializer/ones/shape_as_tensor"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/Conv_1/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1280
      }
    }
  }
}
node {
  name: "ssd300/Conv_1/BatchNorm/moving_variance/Initializer/ones/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/Conv_1/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "ssd300/Conv_1/BatchNorm/moving_variance/Initializer/ones"
  op: "Fill"
  input: "ssd300/Conv_1/BatchNorm/moving_variance/Initializer/ones/shape_as_tensor"
  input: "ssd300/Conv_1/BatchNorm/moving_variance/Initializer/ones/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/Conv_1/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "ssd300/Conv_1/BatchNorm/moving_variance"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/Conv_1/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1280
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "ssd300/Conv_1/BatchNorm/moving_variance/Assign"
  op: "Assign"
  input: "ssd300/Conv_1/BatchNorm/moving_variance"
  input: "ssd300/Conv_1/BatchNorm/moving_variance/Initializer/ones"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/Conv_1/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "ssd300/Conv_1/BatchNorm/moving_variance/read"
  op: "Identity"
  input: "ssd300/Conv_1/BatchNorm/moving_variance"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/Conv_1/BatchNorm/moving_variance"
      }
    }
  }
}
node {
  name: "ssd300/Conv_1/BatchNorm/Reshape/shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\000\005\000\000\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "ssd300/Conv_1/BatchNorm/Reshape"
  op: "Reshape"
  input: "ssd300/Conv_1/BatchNorm/beta/read"
  input: "ssd300/Conv_1/BatchNorm/Reshape/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "ssd300/Conv_1/BatchNorm/Reshape_1/shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\000\005\000\000\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "ssd300/Conv_1/BatchNorm/Reshape_1"
  op: "Reshape"
  input: "ssd300/Conv_1/BatchNorm/moving_mean/read"
  input: "ssd300/Conv_1/BatchNorm/Reshape_1/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "ssd300/Conv_1/BatchNorm/Reshape_2/shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\000\005\000\000\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "ssd300/Conv_1/BatchNorm/Reshape_2"
  op: "Reshape"
  input: "ssd300/Conv_1/BatchNorm/moving_variance/read"
  input: "ssd300/Conv_1/BatchNorm/Reshape_2/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "ssd300/Conv_1/BatchNorm/batchnorm_1/Add/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0010000000474974513
      }
    }
  }
}
node {
  name: "ssd300/Conv_1/BatchNorm/batchnorm_1/Add"
  op: "Add"
  input: "ssd300/Conv_1/BatchNorm/Reshape_2"
  input: "ssd300/Conv_1/BatchNorm/batchnorm_1/Add/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ssd300/Conv_1/BatchNorm/batchnorm_1/Rsqrt"
  op: "Rsqrt"
  input: "ssd300/Conv_1/BatchNorm/batchnorm_1/Add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ssd300/Conv_1/BatchNorm/batchnorm_1/mul"
  op: "Mul"
  input: "ssd300/Conv_1/layer_conv2d/Conv2D"
  input: "ssd300/Conv_1/BatchNorm/batchnorm_1/Rsqrt"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ssd300/Conv_1/BatchNorm/batchnorm_1/mul_1"
  op: "Mul"
  input: "ssd300/Conv_1/BatchNorm/Reshape_1"
  input: "ssd300/Conv_1/BatchNorm/batchnorm_1/Rsqrt"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ssd300/Conv_1/BatchNorm/batchnorm_1/sub"
  op: "Sub"
  input: "ssd300/Conv_1/BatchNorm/Reshape"
  input: "ssd300/Conv_1/BatchNorm/batchnorm_1/mul_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ssd300/Conv_1/BatchNorm/batchnorm_1/Add_1"
  op: "Add"
  input: "ssd300/Conv_1/BatchNorm/batchnorm_1/mul"
  input: "ssd300/Conv_1/BatchNorm/batchnorm_1/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ssd300/Conv_1/Relu6"
  op: "Relu6"
  input: "ssd300/Conv_1/BatchNorm/batchnorm_1/Add_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ssd300/layer_19_1_Conv2d_2_1x1_256/weights/Initializer/random_uniform/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/layer_19_1_Conv2d_2_1x1_256/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000\000\005\000\000\000\001\000\000"
      }
    }
  }
}
node {
  name: "ssd300/layer_19_1_Conv2d_2_1x1_256/weights/Initializer/random_uniform/min"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/layer_19_1_Conv2d_2_1x1_256/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: -0.0625
      }
    }
  }
}
node {
  name: "ssd300/layer_19_1_Conv2d_2_1x1_256/weights/Initializer/random_uniform/max"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/layer_19_1_Conv2d_2_1x1_256/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0625
      }
    }
  }
}
node {
  name: "ssd300/layer_19_1_Conv2d_2_1x1_256/weights/Initializer/random_uniform/RandomUniform"
  op: "RandomUniform"
  input: "ssd300/layer_19_1_Conv2d_2_1x1_256/weights/Initializer/random_uniform/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/layer_19_1_Conv2d_2_1x1_256/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "ssd300/layer_19_1_Conv2d_2_1x1_256/weights/Initializer/random_uniform/sub"
  op: "Sub"
  input: "ssd300/layer_19_1_Conv2d_2_1x1_256/weights/Initializer/random_uniform/max"
  input: "ssd300/layer_19_1_Conv2d_2_1x1_256/weights/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/layer_19_1_Conv2d_2_1x1_256/weights"
      }
    }
  }
}
node {
  name: "ssd300/layer_19_1_Conv2d_2_1x1_256/weights/Initializer/random_uniform/mul"
  op: "Mul"
  input: "ssd300/layer_19_1_Conv2d_2_1x1_256/weights/Initializer/random_uniform/RandomUniform"
  input: "ssd300/layer_19_1_Conv2d_2_1x1_256/weights/Initializer/random_uniform/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/layer_19_1_Conv2d_2_1x1_256/weights"
      }
    }
  }
}
node {
  name: "ssd300/layer_19_1_Conv2d_2_1x1_256/weights/Initializer/random_uniform"
  op: "Add"
  input: "ssd300/layer_19_1_Conv2d_2_1x1_256/weights/Initializer/random_uniform/mul"
  input: "ssd300/layer_19_1_Conv2d_2_1x1_256/weights/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/layer_19_1_Conv2d_2_1x1_256/weights"
      }
    }
  }
}
node {
  name: "ssd300/layer_19_1_Conv2d_2_1x1_256/weights"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/layer_19_1_Conv2d_2_1x1_256/weights"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
        dim {
          size: 1
        }
        dim {
          size: 1280
        }
        dim {
          size: 256
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "ssd300/layer_19_1_Conv2d_2_1x1_256/weights/Assign"
  op: "Assign"
  input: "ssd300/layer_19_1_Conv2d_2_1x1_256/weights"
  input: "ssd300/layer_19_1_Conv2d_2_1x1_256/weights/Initializer/random_uniform"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/layer_19_1_Conv2d_2_1x1_256/weights"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "ssd300/layer_19_1_Conv2d_2_1x1_256/weights/read"
  op: "Identity"
  input: "ssd300/layer_19_1_Conv2d_2_1x1_256/weights"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/layer_19_1_Conv2d_2_1x1_256/weights"
      }
    }
  }
}
node {
  name: "ssd300/layer_19_1_Conv2d_2_1x1_256/layer_conv2d/Conv2D"
  op: "Conv2D"
  input: "ssd300/Conv_1/Relu6"
  input: "ssd300/layer_19_1_Conv2d_2_1x1_256/weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NCHW"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "explicit_paddings"
    value {
      list {
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "ssd300/layer_19_1_Conv2d_2_1x1_256/BatchNorm/beta/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/layer_19_1_Conv2d_2_1x1_256/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 256
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "ssd300/layer_19_1_Conv2d_2_1x1_256/BatchNorm/beta"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/layer_19_1_Conv2d_2_1x1_256/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 256
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "ssd300/layer_19_1_Conv2d_2_1x1_256/BatchNorm/beta/Assign"
  op: "Assign"
  input: "ssd300/layer_19_1_Conv2d_2_1x1_256/BatchNorm/beta"
  input: "ssd300/layer_19_1_Conv2d_2_1x1_256/BatchNorm/beta/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/layer_19_1_Conv2d_2_1x1_256/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "ssd300/layer_19_1_Conv2d_2_1x1_256/BatchNorm/beta/read"
  op: "Identity"
  input: "ssd300/layer_19_1_Conv2d_2_1x1_256/BatchNorm/beta"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/layer_19_1_Conv2d_2_1x1_256/BatchNorm/beta"
      }
    }
  }
}
node {
  name: "ssd300/layer_19_1_Conv2d_2_1x1_256/BatchNorm/moving_mean/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/layer_19_1_Conv2d_2_1x1_256/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 256
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "ssd300/layer_19_1_Conv2d_2_1x1_256/BatchNorm/moving_mean"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/layer_19_1_Conv2d_2_1x1_256/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 256
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "ssd300/layer_19_1_Conv2d_2_1x1_256/BatchNorm/moving_mean/Assign"
  op: "Assign"
  input: "ssd300/layer_19_1_Conv2d_2_1x1_256/BatchNorm/moving_mean"
  input: "ssd300/layer_19_1_Conv2d_2_1x1_256/BatchNorm/moving_mean/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/layer_19_1_Conv2d_2_1x1_256/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "ssd300/layer_19_1_Conv2d_2_1x1_256/BatchNorm/moving_mean/read"
  op: "Identity"
  input: "ssd300/layer_19_1_Conv2d_2_1x1_256/BatchNorm/moving_mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/layer_19_1_Conv2d_2_1x1_256/BatchNorm/moving_mean"
      }
    }
  }
}
node {
  name: "ssd300/layer_19_1_Conv2d_2_1x1_256/BatchNorm/moving_variance/Initializer/ones"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/layer_19_1_Conv2d_2_1x1_256/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 256
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "ssd300/layer_19_1_Conv2d_2_1x1_256/BatchNorm/moving_variance"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/layer_19_1_Conv2d_2_1x1_256/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 256
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "ssd300/layer_19_1_Conv2d_2_1x1_256/BatchNorm/moving_variance/Assign"
  op: "Assign"
  input: "ssd300/layer_19_1_Conv2d_2_1x1_256/BatchNorm/moving_variance"
  input: "ssd300/layer_19_1_Conv2d_2_1x1_256/BatchNorm/moving_variance/Initializer/ones"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/layer_19_1_Conv2d_2_1x1_256/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "ssd300/layer_19_1_Conv2d_2_1x1_256/BatchNorm/moving_variance/read"
  op: "Identity"
  input: "ssd300/layer_19_1_Conv2d_2_1x1_256/BatchNorm/moving_variance"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/layer_19_1_Conv2d_2_1x1_256/BatchNorm/moving_variance"
      }
    }
  }
}
node {
  name: "ssd300/layer_19_1_Conv2d_2_1x1_256/BatchNorm/Reshape/shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\000\001\000\000\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "ssd300/layer_19_1_Conv2d_2_1x1_256/BatchNorm/Reshape"
  op: "Reshape"
  input: "ssd300/layer_19_1_Conv2d_2_1x1_256/BatchNorm/beta/read"
  input: "ssd300/layer_19_1_Conv2d_2_1x1_256/BatchNorm/Reshape/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "ssd300/layer_19_1_Conv2d_2_1x1_256/BatchNorm/Reshape_1/shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\000\001\000\000\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "ssd300/layer_19_1_Conv2d_2_1x1_256/BatchNorm/Reshape_1"
  op: "Reshape"
  input: "ssd300/layer_19_1_Conv2d_2_1x1_256/BatchNorm/moving_mean/read"
  input: "ssd300/layer_19_1_Conv2d_2_1x1_256/BatchNorm/Reshape_1/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "ssd300/layer_19_1_Conv2d_2_1x1_256/BatchNorm/Reshape_2/shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\000\001\000\000\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "ssd300/layer_19_1_Conv2d_2_1x1_256/BatchNorm/Reshape_2"
  op: "Reshape"
  input: "ssd300/layer_19_1_Conv2d_2_1x1_256/BatchNorm/moving_variance/read"
  input: "ssd300/layer_19_1_Conv2d_2_1x1_256/BatchNorm/Reshape_2/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "ssd300/layer_19_1_Conv2d_2_1x1_256/BatchNorm/batchnorm_1/Add/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0010000000474974513
      }
    }
  }
}
node {
  name: "ssd300/layer_19_1_Conv2d_2_1x1_256/BatchNorm/batchnorm_1/Add"
  op: "Add"
  input: "ssd300/layer_19_1_Conv2d_2_1x1_256/BatchNorm/Reshape_2"
  input: "ssd300/layer_19_1_Conv2d_2_1x1_256/BatchNorm/batchnorm_1/Add/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ssd300/layer_19_1_Conv2d_2_1x1_256/BatchNorm/batchnorm_1/Rsqrt"
  op: "Rsqrt"
  input: "ssd300/layer_19_1_Conv2d_2_1x1_256/BatchNorm/batchnorm_1/Add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ssd300/layer_19_1_Conv2d_2_1x1_256/BatchNorm/batchnorm_1/mul"
  op: "Mul"
  input: "ssd300/layer_19_1_Conv2d_2_1x1_256/layer_conv2d/Conv2D"
  input: "ssd300/layer_19_1_Conv2d_2_1x1_256/BatchNorm/batchnorm_1/Rsqrt"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ssd300/layer_19_1_Conv2d_2_1x1_256/BatchNorm/batchnorm_1/mul_1"
  op: "Mul"
  input: "ssd300/layer_19_1_Conv2d_2_1x1_256/BatchNorm/Reshape_1"
  input: "ssd300/layer_19_1_Conv2d_2_1x1_256/BatchNorm/batchnorm_1/Rsqrt"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ssd300/layer_19_1_Conv2d_2_1x1_256/BatchNorm/batchnorm_1/sub"
  op: "Sub"
  input: "ssd300/layer_19_1_Conv2d_2_1x1_256/BatchNorm/Reshape"
  input: "ssd300/layer_19_1_Conv2d_2_1x1_256/BatchNorm/batchnorm_1/mul_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ssd300/layer_19_1_Conv2d_2_1x1_256/BatchNorm/batchnorm_1/Add_1"
  op: "Add"
  input: "ssd300/layer_19_1_Conv2d_2_1x1_256/BatchNorm/batchnorm_1/mul"
  input: "ssd300/layer_19_1_Conv2d_2_1x1_256/BatchNorm/batchnorm_1/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ssd300/layer_19_1_Conv2d_2_1x1_256/Relu6"
  op: "Relu6"
  input: "ssd300/layer_19_1_Conv2d_2_1x1_256/BatchNorm/batchnorm_1/Add_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ssd300/layer_19_2_Conv2d_2_3x3_s2_512_depthwise/depthwise_weights/Initializer/random_uniform/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/layer_19_2_Conv2d_2_3x3_s2_512_depthwise/depthwise_weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\003\000\000\000\003\000\000\000\000\001\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "ssd300/layer_19_2_Conv2d_2_3x3_s2_512_depthwise/depthwise_weights/Initializer/random_uniform/min"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/layer_19_2_Conv2d_2_3x3_s2_512_depthwise/depthwise_weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: -0.0509316585958004
      }
    }
  }
}
node {
  name: "ssd300/layer_19_2_Conv2d_2_3x3_s2_512_depthwise/depthwise_weights/Initializer/random_uniform/max"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/layer_19_2_Conv2d_2_3x3_s2_512_depthwise/depthwise_weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0509316585958004
      }
    }
  }
}
node {
  name: "ssd300/layer_19_2_Conv2d_2_3x3_s2_512_depthwise/depthwise_weights/Initializer/random_uniform/RandomUniform"
  op: "RandomUniform"
  input: "ssd300/layer_19_2_Conv2d_2_3x3_s2_512_depthwise/depthwise_weights/Initializer/random_uniform/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/layer_19_2_Conv2d_2_3x3_s2_512_depthwise/depthwise_weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "ssd300/layer_19_2_Conv2d_2_3x3_s2_512_depthwise/depthwise_weights/Initializer/random_uniform/sub"
  op: "Sub"
  input: "ssd300/layer_19_2_Conv2d_2_3x3_s2_512_depthwise/depthwise_weights/Initializer/random_uniform/max"
  input: "ssd300/layer_19_2_Conv2d_2_3x3_s2_512_depthwise/depthwise_weights/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/layer_19_2_Conv2d_2_3x3_s2_512_depthwise/depthwise_weights"
      }
    }
  }
}
node {
  name: "ssd300/layer_19_2_Conv2d_2_3x3_s2_512_depthwise/depthwise_weights/Initializer/random_uniform/mul"
  op: "Mul"
  input: "ssd300/layer_19_2_Conv2d_2_3x3_s2_512_depthwise/depthwise_weights/Initializer/random_uniform/RandomUniform"
  input: "ssd300/layer_19_2_Conv2d_2_3x3_s2_512_depthwise/depthwise_weights/Initializer/random_uniform/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/layer_19_2_Conv2d_2_3x3_s2_512_depthwise/depthwise_weights"
      }
    }
  }
}
node {
  name: "ssd300/layer_19_2_Conv2d_2_3x3_s2_512_depthwise/depthwise_weights/Initializer/random_uniform"
  op: "Add"
  input: "ssd300/layer_19_2_Conv2d_2_3x3_s2_512_depthwise/depthwise_weights/Initializer/random_uniform/mul"
  input: "ssd300/layer_19_2_Conv2d_2_3x3_s2_512_depthwise/depthwise_weights/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/layer_19_2_Conv2d_2_3x3_s2_512_depthwise/depthwise_weights"
      }
    }
  }
}
node {
  name: "ssd300/layer_19_2_Conv2d_2_3x3_s2_512_depthwise/depthwise_weights"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/layer_19_2_Conv2d_2_3x3_s2_512_depthwise/depthwise_weights"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 3
        }
        dim {
          size: 3
        }
        dim {
          size: 256
        }
        dim {
          size: 1
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "ssd300/layer_19_2_Conv2d_2_3x3_s2_512_depthwise/depthwise_weights/Assign"
  op: "Assign"
  input: "ssd300/layer_19_2_Conv2d_2_3x3_s2_512_depthwise/depthwise_weights"
  input: "ssd300/layer_19_2_Conv2d_2_3x3_s2_512_depthwise/depthwise_weights/Initializer/random_uniform"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/layer_19_2_Conv2d_2_3x3_s2_512_depthwise/depthwise_weights"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "ssd300/layer_19_2_Conv2d_2_3x3_s2_512_depthwise/depthwise_weights/read"
  op: "Identity"
  input: "ssd300/layer_19_2_Conv2d_2_3x3_s2_512_depthwise/depthwise_weights"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/layer_19_2_Conv2d_2_3x3_s2_512_depthwise/depthwise_weights"
      }
    }
  }
}
node {
  name: "ssd300/layer_19_2_Conv2d_2_3x3_s2_512_depthwise/layer_conv2d/depthwise/Shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\003\000\000\000\003\000\000\000\000\001\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "ssd300/layer_19_2_Conv2d_2_3x3_s2_512_depthwise/layer_conv2d/depthwise/dilation_rate"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "ssd300/layer_19_2_Conv2d_2_3x3_s2_512_depthwise/layer_conv2d/depthwise"
  op: "DepthwiseConv2dNative"
  input: "ssd300/layer_19_1_Conv2d_2_1x1_256/Relu6"
  input: "ssd300/layer_19_2_Conv2d_2_3x3_s2_512_depthwise/depthwise_weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NCHW"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 2
        i: 2
      }
    }
  }
}
node {
  name: "ssd300/layer_19_2_Conv2d_2_3x3_s2_512_depthwise/BatchNorm/beta/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/layer_19_2_Conv2d_2_3x3_s2_512_depthwise/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 256
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "ssd300/layer_19_2_Conv2d_2_3x3_s2_512_depthwise/BatchNorm/beta"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/layer_19_2_Conv2d_2_3x3_s2_512_depthwise/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 256
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "ssd300/layer_19_2_Conv2d_2_3x3_s2_512_depthwise/BatchNorm/beta/Assign"
  op: "Assign"
  input: "ssd300/layer_19_2_Conv2d_2_3x3_s2_512_depthwise/BatchNorm/beta"
  input: "ssd300/layer_19_2_Conv2d_2_3x3_s2_512_depthwise/BatchNorm/beta/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/layer_19_2_Conv2d_2_3x3_s2_512_depthwise/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "ssd300/layer_19_2_Conv2d_2_3x3_s2_512_depthwise/BatchNorm/beta/read"
  op: "Identity"
  input: "ssd300/layer_19_2_Conv2d_2_3x3_s2_512_depthwise/BatchNorm/beta"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/layer_19_2_Conv2d_2_3x3_s2_512_depthwise/BatchNorm/beta"
      }
    }
  }
}
node {
  name: "ssd300/layer_19_2_Conv2d_2_3x3_s2_512_depthwise/BatchNorm/moving_mean/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/layer_19_2_Conv2d_2_3x3_s2_512_depthwise/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 256
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "ssd300/layer_19_2_Conv2d_2_3x3_s2_512_depthwise/BatchNorm/moving_mean"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/layer_19_2_Conv2d_2_3x3_s2_512_depthwise/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 256
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "ssd300/layer_19_2_Conv2d_2_3x3_s2_512_depthwise/BatchNorm/moving_mean/Assign"
  op: "Assign"
  input: "ssd300/layer_19_2_Conv2d_2_3x3_s2_512_depthwise/BatchNorm/moving_mean"
  input: "ssd300/layer_19_2_Conv2d_2_3x3_s2_512_depthwise/BatchNorm/moving_mean/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/layer_19_2_Conv2d_2_3x3_s2_512_depthwise/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "ssd300/layer_19_2_Conv2d_2_3x3_s2_512_depthwise/BatchNorm/moving_mean/read"
  op: "Identity"
  input: "ssd300/layer_19_2_Conv2d_2_3x3_s2_512_depthwise/BatchNorm/moving_mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/layer_19_2_Conv2d_2_3x3_s2_512_depthwise/BatchNorm/moving_mean"
      }
    }
  }
}
node {
  name: "ssd300/layer_19_2_Conv2d_2_3x3_s2_512_depthwise/BatchNorm/moving_variance/Initializer/ones"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/layer_19_2_Conv2d_2_3x3_s2_512_depthwise/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 256
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "ssd300/layer_19_2_Conv2d_2_3x3_s2_512_depthwise/BatchNorm/moving_variance"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/layer_19_2_Conv2d_2_3x3_s2_512_depthwise/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 256
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "ssd300/layer_19_2_Conv2d_2_3x3_s2_512_depthwise/BatchNorm/moving_variance/Assign"
  op: "Assign"
  input: "ssd300/layer_19_2_Conv2d_2_3x3_s2_512_depthwise/BatchNorm/moving_variance"
  input: "ssd300/layer_19_2_Conv2d_2_3x3_s2_512_depthwise/BatchNorm/moving_variance/Initializer/ones"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/layer_19_2_Conv2d_2_3x3_s2_512_depthwise/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "ssd300/layer_19_2_Conv2d_2_3x3_s2_512_depthwise/BatchNorm/moving_variance/read"
  op: "Identity"
  input: "ssd300/layer_19_2_Conv2d_2_3x3_s2_512_depthwise/BatchNorm/moving_variance"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/layer_19_2_Conv2d_2_3x3_s2_512_depthwise/BatchNorm/moving_variance"
      }
    }
  }
}
node {
  name: "ssd300/layer_19_2_Conv2d_2_3x3_s2_512_depthwise/BatchNorm/Reshape/shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\000\001\000\000\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "ssd300/layer_19_2_Conv2d_2_3x3_s2_512_depthwise/BatchNorm/Reshape"
  op: "Reshape"
  input: "ssd300/layer_19_2_Conv2d_2_3x3_s2_512_depthwise/BatchNorm/beta/read"
  input: "ssd300/layer_19_2_Conv2d_2_3x3_s2_512_depthwise/BatchNorm/Reshape/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "ssd300/layer_19_2_Conv2d_2_3x3_s2_512_depthwise/BatchNorm/Reshape_1/shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\000\001\000\000\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "ssd300/layer_19_2_Conv2d_2_3x3_s2_512_depthwise/BatchNorm/Reshape_1"
  op: "Reshape"
  input: "ssd300/layer_19_2_Conv2d_2_3x3_s2_512_depthwise/BatchNorm/moving_mean/read"
  input: "ssd300/layer_19_2_Conv2d_2_3x3_s2_512_depthwise/BatchNorm/Reshape_1/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "ssd300/layer_19_2_Conv2d_2_3x3_s2_512_depthwise/BatchNorm/Reshape_2/shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\000\001\000\000\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "ssd300/layer_19_2_Conv2d_2_3x3_s2_512_depthwise/BatchNorm/Reshape_2"
  op: "Reshape"
  input: "ssd300/layer_19_2_Conv2d_2_3x3_s2_512_depthwise/BatchNorm/moving_variance/read"
  input: "ssd300/layer_19_2_Conv2d_2_3x3_s2_512_depthwise/BatchNorm/Reshape_2/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "ssd300/layer_19_2_Conv2d_2_3x3_s2_512_depthwise/BatchNorm/batchnorm_1/Add/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0010000000474974513
      }
    }
  }
}
node {
  name: "ssd300/layer_19_2_Conv2d_2_3x3_s2_512_depthwise/BatchNorm/batchnorm_1/Add"
  op: "Add"
  input: "ssd300/layer_19_2_Conv2d_2_3x3_s2_512_depthwise/BatchNorm/Reshape_2"
  input: "ssd300/layer_19_2_Conv2d_2_3x3_s2_512_depthwise/BatchNorm/batchnorm_1/Add/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ssd300/layer_19_2_Conv2d_2_3x3_s2_512_depthwise/BatchNorm/batchnorm_1/Rsqrt"
  op: "Rsqrt"
  input: "ssd300/layer_19_2_Conv2d_2_3x3_s2_512_depthwise/BatchNorm/batchnorm_1/Add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ssd300/layer_19_2_Conv2d_2_3x3_s2_512_depthwise/BatchNorm/batchnorm_1/mul"
  op: "Mul"
  input: "ssd300/layer_19_2_Conv2d_2_3x3_s2_512_depthwise/layer_conv2d/depthwise"
  input: "ssd300/layer_19_2_Conv2d_2_3x3_s2_512_depthwise/BatchNorm/batchnorm_1/Rsqrt"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ssd300/layer_19_2_Conv2d_2_3x3_s2_512_depthwise/BatchNorm/batchnorm_1/mul_1"
  op: "Mul"
  input: "ssd300/layer_19_2_Conv2d_2_3x3_s2_512_depthwise/BatchNorm/Reshape_1"
  input: "ssd300/layer_19_2_Conv2d_2_3x3_s2_512_depthwise/BatchNorm/batchnorm_1/Rsqrt"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ssd300/layer_19_2_Conv2d_2_3x3_s2_512_depthwise/BatchNorm/batchnorm_1/sub"
  op: "Sub"
  input: "ssd300/layer_19_2_Conv2d_2_3x3_s2_512_depthwise/BatchNorm/Reshape"
  input: "ssd300/layer_19_2_Conv2d_2_3x3_s2_512_depthwise/BatchNorm/batchnorm_1/mul_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ssd300/layer_19_2_Conv2d_2_3x3_s2_512_depthwise/BatchNorm/batchnorm_1/Add_1"
  op: "Add"
  input: "ssd300/layer_19_2_Conv2d_2_3x3_s2_512_depthwise/BatchNorm/batchnorm_1/mul"
  input: "ssd300/layer_19_2_Conv2d_2_3x3_s2_512_depthwise/BatchNorm/batchnorm_1/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ssd300/layer_19_2_Conv2d_2_3x3_s2_512_depthwise/Relu6"
  op: "Relu6"
  input: "ssd300/layer_19_2_Conv2d_2_3x3_s2_512_depthwise/BatchNorm/batchnorm_1/Add_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ssd300/layer_19_2_Conv2d_2_3x3_s2_512/weights/Initializer/random_uniform/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/layer_19_2_Conv2d_2_3x3_s2_512/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000\000\001\000\000\000\002\000\000"
      }
    }
  }
}
node {
  name: "ssd300/layer_19_2_Conv2d_2_3x3_s2_512/weights/Initializer/random_uniform/min"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/layer_19_2_Conv2d_2_3x3_s2_512/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: -0.0883883461356163
      }
    }
  }
}
node {
  name: "ssd300/layer_19_2_Conv2d_2_3x3_s2_512/weights/Initializer/random_uniform/max"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/layer_19_2_Conv2d_2_3x3_s2_512/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0883883461356163
      }
    }
  }
}
node {
  name: "ssd300/layer_19_2_Conv2d_2_3x3_s2_512/weights/Initializer/random_uniform/RandomUniform"
  op: "RandomUniform"
  input: "ssd300/layer_19_2_Conv2d_2_3x3_s2_512/weights/Initializer/random_uniform/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/layer_19_2_Conv2d_2_3x3_s2_512/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "ssd300/layer_19_2_Conv2d_2_3x3_s2_512/weights/Initializer/random_uniform/sub"
  op: "Sub"
  input: "ssd300/layer_19_2_Conv2d_2_3x3_s2_512/weights/Initializer/random_uniform/max"
  input: "ssd300/layer_19_2_Conv2d_2_3x3_s2_512/weights/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/layer_19_2_Conv2d_2_3x3_s2_512/weights"
      }
    }
  }
}
node {
  name: "ssd300/layer_19_2_Conv2d_2_3x3_s2_512/weights/Initializer/random_uniform/mul"
  op: "Mul"
  input: "ssd300/layer_19_2_Conv2d_2_3x3_s2_512/weights/Initializer/random_uniform/RandomUniform"
  input: "ssd300/layer_19_2_Conv2d_2_3x3_s2_512/weights/Initializer/random_uniform/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/layer_19_2_Conv2d_2_3x3_s2_512/weights"
      }
    }
  }
}
node {
  name: "ssd300/layer_19_2_Conv2d_2_3x3_s2_512/weights/Initializer/random_uniform"
  op: "Add"
  input: "ssd300/layer_19_2_Conv2d_2_3x3_s2_512/weights/Initializer/random_uniform/mul"
  input: "ssd300/layer_19_2_Conv2d_2_3x3_s2_512/weights/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/layer_19_2_Conv2d_2_3x3_s2_512/weights"
      }
    }
  }
}
node {
  name: "ssd300/layer_19_2_Conv2d_2_3x3_s2_512/weights"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/layer_19_2_Conv2d_2_3x3_s2_512/weights"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
        dim {
          size: 1
        }
        dim {
          size: 256
        }
        dim {
          size: 512
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "ssd300/layer_19_2_Conv2d_2_3x3_s2_512/weights/Assign"
  op: "Assign"
  input: "ssd300/layer_19_2_Conv2d_2_3x3_s2_512/weights"
  input: "ssd300/layer_19_2_Conv2d_2_3x3_s2_512/weights/Initializer/random_uniform"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/layer_19_2_Conv2d_2_3x3_s2_512/weights"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "ssd300/layer_19_2_Conv2d_2_3x3_s2_512/weights/read"
  op: "Identity"
  input: "ssd300/layer_19_2_Conv2d_2_3x3_s2_512/weights"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/layer_19_2_Conv2d_2_3x3_s2_512/weights"
      }
    }
  }
}
node {
  name: "ssd300/layer_19_2_Conv2d_2_3x3_s2_512/layer_conv2d/Conv2D"
  op: "Conv2D"
  input: "ssd300/layer_19_2_Conv2d_2_3x3_s2_512_depthwise/Relu6"
  input: "ssd300/layer_19_2_Conv2d_2_3x3_s2_512/weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NCHW"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "explicit_paddings"
    value {
      list {
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "ssd300/layer_19_2_Conv2d_2_3x3_s2_512/BatchNorm/beta/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/layer_19_2_Conv2d_2_3x3_s2_512/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 512
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "ssd300/layer_19_2_Conv2d_2_3x3_s2_512/BatchNorm/beta"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/layer_19_2_Conv2d_2_3x3_s2_512/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 512
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "ssd300/layer_19_2_Conv2d_2_3x3_s2_512/BatchNorm/beta/Assign"
  op: "Assign"
  input: "ssd300/layer_19_2_Conv2d_2_3x3_s2_512/BatchNorm/beta"
  input: "ssd300/layer_19_2_Conv2d_2_3x3_s2_512/BatchNorm/beta/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/layer_19_2_Conv2d_2_3x3_s2_512/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "ssd300/layer_19_2_Conv2d_2_3x3_s2_512/BatchNorm/beta/read"
  op: "Identity"
  input: "ssd300/layer_19_2_Conv2d_2_3x3_s2_512/BatchNorm/beta"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/layer_19_2_Conv2d_2_3x3_s2_512/BatchNorm/beta"
      }
    }
  }
}
node {
  name: "ssd300/layer_19_2_Conv2d_2_3x3_s2_512/BatchNorm/moving_mean/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/layer_19_2_Conv2d_2_3x3_s2_512/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 512
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "ssd300/layer_19_2_Conv2d_2_3x3_s2_512/BatchNorm/moving_mean"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/layer_19_2_Conv2d_2_3x3_s2_512/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 512
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "ssd300/layer_19_2_Conv2d_2_3x3_s2_512/BatchNorm/moving_mean/Assign"
  op: "Assign"
  input: "ssd300/layer_19_2_Conv2d_2_3x3_s2_512/BatchNorm/moving_mean"
  input: "ssd300/layer_19_2_Conv2d_2_3x3_s2_512/BatchNorm/moving_mean/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/layer_19_2_Conv2d_2_3x3_s2_512/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "ssd300/layer_19_2_Conv2d_2_3x3_s2_512/BatchNorm/moving_mean/read"
  op: "Identity"
  input: "ssd300/layer_19_2_Conv2d_2_3x3_s2_512/BatchNorm/moving_mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/layer_19_2_Conv2d_2_3x3_s2_512/BatchNorm/moving_mean"
      }
    }
  }
}
node {
  name: "ssd300/layer_19_2_Conv2d_2_3x3_s2_512/BatchNorm/moving_variance/Initializer/ones"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/layer_19_2_Conv2d_2_3x3_s2_512/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 512
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "ssd300/layer_19_2_Conv2d_2_3x3_s2_512/BatchNorm/moving_variance"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/layer_19_2_Conv2d_2_3x3_s2_512/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 512
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "ssd300/layer_19_2_Conv2d_2_3x3_s2_512/BatchNorm/moving_variance/Assign"
  op: "Assign"
  input: "ssd300/layer_19_2_Conv2d_2_3x3_s2_512/BatchNorm/moving_variance"
  input: "ssd300/layer_19_2_Conv2d_2_3x3_s2_512/BatchNorm/moving_variance/Initializer/ones"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/layer_19_2_Conv2d_2_3x3_s2_512/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "ssd300/layer_19_2_Conv2d_2_3x3_s2_512/BatchNorm/moving_variance/read"
  op: "Identity"
  input: "ssd300/layer_19_2_Conv2d_2_3x3_s2_512/BatchNorm/moving_variance"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/layer_19_2_Conv2d_2_3x3_s2_512/BatchNorm/moving_variance"
      }
    }
  }
}
node {
  name: "ssd300/layer_19_2_Conv2d_2_3x3_s2_512/BatchNorm/Reshape/shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\000\002\000\000\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "ssd300/layer_19_2_Conv2d_2_3x3_s2_512/BatchNorm/Reshape"
  op: "Reshape"
  input: "ssd300/layer_19_2_Conv2d_2_3x3_s2_512/BatchNorm/beta/read"
  input: "ssd300/layer_19_2_Conv2d_2_3x3_s2_512/BatchNorm/Reshape/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "ssd300/layer_19_2_Conv2d_2_3x3_s2_512/BatchNorm/Reshape_1/shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\000\002\000\000\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "ssd300/layer_19_2_Conv2d_2_3x3_s2_512/BatchNorm/Reshape_1"
  op: "Reshape"
  input: "ssd300/layer_19_2_Conv2d_2_3x3_s2_512/BatchNorm/moving_mean/read"
  input: "ssd300/layer_19_2_Conv2d_2_3x3_s2_512/BatchNorm/Reshape_1/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "ssd300/layer_19_2_Conv2d_2_3x3_s2_512/BatchNorm/Reshape_2/shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\000\002\000\000\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "ssd300/layer_19_2_Conv2d_2_3x3_s2_512/BatchNorm/Reshape_2"
  op: "Reshape"
  input: "ssd300/layer_19_2_Conv2d_2_3x3_s2_512/BatchNorm/moving_variance/read"
  input: "ssd300/layer_19_2_Conv2d_2_3x3_s2_512/BatchNorm/Reshape_2/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "ssd300/layer_19_2_Conv2d_2_3x3_s2_512/BatchNorm/batchnorm_1/Add/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0010000000474974513
      }
    }
  }
}
node {
  name: "ssd300/layer_19_2_Conv2d_2_3x3_s2_512/BatchNorm/batchnorm_1/Add"
  op: "Add"
  input: "ssd300/layer_19_2_Conv2d_2_3x3_s2_512/BatchNorm/Reshape_2"
  input: "ssd300/layer_19_2_Conv2d_2_3x3_s2_512/BatchNorm/batchnorm_1/Add/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ssd300/layer_19_2_Conv2d_2_3x3_s2_512/BatchNorm/batchnorm_1/Rsqrt"
  op: "Rsqrt"
  input: "ssd300/layer_19_2_Conv2d_2_3x3_s2_512/BatchNorm/batchnorm_1/Add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ssd300/layer_19_2_Conv2d_2_3x3_s2_512/BatchNorm/batchnorm_1/mul"
  op: "Mul"
  input: "ssd300/layer_19_2_Conv2d_2_3x3_s2_512/layer_conv2d/Conv2D"
  input: "ssd300/layer_19_2_Conv2d_2_3x3_s2_512/BatchNorm/batchnorm_1/Rsqrt"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ssd300/layer_19_2_Conv2d_2_3x3_s2_512/BatchNorm/batchnorm_1/mul_1"
  op: "Mul"
  input: "ssd300/layer_19_2_Conv2d_2_3x3_s2_512/BatchNorm/Reshape_1"
  input: "ssd300/layer_19_2_Conv2d_2_3x3_s2_512/BatchNorm/batchnorm_1/Rsqrt"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ssd300/layer_19_2_Conv2d_2_3x3_s2_512/BatchNorm/batchnorm_1/sub"
  op: "Sub"
  input: "ssd300/layer_19_2_Conv2d_2_3x3_s2_512/BatchNorm/Reshape"
  input: "ssd300/layer_19_2_Conv2d_2_3x3_s2_512/BatchNorm/batchnorm_1/mul_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ssd300/layer_19_2_Conv2d_2_3x3_s2_512/BatchNorm/batchnorm_1/Add_1"
  op: "Add"
  input: "ssd300/layer_19_2_Conv2d_2_3x3_s2_512/BatchNorm/batchnorm_1/mul"
  input: "ssd300/layer_19_2_Conv2d_2_3x3_s2_512/BatchNorm/batchnorm_1/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ssd300/layer_19_2_Conv2d_2_3x3_s2_512/Relu6"
  op: "Relu6"
  input: "ssd300/layer_19_2_Conv2d_2_3x3_s2_512/BatchNorm/batchnorm_1/Add_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ssd300/layer_19_1_Conv2d_3_1x1_128/weights/Initializer/random_uniform/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/layer_19_1_Conv2d_3_1x1_128/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000\000\002\000\000\200\000\000\000"
      }
    }
  }
}
node {
  name: "ssd300/layer_19_1_Conv2d_3_1x1_128/weights/Initializer/random_uniform/min"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/layer_19_1_Conv2d_3_1x1_128/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: -0.09682458639144897
      }
    }
  }
}
node {
  name: "ssd300/layer_19_1_Conv2d_3_1x1_128/weights/Initializer/random_uniform/max"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/layer_19_1_Conv2d_3_1x1_128/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.09682458639144897
      }
    }
  }
}
node {
  name: "ssd300/layer_19_1_Conv2d_3_1x1_128/weights/Initializer/random_uniform/RandomUniform"
  op: "RandomUniform"
  input: "ssd300/layer_19_1_Conv2d_3_1x1_128/weights/Initializer/random_uniform/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/layer_19_1_Conv2d_3_1x1_128/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "ssd300/layer_19_1_Conv2d_3_1x1_128/weights/Initializer/random_uniform/sub"
  op: "Sub"
  input: "ssd300/layer_19_1_Conv2d_3_1x1_128/weights/Initializer/random_uniform/max"
  input: "ssd300/layer_19_1_Conv2d_3_1x1_128/weights/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/layer_19_1_Conv2d_3_1x1_128/weights"
      }
    }
  }
}
node {
  name: "ssd300/layer_19_1_Conv2d_3_1x1_128/weights/Initializer/random_uniform/mul"
  op: "Mul"
  input: "ssd300/layer_19_1_Conv2d_3_1x1_128/weights/Initializer/random_uniform/RandomUniform"
  input: "ssd300/layer_19_1_Conv2d_3_1x1_128/weights/Initializer/random_uniform/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/layer_19_1_Conv2d_3_1x1_128/weights"
      }
    }
  }
}
node {
  name: "ssd300/layer_19_1_Conv2d_3_1x1_128/weights/Initializer/random_uniform"
  op: "Add"
  input: "ssd300/layer_19_1_Conv2d_3_1x1_128/weights/Initializer/random_uniform/mul"
  input: "ssd300/layer_19_1_Conv2d_3_1x1_128/weights/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/layer_19_1_Conv2d_3_1x1_128/weights"
      }
    }
  }
}
node {
  name: "ssd300/layer_19_1_Conv2d_3_1x1_128/weights"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/layer_19_1_Conv2d_3_1x1_128/weights"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
        dim {
          size: 1
        }
        dim {
          size: 512
        }
        dim {
          size: 128
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "ssd300/layer_19_1_Conv2d_3_1x1_128/weights/Assign"
  op: "Assign"
  input: "ssd300/layer_19_1_Conv2d_3_1x1_128/weights"
  input: "ssd300/layer_19_1_Conv2d_3_1x1_128/weights/Initializer/random_uniform"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/layer_19_1_Conv2d_3_1x1_128/weights"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "ssd300/layer_19_1_Conv2d_3_1x1_128/weights/read"
  op: "Identity"
  input: "ssd300/layer_19_1_Conv2d_3_1x1_128/weights"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/layer_19_1_Conv2d_3_1x1_128/weights"
      }
    }
  }
}
node {
  name: "ssd300/layer_19_1_Conv2d_3_1x1_128/layer_conv2d/Conv2D"
  op: "Conv2D"
  input: "ssd300/layer_19_2_Conv2d_2_3x3_s2_512/Relu6"
  input: "ssd300/layer_19_1_Conv2d_3_1x1_128/weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NCHW"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "explicit_paddings"
    value {
      list {
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "ssd300/layer_19_1_Conv2d_3_1x1_128/BatchNorm/beta/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/layer_19_1_Conv2d_3_1x1_128/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 128
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "ssd300/layer_19_1_Conv2d_3_1x1_128/BatchNorm/beta"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/layer_19_1_Conv2d_3_1x1_128/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 128
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "ssd300/layer_19_1_Conv2d_3_1x1_128/BatchNorm/beta/Assign"
  op: "Assign"
  input: "ssd300/layer_19_1_Conv2d_3_1x1_128/BatchNorm/beta"
  input: "ssd300/layer_19_1_Conv2d_3_1x1_128/BatchNorm/beta/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/layer_19_1_Conv2d_3_1x1_128/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "ssd300/layer_19_1_Conv2d_3_1x1_128/BatchNorm/beta/read"
  op: "Identity"
  input: "ssd300/layer_19_1_Conv2d_3_1x1_128/BatchNorm/beta"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/layer_19_1_Conv2d_3_1x1_128/BatchNorm/beta"
      }
    }
  }
}
node {
  name: "ssd300/layer_19_1_Conv2d_3_1x1_128/BatchNorm/moving_mean/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/layer_19_1_Conv2d_3_1x1_128/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 128
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "ssd300/layer_19_1_Conv2d_3_1x1_128/BatchNorm/moving_mean"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/layer_19_1_Conv2d_3_1x1_128/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 128
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "ssd300/layer_19_1_Conv2d_3_1x1_128/BatchNorm/moving_mean/Assign"
  op: "Assign"
  input: "ssd300/layer_19_1_Conv2d_3_1x1_128/BatchNorm/moving_mean"
  input: "ssd300/layer_19_1_Conv2d_3_1x1_128/BatchNorm/moving_mean/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/layer_19_1_Conv2d_3_1x1_128/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "ssd300/layer_19_1_Conv2d_3_1x1_128/BatchNorm/moving_mean/read"
  op: "Identity"
  input: "ssd300/layer_19_1_Conv2d_3_1x1_128/BatchNorm/moving_mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/layer_19_1_Conv2d_3_1x1_128/BatchNorm/moving_mean"
      }
    }
  }
}
node {
  name: "ssd300/layer_19_1_Conv2d_3_1x1_128/BatchNorm/moving_variance/Initializer/ones"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/layer_19_1_Conv2d_3_1x1_128/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 128
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "ssd300/layer_19_1_Conv2d_3_1x1_128/BatchNorm/moving_variance"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/layer_19_1_Conv2d_3_1x1_128/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 128
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "ssd300/layer_19_1_Conv2d_3_1x1_128/BatchNorm/moving_variance/Assign"
  op: "Assign"
  input: "ssd300/layer_19_1_Conv2d_3_1x1_128/BatchNorm/moving_variance"
  input: "ssd300/layer_19_1_Conv2d_3_1x1_128/BatchNorm/moving_variance/Initializer/ones"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/layer_19_1_Conv2d_3_1x1_128/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "ssd300/layer_19_1_Conv2d_3_1x1_128/BatchNorm/moving_variance/read"
  op: "Identity"
  input: "ssd300/layer_19_1_Conv2d_3_1x1_128/BatchNorm/moving_variance"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/layer_19_1_Conv2d_3_1x1_128/BatchNorm/moving_variance"
      }
    }
  }
}
node {
  name: "ssd300/layer_19_1_Conv2d_3_1x1_128/BatchNorm/Reshape/shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\200\000\000\000\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "ssd300/layer_19_1_Conv2d_3_1x1_128/BatchNorm/Reshape"
  op: "Reshape"
  input: "ssd300/layer_19_1_Conv2d_3_1x1_128/BatchNorm/beta/read"
  input: "ssd300/layer_19_1_Conv2d_3_1x1_128/BatchNorm/Reshape/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "ssd300/layer_19_1_Conv2d_3_1x1_128/BatchNorm/Reshape_1/shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\200\000\000\000\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "ssd300/layer_19_1_Conv2d_3_1x1_128/BatchNorm/Reshape_1"
  op: "Reshape"
  input: "ssd300/layer_19_1_Conv2d_3_1x1_128/BatchNorm/moving_mean/read"
  input: "ssd300/layer_19_1_Conv2d_3_1x1_128/BatchNorm/Reshape_1/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "ssd300/layer_19_1_Conv2d_3_1x1_128/BatchNorm/Reshape_2/shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\200\000\000\000\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "ssd300/layer_19_1_Conv2d_3_1x1_128/BatchNorm/Reshape_2"
  op: "Reshape"
  input: "ssd300/layer_19_1_Conv2d_3_1x1_128/BatchNorm/moving_variance/read"
  input: "ssd300/layer_19_1_Conv2d_3_1x1_128/BatchNorm/Reshape_2/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "ssd300/layer_19_1_Conv2d_3_1x1_128/BatchNorm/batchnorm_1/Add/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0010000000474974513
      }
    }
  }
}
node {
  name: "ssd300/layer_19_1_Conv2d_3_1x1_128/BatchNorm/batchnorm_1/Add"
  op: "Add"
  input: "ssd300/layer_19_1_Conv2d_3_1x1_128/BatchNorm/Reshape_2"
  input: "ssd300/layer_19_1_Conv2d_3_1x1_128/BatchNorm/batchnorm_1/Add/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ssd300/layer_19_1_Conv2d_3_1x1_128/BatchNorm/batchnorm_1/Rsqrt"
  op: "Rsqrt"
  input: "ssd300/layer_19_1_Conv2d_3_1x1_128/BatchNorm/batchnorm_1/Add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ssd300/layer_19_1_Conv2d_3_1x1_128/BatchNorm/batchnorm_1/mul"
  op: "Mul"
  input: "ssd300/layer_19_1_Conv2d_3_1x1_128/layer_conv2d/Conv2D"
  input: "ssd300/layer_19_1_Conv2d_3_1x1_128/BatchNorm/batchnorm_1/Rsqrt"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ssd300/layer_19_1_Conv2d_3_1x1_128/BatchNorm/batchnorm_1/mul_1"
  op: "Mul"
  input: "ssd300/layer_19_1_Conv2d_3_1x1_128/BatchNorm/Reshape_1"
  input: "ssd300/layer_19_1_Conv2d_3_1x1_128/BatchNorm/batchnorm_1/Rsqrt"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ssd300/layer_19_1_Conv2d_3_1x1_128/BatchNorm/batchnorm_1/sub"
  op: "Sub"
  input: "ssd300/layer_19_1_Conv2d_3_1x1_128/BatchNorm/Reshape"
  input: "ssd300/layer_19_1_Conv2d_3_1x1_128/BatchNorm/batchnorm_1/mul_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ssd300/layer_19_1_Conv2d_3_1x1_128/BatchNorm/batchnorm_1/Add_1"
  op: "Add"
  input: "ssd300/layer_19_1_Conv2d_3_1x1_128/BatchNorm/batchnorm_1/mul"
  input: "ssd300/layer_19_1_Conv2d_3_1x1_128/BatchNorm/batchnorm_1/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ssd300/layer_19_1_Conv2d_3_1x1_128/Relu6"
  op: "Relu6"
  input: "ssd300/layer_19_1_Conv2d_3_1x1_128/BatchNorm/batchnorm_1/Add_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ssd300/layer_19_2_Conv2d_3_3x3_s2_256_depthwise/depthwise_weights/Initializer/random_uniform/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/layer_19_2_Conv2d_3_3x3_s2_256_depthwise/depthwise_weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\003\000\000\000\003\000\000\000\200\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "ssd300/layer_19_2_Conv2d_3_3x3_s2_256_depthwise/depthwise_weights/Initializer/random_uniform/min"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/layer_19_2_Conv2d_3_3x3_s2_256_depthwise/depthwise_weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: -0.0718885138630867
      }
    }
  }
}
node {
  name: "ssd300/layer_19_2_Conv2d_3_3x3_s2_256_depthwise/depthwise_weights/Initializer/random_uniform/max"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/layer_19_2_Conv2d_3_3x3_s2_256_depthwise/depthwise_weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0718885138630867
      }
    }
  }
}
node {
  name: "ssd300/layer_19_2_Conv2d_3_3x3_s2_256_depthwise/depthwise_weights/Initializer/random_uniform/RandomUniform"
  op: "RandomUniform"
  input: "ssd300/layer_19_2_Conv2d_3_3x3_s2_256_depthwise/depthwise_weights/Initializer/random_uniform/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/layer_19_2_Conv2d_3_3x3_s2_256_depthwise/depthwise_weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "ssd300/layer_19_2_Conv2d_3_3x3_s2_256_depthwise/depthwise_weights/Initializer/random_uniform/sub"
  op: "Sub"
  input: "ssd300/layer_19_2_Conv2d_3_3x3_s2_256_depthwise/depthwise_weights/Initializer/random_uniform/max"
  input: "ssd300/layer_19_2_Conv2d_3_3x3_s2_256_depthwise/depthwise_weights/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/layer_19_2_Conv2d_3_3x3_s2_256_depthwise/depthwise_weights"
      }
    }
  }
}
node {
  name: "ssd300/layer_19_2_Conv2d_3_3x3_s2_256_depthwise/depthwise_weights/Initializer/random_uniform/mul"
  op: "Mul"
  input: "ssd300/layer_19_2_Conv2d_3_3x3_s2_256_depthwise/depthwise_weights/Initializer/random_uniform/RandomUniform"
  input: "ssd300/layer_19_2_Conv2d_3_3x3_s2_256_depthwise/depthwise_weights/Initializer/random_uniform/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/layer_19_2_Conv2d_3_3x3_s2_256_depthwise/depthwise_weights"
      }
    }
  }
}
node {
  name: "ssd300/layer_19_2_Conv2d_3_3x3_s2_256_depthwise/depthwise_weights/Initializer/random_uniform"
  op: "Add"
  input: "ssd300/layer_19_2_Conv2d_3_3x3_s2_256_depthwise/depthwise_weights/Initializer/random_uniform/mul"
  input: "ssd300/layer_19_2_Conv2d_3_3x3_s2_256_depthwise/depthwise_weights/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/layer_19_2_Conv2d_3_3x3_s2_256_depthwise/depthwise_weights"
      }
    }
  }
}
node {
  name: "ssd300/layer_19_2_Conv2d_3_3x3_s2_256_depthwise/depthwise_weights"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/layer_19_2_Conv2d_3_3x3_s2_256_depthwise/depthwise_weights"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 3
        }
        dim {
          size: 3
        }
        dim {
          size: 128
        }
        dim {
          size: 1
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "ssd300/layer_19_2_Conv2d_3_3x3_s2_256_depthwise/depthwise_weights/Assign"
  op: "Assign"
  input: "ssd300/layer_19_2_Conv2d_3_3x3_s2_256_depthwise/depthwise_weights"
  input: "ssd300/layer_19_2_Conv2d_3_3x3_s2_256_depthwise/depthwise_weights/Initializer/random_uniform"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/layer_19_2_Conv2d_3_3x3_s2_256_depthwise/depthwise_weights"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "ssd300/layer_19_2_Conv2d_3_3x3_s2_256_depthwise/depthwise_weights/read"
  op: "Identity"
  input: "ssd300/layer_19_2_Conv2d_3_3x3_s2_256_depthwise/depthwise_weights"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/layer_19_2_Conv2d_3_3x3_s2_256_depthwise/depthwise_weights"
      }
    }
  }
}
node {
  name: "ssd300/layer_19_2_Conv2d_3_3x3_s2_256_depthwise/layer_conv2d/depthwise/Shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\003\000\000\000\003\000\000\000\200\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "ssd300/layer_19_2_Conv2d_3_3x3_s2_256_depthwise/layer_conv2d/depthwise/dilation_rate"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "ssd300/layer_19_2_Conv2d_3_3x3_s2_256_depthwise/layer_conv2d/depthwise"
  op: "DepthwiseConv2dNative"
  input: "ssd300/layer_19_1_Conv2d_3_1x1_128/Relu6"
  input: "ssd300/layer_19_2_Conv2d_3_3x3_s2_256_depthwise/depthwise_weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NCHW"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 2
        i: 2
      }
    }
  }
}
node {
  name: "ssd300/layer_19_2_Conv2d_3_3x3_s2_256_depthwise/BatchNorm/beta/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/layer_19_2_Conv2d_3_3x3_s2_256_depthwise/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 128
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "ssd300/layer_19_2_Conv2d_3_3x3_s2_256_depthwise/BatchNorm/beta"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/layer_19_2_Conv2d_3_3x3_s2_256_depthwise/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 128
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "ssd300/layer_19_2_Conv2d_3_3x3_s2_256_depthwise/BatchNorm/beta/Assign"
  op: "Assign"
  input: "ssd300/layer_19_2_Conv2d_3_3x3_s2_256_depthwise/BatchNorm/beta"
  input: "ssd300/layer_19_2_Conv2d_3_3x3_s2_256_depthwise/BatchNorm/beta/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/layer_19_2_Conv2d_3_3x3_s2_256_depthwise/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "ssd300/layer_19_2_Conv2d_3_3x3_s2_256_depthwise/BatchNorm/beta/read"
  op: "Identity"
  input: "ssd300/layer_19_2_Conv2d_3_3x3_s2_256_depthwise/BatchNorm/beta"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/layer_19_2_Conv2d_3_3x3_s2_256_depthwise/BatchNorm/beta"
      }
    }
  }
}
node {
  name: "ssd300/layer_19_2_Conv2d_3_3x3_s2_256_depthwise/BatchNorm/moving_mean/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/layer_19_2_Conv2d_3_3x3_s2_256_depthwise/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 128
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "ssd300/layer_19_2_Conv2d_3_3x3_s2_256_depthwise/BatchNorm/moving_mean"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/layer_19_2_Conv2d_3_3x3_s2_256_depthwise/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 128
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "ssd300/layer_19_2_Conv2d_3_3x3_s2_256_depthwise/BatchNorm/moving_mean/Assign"
  op: "Assign"
  input: "ssd300/layer_19_2_Conv2d_3_3x3_s2_256_depthwise/BatchNorm/moving_mean"
  input: "ssd300/layer_19_2_Conv2d_3_3x3_s2_256_depthwise/BatchNorm/moving_mean/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/layer_19_2_Conv2d_3_3x3_s2_256_depthwise/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "ssd300/layer_19_2_Conv2d_3_3x3_s2_256_depthwise/BatchNorm/moving_mean/read"
  op: "Identity"
  input: "ssd300/layer_19_2_Conv2d_3_3x3_s2_256_depthwise/BatchNorm/moving_mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/layer_19_2_Conv2d_3_3x3_s2_256_depthwise/BatchNorm/moving_mean"
      }
    }
  }
}
node {
  name: "ssd300/layer_19_2_Conv2d_3_3x3_s2_256_depthwise/BatchNorm/moving_variance/Initializer/ones"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/layer_19_2_Conv2d_3_3x3_s2_256_depthwise/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 128
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "ssd300/layer_19_2_Conv2d_3_3x3_s2_256_depthwise/BatchNorm/moving_variance"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/layer_19_2_Conv2d_3_3x3_s2_256_depthwise/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 128
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "ssd300/layer_19_2_Conv2d_3_3x3_s2_256_depthwise/BatchNorm/moving_variance/Assign"
  op: "Assign"
  input: "ssd300/layer_19_2_Conv2d_3_3x3_s2_256_depthwise/BatchNorm/moving_variance"
  input: "ssd300/layer_19_2_Conv2d_3_3x3_s2_256_depthwise/BatchNorm/moving_variance/Initializer/ones"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/layer_19_2_Conv2d_3_3x3_s2_256_depthwise/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "ssd300/layer_19_2_Conv2d_3_3x3_s2_256_depthwise/BatchNorm/moving_variance/read"
  op: "Identity"
  input: "ssd300/layer_19_2_Conv2d_3_3x3_s2_256_depthwise/BatchNorm/moving_variance"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/layer_19_2_Conv2d_3_3x3_s2_256_depthwise/BatchNorm/moving_variance"
      }
    }
  }
}
node {
  name: "ssd300/layer_19_2_Conv2d_3_3x3_s2_256_depthwise/BatchNorm/Reshape/shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\200\000\000\000\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "ssd300/layer_19_2_Conv2d_3_3x3_s2_256_depthwise/BatchNorm/Reshape"
  op: "Reshape"
  input: "ssd300/layer_19_2_Conv2d_3_3x3_s2_256_depthwise/BatchNorm/beta/read"
  input: "ssd300/layer_19_2_Conv2d_3_3x3_s2_256_depthwise/BatchNorm/Reshape/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "ssd300/layer_19_2_Conv2d_3_3x3_s2_256_depthwise/BatchNorm/Reshape_1/shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\200\000\000\000\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "ssd300/layer_19_2_Conv2d_3_3x3_s2_256_depthwise/BatchNorm/Reshape_1"
  op: "Reshape"
  input: "ssd300/layer_19_2_Conv2d_3_3x3_s2_256_depthwise/BatchNorm/moving_mean/read"
  input: "ssd300/layer_19_2_Conv2d_3_3x3_s2_256_depthwise/BatchNorm/Reshape_1/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "ssd300/layer_19_2_Conv2d_3_3x3_s2_256_depthwise/BatchNorm/Reshape_2/shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\200\000\000\000\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "ssd300/layer_19_2_Conv2d_3_3x3_s2_256_depthwise/BatchNorm/Reshape_2"
  op: "Reshape"
  input: "ssd300/layer_19_2_Conv2d_3_3x3_s2_256_depthwise/BatchNorm/moving_variance/read"
  input: "ssd300/layer_19_2_Conv2d_3_3x3_s2_256_depthwise/BatchNorm/Reshape_2/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "ssd300/layer_19_2_Conv2d_3_3x3_s2_256_depthwise/BatchNorm/batchnorm_1/Add/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0010000000474974513
      }
    }
  }
}
node {
  name: "ssd300/layer_19_2_Conv2d_3_3x3_s2_256_depthwise/BatchNorm/batchnorm_1/Add"
  op: "Add"
  input: "ssd300/layer_19_2_Conv2d_3_3x3_s2_256_depthwise/BatchNorm/Reshape_2"
  input: "ssd300/layer_19_2_Conv2d_3_3x3_s2_256_depthwise/BatchNorm/batchnorm_1/Add/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ssd300/layer_19_2_Conv2d_3_3x3_s2_256_depthwise/BatchNorm/batchnorm_1/Rsqrt"
  op: "Rsqrt"
  input: "ssd300/layer_19_2_Conv2d_3_3x3_s2_256_depthwise/BatchNorm/batchnorm_1/Add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ssd300/layer_19_2_Conv2d_3_3x3_s2_256_depthwise/BatchNorm/batchnorm_1/mul"
  op: "Mul"
  input: "ssd300/layer_19_2_Conv2d_3_3x3_s2_256_depthwise/layer_conv2d/depthwise"
  input: "ssd300/layer_19_2_Conv2d_3_3x3_s2_256_depthwise/BatchNorm/batchnorm_1/Rsqrt"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ssd300/layer_19_2_Conv2d_3_3x3_s2_256_depthwise/BatchNorm/batchnorm_1/mul_1"
  op: "Mul"
  input: "ssd300/layer_19_2_Conv2d_3_3x3_s2_256_depthwise/BatchNorm/Reshape_1"
  input: "ssd300/layer_19_2_Conv2d_3_3x3_s2_256_depthwise/BatchNorm/batchnorm_1/Rsqrt"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ssd300/layer_19_2_Conv2d_3_3x3_s2_256_depthwise/BatchNorm/batchnorm_1/sub"
  op: "Sub"
  input: "ssd300/layer_19_2_Conv2d_3_3x3_s2_256_depthwise/BatchNorm/Reshape"
  input: "ssd300/layer_19_2_Conv2d_3_3x3_s2_256_depthwise/BatchNorm/batchnorm_1/mul_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ssd300/layer_19_2_Conv2d_3_3x3_s2_256_depthwise/BatchNorm/batchnorm_1/Add_1"
  op: "Add"
  input: "ssd300/layer_19_2_Conv2d_3_3x3_s2_256_depthwise/BatchNorm/batchnorm_1/mul"
  input: "ssd300/layer_19_2_Conv2d_3_3x3_s2_256_depthwise/BatchNorm/batchnorm_1/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ssd300/layer_19_2_Conv2d_3_3x3_s2_256_depthwise/Relu6"
  op: "Relu6"
  input: "ssd300/layer_19_2_Conv2d_3_3x3_s2_256_depthwise/BatchNorm/batchnorm_1/Add_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ssd300/layer_19_2_Conv2d_3_3x3_s2_256/weights/Initializer/random_uniform/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/layer_19_2_Conv2d_3_3x3_s2_256/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000\200\000\000\000\000\001\000\000"
      }
    }
  }
}
node {
  name: "ssd300/layer_19_2_Conv2d_3_3x3_s2_256/weights/Initializer/random_uniform/min"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/layer_19_2_Conv2d_3_3x3_s2_256/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: -0.125
      }
    }
  }
}
node {
  name: "ssd300/layer_19_2_Conv2d_3_3x3_s2_256/weights/Initializer/random_uniform/max"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/layer_19_2_Conv2d_3_3x3_s2_256/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.125
      }
    }
  }
}
node {
  name: "ssd300/layer_19_2_Conv2d_3_3x3_s2_256/weights/Initializer/random_uniform/RandomUniform"
  op: "RandomUniform"
  input: "ssd300/layer_19_2_Conv2d_3_3x3_s2_256/weights/Initializer/random_uniform/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/layer_19_2_Conv2d_3_3x3_s2_256/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "ssd300/layer_19_2_Conv2d_3_3x3_s2_256/weights/Initializer/random_uniform/sub"
  op: "Sub"
  input: "ssd300/layer_19_2_Conv2d_3_3x3_s2_256/weights/Initializer/random_uniform/max"
  input: "ssd300/layer_19_2_Conv2d_3_3x3_s2_256/weights/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/layer_19_2_Conv2d_3_3x3_s2_256/weights"
      }
    }
  }
}
node {
  name: "ssd300/layer_19_2_Conv2d_3_3x3_s2_256/weights/Initializer/random_uniform/mul"
  op: "Mul"
  input: "ssd300/layer_19_2_Conv2d_3_3x3_s2_256/weights/Initializer/random_uniform/RandomUniform"
  input: "ssd300/layer_19_2_Conv2d_3_3x3_s2_256/weights/Initializer/random_uniform/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/layer_19_2_Conv2d_3_3x3_s2_256/weights"
      }
    }
  }
}
node {
  name: "ssd300/layer_19_2_Conv2d_3_3x3_s2_256/weights/Initializer/random_uniform"
  op: "Add"
  input: "ssd300/layer_19_2_Conv2d_3_3x3_s2_256/weights/Initializer/random_uniform/mul"
  input: "ssd300/layer_19_2_Conv2d_3_3x3_s2_256/weights/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/layer_19_2_Conv2d_3_3x3_s2_256/weights"
      }
    }
  }
}
node {
  name: "ssd300/layer_19_2_Conv2d_3_3x3_s2_256/weights"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/layer_19_2_Conv2d_3_3x3_s2_256/weights"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
        dim {
          size: 1
        }
        dim {
          size: 128
        }
        dim {
          size: 256
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "ssd300/layer_19_2_Conv2d_3_3x3_s2_256/weights/Assign"
  op: "Assign"
  input: "ssd300/layer_19_2_Conv2d_3_3x3_s2_256/weights"
  input: "ssd300/layer_19_2_Conv2d_3_3x3_s2_256/weights/Initializer/random_uniform"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/layer_19_2_Conv2d_3_3x3_s2_256/weights"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "ssd300/layer_19_2_Conv2d_3_3x3_s2_256/weights/read"
  op: "Identity"
  input: "ssd300/layer_19_2_Conv2d_3_3x3_s2_256/weights"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/layer_19_2_Conv2d_3_3x3_s2_256/weights"
      }
    }
  }
}
node {
  name: "ssd300/layer_19_2_Conv2d_3_3x3_s2_256/layer_conv2d/Conv2D"
  op: "Conv2D"
  input: "ssd300/layer_19_2_Conv2d_3_3x3_s2_256_depthwise/Relu6"
  input: "ssd300/layer_19_2_Conv2d_3_3x3_s2_256/weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NCHW"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "explicit_paddings"
    value {
      list {
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "ssd300/layer_19_2_Conv2d_3_3x3_s2_256/BatchNorm/beta/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/layer_19_2_Conv2d_3_3x3_s2_256/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 256
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "ssd300/layer_19_2_Conv2d_3_3x3_s2_256/BatchNorm/beta"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/layer_19_2_Conv2d_3_3x3_s2_256/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 256
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "ssd300/layer_19_2_Conv2d_3_3x3_s2_256/BatchNorm/beta/Assign"
  op: "Assign"
  input: "ssd300/layer_19_2_Conv2d_3_3x3_s2_256/BatchNorm/beta"
  input: "ssd300/layer_19_2_Conv2d_3_3x3_s2_256/BatchNorm/beta/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/layer_19_2_Conv2d_3_3x3_s2_256/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "ssd300/layer_19_2_Conv2d_3_3x3_s2_256/BatchNorm/beta/read"
  op: "Identity"
  input: "ssd300/layer_19_2_Conv2d_3_3x3_s2_256/BatchNorm/beta"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/layer_19_2_Conv2d_3_3x3_s2_256/BatchNorm/beta"
      }
    }
  }
}
node {
  name: "ssd300/layer_19_2_Conv2d_3_3x3_s2_256/BatchNorm/moving_mean/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/layer_19_2_Conv2d_3_3x3_s2_256/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 256
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "ssd300/layer_19_2_Conv2d_3_3x3_s2_256/BatchNorm/moving_mean"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/layer_19_2_Conv2d_3_3x3_s2_256/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 256
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "ssd300/layer_19_2_Conv2d_3_3x3_s2_256/BatchNorm/moving_mean/Assign"
  op: "Assign"
  input: "ssd300/layer_19_2_Conv2d_3_3x3_s2_256/BatchNorm/moving_mean"
  input: "ssd300/layer_19_2_Conv2d_3_3x3_s2_256/BatchNorm/moving_mean/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/layer_19_2_Conv2d_3_3x3_s2_256/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "ssd300/layer_19_2_Conv2d_3_3x3_s2_256/BatchNorm/moving_mean/read"
  op: "Identity"
  input: "ssd300/layer_19_2_Conv2d_3_3x3_s2_256/BatchNorm/moving_mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/layer_19_2_Conv2d_3_3x3_s2_256/BatchNorm/moving_mean"
      }
    }
  }
}
node {
  name: "ssd300/layer_19_2_Conv2d_3_3x3_s2_256/BatchNorm/moving_variance/Initializer/ones"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/layer_19_2_Conv2d_3_3x3_s2_256/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 256
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "ssd300/layer_19_2_Conv2d_3_3x3_s2_256/BatchNorm/moving_variance"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/layer_19_2_Conv2d_3_3x3_s2_256/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 256
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "ssd300/layer_19_2_Conv2d_3_3x3_s2_256/BatchNorm/moving_variance/Assign"
  op: "Assign"
  input: "ssd300/layer_19_2_Conv2d_3_3x3_s2_256/BatchNorm/moving_variance"
  input: "ssd300/layer_19_2_Conv2d_3_3x3_s2_256/BatchNorm/moving_variance/Initializer/ones"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/layer_19_2_Conv2d_3_3x3_s2_256/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "ssd300/layer_19_2_Conv2d_3_3x3_s2_256/BatchNorm/moving_variance/read"
  op: "Identity"
  input: "ssd300/layer_19_2_Conv2d_3_3x3_s2_256/BatchNorm/moving_variance"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/layer_19_2_Conv2d_3_3x3_s2_256/BatchNorm/moving_variance"
      }
    }
  }
}
node {
  name: "ssd300/layer_19_2_Conv2d_3_3x3_s2_256/BatchNorm/Reshape/shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\000\001\000\000\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "ssd300/layer_19_2_Conv2d_3_3x3_s2_256/BatchNorm/Reshape"
  op: "Reshape"
  input: "ssd300/layer_19_2_Conv2d_3_3x3_s2_256/BatchNorm/beta/read"
  input: "ssd300/layer_19_2_Conv2d_3_3x3_s2_256/BatchNorm/Reshape/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "ssd300/layer_19_2_Conv2d_3_3x3_s2_256/BatchNorm/Reshape_1/shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\000\001\000\000\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "ssd300/layer_19_2_Conv2d_3_3x3_s2_256/BatchNorm/Reshape_1"
  op: "Reshape"
  input: "ssd300/layer_19_2_Conv2d_3_3x3_s2_256/BatchNorm/moving_mean/read"
  input: "ssd300/layer_19_2_Conv2d_3_3x3_s2_256/BatchNorm/Reshape_1/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "ssd300/layer_19_2_Conv2d_3_3x3_s2_256/BatchNorm/Reshape_2/shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\000\001\000\000\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "ssd300/layer_19_2_Conv2d_3_3x3_s2_256/BatchNorm/Reshape_2"
  op: "Reshape"
  input: "ssd300/layer_19_2_Conv2d_3_3x3_s2_256/BatchNorm/moving_variance/read"
  input: "ssd300/layer_19_2_Conv2d_3_3x3_s2_256/BatchNorm/Reshape_2/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "ssd300/layer_19_2_Conv2d_3_3x3_s2_256/BatchNorm/batchnorm_1/Add/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0010000000474974513
      }
    }
  }
}
node {
  name: "ssd300/layer_19_2_Conv2d_3_3x3_s2_256/BatchNorm/batchnorm_1/Add"
  op: "Add"
  input: "ssd300/layer_19_2_Conv2d_3_3x3_s2_256/BatchNorm/Reshape_2"
  input: "ssd300/layer_19_2_Conv2d_3_3x3_s2_256/BatchNorm/batchnorm_1/Add/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ssd300/layer_19_2_Conv2d_3_3x3_s2_256/BatchNorm/batchnorm_1/Rsqrt"
  op: "Rsqrt"
  input: "ssd300/layer_19_2_Conv2d_3_3x3_s2_256/BatchNorm/batchnorm_1/Add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ssd300/layer_19_2_Conv2d_3_3x3_s2_256/BatchNorm/batchnorm_1/mul"
  op: "Mul"
  input: "ssd300/layer_19_2_Conv2d_3_3x3_s2_256/layer_conv2d/Conv2D"
  input: "ssd300/layer_19_2_Conv2d_3_3x3_s2_256/BatchNorm/batchnorm_1/Rsqrt"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ssd300/layer_19_2_Conv2d_3_3x3_s2_256/BatchNorm/batchnorm_1/mul_1"
  op: "Mul"
  input: "ssd300/layer_19_2_Conv2d_3_3x3_s2_256/BatchNorm/Reshape_1"
  input: "ssd300/layer_19_2_Conv2d_3_3x3_s2_256/BatchNorm/batchnorm_1/Rsqrt"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ssd300/layer_19_2_Conv2d_3_3x3_s2_256/BatchNorm/batchnorm_1/sub"
  op: "Sub"
  input: "ssd300/layer_19_2_Conv2d_3_3x3_s2_256/BatchNorm/Reshape"
  input: "ssd300/layer_19_2_Conv2d_3_3x3_s2_256/BatchNorm/batchnorm_1/mul_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ssd300/layer_19_2_Conv2d_3_3x3_s2_256/BatchNorm/batchnorm_1/Add_1"
  op: "Add"
  input: "ssd300/layer_19_2_Conv2d_3_3x3_s2_256/BatchNorm/batchnorm_1/mul"
  input: "ssd300/layer_19_2_Conv2d_3_3x3_s2_256/BatchNorm/batchnorm_1/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ssd300/layer_19_2_Conv2d_3_3x3_s2_256/Relu6"
  op: "Relu6"
  input: "ssd300/layer_19_2_Conv2d_3_3x3_s2_256/BatchNorm/batchnorm_1/Add_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ssd300/layer_19_1_Conv2d_4_1x1_128/weights/Initializer/random_uniform/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/layer_19_1_Conv2d_4_1x1_128/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000\000\001\000\000\200\000\000\000"
      }
    }
  }
}
node {
  name: "ssd300/layer_19_1_Conv2d_4_1x1_128/weights/Initializer/random_uniform/min"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/layer_19_1_Conv2d_4_1x1_128/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: -0.125
      }
    }
  }
}
node {
  name: "ssd300/layer_19_1_Conv2d_4_1x1_128/weights/Initializer/random_uniform/max"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/layer_19_1_Conv2d_4_1x1_128/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.125
      }
    }
  }
}
node {
  name: "ssd300/layer_19_1_Conv2d_4_1x1_128/weights/Initializer/random_uniform/RandomUniform"
  op: "RandomUniform"
  input: "ssd300/layer_19_1_Conv2d_4_1x1_128/weights/Initializer/random_uniform/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/layer_19_1_Conv2d_4_1x1_128/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "ssd300/layer_19_1_Conv2d_4_1x1_128/weights/Initializer/random_uniform/sub"
  op: "Sub"
  input: "ssd300/layer_19_1_Conv2d_4_1x1_128/weights/Initializer/random_uniform/max"
  input: "ssd300/layer_19_1_Conv2d_4_1x1_128/weights/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/layer_19_1_Conv2d_4_1x1_128/weights"
      }
    }
  }
}
node {
  name: "ssd300/layer_19_1_Conv2d_4_1x1_128/weights/Initializer/random_uniform/mul"
  op: "Mul"
  input: "ssd300/layer_19_1_Conv2d_4_1x1_128/weights/Initializer/random_uniform/RandomUniform"
  input: "ssd300/layer_19_1_Conv2d_4_1x1_128/weights/Initializer/random_uniform/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/layer_19_1_Conv2d_4_1x1_128/weights"
      }
    }
  }
}
node {
  name: "ssd300/layer_19_1_Conv2d_4_1x1_128/weights/Initializer/random_uniform"
  op: "Add"
  input: "ssd300/layer_19_1_Conv2d_4_1x1_128/weights/Initializer/random_uniform/mul"
  input: "ssd300/layer_19_1_Conv2d_4_1x1_128/weights/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/layer_19_1_Conv2d_4_1x1_128/weights"
      }
    }
  }
}
node {
  name: "ssd300/layer_19_1_Conv2d_4_1x1_128/weights"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/layer_19_1_Conv2d_4_1x1_128/weights"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
        dim {
          size: 1
        }
        dim {
          size: 256
        }
        dim {
          size: 128
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "ssd300/layer_19_1_Conv2d_4_1x1_128/weights/Assign"
  op: "Assign"
  input: "ssd300/layer_19_1_Conv2d_4_1x1_128/weights"
  input: "ssd300/layer_19_1_Conv2d_4_1x1_128/weights/Initializer/random_uniform"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/layer_19_1_Conv2d_4_1x1_128/weights"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "ssd300/layer_19_1_Conv2d_4_1x1_128/weights/read"
  op: "Identity"
  input: "ssd300/layer_19_1_Conv2d_4_1x1_128/weights"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/layer_19_1_Conv2d_4_1x1_128/weights"
      }
    }
  }
}
node {
  name: "ssd300/layer_19_1_Conv2d_4_1x1_128/layer_conv2d/Conv2D"
  op: "Conv2D"
  input: "ssd300/layer_19_2_Conv2d_3_3x3_s2_256/Relu6"
  input: "ssd300/layer_19_1_Conv2d_4_1x1_128/weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NCHW"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "explicit_paddings"
    value {
      list {
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "ssd300/layer_19_1_Conv2d_4_1x1_128/BatchNorm/beta/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/layer_19_1_Conv2d_4_1x1_128/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 128
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "ssd300/layer_19_1_Conv2d_4_1x1_128/BatchNorm/beta"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/layer_19_1_Conv2d_4_1x1_128/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 128
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "ssd300/layer_19_1_Conv2d_4_1x1_128/BatchNorm/beta/Assign"
  op: "Assign"
  input: "ssd300/layer_19_1_Conv2d_4_1x1_128/BatchNorm/beta"
  input: "ssd300/layer_19_1_Conv2d_4_1x1_128/BatchNorm/beta/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/layer_19_1_Conv2d_4_1x1_128/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "ssd300/layer_19_1_Conv2d_4_1x1_128/BatchNorm/beta/read"
  op: "Identity"
  input: "ssd300/layer_19_1_Conv2d_4_1x1_128/BatchNorm/beta"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/layer_19_1_Conv2d_4_1x1_128/BatchNorm/beta"
      }
    }
  }
}
node {
  name: "ssd300/layer_19_1_Conv2d_4_1x1_128/BatchNorm/moving_mean/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/layer_19_1_Conv2d_4_1x1_128/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 128
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "ssd300/layer_19_1_Conv2d_4_1x1_128/BatchNorm/moving_mean"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/layer_19_1_Conv2d_4_1x1_128/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 128
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "ssd300/layer_19_1_Conv2d_4_1x1_128/BatchNorm/moving_mean/Assign"
  op: "Assign"
  input: "ssd300/layer_19_1_Conv2d_4_1x1_128/BatchNorm/moving_mean"
  input: "ssd300/layer_19_1_Conv2d_4_1x1_128/BatchNorm/moving_mean/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/layer_19_1_Conv2d_4_1x1_128/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "ssd300/layer_19_1_Conv2d_4_1x1_128/BatchNorm/moving_mean/read"
  op: "Identity"
  input: "ssd300/layer_19_1_Conv2d_4_1x1_128/BatchNorm/moving_mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/layer_19_1_Conv2d_4_1x1_128/BatchNorm/moving_mean"
      }
    }
  }
}
node {
  name: "ssd300/layer_19_1_Conv2d_4_1x1_128/BatchNorm/moving_variance/Initializer/ones"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/layer_19_1_Conv2d_4_1x1_128/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 128
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "ssd300/layer_19_1_Conv2d_4_1x1_128/BatchNorm/moving_variance"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/layer_19_1_Conv2d_4_1x1_128/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 128
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "ssd300/layer_19_1_Conv2d_4_1x1_128/BatchNorm/moving_variance/Assign"
  op: "Assign"
  input: "ssd300/layer_19_1_Conv2d_4_1x1_128/BatchNorm/moving_variance"
  input: "ssd300/layer_19_1_Conv2d_4_1x1_128/BatchNorm/moving_variance/Initializer/ones"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/layer_19_1_Conv2d_4_1x1_128/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "ssd300/layer_19_1_Conv2d_4_1x1_128/BatchNorm/moving_variance/read"
  op: "Identity"
  input: "ssd300/layer_19_1_Conv2d_4_1x1_128/BatchNorm/moving_variance"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/layer_19_1_Conv2d_4_1x1_128/BatchNorm/moving_variance"
      }
    }
  }
}
node {
  name: "ssd300/layer_19_1_Conv2d_4_1x1_128/BatchNorm/Reshape/shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\200\000\000\000\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "ssd300/layer_19_1_Conv2d_4_1x1_128/BatchNorm/Reshape"
  op: "Reshape"
  input: "ssd300/layer_19_1_Conv2d_4_1x1_128/BatchNorm/beta/read"
  input: "ssd300/layer_19_1_Conv2d_4_1x1_128/BatchNorm/Reshape/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "ssd300/layer_19_1_Conv2d_4_1x1_128/BatchNorm/Reshape_1/shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\200\000\000\000\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "ssd300/layer_19_1_Conv2d_4_1x1_128/BatchNorm/Reshape_1"
  op: "Reshape"
  input: "ssd300/layer_19_1_Conv2d_4_1x1_128/BatchNorm/moving_mean/read"
  input: "ssd300/layer_19_1_Conv2d_4_1x1_128/BatchNorm/Reshape_1/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "ssd300/layer_19_1_Conv2d_4_1x1_128/BatchNorm/Reshape_2/shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\200\000\000\000\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "ssd300/layer_19_1_Conv2d_4_1x1_128/BatchNorm/Reshape_2"
  op: "Reshape"
  input: "ssd300/layer_19_1_Conv2d_4_1x1_128/BatchNorm/moving_variance/read"
  input: "ssd300/layer_19_1_Conv2d_4_1x1_128/BatchNorm/Reshape_2/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "ssd300/layer_19_1_Conv2d_4_1x1_128/BatchNorm/batchnorm_1/Add/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0010000000474974513
      }
    }
  }
}
node {
  name: "ssd300/layer_19_1_Conv2d_4_1x1_128/BatchNorm/batchnorm_1/Add"
  op: "Add"
  input: "ssd300/layer_19_1_Conv2d_4_1x1_128/BatchNorm/Reshape_2"
  input: "ssd300/layer_19_1_Conv2d_4_1x1_128/BatchNorm/batchnorm_1/Add/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ssd300/layer_19_1_Conv2d_4_1x1_128/BatchNorm/batchnorm_1/Rsqrt"
  op: "Rsqrt"
  input: "ssd300/layer_19_1_Conv2d_4_1x1_128/BatchNorm/batchnorm_1/Add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ssd300/layer_19_1_Conv2d_4_1x1_128/BatchNorm/batchnorm_1/mul"
  op: "Mul"
  input: "ssd300/layer_19_1_Conv2d_4_1x1_128/layer_conv2d/Conv2D"
  input: "ssd300/layer_19_1_Conv2d_4_1x1_128/BatchNorm/batchnorm_1/Rsqrt"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ssd300/layer_19_1_Conv2d_4_1x1_128/BatchNorm/batchnorm_1/mul_1"
  op: "Mul"
  input: "ssd300/layer_19_1_Conv2d_4_1x1_128/BatchNorm/Reshape_1"
  input: "ssd300/layer_19_1_Conv2d_4_1x1_128/BatchNorm/batchnorm_1/Rsqrt"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ssd300/layer_19_1_Conv2d_4_1x1_128/BatchNorm/batchnorm_1/sub"
  op: "Sub"
  input: "ssd300/layer_19_1_Conv2d_4_1x1_128/BatchNorm/Reshape"
  input: "ssd300/layer_19_1_Conv2d_4_1x1_128/BatchNorm/batchnorm_1/mul_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ssd300/layer_19_1_Conv2d_4_1x1_128/BatchNorm/batchnorm_1/Add_1"
  op: "Add"
  input: "ssd300/layer_19_1_Conv2d_4_1x1_128/BatchNorm/batchnorm_1/mul"
  input: "ssd300/layer_19_1_Conv2d_4_1x1_128/BatchNorm/batchnorm_1/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ssd300/layer_19_1_Conv2d_4_1x1_128/Relu6"
  op: "Relu6"
  input: "ssd300/layer_19_1_Conv2d_4_1x1_128/BatchNorm/batchnorm_1/Add_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ssd300/layer_19_2_Conv2d_4_3x3_s2_256_depthwise/depthwise_weights/Initializer/random_uniform/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/layer_19_2_Conv2d_4_3x3_s2_256_depthwise/depthwise_weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\003\000\000\000\003\000\000\000\200\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "ssd300/layer_19_2_Conv2d_4_3x3_s2_256_depthwise/depthwise_weights/Initializer/random_uniform/min"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/layer_19_2_Conv2d_4_3x3_s2_256_depthwise/depthwise_weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: -0.0718885138630867
      }
    }
  }
}
node {
  name: "ssd300/layer_19_2_Conv2d_4_3x3_s2_256_depthwise/depthwise_weights/Initializer/random_uniform/max"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/layer_19_2_Conv2d_4_3x3_s2_256_depthwise/depthwise_weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0718885138630867
      }
    }
  }
}
node {
  name: "ssd300/layer_19_2_Conv2d_4_3x3_s2_256_depthwise/depthwise_weights/Initializer/random_uniform/RandomUniform"
  op: "RandomUniform"
  input: "ssd300/layer_19_2_Conv2d_4_3x3_s2_256_depthwise/depthwise_weights/Initializer/random_uniform/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/layer_19_2_Conv2d_4_3x3_s2_256_depthwise/depthwise_weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "ssd300/layer_19_2_Conv2d_4_3x3_s2_256_depthwise/depthwise_weights/Initializer/random_uniform/sub"
  op: "Sub"
  input: "ssd300/layer_19_2_Conv2d_4_3x3_s2_256_depthwise/depthwise_weights/Initializer/random_uniform/max"
  input: "ssd300/layer_19_2_Conv2d_4_3x3_s2_256_depthwise/depthwise_weights/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/layer_19_2_Conv2d_4_3x3_s2_256_depthwise/depthwise_weights"
      }
    }
  }
}
node {
  name: "ssd300/layer_19_2_Conv2d_4_3x3_s2_256_depthwise/depthwise_weights/Initializer/random_uniform/mul"
  op: "Mul"
  input: "ssd300/layer_19_2_Conv2d_4_3x3_s2_256_depthwise/depthwise_weights/Initializer/random_uniform/RandomUniform"
  input: "ssd300/layer_19_2_Conv2d_4_3x3_s2_256_depthwise/depthwise_weights/Initializer/random_uniform/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/layer_19_2_Conv2d_4_3x3_s2_256_depthwise/depthwise_weights"
      }
    }
  }
}
node {
  name: "ssd300/layer_19_2_Conv2d_4_3x3_s2_256_depthwise/depthwise_weights/Initializer/random_uniform"
  op: "Add"
  input: "ssd300/layer_19_2_Conv2d_4_3x3_s2_256_depthwise/depthwise_weights/Initializer/random_uniform/mul"
  input: "ssd300/layer_19_2_Conv2d_4_3x3_s2_256_depthwise/depthwise_weights/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/layer_19_2_Conv2d_4_3x3_s2_256_depthwise/depthwise_weights"
      }
    }
  }
}
node {
  name: "ssd300/layer_19_2_Conv2d_4_3x3_s2_256_depthwise/depthwise_weights"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/layer_19_2_Conv2d_4_3x3_s2_256_depthwise/depthwise_weights"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 3
        }
        dim {
          size: 3
        }
        dim {
          size: 128
        }
        dim {
          size: 1
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "ssd300/layer_19_2_Conv2d_4_3x3_s2_256_depthwise/depthwise_weights/Assign"
  op: "Assign"
  input: "ssd300/layer_19_2_Conv2d_4_3x3_s2_256_depthwise/depthwise_weights"
  input: "ssd300/layer_19_2_Conv2d_4_3x3_s2_256_depthwise/depthwise_weights/Initializer/random_uniform"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/layer_19_2_Conv2d_4_3x3_s2_256_depthwise/depthwise_weights"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "ssd300/layer_19_2_Conv2d_4_3x3_s2_256_depthwise/depthwise_weights/read"
  op: "Identity"
  input: "ssd300/layer_19_2_Conv2d_4_3x3_s2_256_depthwise/depthwise_weights"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/layer_19_2_Conv2d_4_3x3_s2_256_depthwise/depthwise_weights"
      }
    }
  }
}
node {
  name: "ssd300/layer_19_2_Conv2d_4_3x3_s2_256_depthwise/layer_conv2d/depthwise/Shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\003\000\000\000\003\000\000\000\200\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "ssd300/layer_19_2_Conv2d_4_3x3_s2_256_depthwise/layer_conv2d/depthwise/dilation_rate"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "ssd300/layer_19_2_Conv2d_4_3x3_s2_256_depthwise/layer_conv2d/depthwise"
  op: "DepthwiseConv2dNative"
  input: "ssd300/layer_19_1_Conv2d_4_1x1_128/Relu6"
  input: "ssd300/layer_19_2_Conv2d_4_3x3_s2_256_depthwise/depthwise_weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NCHW"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 2
        i: 2
      }
    }
  }
}
node {
  name: "ssd300/layer_19_2_Conv2d_4_3x3_s2_256_depthwise/BatchNorm/beta/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/layer_19_2_Conv2d_4_3x3_s2_256_depthwise/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 128
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "ssd300/layer_19_2_Conv2d_4_3x3_s2_256_depthwise/BatchNorm/beta"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/layer_19_2_Conv2d_4_3x3_s2_256_depthwise/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 128
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "ssd300/layer_19_2_Conv2d_4_3x3_s2_256_depthwise/BatchNorm/beta/Assign"
  op: "Assign"
  input: "ssd300/layer_19_2_Conv2d_4_3x3_s2_256_depthwise/BatchNorm/beta"
  input: "ssd300/layer_19_2_Conv2d_4_3x3_s2_256_depthwise/BatchNorm/beta/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/layer_19_2_Conv2d_4_3x3_s2_256_depthwise/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "ssd300/layer_19_2_Conv2d_4_3x3_s2_256_depthwise/BatchNorm/beta/read"
  op: "Identity"
  input: "ssd300/layer_19_2_Conv2d_4_3x3_s2_256_depthwise/BatchNorm/beta"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/layer_19_2_Conv2d_4_3x3_s2_256_depthwise/BatchNorm/beta"
      }
    }
  }
}
node {
  name: "ssd300/layer_19_2_Conv2d_4_3x3_s2_256_depthwise/BatchNorm/moving_mean/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/layer_19_2_Conv2d_4_3x3_s2_256_depthwise/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 128
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "ssd300/layer_19_2_Conv2d_4_3x3_s2_256_depthwise/BatchNorm/moving_mean"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/layer_19_2_Conv2d_4_3x3_s2_256_depthwise/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 128
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "ssd300/layer_19_2_Conv2d_4_3x3_s2_256_depthwise/BatchNorm/moving_mean/Assign"
  op: "Assign"
  input: "ssd300/layer_19_2_Conv2d_4_3x3_s2_256_depthwise/BatchNorm/moving_mean"
  input: "ssd300/layer_19_2_Conv2d_4_3x3_s2_256_depthwise/BatchNorm/moving_mean/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/layer_19_2_Conv2d_4_3x3_s2_256_depthwise/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "ssd300/layer_19_2_Conv2d_4_3x3_s2_256_depthwise/BatchNorm/moving_mean/read"
  op: "Identity"
  input: "ssd300/layer_19_2_Conv2d_4_3x3_s2_256_depthwise/BatchNorm/moving_mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/layer_19_2_Conv2d_4_3x3_s2_256_depthwise/BatchNorm/moving_mean"
      }
    }
  }
}
node {
  name: "ssd300/layer_19_2_Conv2d_4_3x3_s2_256_depthwise/BatchNorm/moving_variance/Initializer/ones"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/layer_19_2_Conv2d_4_3x3_s2_256_depthwise/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 128
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "ssd300/layer_19_2_Conv2d_4_3x3_s2_256_depthwise/BatchNorm/moving_variance"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/layer_19_2_Conv2d_4_3x3_s2_256_depthwise/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 128
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "ssd300/layer_19_2_Conv2d_4_3x3_s2_256_depthwise/BatchNorm/moving_variance/Assign"
  op: "Assign"
  input: "ssd300/layer_19_2_Conv2d_4_3x3_s2_256_depthwise/BatchNorm/moving_variance"
  input: "ssd300/layer_19_2_Conv2d_4_3x3_s2_256_depthwise/BatchNorm/moving_variance/Initializer/ones"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/layer_19_2_Conv2d_4_3x3_s2_256_depthwise/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "ssd300/layer_19_2_Conv2d_4_3x3_s2_256_depthwise/BatchNorm/moving_variance/read"
  op: "Identity"
  input: "ssd300/layer_19_2_Conv2d_4_3x3_s2_256_depthwise/BatchNorm/moving_variance"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/layer_19_2_Conv2d_4_3x3_s2_256_depthwise/BatchNorm/moving_variance"
      }
    }
  }
}
node {
  name: "ssd300/layer_19_2_Conv2d_4_3x3_s2_256_depthwise/BatchNorm/Reshape/shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\200\000\000\000\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "ssd300/layer_19_2_Conv2d_4_3x3_s2_256_depthwise/BatchNorm/Reshape"
  op: "Reshape"
  input: "ssd300/layer_19_2_Conv2d_4_3x3_s2_256_depthwise/BatchNorm/beta/read"
  input: "ssd300/layer_19_2_Conv2d_4_3x3_s2_256_depthwise/BatchNorm/Reshape/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "ssd300/layer_19_2_Conv2d_4_3x3_s2_256_depthwise/BatchNorm/Reshape_1/shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\200\000\000\000\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "ssd300/layer_19_2_Conv2d_4_3x3_s2_256_depthwise/BatchNorm/Reshape_1"
  op: "Reshape"
  input: "ssd300/layer_19_2_Conv2d_4_3x3_s2_256_depthwise/BatchNorm/moving_mean/read"
  input: "ssd300/layer_19_2_Conv2d_4_3x3_s2_256_depthwise/BatchNorm/Reshape_1/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "ssd300/layer_19_2_Conv2d_4_3x3_s2_256_depthwise/BatchNorm/Reshape_2/shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\200\000\000\000\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "ssd300/layer_19_2_Conv2d_4_3x3_s2_256_depthwise/BatchNorm/Reshape_2"
  op: "Reshape"
  input: "ssd300/layer_19_2_Conv2d_4_3x3_s2_256_depthwise/BatchNorm/moving_variance/read"
  input: "ssd300/layer_19_2_Conv2d_4_3x3_s2_256_depthwise/BatchNorm/Reshape_2/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "ssd300/layer_19_2_Conv2d_4_3x3_s2_256_depthwise/BatchNorm/batchnorm_1/Add/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0010000000474974513
      }
    }
  }
}
node {
  name: "ssd300/layer_19_2_Conv2d_4_3x3_s2_256_depthwise/BatchNorm/batchnorm_1/Add"
  op: "Add"
  input: "ssd300/layer_19_2_Conv2d_4_3x3_s2_256_depthwise/BatchNorm/Reshape_2"
  input: "ssd300/layer_19_2_Conv2d_4_3x3_s2_256_depthwise/BatchNorm/batchnorm_1/Add/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ssd300/layer_19_2_Conv2d_4_3x3_s2_256_depthwise/BatchNorm/batchnorm_1/Rsqrt"
  op: "Rsqrt"
  input: "ssd300/layer_19_2_Conv2d_4_3x3_s2_256_depthwise/BatchNorm/batchnorm_1/Add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ssd300/layer_19_2_Conv2d_4_3x3_s2_256_depthwise/BatchNorm/batchnorm_1/mul"
  op: "Mul"
  input: "ssd300/layer_19_2_Conv2d_4_3x3_s2_256_depthwise/layer_conv2d/depthwise"
  input: "ssd300/layer_19_2_Conv2d_4_3x3_s2_256_depthwise/BatchNorm/batchnorm_1/Rsqrt"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ssd300/layer_19_2_Conv2d_4_3x3_s2_256_depthwise/BatchNorm/batchnorm_1/mul_1"
  op: "Mul"
  input: "ssd300/layer_19_2_Conv2d_4_3x3_s2_256_depthwise/BatchNorm/Reshape_1"
  input: "ssd300/layer_19_2_Conv2d_4_3x3_s2_256_depthwise/BatchNorm/batchnorm_1/Rsqrt"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ssd300/layer_19_2_Conv2d_4_3x3_s2_256_depthwise/BatchNorm/batchnorm_1/sub"
  op: "Sub"
  input: "ssd300/layer_19_2_Conv2d_4_3x3_s2_256_depthwise/BatchNorm/Reshape"
  input: "ssd300/layer_19_2_Conv2d_4_3x3_s2_256_depthwise/BatchNorm/batchnorm_1/mul_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ssd300/layer_19_2_Conv2d_4_3x3_s2_256_depthwise/BatchNorm/batchnorm_1/Add_1"
  op: "Add"
  input: "ssd300/layer_19_2_Conv2d_4_3x3_s2_256_depthwise/BatchNorm/batchnorm_1/mul"
  input: "ssd300/layer_19_2_Conv2d_4_3x3_s2_256_depthwise/BatchNorm/batchnorm_1/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ssd300/layer_19_2_Conv2d_4_3x3_s2_256_depthwise/Relu6"
  op: "Relu6"
  input: "ssd300/layer_19_2_Conv2d_4_3x3_s2_256_depthwise/BatchNorm/batchnorm_1/Add_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ssd300/layer_19_2_Conv2d_4_3x3_s2_256/weights/Initializer/random_uniform/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/layer_19_2_Conv2d_4_3x3_s2_256/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000\200\000\000\000\000\001\000\000"
      }
    }
  }
}
node {
  name: "ssd300/layer_19_2_Conv2d_4_3x3_s2_256/weights/Initializer/random_uniform/min"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/layer_19_2_Conv2d_4_3x3_s2_256/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: -0.125
      }
    }
  }
}
node {
  name: "ssd300/layer_19_2_Conv2d_4_3x3_s2_256/weights/Initializer/random_uniform/max"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/layer_19_2_Conv2d_4_3x3_s2_256/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.125
      }
    }
  }
}
node {
  name: "ssd300/layer_19_2_Conv2d_4_3x3_s2_256/weights/Initializer/random_uniform/RandomUniform"
  op: "RandomUniform"
  input: "ssd300/layer_19_2_Conv2d_4_3x3_s2_256/weights/Initializer/random_uniform/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/layer_19_2_Conv2d_4_3x3_s2_256/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "ssd300/layer_19_2_Conv2d_4_3x3_s2_256/weights/Initializer/random_uniform/sub"
  op: "Sub"
  input: "ssd300/layer_19_2_Conv2d_4_3x3_s2_256/weights/Initializer/random_uniform/max"
  input: "ssd300/layer_19_2_Conv2d_4_3x3_s2_256/weights/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/layer_19_2_Conv2d_4_3x3_s2_256/weights"
      }
    }
  }
}
node {
  name: "ssd300/layer_19_2_Conv2d_4_3x3_s2_256/weights/Initializer/random_uniform/mul"
  op: "Mul"
  input: "ssd300/layer_19_2_Conv2d_4_3x3_s2_256/weights/Initializer/random_uniform/RandomUniform"
  input: "ssd300/layer_19_2_Conv2d_4_3x3_s2_256/weights/Initializer/random_uniform/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/layer_19_2_Conv2d_4_3x3_s2_256/weights"
      }
    }
  }
}
node {
  name: "ssd300/layer_19_2_Conv2d_4_3x3_s2_256/weights/Initializer/random_uniform"
  op: "Add"
  input: "ssd300/layer_19_2_Conv2d_4_3x3_s2_256/weights/Initializer/random_uniform/mul"
  input: "ssd300/layer_19_2_Conv2d_4_3x3_s2_256/weights/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/layer_19_2_Conv2d_4_3x3_s2_256/weights"
      }
    }
  }
}
node {
  name: "ssd300/layer_19_2_Conv2d_4_3x3_s2_256/weights"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/layer_19_2_Conv2d_4_3x3_s2_256/weights"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
        dim {
          size: 1
        }
        dim {
          size: 128
        }
        dim {
          size: 256
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "ssd300/layer_19_2_Conv2d_4_3x3_s2_256/weights/Assign"
  op: "Assign"
  input: "ssd300/layer_19_2_Conv2d_4_3x3_s2_256/weights"
  input: "ssd300/layer_19_2_Conv2d_4_3x3_s2_256/weights/Initializer/random_uniform"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/layer_19_2_Conv2d_4_3x3_s2_256/weights"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "ssd300/layer_19_2_Conv2d_4_3x3_s2_256/weights/read"
  op: "Identity"
  input: "ssd300/layer_19_2_Conv2d_4_3x3_s2_256/weights"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/layer_19_2_Conv2d_4_3x3_s2_256/weights"
      }
    }
  }
}
node {
  name: "ssd300/layer_19_2_Conv2d_4_3x3_s2_256/layer_conv2d/Conv2D"
  op: "Conv2D"
  input: "ssd300/layer_19_2_Conv2d_4_3x3_s2_256_depthwise/Relu6"
  input: "ssd300/layer_19_2_Conv2d_4_3x3_s2_256/weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NCHW"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "explicit_paddings"
    value {
      list {
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "ssd300/layer_19_2_Conv2d_4_3x3_s2_256/BatchNorm/beta/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/layer_19_2_Conv2d_4_3x3_s2_256/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 256
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "ssd300/layer_19_2_Conv2d_4_3x3_s2_256/BatchNorm/beta"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/layer_19_2_Conv2d_4_3x3_s2_256/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 256
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "ssd300/layer_19_2_Conv2d_4_3x3_s2_256/BatchNorm/beta/Assign"
  op: "Assign"
  input: "ssd300/layer_19_2_Conv2d_4_3x3_s2_256/BatchNorm/beta"
  input: "ssd300/layer_19_2_Conv2d_4_3x3_s2_256/BatchNorm/beta/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/layer_19_2_Conv2d_4_3x3_s2_256/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "ssd300/layer_19_2_Conv2d_4_3x3_s2_256/BatchNorm/beta/read"
  op: "Identity"
  input: "ssd300/layer_19_2_Conv2d_4_3x3_s2_256/BatchNorm/beta"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/layer_19_2_Conv2d_4_3x3_s2_256/BatchNorm/beta"
      }
    }
  }
}
node {
  name: "ssd300/layer_19_2_Conv2d_4_3x3_s2_256/BatchNorm/moving_mean/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/layer_19_2_Conv2d_4_3x3_s2_256/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 256
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "ssd300/layer_19_2_Conv2d_4_3x3_s2_256/BatchNorm/moving_mean"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/layer_19_2_Conv2d_4_3x3_s2_256/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 256
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "ssd300/layer_19_2_Conv2d_4_3x3_s2_256/BatchNorm/moving_mean/Assign"
  op: "Assign"
  input: "ssd300/layer_19_2_Conv2d_4_3x3_s2_256/BatchNorm/moving_mean"
  input: "ssd300/layer_19_2_Conv2d_4_3x3_s2_256/BatchNorm/moving_mean/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/layer_19_2_Conv2d_4_3x3_s2_256/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "ssd300/layer_19_2_Conv2d_4_3x3_s2_256/BatchNorm/moving_mean/read"
  op: "Identity"
  input: "ssd300/layer_19_2_Conv2d_4_3x3_s2_256/BatchNorm/moving_mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/layer_19_2_Conv2d_4_3x3_s2_256/BatchNorm/moving_mean"
      }
    }
  }
}
node {
  name: "ssd300/layer_19_2_Conv2d_4_3x3_s2_256/BatchNorm/moving_variance/Initializer/ones"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/layer_19_2_Conv2d_4_3x3_s2_256/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 256
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "ssd300/layer_19_2_Conv2d_4_3x3_s2_256/BatchNorm/moving_variance"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/layer_19_2_Conv2d_4_3x3_s2_256/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 256
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "ssd300/layer_19_2_Conv2d_4_3x3_s2_256/BatchNorm/moving_variance/Assign"
  op: "Assign"
  input: "ssd300/layer_19_2_Conv2d_4_3x3_s2_256/BatchNorm/moving_variance"
  input: "ssd300/layer_19_2_Conv2d_4_3x3_s2_256/BatchNorm/moving_variance/Initializer/ones"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/layer_19_2_Conv2d_4_3x3_s2_256/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "ssd300/layer_19_2_Conv2d_4_3x3_s2_256/BatchNorm/moving_variance/read"
  op: "Identity"
  input: "ssd300/layer_19_2_Conv2d_4_3x3_s2_256/BatchNorm/moving_variance"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/layer_19_2_Conv2d_4_3x3_s2_256/BatchNorm/moving_variance"
      }
    }
  }
}
node {
  name: "ssd300/layer_19_2_Conv2d_4_3x3_s2_256/BatchNorm/Reshape/shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\000\001\000\000\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "ssd300/layer_19_2_Conv2d_4_3x3_s2_256/BatchNorm/Reshape"
  op: "Reshape"
  input: "ssd300/layer_19_2_Conv2d_4_3x3_s2_256/BatchNorm/beta/read"
  input: "ssd300/layer_19_2_Conv2d_4_3x3_s2_256/BatchNorm/Reshape/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "ssd300/layer_19_2_Conv2d_4_3x3_s2_256/BatchNorm/Reshape_1/shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\000\001\000\000\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "ssd300/layer_19_2_Conv2d_4_3x3_s2_256/BatchNorm/Reshape_1"
  op: "Reshape"
  input: "ssd300/layer_19_2_Conv2d_4_3x3_s2_256/BatchNorm/moving_mean/read"
  input: "ssd300/layer_19_2_Conv2d_4_3x3_s2_256/BatchNorm/Reshape_1/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "ssd300/layer_19_2_Conv2d_4_3x3_s2_256/BatchNorm/Reshape_2/shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\000\001\000\000\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "ssd300/layer_19_2_Conv2d_4_3x3_s2_256/BatchNorm/Reshape_2"
  op: "Reshape"
  input: "ssd300/layer_19_2_Conv2d_4_3x3_s2_256/BatchNorm/moving_variance/read"
  input: "ssd300/layer_19_2_Conv2d_4_3x3_s2_256/BatchNorm/Reshape_2/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "ssd300/layer_19_2_Conv2d_4_3x3_s2_256/BatchNorm/batchnorm_1/Add/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0010000000474974513
      }
    }
  }
}
node {
  name: "ssd300/layer_19_2_Conv2d_4_3x3_s2_256/BatchNorm/batchnorm_1/Add"
  op: "Add"
  input: "ssd300/layer_19_2_Conv2d_4_3x3_s2_256/BatchNorm/Reshape_2"
  input: "ssd300/layer_19_2_Conv2d_4_3x3_s2_256/BatchNorm/batchnorm_1/Add/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ssd300/layer_19_2_Conv2d_4_3x3_s2_256/BatchNorm/batchnorm_1/Rsqrt"
  op: "Rsqrt"
  input: "ssd300/layer_19_2_Conv2d_4_3x3_s2_256/BatchNorm/batchnorm_1/Add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ssd300/layer_19_2_Conv2d_4_3x3_s2_256/BatchNorm/batchnorm_1/mul"
  op: "Mul"
  input: "ssd300/layer_19_2_Conv2d_4_3x3_s2_256/layer_conv2d/Conv2D"
  input: "ssd300/layer_19_2_Conv2d_4_3x3_s2_256/BatchNorm/batchnorm_1/Rsqrt"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ssd300/layer_19_2_Conv2d_4_3x3_s2_256/BatchNorm/batchnorm_1/mul_1"
  op: "Mul"
  input: "ssd300/layer_19_2_Conv2d_4_3x3_s2_256/BatchNorm/Reshape_1"
  input: "ssd300/layer_19_2_Conv2d_4_3x3_s2_256/BatchNorm/batchnorm_1/Rsqrt"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ssd300/layer_19_2_Conv2d_4_3x3_s2_256/BatchNorm/batchnorm_1/sub"
  op: "Sub"
  input: "ssd300/layer_19_2_Conv2d_4_3x3_s2_256/BatchNorm/Reshape"
  input: "ssd300/layer_19_2_Conv2d_4_3x3_s2_256/BatchNorm/batchnorm_1/mul_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ssd300/layer_19_2_Conv2d_4_3x3_s2_256/BatchNorm/batchnorm_1/Add_1"
  op: "Add"
  input: "ssd300/layer_19_2_Conv2d_4_3x3_s2_256/BatchNorm/batchnorm_1/mul"
  input: "ssd300/layer_19_2_Conv2d_4_3x3_s2_256/BatchNorm/batchnorm_1/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ssd300/layer_19_2_Conv2d_4_3x3_s2_256/Relu6"
  op: "Relu6"
  input: "ssd300/layer_19_2_Conv2d_4_3x3_s2_256/BatchNorm/batchnorm_1/Add_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ssd300/layer_19_1_Conv2d_5_1x1_64/weights/Initializer/random_uniform/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/layer_19_1_Conv2d_5_1x1_64/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000\000\001\000\000@\000\000\000"
      }
    }
  }
}
node {
  name: "ssd300/layer_19_1_Conv2d_5_1x1_64/weights/Initializer/random_uniform/min"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/layer_19_1_Conv2d_5_1x1_64/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: -0.1369306445121765
      }
    }
  }
}
node {
  name: "ssd300/layer_19_1_Conv2d_5_1x1_64/weights/Initializer/random_uniform/max"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/layer_19_1_Conv2d_5_1x1_64/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.1369306445121765
      }
    }
  }
}
node {
  name: "ssd300/layer_19_1_Conv2d_5_1x1_64/weights/Initializer/random_uniform/RandomUniform"
  op: "RandomUniform"
  input: "ssd300/layer_19_1_Conv2d_5_1x1_64/weights/Initializer/random_uniform/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/layer_19_1_Conv2d_5_1x1_64/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "ssd300/layer_19_1_Conv2d_5_1x1_64/weights/Initializer/random_uniform/sub"
  op: "Sub"
  input: "ssd300/layer_19_1_Conv2d_5_1x1_64/weights/Initializer/random_uniform/max"
  input: "ssd300/layer_19_1_Conv2d_5_1x1_64/weights/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/layer_19_1_Conv2d_5_1x1_64/weights"
      }
    }
  }
}
node {
  name: "ssd300/layer_19_1_Conv2d_5_1x1_64/weights/Initializer/random_uniform/mul"
  op: "Mul"
  input: "ssd300/layer_19_1_Conv2d_5_1x1_64/weights/Initializer/random_uniform/RandomUniform"
  input: "ssd300/layer_19_1_Conv2d_5_1x1_64/weights/Initializer/random_uniform/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/layer_19_1_Conv2d_5_1x1_64/weights"
      }
    }
  }
}
node {
  name: "ssd300/layer_19_1_Conv2d_5_1x1_64/weights/Initializer/random_uniform"
  op: "Add"
  input: "ssd300/layer_19_1_Conv2d_5_1x1_64/weights/Initializer/random_uniform/mul"
  input: "ssd300/layer_19_1_Conv2d_5_1x1_64/weights/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/layer_19_1_Conv2d_5_1x1_64/weights"
      }
    }
  }
}
node {
  name: "ssd300/layer_19_1_Conv2d_5_1x1_64/weights"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/layer_19_1_Conv2d_5_1x1_64/weights"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
        dim {
          size: 1
        }
        dim {
          size: 256
        }
        dim {
          size: 64
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "ssd300/layer_19_1_Conv2d_5_1x1_64/weights/Assign"
  op: "Assign"
  input: "ssd300/layer_19_1_Conv2d_5_1x1_64/weights"
  input: "ssd300/layer_19_1_Conv2d_5_1x1_64/weights/Initializer/random_uniform"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/layer_19_1_Conv2d_5_1x1_64/weights"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "ssd300/layer_19_1_Conv2d_5_1x1_64/weights/read"
  op: "Identity"
  input: "ssd300/layer_19_1_Conv2d_5_1x1_64/weights"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/layer_19_1_Conv2d_5_1x1_64/weights"
      }
    }
  }
}
node {
  name: "ssd300/layer_19_1_Conv2d_5_1x1_64/layer_conv2d/Conv2D"
  op: "Conv2D"
  input: "ssd300/layer_19_2_Conv2d_4_3x3_s2_256/Relu6"
  input: "ssd300/layer_19_1_Conv2d_5_1x1_64/weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NCHW"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "explicit_paddings"
    value {
      list {
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "ssd300/layer_19_1_Conv2d_5_1x1_64/BatchNorm/beta/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/layer_19_1_Conv2d_5_1x1_64/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 64
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "ssd300/layer_19_1_Conv2d_5_1x1_64/BatchNorm/beta"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/layer_19_1_Conv2d_5_1x1_64/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 64
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "ssd300/layer_19_1_Conv2d_5_1x1_64/BatchNorm/beta/Assign"
  op: "Assign"
  input: "ssd300/layer_19_1_Conv2d_5_1x1_64/BatchNorm/beta"
  input: "ssd300/layer_19_1_Conv2d_5_1x1_64/BatchNorm/beta/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/layer_19_1_Conv2d_5_1x1_64/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "ssd300/layer_19_1_Conv2d_5_1x1_64/BatchNorm/beta/read"
  op: "Identity"
  input: "ssd300/layer_19_1_Conv2d_5_1x1_64/BatchNorm/beta"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/layer_19_1_Conv2d_5_1x1_64/BatchNorm/beta"
      }
    }
  }
}
node {
  name: "ssd300/layer_19_1_Conv2d_5_1x1_64/BatchNorm/moving_mean/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/layer_19_1_Conv2d_5_1x1_64/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 64
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "ssd300/layer_19_1_Conv2d_5_1x1_64/BatchNorm/moving_mean"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/layer_19_1_Conv2d_5_1x1_64/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 64
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "ssd300/layer_19_1_Conv2d_5_1x1_64/BatchNorm/moving_mean/Assign"
  op: "Assign"
  input: "ssd300/layer_19_1_Conv2d_5_1x1_64/BatchNorm/moving_mean"
  input: "ssd300/layer_19_1_Conv2d_5_1x1_64/BatchNorm/moving_mean/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/layer_19_1_Conv2d_5_1x1_64/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "ssd300/layer_19_1_Conv2d_5_1x1_64/BatchNorm/moving_mean/read"
  op: "Identity"
  input: "ssd300/layer_19_1_Conv2d_5_1x1_64/BatchNorm/moving_mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/layer_19_1_Conv2d_5_1x1_64/BatchNorm/moving_mean"
      }
    }
  }
}
node {
  name: "ssd300/layer_19_1_Conv2d_5_1x1_64/BatchNorm/moving_variance/Initializer/ones"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/layer_19_1_Conv2d_5_1x1_64/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 64
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "ssd300/layer_19_1_Conv2d_5_1x1_64/BatchNorm/moving_variance"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/layer_19_1_Conv2d_5_1x1_64/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 64
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "ssd300/layer_19_1_Conv2d_5_1x1_64/BatchNorm/moving_variance/Assign"
  op: "Assign"
  input: "ssd300/layer_19_1_Conv2d_5_1x1_64/BatchNorm/moving_variance"
  input: "ssd300/layer_19_1_Conv2d_5_1x1_64/BatchNorm/moving_variance/Initializer/ones"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/layer_19_1_Conv2d_5_1x1_64/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "ssd300/layer_19_1_Conv2d_5_1x1_64/BatchNorm/moving_variance/read"
  op: "Identity"
  input: "ssd300/layer_19_1_Conv2d_5_1x1_64/BatchNorm/moving_variance"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/layer_19_1_Conv2d_5_1x1_64/BatchNorm/moving_variance"
      }
    }
  }
}
node {
  name: "ssd300/layer_19_1_Conv2d_5_1x1_64/BatchNorm/Reshape/shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000@\000\000\000\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "ssd300/layer_19_1_Conv2d_5_1x1_64/BatchNorm/Reshape"
  op: "Reshape"
  input: "ssd300/layer_19_1_Conv2d_5_1x1_64/BatchNorm/beta/read"
  input: "ssd300/layer_19_1_Conv2d_5_1x1_64/BatchNorm/Reshape/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "ssd300/layer_19_1_Conv2d_5_1x1_64/BatchNorm/Reshape_1/shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000@\000\000\000\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "ssd300/layer_19_1_Conv2d_5_1x1_64/BatchNorm/Reshape_1"
  op: "Reshape"
  input: "ssd300/layer_19_1_Conv2d_5_1x1_64/BatchNorm/moving_mean/read"
  input: "ssd300/layer_19_1_Conv2d_5_1x1_64/BatchNorm/Reshape_1/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "ssd300/layer_19_1_Conv2d_5_1x1_64/BatchNorm/Reshape_2/shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000@\000\000\000\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "ssd300/layer_19_1_Conv2d_5_1x1_64/BatchNorm/Reshape_2"
  op: "Reshape"
  input: "ssd300/layer_19_1_Conv2d_5_1x1_64/BatchNorm/moving_variance/read"
  input: "ssd300/layer_19_1_Conv2d_5_1x1_64/BatchNorm/Reshape_2/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "ssd300/layer_19_1_Conv2d_5_1x1_64/BatchNorm/batchnorm_1/Add/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0010000000474974513
      }
    }
  }
}
node {
  name: "ssd300/layer_19_1_Conv2d_5_1x1_64/BatchNorm/batchnorm_1/Add"
  op: "Add"
  input: "ssd300/layer_19_1_Conv2d_5_1x1_64/BatchNorm/Reshape_2"
  input: "ssd300/layer_19_1_Conv2d_5_1x1_64/BatchNorm/batchnorm_1/Add/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ssd300/layer_19_1_Conv2d_5_1x1_64/BatchNorm/batchnorm_1/Rsqrt"
  op: "Rsqrt"
  input: "ssd300/layer_19_1_Conv2d_5_1x1_64/BatchNorm/batchnorm_1/Add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ssd300/layer_19_1_Conv2d_5_1x1_64/BatchNorm/batchnorm_1/mul"
  op: "Mul"
  input: "ssd300/layer_19_1_Conv2d_5_1x1_64/layer_conv2d/Conv2D"
  input: "ssd300/layer_19_1_Conv2d_5_1x1_64/BatchNorm/batchnorm_1/Rsqrt"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ssd300/layer_19_1_Conv2d_5_1x1_64/BatchNorm/batchnorm_1/mul_1"
  op: "Mul"
  input: "ssd300/layer_19_1_Conv2d_5_1x1_64/BatchNorm/Reshape_1"
  input: "ssd300/layer_19_1_Conv2d_5_1x1_64/BatchNorm/batchnorm_1/Rsqrt"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ssd300/layer_19_1_Conv2d_5_1x1_64/BatchNorm/batchnorm_1/sub"
  op: "Sub"
  input: "ssd300/layer_19_1_Conv2d_5_1x1_64/BatchNorm/Reshape"
  input: "ssd300/layer_19_1_Conv2d_5_1x1_64/BatchNorm/batchnorm_1/mul_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ssd300/layer_19_1_Conv2d_5_1x1_64/BatchNorm/batchnorm_1/Add_1"
  op: "Add"
  input: "ssd300/layer_19_1_Conv2d_5_1x1_64/BatchNorm/batchnorm_1/mul"
  input: "ssd300/layer_19_1_Conv2d_5_1x1_64/BatchNorm/batchnorm_1/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ssd300/layer_19_1_Conv2d_5_1x1_64/Relu6"
  op: "Relu6"
  input: "ssd300/layer_19_1_Conv2d_5_1x1_64/BatchNorm/batchnorm_1/Add_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ssd300/layer_19_2_Conv2d_5_3x3_s2_128_depthwise/depthwise_weights/Initializer/random_uniform/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/layer_19_2_Conv2d_5_3x3_s2_128_depthwise/depthwise_weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\003\000\000\000\003\000\000\000@\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "ssd300/layer_19_2_Conv2d_5_3x3_s2_128_depthwise/depthwise_weights/Initializer/random_uniform/min"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/layer_19_2_Conv2d_5_3x3_s2_128_depthwise/depthwise_weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: -0.10127393901348114
      }
    }
  }
}
node {
  name: "ssd300/layer_19_2_Conv2d_5_3x3_s2_128_depthwise/depthwise_weights/Initializer/random_uniform/max"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/layer_19_2_Conv2d_5_3x3_s2_128_depthwise/depthwise_weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.10127393901348114
      }
    }
  }
}
node {
  name: "ssd300/layer_19_2_Conv2d_5_3x3_s2_128_depthwise/depthwise_weights/Initializer/random_uniform/RandomUniform"
  op: "RandomUniform"
  input: "ssd300/layer_19_2_Conv2d_5_3x3_s2_128_depthwise/depthwise_weights/Initializer/random_uniform/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/layer_19_2_Conv2d_5_3x3_s2_128_depthwise/depthwise_weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "ssd300/layer_19_2_Conv2d_5_3x3_s2_128_depthwise/depthwise_weights/Initializer/random_uniform/sub"
  op: "Sub"
  input: "ssd300/layer_19_2_Conv2d_5_3x3_s2_128_depthwise/depthwise_weights/Initializer/random_uniform/max"
  input: "ssd300/layer_19_2_Conv2d_5_3x3_s2_128_depthwise/depthwise_weights/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/layer_19_2_Conv2d_5_3x3_s2_128_depthwise/depthwise_weights"
      }
    }
  }
}
node {
  name: "ssd300/layer_19_2_Conv2d_5_3x3_s2_128_depthwise/depthwise_weights/Initializer/random_uniform/mul"
  op: "Mul"
  input: "ssd300/layer_19_2_Conv2d_5_3x3_s2_128_depthwise/depthwise_weights/Initializer/random_uniform/RandomUniform"
  input: "ssd300/layer_19_2_Conv2d_5_3x3_s2_128_depthwise/depthwise_weights/Initializer/random_uniform/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/layer_19_2_Conv2d_5_3x3_s2_128_depthwise/depthwise_weights"
      }
    }
  }
}
node {
  name: "ssd300/layer_19_2_Conv2d_5_3x3_s2_128_depthwise/depthwise_weights/Initializer/random_uniform"
  op: "Add"
  input: "ssd300/layer_19_2_Conv2d_5_3x3_s2_128_depthwise/depthwise_weights/Initializer/random_uniform/mul"
  input: "ssd300/layer_19_2_Conv2d_5_3x3_s2_128_depthwise/depthwise_weights/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/layer_19_2_Conv2d_5_3x3_s2_128_depthwise/depthwise_weights"
      }
    }
  }
}
node {
  name: "ssd300/layer_19_2_Conv2d_5_3x3_s2_128_depthwise/depthwise_weights"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/layer_19_2_Conv2d_5_3x3_s2_128_depthwise/depthwise_weights"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 3
        }
        dim {
          size: 3
        }
        dim {
          size: 64
        }
        dim {
          size: 1
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "ssd300/layer_19_2_Conv2d_5_3x3_s2_128_depthwise/depthwise_weights/Assign"
  op: "Assign"
  input: "ssd300/layer_19_2_Conv2d_5_3x3_s2_128_depthwise/depthwise_weights"
  input: "ssd300/layer_19_2_Conv2d_5_3x3_s2_128_depthwise/depthwise_weights/Initializer/random_uniform"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/layer_19_2_Conv2d_5_3x3_s2_128_depthwise/depthwise_weights"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "ssd300/layer_19_2_Conv2d_5_3x3_s2_128_depthwise/depthwise_weights/read"
  op: "Identity"
  input: "ssd300/layer_19_2_Conv2d_5_3x3_s2_128_depthwise/depthwise_weights"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/layer_19_2_Conv2d_5_3x3_s2_128_depthwise/depthwise_weights"
      }
    }
  }
}
node {
  name: "ssd300/layer_19_2_Conv2d_5_3x3_s2_128_depthwise/layer_conv2d/depthwise/Shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\003\000\000\000\003\000\000\000@\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "ssd300/layer_19_2_Conv2d_5_3x3_s2_128_depthwise/layer_conv2d/depthwise/dilation_rate"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "ssd300/layer_19_2_Conv2d_5_3x3_s2_128_depthwise/layer_conv2d/depthwise"
  op: "DepthwiseConv2dNative"
  input: "ssd300/layer_19_1_Conv2d_5_1x1_64/Relu6"
  input: "ssd300/layer_19_2_Conv2d_5_3x3_s2_128_depthwise/depthwise_weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NCHW"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 2
        i: 2
      }
    }
  }
}
node {
  name: "ssd300/layer_19_2_Conv2d_5_3x3_s2_128_depthwise/BatchNorm/beta/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/layer_19_2_Conv2d_5_3x3_s2_128_depthwise/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 64
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "ssd300/layer_19_2_Conv2d_5_3x3_s2_128_depthwise/BatchNorm/beta"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/layer_19_2_Conv2d_5_3x3_s2_128_depthwise/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 64
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "ssd300/layer_19_2_Conv2d_5_3x3_s2_128_depthwise/BatchNorm/beta/Assign"
  op: "Assign"
  input: "ssd300/layer_19_2_Conv2d_5_3x3_s2_128_depthwise/BatchNorm/beta"
  input: "ssd300/layer_19_2_Conv2d_5_3x3_s2_128_depthwise/BatchNorm/beta/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/layer_19_2_Conv2d_5_3x3_s2_128_depthwise/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "ssd300/layer_19_2_Conv2d_5_3x3_s2_128_depthwise/BatchNorm/beta/read"
  op: "Identity"
  input: "ssd300/layer_19_2_Conv2d_5_3x3_s2_128_depthwise/BatchNorm/beta"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/layer_19_2_Conv2d_5_3x3_s2_128_depthwise/BatchNorm/beta"
      }
    }
  }
}
node {
  name: "ssd300/layer_19_2_Conv2d_5_3x3_s2_128_depthwise/BatchNorm/moving_mean/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/layer_19_2_Conv2d_5_3x3_s2_128_depthwise/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 64
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "ssd300/layer_19_2_Conv2d_5_3x3_s2_128_depthwise/BatchNorm/moving_mean"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/layer_19_2_Conv2d_5_3x3_s2_128_depthwise/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 64
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "ssd300/layer_19_2_Conv2d_5_3x3_s2_128_depthwise/BatchNorm/moving_mean/Assign"
  op: "Assign"
  input: "ssd300/layer_19_2_Conv2d_5_3x3_s2_128_depthwise/BatchNorm/moving_mean"
  input: "ssd300/layer_19_2_Conv2d_5_3x3_s2_128_depthwise/BatchNorm/moving_mean/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/layer_19_2_Conv2d_5_3x3_s2_128_depthwise/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "ssd300/layer_19_2_Conv2d_5_3x3_s2_128_depthwise/BatchNorm/moving_mean/read"
  op: "Identity"
  input: "ssd300/layer_19_2_Conv2d_5_3x3_s2_128_depthwise/BatchNorm/moving_mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/layer_19_2_Conv2d_5_3x3_s2_128_depthwise/BatchNorm/moving_mean"
      }
    }
  }
}
node {
  name: "ssd300/layer_19_2_Conv2d_5_3x3_s2_128_depthwise/BatchNorm/moving_variance/Initializer/ones"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/layer_19_2_Conv2d_5_3x3_s2_128_depthwise/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 64
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "ssd300/layer_19_2_Conv2d_5_3x3_s2_128_depthwise/BatchNorm/moving_variance"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/layer_19_2_Conv2d_5_3x3_s2_128_depthwise/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 64
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "ssd300/layer_19_2_Conv2d_5_3x3_s2_128_depthwise/BatchNorm/moving_variance/Assign"
  op: "Assign"
  input: "ssd300/layer_19_2_Conv2d_5_3x3_s2_128_depthwise/BatchNorm/moving_variance"
  input: "ssd300/layer_19_2_Conv2d_5_3x3_s2_128_depthwise/BatchNorm/moving_variance/Initializer/ones"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/layer_19_2_Conv2d_5_3x3_s2_128_depthwise/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "ssd300/layer_19_2_Conv2d_5_3x3_s2_128_depthwise/BatchNorm/moving_variance/read"
  op: "Identity"
  input: "ssd300/layer_19_2_Conv2d_5_3x3_s2_128_depthwise/BatchNorm/moving_variance"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/layer_19_2_Conv2d_5_3x3_s2_128_depthwise/BatchNorm/moving_variance"
      }
    }
  }
}
node {
  name: "ssd300/layer_19_2_Conv2d_5_3x3_s2_128_depthwise/BatchNorm/Reshape/shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000@\000\000\000\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "ssd300/layer_19_2_Conv2d_5_3x3_s2_128_depthwise/BatchNorm/Reshape"
  op: "Reshape"
  input: "ssd300/layer_19_2_Conv2d_5_3x3_s2_128_depthwise/BatchNorm/beta/read"
  input: "ssd300/layer_19_2_Conv2d_5_3x3_s2_128_depthwise/BatchNorm/Reshape/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "ssd300/layer_19_2_Conv2d_5_3x3_s2_128_depthwise/BatchNorm/Reshape_1/shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000@\000\000\000\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "ssd300/layer_19_2_Conv2d_5_3x3_s2_128_depthwise/BatchNorm/Reshape_1"
  op: "Reshape"
  input: "ssd300/layer_19_2_Conv2d_5_3x3_s2_128_depthwise/BatchNorm/moving_mean/read"
  input: "ssd300/layer_19_2_Conv2d_5_3x3_s2_128_depthwise/BatchNorm/Reshape_1/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "ssd300/layer_19_2_Conv2d_5_3x3_s2_128_depthwise/BatchNorm/Reshape_2/shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000@\000\000\000\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "ssd300/layer_19_2_Conv2d_5_3x3_s2_128_depthwise/BatchNorm/Reshape_2"
  op: "Reshape"
  input: "ssd300/layer_19_2_Conv2d_5_3x3_s2_128_depthwise/BatchNorm/moving_variance/read"
  input: "ssd300/layer_19_2_Conv2d_5_3x3_s2_128_depthwise/BatchNorm/Reshape_2/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "ssd300/layer_19_2_Conv2d_5_3x3_s2_128_depthwise/BatchNorm/batchnorm_1/Add/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0010000000474974513
      }
    }
  }
}
node {
  name: "ssd300/layer_19_2_Conv2d_5_3x3_s2_128_depthwise/BatchNorm/batchnorm_1/Add"
  op: "Add"
  input: "ssd300/layer_19_2_Conv2d_5_3x3_s2_128_depthwise/BatchNorm/Reshape_2"
  input: "ssd300/layer_19_2_Conv2d_5_3x3_s2_128_depthwise/BatchNorm/batchnorm_1/Add/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ssd300/layer_19_2_Conv2d_5_3x3_s2_128_depthwise/BatchNorm/batchnorm_1/Rsqrt"
  op: "Rsqrt"
  input: "ssd300/layer_19_2_Conv2d_5_3x3_s2_128_depthwise/BatchNorm/batchnorm_1/Add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ssd300/layer_19_2_Conv2d_5_3x3_s2_128_depthwise/BatchNorm/batchnorm_1/mul"
  op: "Mul"
  input: "ssd300/layer_19_2_Conv2d_5_3x3_s2_128_depthwise/layer_conv2d/depthwise"
  input: "ssd300/layer_19_2_Conv2d_5_3x3_s2_128_depthwise/BatchNorm/batchnorm_1/Rsqrt"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ssd300/layer_19_2_Conv2d_5_3x3_s2_128_depthwise/BatchNorm/batchnorm_1/mul_1"
  op: "Mul"
  input: "ssd300/layer_19_2_Conv2d_5_3x3_s2_128_depthwise/BatchNorm/Reshape_1"
  input: "ssd300/layer_19_2_Conv2d_5_3x3_s2_128_depthwise/BatchNorm/batchnorm_1/Rsqrt"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ssd300/layer_19_2_Conv2d_5_3x3_s2_128_depthwise/BatchNorm/batchnorm_1/sub"
  op: "Sub"
  input: "ssd300/layer_19_2_Conv2d_5_3x3_s2_128_depthwise/BatchNorm/Reshape"
  input: "ssd300/layer_19_2_Conv2d_5_3x3_s2_128_depthwise/BatchNorm/batchnorm_1/mul_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ssd300/layer_19_2_Conv2d_5_3x3_s2_128_depthwise/BatchNorm/batchnorm_1/Add_1"
  op: "Add"
  input: "ssd300/layer_19_2_Conv2d_5_3x3_s2_128_depthwise/BatchNorm/batchnorm_1/mul"
  input: "ssd300/layer_19_2_Conv2d_5_3x3_s2_128_depthwise/BatchNorm/batchnorm_1/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ssd300/layer_19_2_Conv2d_5_3x3_s2_128_depthwise/Relu6"
  op: "Relu6"
  input: "ssd300/layer_19_2_Conv2d_5_3x3_s2_128_depthwise/BatchNorm/batchnorm_1/Add_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ssd300/layer_19_2_Conv2d_5_3x3_s2_128/weights/Initializer/random_uniform/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/layer_19_2_Conv2d_5_3x3_s2_128/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000@\000\000\000\200\000\000\000"
      }
    }
  }
}
node {
  name: "ssd300/layer_19_2_Conv2d_5_3x3_s2_128/weights/Initializer/random_uniform/min"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/layer_19_2_Conv2d_5_3x3_s2_128/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: -0.1767766922712326
      }
    }
  }
}
node {
  name: "ssd300/layer_19_2_Conv2d_5_3x3_s2_128/weights/Initializer/random_uniform/max"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/layer_19_2_Conv2d_5_3x3_s2_128/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.1767766922712326
      }
    }
  }
}
node {
  name: "ssd300/layer_19_2_Conv2d_5_3x3_s2_128/weights/Initializer/random_uniform/RandomUniform"
  op: "RandomUniform"
  input: "ssd300/layer_19_2_Conv2d_5_3x3_s2_128/weights/Initializer/random_uniform/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/layer_19_2_Conv2d_5_3x3_s2_128/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "ssd300/layer_19_2_Conv2d_5_3x3_s2_128/weights/Initializer/random_uniform/sub"
  op: "Sub"
  input: "ssd300/layer_19_2_Conv2d_5_3x3_s2_128/weights/Initializer/random_uniform/max"
  input: "ssd300/layer_19_2_Conv2d_5_3x3_s2_128/weights/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/layer_19_2_Conv2d_5_3x3_s2_128/weights"
      }
    }
  }
}
node {
  name: "ssd300/layer_19_2_Conv2d_5_3x3_s2_128/weights/Initializer/random_uniform/mul"
  op: "Mul"
  input: "ssd300/layer_19_2_Conv2d_5_3x3_s2_128/weights/Initializer/random_uniform/RandomUniform"
  input: "ssd300/layer_19_2_Conv2d_5_3x3_s2_128/weights/Initializer/random_uniform/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/layer_19_2_Conv2d_5_3x3_s2_128/weights"
      }
    }
  }
}
node {
  name: "ssd300/layer_19_2_Conv2d_5_3x3_s2_128/weights/Initializer/random_uniform"
  op: "Add"
  input: "ssd300/layer_19_2_Conv2d_5_3x3_s2_128/weights/Initializer/random_uniform/mul"
  input: "ssd300/layer_19_2_Conv2d_5_3x3_s2_128/weights/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/layer_19_2_Conv2d_5_3x3_s2_128/weights"
      }
    }
  }
}
node {
  name: "ssd300/layer_19_2_Conv2d_5_3x3_s2_128/weights"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/layer_19_2_Conv2d_5_3x3_s2_128/weights"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
        dim {
          size: 1
        }
        dim {
          size: 64
        }
        dim {
          size: 128
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "ssd300/layer_19_2_Conv2d_5_3x3_s2_128/weights/Assign"
  op: "Assign"
  input: "ssd300/layer_19_2_Conv2d_5_3x3_s2_128/weights"
  input: "ssd300/layer_19_2_Conv2d_5_3x3_s2_128/weights/Initializer/random_uniform"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/layer_19_2_Conv2d_5_3x3_s2_128/weights"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "ssd300/layer_19_2_Conv2d_5_3x3_s2_128/weights/read"
  op: "Identity"
  input: "ssd300/layer_19_2_Conv2d_5_3x3_s2_128/weights"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/layer_19_2_Conv2d_5_3x3_s2_128/weights"
      }
    }
  }
}
node {
  name: "ssd300/layer_19_2_Conv2d_5_3x3_s2_128/layer_conv2d/Conv2D"
  op: "Conv2D"
  input: "ssd300/layer_19_2_Conv2d_5_3x3_s2_128_depthwise/Relu6"
  input: "ssd300/layer_19_2_Conv2d_5_3x3_s2_128/weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NCHW"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "explicit_paddings"
    value {
      list {
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "ssd300/layer_19_2_Conv2d_5_3x3_s2_128/BatchNorm/beta/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/layer_19_2_Conv2d_5_3x3_s2_128/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 128
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "ssd300/layer_19_2_Conv2d_5_3x3_s2_128/BatchNorm/beta"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/layer_19_2_Conv2d_5_3x3_s2_128/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 128
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "ssd300/layer_19_2_Conv2d_5_3x3_s2_128/BatchNorm/beta/Assign"
  op: "Assign"
  input: "ssd300/layer_19_2_Conv2d_5_3x3_s2_128/BatchNorm/beta"
  input: "ssd300/layer_19_2_Conv2d_5_3x3_s2_128/BatchNorm/beta/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/layer_19_2_Conv2d_5_3x3_s2_128/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "ssd300/layer_19_2_Conv2d_5_3x3_s2_128/BatchNorm/beta/read"
  op: "Identity"
  input: "ssd300/layer_19_2_Conv2d_5_3x3_s2_128/BatchNorm/beta"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/layer_19_2_Conv2d_5_3x3_s2_128/BatchNorm/beta"
      }
    }
  }
}
node {
  name: "ssd300/layer_19_2_Conv2d_5_3x3_s2_128/BatchNorm/moving_mean/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/layer_19_2_Conv2d_5_3x3_s2_128/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 128
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "ssd300/layer_19_2_Conv2d_5_3x3_s2_128/BatchNorm/moving_mean"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/layer_19_2_Conv2d_5_3x3_s2_128/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 128
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "ssd300/layer_19_2_Conv2d_5_3x3_s2_128/BatchNorm/moving_mean/Assign"
  op: "Assign"
  input: "ssd300/layer_19_2_Conv2d_5_3x3_s2_128/BatchNorm/moving_mean"
  input: "ssd300/layer_19_2_Conv2d_5_3x3_s2_128/BatchNorm/moving_mean/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/layer_19_2_Conv2d_5_3x3_s2_128/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "ssd300/layer_19_2_Conv2d_5_3x3_s2_128/BatchNorm/moving_mean/read"
  op: "Identity"
  input: "ssd300/layer_19_2_Conv2d_5_3x3_s2_128/BatchNorm/moving_mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/layer_19_2_Conv2d_5_3x3_s2_128/BatchNorm/moving_mean"
      }
    }
  }
}
node {
  name: "ssd300/layer_19_2_Conv2d_5_3x3_s2_128/BatchNorm/moving_variance/Initializer/ones"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/layer_19_2_Conv2d_5_3x3_s2_128/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 128
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "ssd300/layer_19_2_Conv2d_5_3x3_s2_128/BatchNorm/moving_variance"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/layer_19_2_Conv2d_5_3x3_s2_128/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 128
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "ssd300/layer_19_2_Conv2d_5_3x3_s2_128/BatchNorm/moving_variance/Assign"
  op: "Assign"
  input: "ssd300/layer_19_2_Conv2d_5_3x3_s2_128/BatchNorm/moving_variance"
  input: "ssd300/layer_19_2_Conv2d_5_3x3_s2_128/BatchNorm/moving_variance/Initializer/ones"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/layer_19_2_Conv2d_5_3x3_s2_128/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "ssd300/layer_19_2_Conv2d_5_3x3_s2_128/BatchNorm/moving_variance/read"
  op: "Identity"
  input: "ssd300/layer_19_2_Conv2d_5_3x3_s2_128/BatchNorm/moving_variance"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/layer_19_2_Conv2d_5_3x3_s2_128/BatchNorm/moving_variance"
      }
    }
  }
}
node {
  name: "ssd300/layer_19_2_Conv2d_5_3x3_s2_128/BatchNorm/Reshape/shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\200\000\000\000\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "ssd300/layer_19_2_Conv2d_5_3x3_s2_128/BatchNorm/Reshape"
  op: "Reshape"
  input: "ssd300/layer_19_2_Conv2d_5_3x3_s2_128/BatchNorm/beta/read"
  input: "ssd300/layer_19_2_Conv2d_5_3x3_s2_128/BatchNorm/Reshape/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "ssd300/layer_19_2_Conv2d_5_3x3_s2_128/BatchNorm/Reshape_1/shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\200\000\000\000\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "ssd300/layer_19_2_Conv2d_5_3x3_s2_128/BatchNorm/Reshape_1"
  op: "Reshape"
  input: "ssd300/layer_19_2_Conv2d_5_3x3_s2_128/BatchNorm/moving_mean/read"
  input: "ssd300/layer_19_2_Conv2d_5_3x3_s2_128/BatchNorm/Reshape_1/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "ssd300/layer_19_2_Conv2d_5_3x3_s2_128/BatchNorm/Reshape_2/shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\200\000\000\000\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "ssd300/layer_19_2_Conv2d_5_3x3_s2_128/BatchNorm/Reshape_2"
  op: "Reshape"
  input: "ssd300/layer_19_2_Conv2d_5_3x3_s2_128/BatchNorm/moving_variance/read"
  input: "ssd300/layer_19_2_Conv2d_5_3x3_s2_128/BatchNorm/Reshape_2/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "ssd300/layer_19_2_Conv2d_5_3x3_s2_128/BatchNorm/batchnorm_1/Add/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0010000000474974513
      }
    }
  }
}
node {
  name: "ssd300/layer_19_2_Conv2d_5_3x3_s2_128/BatchNorm/batchnorm_1/Add"
  op: "Add"
  input: "ssd300/layer_19_2_Conv2d_5_3x3_s2_128/BatchNorm/Reshape_2"
  input: "ssd300/layer_19_2_Conv2d_5_3x3_s2_128/BatchNorm/batchnorm_1/Add/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ssd300/layer_19_2_Conv2d_5_3x3_s2_128/BatchNorm/batchnorm_1/Rsqrt"
  op: "Rsqrt"
  input: "ssd300/layer_19_2_Conv2d_5_3x3_s2_128/BatchNorm/batchnorm_1/Add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ssd300/layer_19_2_Conv2d_5_3x3_s2_128/BatchNorm/batchnorm_1/mul"
  op: "Mul"
  input: "ssd300/layer_19_2_Conv2d_5_3x3_s2_128/layer_conv2d/Conv2D"
  input: "ssd300/layer_19_2_Conv2d_5_3x3_s2_128/BatchNorm/batchnorm_1/Rsqrt"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ssd300/layer_19_2_Conv2d_5_3x3_s2_128/BatchNorm/batchnorm_1/mul_1"
  op: "Mul"
  input: "ssd300/layer_19_2_Conv2d_5_3x3_s2_128/BatchNorm/Reshape_1"
  input: "ssd300/layer_19_2_Conv2d_5_3x3_s2_128/BatchNorm/batchnorm_1/Rsqrt"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ssd300/layer_19_2_Conv2d_5_3x3_s2_128/BatchNorm/batchnorm_1/sub"
  op: "Sub"
  input: "ssd300/layer_19_2_Conv2d_5_3x3_s2_128/BatchNorm/Reshape"
  input: "ssd300/layer_19_2_Conv2d_5_3x3_s2_128/BatchNorm/batchnorm_1/mul_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ssd300/layer_19_2_Conv2d_5_3x3_s2_128/BatchNorm/batchnorm_1/Add_1"
  op: "Add"
  input: "ssd300/layer_19_2_Conv2d_5_3x3_s2_128/BatchNorm/batchnorm_1/mul"
  input: "ssd300/layer_19_2_Conv2d_5_3x3_s2_128/BatchNorm/batchnorm_1/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ssd300/layer_19_2_Conv2d_5_3x3_s2_128/Relu6"
  op: "Relu6"
  input: "ssd300/layer_19_2_Conv2d_5_3x3_s2_128/BatchNorm/batchnorm_1/Add_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ssd300/multibox_head/loc_0/kernel/Initializer/random_uniform/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/multibox_head/loc_0/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\003\000\000\000\003\000\000\000`\000\000\000\020\000\000\000"
      }
    }
  }
}
node {
  name: "ssd300/multibox_head/loc_0/kernel/Initializer/random_uniform/min"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/multibox_head/loc_0/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: -0.07715167850255966
      }
    }
  }
}
node {
  name: "ssd300/multibox_head/loc_0/kernel/Initializer/random_uniform/max"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/multibox_head/loc_0/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.07715167850255966
      }
    }
  }
}
node {
  name: "ssd300/multibox_head/loc_0/kernel/Initializer/random_uniform/RandomUniform"
  op: "RandomUniform"
  input: "ssd300/multibox_head/loc_0/kernel/Initializer/random_uniform/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/multibox_head/loc_0/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "ssd300/multibox_head/loc_0/kernel/Initializer/random_uniform/sub"
  op: "Sub"
  input: "ssd300/multibox_head/loc_0/kernel/Initializer/random_uniform/max"
  input: "ssd300/multibox_head/loc_0/kernel/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/multibox_head/loc_0/kernel"
      }
    }
  }
}
node {
  name: "ssd300/multibox_head/loc_0/kernel/Initializer/random_uniform/mul"
  op: "Mul"
  input: "ssd300/multibox_head/loc_0/kernel/Initializer/random_uniform/RandomUniform"
  input: "ssd300/multibox_head/loc_0/kernel/Initializer/random_uniform/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/multibox_head/loc_0/kernel"
      }
    }
  }
}
node {
  name: "ssd300/multibox_head/loc_0/kernel/Initializer/random_uniform"
  op: "Add"
  input: "ssd300/multibox_head/loc_0/kernel/Initializer/random_uniform/mul"
  input: "ssd300/multibox_head/loc_0/kernel/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/multibox_head/loc_0/kernel"
      }
    }
  }
}
node {
  name: "ssd300/multibox_head/loc_0/kernel"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/multibox_head/loc_0/kernel"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 3
        }
        dim {
          size: 3
        }
        dim {
          size: 96
        }
        dim {
          size: 16
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "ssd300/multibox_head/loc_0/kernel/Assign"
  op: "Assign"
  input: "ssd300/multibox_head/loc_0/kernel"
  input: "ssd300/multibox_head/loc_0/kernel/Initializer/random_uniform"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/multibox_head/loc_0/kernel"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "ssd300/multibox_head/loc_0/kernel/read"
  op: "Identity"
  input: "ssd300/multibox_head/loc_0/kernel"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/multibox_head/loc_0/kernel"
      }
    }
  }
}
node {
  name: "ssd300/multibox_head/loc_0/bias/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/multibox_head/loc_0/bias"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 16
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "ssd300/multibox_head/loc_0/bias"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/multibox_head/loc_0/bias"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 16
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "ssd300/multibox_head/loc_0/bias/Assign"
  op: "Assign"
  input: "ssd300/multibox_head/loc_0/bias"
  input: "ssd300/multibox_head/loc_0/bias/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/multibox_head/loc_0/bias"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "ssd300/multibox_head/loc_0/bias/read"
  op: "Identity"
  input: "ssd300/multibox_head/loc_0/bias"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/multibox_head/loc_0/bias"
      }
    }
  }
}
node {
  name: "ssd300/multibox_head/loc_0/dilation_rate"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "ssd300/multibox_head/loc_0/Conv2D"
  op: "Conv2D"
  input: "ssd300/expanded_conv_12/Add"
  input: "ssd300/multibox_head/loc_0/kernel/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NCHW"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "explicit_paddings"
    value {
      list {
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "ssd300/multibox_head/loc_0/BiasAdd"
  op: "BiasAdd"
  input: "ssd300/multibox_head/loc_0/Conv2D"
  input: "ssd300/multibox_head/loc_0/bias/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NCHW"
    }
  }
}
node {
  name: "ssd300/multibox_head/cls_0/kernel/Initializer/random_uniform/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/multibox_head/cls_0/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\003\000\000\000\003\000\000\000`\000\000\000\010\000\000\000"
      }
    }
  }
}
node {
  name: "ssd300/multibox_head/cls_0/kernel/Initializer/random_uniform/min"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/multibox_head/cls_0/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: -0.0800640732049942
      }
    }
  }
}
node {
  name: "ssd300/multibox_head/cls_0/kernel/Initializer/random_uniform/max"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/multibox_head/cls_0/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0800640732049942
      }
    }
  }
}
node {
  name: "ssd300/multibox_head/cls_0/kernel/Initializer/random_uniform/RandomUniform"
  op: "RandomUniform"
  input: "ssd300/multibox_head/cls_0/kernel/Initializer/random_uniform/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/multibox_head/cls_0/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "ssd300/multibox_head/cls_0/kernel/Initializer/random_uniform/sub"
  op: "Sub"
  input: "ssd300/multibox_head/cls_0/kernel/Initializer/random_uniform/max"
  input: "ssd300/multibox_head/cls_0/kernel/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/multibox_head/cls_0/kernel"
      }
    }
  }
}
node {
  name: "ssd300/multibox_head/cls_0/kernel/Initializer/random_uniform/mul"
  op: "Mul"
  input: "ssd300/multibox_head/cls_0/kernel/Initializer/random_uniform/RandomUniform"
  input: "ssd300/multibox_head/cls_0/kernel/Initializer/random_uniform/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/multibox_head/cls_0/kernel"
      }
    }
  }
}
node {
  name: "ssd300/multibox_head/cls_0/kernel/Initializer/random_uniform"
  op: "Add"
  input: "ssd300/multibox_head/cls_0/kernel/Initializer/random_uniform/mul"
  input: "ssd300/multibox_head/cls_0/kernel/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/multibox_head/cls_0/kernel"
      }
    }
  }
}
node {
  name: "ssd300/multibox_head/cls_0/kernel"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/multibox_head/cls_0/kernel"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 3
        }
        dim {
          size: 3
        }
        dim {
          size: 96
        }
        dim {
          size: 8
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "ssd300/multibox_head/cls_0/kernel/Assign"
  op: "Assign"
  input: "ssd300/multibox_head/cls_0/kernel"
  input: "ssd300/multibox_head/cls_0/kernel/Initializer/random_uniform"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/multibox_head/cls_0/kernel"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "ssd300/multibox_head/cls_0/kernel/read"
  op: "Identity"
  input: "ssd300/multibox_head/cls_0/kernel"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/multibox_head/cls_0/kernel"
      }
    }
  }
}
node {
  name: "ssd300/multibox_head/cls_0/bias/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/multibox_head/cls_0/bias"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 8
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "ssd300/multibox_head/cls_0/bias"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/multibox_head/cls_0/bias"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 8
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "ssd300/multibox_head/cls_0/bias/Assign"
  op: "Assign"
  input: "ssd300/multibox_head/cls_0/bias"
  input: "ssd300/multibox_head/cls_0/bias/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/multibox_head/cls_0/bias"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "ssd300/multibox_head/cls_0/bias/read"
  op: "Identity"
  input: "ssd300/multibox_head/cls_0/bias"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/multibox_head/cls_0/bias"
      }
    }
  }
}
node {
  name: "ssd300/multibox_head/cls_0/dilation_rate"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "ssd300/multibox_head/cls_0/Conv2D"
  op: "Conv2D"
  input: "ssd300/expanded_conv_12/Add"
  input: "ssd300/multibox_head/cls_0/kernel/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NCHW"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "explicit_paddings"
    value {
      list {
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "ssd300/multibox_head/cls_0/BiasAdd"
  op: "BiasAdd"
  input: "ssd300/multibox_head/cls_0/Conv2D"
  input: "ssd300/multibox_head/cls_0/bias/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NCHW"
    }
  }
}
node {
  name: "ssd300/multibox_head/loc_1/kernel/Initializer/random_uniform/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/multibox_head/loc_1/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\003\000\000\000\003\000\000\000\200\000\000\000\020\000\000\000"
      }
    }
  }
}
node {
  name: "ssd300/multibox_head/loc_1/kernel/Initializer/random_uniform/min"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/multibox_head/loc_1/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: -0.06804138422012329
      }
    }
  }
}
node {
  name: "ssd300/multibox_head/loc_1/kernel/Initializer/random_uniform/max"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/multibox_head/loc_1/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.06804138422012329
      }
    }
  }
}
node {
  name: "ssd300/multibox_head/loc_1/kernel/Initializer/random_uniform/RandomUniform"
  op: "RandomUniform"
  input: "ssd300/multibox_head/loc_1/kernel/Initializer/random_uniform/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/multibox_head/loc_1/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "ssd300/multibox_head/loc_1/kernel/Initializer/random_uniform/sub"
  op: "Sub"
  input: "ssd300/multibox_head/loc_1/kernel/Initializer/random_uniform/max"
  input: "ssd300/multibox_head/loc_1/kernel/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/multibox_head/loc_1/kernel"
      }
    }
  }
}
node {
  name: "ssd300/multibox_head/loc_1/kernel/Initializer/random_uniform/mul"
  op: "Mul"
  input: "ssd300/multibox_head/loc_1/kernel/Initializer/random_uniform/RandomUniform"
  input: "ssd300/multibox_head/loc_1/kernel/Initializer/random_uniform/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/multibox_head/loc_1/kernel"
      }
    }
  }
}
node {
  name: "ssd300/multibox_head/loc_1/kernel/Initializer/random_uniform"
  op: "Add"
  input: "ssd300/multibox_head/loc_1/kernel/Initializer/random_uniform/mul"
  input: "ssd300/multibox_head/loc_1/kernel/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/multibox_head/loc_1/kernel"
      }
    }
  }
}
node {
  name: "ssd300/multibox_head/loc_1/kernel"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/multibox_head/loc_1/kernel"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 3
        }
        dim {
          size: 3
        }
        dim {
          size: 128
        }
        dim {
          size: 16
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "ssd300/multibox_head/loc_1/kernel/Assign"
  op: "Assign"
  input: "ssd300/multibox_head/loc_1/kernel"
  input: "ssd300/multibox_head/loc_1/kernel/Initializer/random_uniform"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/multibox_head/loc_1/kernel"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "ssd300/multibox_head/loc_1/kernel/read"
  op: "Identity"
  input: "ssd300/multibox_head/loc_1/kernel"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/multibox_head/loc_1/kernel"
      }
    }
  }
}
node {
  name: "ssd300/multibox_head/loc_1/bias/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/multibox_head/loc_1/bias"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 16
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "ssd300/multibox_head/loc_1/bias"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/multibox_head/loc_1/bias"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 16
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "ssd300/multibox_head/loc_1/bias/Assign"
  op: "Assign"
  input: "ssd300/multibox_head/loc_1/bias"
  input: "ssd300/multibox_head/loc_1/bias/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/multibox_head/loc_1/bias"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "ssd300/multibox_head/loc_1/bias/read"
  op: "Identity"
  input: "ssd300/multibox_head/loc_1/bias"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/multibox_head/loc_1/bias"
      }
    }
  }
}
node {
  name: "ssd300/multibox_head/loc_1/dilation_rate"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "ssd300/multibox_head/loc_1/Conv2D"
  op: "Conv2D"
  input: "ssd300/layer_19_2_Conv2d_5_3x3_s2_128/Relu6"
  input: "ssd300/multibox_head/loc_1/kernel/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NCHW"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "explicit_paddings"
    value {
      list {
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "ssd300/multibox_head/loc_1/BiasAdd"
  op: "BiasAdd"
  input: "ssd300/multibox_head/loc_1/Conv2D"
  input: "ssd300/multibox_head/loc_1/bias/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NCHW"
    }
  }
}
node {
  name: "ssd300/multibox_head/cls_1/kernel/Initializer/random_uniform/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/multibox_head/cls_1/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\003\000\000\000\003\000\000\000\200\000\000\000\010\000\000\000"
      }
    }
  }
}
node {
  name: "ssd300/multibox_head/cls_1/kernel/Initializer/random_uniform/min"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/multibox_head/cls_1/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: -0.07001400738954544
      }
    }
  }
}
node {
  name: "ssd300/multibox_head/cls_1/kernel/Initializer/random_uniform/max"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/multibox_head/cls_1/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.07001400738954544
      }
    }
  }
}
node {
  name: "ssd300/multibox_head/cls_1/kernel/Initializer/random_uniform/RandomUniform"
  op: "RandomUniform"
  input: "ssd300/multibox_head/cls_1/kernel/Initializer/random_uniform/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/multibox_head/cls_1/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "ssd300/multibox_head/cls_1/kernel/Initializer/random_uniform/sub"
  op: "Sub"
  input: "ssd300/multibox_head/cls_1/kernel/Initializer/random_uniform/max"
  input: "ssd300/multibox_head/cls_1/kernel/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/multibox_head/cls_1/kernel"
      }
    }
  }
}
node {
  name: "ssd300/multibox_head/cls_1/kernel/Initializer/random_uniform/mul"
  op: "Mul"
  input: "ssd300/multibox_head/cls_1/kernel/Initializer/random_uniform/RandomUniform"
  input: "ssd300/multibox_head/cls_1/kernel/Initializer/random_uniform/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/multibox_head/cls_1/kernel"
      }
    }
  }
}
node {
  name: "ssd300/multibox_head/cls_1/kernel/Initializer/random_uniform"
  op: "Add"
  input: "ssd300/multibox_head/cls_1/kernel/Initializer/random_uniform/mul"
  input: "ssd300/multibox_head/cls_1/kernel/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/multibox_head/cls_1/kernel"
      }
    }
  }
}
node {
  name: "ssd300/multibox_head/cls_1/kernel"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/multibox_head/cls_1/kernel"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 3
        }
        dim {
          size: 3
        }
        dim {
          size: 128
        }
        dim {
          size: 8
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "ssd300/multibox_head/cls_1/kernel/Assign"
  op: "Assign"
  input: "ssd300/multibox_head/cls_1/kernel"
  input: "ssd300/multibox_head/cls_1/kernel/Initializer/random_uniform"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/multibox_head/cls_1/kernel"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "ssd300/multibox_head/cls_1/kernel/read"
  op: "Identity"
  input: "ssd300/multibox_head/cls_1/kernel"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/multibox_head/cls_1/kernel"
      }
    }
  }
}
node {
  name: "ssd300/multibox_head/cls_1/bias/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/multibox_head/cls_1/bias"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 8
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "ssd300/multibox_head/cls_1/bias"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/multibox_head/cls_1/bias"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 8
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "ssd300/multibox_head/cls_1/bias/Assign"
  op: "Assign"
  input: "ssd300/multibox_head/cls_1/bias"
  input: "ssd300/multibox_head/cls_1/bias/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/multibox_head/cls_1/bias"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "ssd300/multibox_head/cls_1/bias/read"
  op: "Identity"
  input: "ssd300/multibox_head/cls_1/bias"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/multibox_head/cls_1/bias"
      }
    }
  }
}
node {
  name: "ssd300/multibox_head/cls_1/dilation_rate"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "ssd300/multibox_head/cls_1/Conv2D"
  op: "Conv2D"
  input: "ssd300/layer_19_2_Conv2d_5_3x3_s2_128/Relu6"
  input: "ssd300/multibox_head/cls_1/kernel/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NCHW"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "explicit_paddings"
    value {
      list {
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "ssd300/multibox_head/cls_1/BiasAdd"
  op: "BiasAdd"
  input: "ssd300/multibox_head/cls_1/Conv2D"
  input: "ssd300/multibox_head/cls_1/bias/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NCHW"
    }
  }
}
node {
  name: "ssd300/transpose/perm"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\000\000\000\000\002\000\000\000\003\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "ssd300/transpose"
  op: "Transpose"
  input: "ssd300/multibox_head/cls_0/BiasAdd"
  input: "ssd300/transpose/perm"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tperm"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "ssd300/transpose_1/perm"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\000\000\000\000\002\000\000\000\003\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "ssd300/transpose_1"
  op: "Transpose"
  input: "ssd300/multibox_head/cls_1/BiasAdd"
  input: "ssd300/transpose_1/perm"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tperm"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "ssd300/transpose_2/perm"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\000\000\000\000\002\000\000\000\003\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "ssd300/transpose_2"
  op: "Transpose"
  input: "ssd300/multibox_head/loc_0/BiasAdd"
  input: "ssd300/transpose_2/perm"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tperm"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "ssd300/transpose_3/perm"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\000\000\000\000\002\000\000\000\003\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "ssd300/transpose_3"
  op: "Transpose"
  input: "ssd300/multibox_head/loc_1/BiasAdd"
  input: "ssd300/transpose_3/perm"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tperm"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "ssd300/cls_0/shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\001\000\000\000\377\377\377\377\002\000\000\000"
      }
    }
  }
}
node {
  name: "ssd300/cls_0"
  op: "Reshape"
  input: "ssd300/transpose"
  input: "ssd300/cls_0/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "ssd300/cls_1/shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\001\000\000\000\377\377\377\377\002\000\000\000"
      }
    }
  }
}
node {
  name: "ssd300/cls_1"
  op: "Reshape"
  input: "ssd300/transpose_1"
  input: "ssd300/cls_1/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "ssd300/loc_0/shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\001\000\000\000\377\377\377\377\004\000\000\000"
      }
    }
  }
}
node {
  name: "ssd300/loc_0"
  op: "Reshape"
  input: "ssd300/transpose_2"
  input: "ssd300/loc_0/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "ssd300/loc_1/shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\001\000\000\000\377\377\377\377\004\000\000\000"
      }
    }
  }
}
node {
  name: "ssd300/loc_1"
  op: "Reshape"
  input: "ssd300/transpose_3"
  input: "ssd300/loc_1/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "ssd300/concat/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "ssd300/concat"
  op: "ConcatV2"
  input: "ssd300/cls_0"
  input: "ssd300/cls_1"
  input: "ssd300/concat/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "ssd300/concat_1/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "ssd300/concat_1"
  op: "ConcatV2"
  input: "ssd300/loc_0"
  input: "ssd300/loc_1"
  input: "ssd300/concat_1/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "Shape"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\001\000\000\000\250\005\000\000\004\000\000\000"
      }
    }
  }
}
node {
  name: "strided_slice/stack"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "strided_slice/stack_1"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "strided_slice/stack_2"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "strided_slice"
  op: "StridedSlice"
  input: "Shape"
  input: "strided_slice/stack"
  input: "strided_slice/stack_1"
  input: "strided_slice/stack_2"
  device: "/device:CPU:0"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 1
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 0
    }
  }
}
node {
  name: "Reshape"
  op: "Reshape"
  input: "ssd300/concat_1"
  input: "strided_slice"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "Shape_1"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\001\000\000\000\250\005\000\000\002\000\000\000"
      }
    }
  }
}
node {
  name: "strided_slice_1/stack"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "strided_slice_1/stack_1"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "strided_slice_1/stack_2"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "strided_slice_1"
  op: "StridedSlice"
  input: "Shape_1"
  input: "strided_slice_1/stack"
  input: "strided_slice_1/stack_1"
  input: "strided_slice_1/stack_2"
  device: "/device:CPU:0"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 1
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 0
    }
  }
}
node {
  name: "Reshape_1"
  op: "Reshape"
  input: "ssd300/concat"
  input: "strided_slice_1"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "ext_decode_all_anchors_1/truediv/y"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 2.0
      }
    }
  }
}
node {
  name: "ext_decode_all_anchors_1/truediv"
  op: "RealDiv"
  input: "get_layer_anchors/Const"
  input: "ext_decode_all_anchors_1/truediv/y"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ext_decode_all_anchors_1/sub"
  op: "Sub"
  input: "get_layer_anchors/ExpandDims"
  input: "ext_decode_all_anchors_1/truediv"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ext_decode_all_anchors_1/truediv_1/y"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 2.0
      }
    }
  }
}
node {
  name: "ext_decode_all_anchors_1/truediv_1"
  op: "RealDiv"
  input: "get_layer_anchors/Const_1"
  input: "ext_decode_all_anchors_1/truediv_1/y"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ext_decode_all_anchors_1/sub_1"
  op: "Sub"
  input: "get_layer_anchors/ExpandDims_1"
  input: "ext_decode_all_anchors_1/truediv_1"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ext_decode_all_anchors_1/truediv_2/y"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 2.0
      }
    }
  }
}
node {
  name: "ext_decode_all_anchors_1/truediv_2"
  op: "RealDiv"
  input: "get_layer_anchors/Const"
  input: "ext_decode_all_anchors_1/truediv_2/y"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ext_decode_all_anchors_1/add"
  op: "AddV2"
  input: "get_layer_anchors/ExpandDims"
  input: "ext_decode_all_anchors_1/truediv_2"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ext_decode_all_anchors_1/truediv_3/y"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 2.0
      }
    }
  }
}
node {
  name: "ext_decode_all_anchors_1/truediv_3"
  op: "RealDiv"
  input: "get_layer_anchors/Const_1"
  input: "ext_decode_all_anchors_1/truediv_3/y"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ext_decode_all_anchors_1/add_1"
  op: "AddV2"
  input: "get_layer_anchors/ExpandDims_1"
  input: "ext_decode_all_anchors_1/truediv_3"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ext_decode_all_anchors_1/Reshape/shape"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "ext_decode_all_anchors_1/Reshape"
  op: "Reshape"
  input: "ext_decode_all_anchors_1/sub"
  input: "ext_decode_all_anchors_1/Reshape/shape"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "ext_decode_all_anchors_1/Reshape_1/shape"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "ext_decode_all_anchors_1/Reshape_1"
  op: "Reshape"
  input: "ext_decode_all_anchors_1/sub_1"
  input: "ext_decode_all_anchors_1/Reshape_1/shape"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "ext_decode_all_anchors_1/Reshape_2/shape"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "ext_decode_all_anchors_1/Reshape_2"
  op: "Reshape"
  input: "ext_decode_all_anchors_1/add"
  input: "ext_decode_all_anchors_1/Reshape_2/shape"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "ext_decode_all_anchors_1/Reshape_3/shape"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "ext_decode_all_anchors_1/Reshape_3"
  op: "Reshape"
  input: "ext_decode_all_anchors_1/add_1"
  input: "ext_decode_all_anchors_1/Reshape_3/shape"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "ext_decode_all_anchors_1/truediv_4/y"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 2.0
      }
    }
  }
}
node {
  name: "ext_decode_all_anchors_1/truediv_4"
  op: "RealDiv"
  input: "get_layer_anchors_1/Const"
  input: "ext_decode_all_anchors_1/truediv_4/y"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ext_decode_all_anchors_1/sub_2"
  op: "Sub"
  input: "get_layer_anchors_1/ExpandDims"
  input: "ext_decode_all_anchors_1/truediv_4"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ext_decode_all_anchors_1/truediv_5/y"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 2.0
      }
    }
  }
}
node {
  name: "ext_decode_all_anchors_1/truediv_5"
  op: "RealDiv"
  input: "get_layer_anchors_1/Const_1"
  input: "ext_decode_all_anchors_1/truediv_5/y"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ext_decode_all_anchors_1/sub_3"
  op: "Sub"
  input: "get_layer_anchors_1/ExpandDims_1"
  input: "ext_decode_all_anchors_1/truediv_5"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ext_decode_all_anchors_1/truediv_6/y"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 2.0
      }
    }
  }
}
node {
  name: "ext_decode_all_anchors_1/truediv_6"
  op: "RealDiv"
  input: "get_layer_anchors_1/Const"
  input: "ext_decode_all_anchors_1/truediv_6/y"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ext_decode_all_anchors_1/add_2"
  op: "AddV2"
  input: "get_layer_anchors_1/ExpandDims"
  input: "ext_decode_all_anchors_1/truediv_6"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ext_decode_all_anchors_1/truediv_7/y"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 2.0
      }
    }
  }
}
node {
  name: "ext_decode_all_anchors_1/truediv_7"
  op: "RealDiv"
  input: "get_layer_anchors_1/Const_1"
  input: "ext_decode_all_anchors_1/truediv_7/y"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ext_decode_all_anchors_1/add_3"
  op: "AddV2"
  input: "get_layer_anchors_1/ExpandDims_1"
  input: "ext_decode_all_anchors_1/truediv_7"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ext_decode_all_anchors_1/Reshape_4/shape"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "ext_decode_all_anchors_1/Reshape_4"
  op: "Reshape"
  input: "ext_decode_all_anchors_1/sub_2"
  input: "ext_decode_all_anchors_1/Reshape_4/shape"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "ext_decode_all_anchors_1/Reshape_5/shape"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "ext_decode_all_anchors_1/Reshape_5"
  op: "Reshape"
  input: "ext_decode_all_anchors_1/sub_3"
  input: "ext_decode_all_anchors_1/Reshape_5/shape"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "ext_decode_all_anchors_1/Reshape_6/shape"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "ext_decode_all_anchors_1/Reshape_6"
  op: "Reshape"
  input: "ext_decode_all_anchors_1/add_2"
  input: "ext_decode_all_anchors_1/Reshape_6/shape"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "ext_decode_all_anchors_1/Reshape_7/shape"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "ext_decode_all_anchors_1/Reshape_7"
  op: "Reshape"
  input: "ext_decode_all_anchors_1/add_3"
  input: "ext_decode_all_anchors_1/Reshape_7/shape"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "ext_decode_all_anchors_1/concat_ymin/axis"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "ext_decode_all_anchors_1/concat_ymin"
  op: "ConcatV2"
  input: "ext_decode_all_anchors_1/Reshape"
  input: "ext_decode_all_anchors_1/Reshape_4"
  input: "ext_decode_all_anchors_1/concat_ymin/axis"
  device: "/device:CPU:0"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "ext_decode_all_anchors_1/concat_xmin/axis"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "ext_decode_all_anchors_1/concat_xmin"
  op: "ConcatV2"
  input: "ext_decode_all_anchors_1/Reshape_1"
  input: "ext_decode_all_anchors_1/Reshape_5"
  input: "ext_decode_all_anchors_1/concat_xmin/axis"
  device: "/device:CPU:0"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "ext_decode_all_anchors_1/concat_ymax/axis"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "ext_decode_all_anchors_1/concat_ymax"
  op: "ConcatV2"
  input: "ext_decode_all_anchors_1/Reshape_2"
  input: "ext_decode_all_anchors_1/Reshape_6"
  input: "ext_decode_all_anchors_1/concat_ymax/axis"
  device: "/device:CPU:0"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "ext_decode_all_anchors_1/concat_xmax/axis"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "ext_decode_all_anchors_1/concat_xmax"
  op: "ConcatV2"
  input: "ext_decode_all_anchors_1/Reshape_3"
  input: "ext_decode_all_anchors_1/Reshape_7"
  input: "ext_decode_all_anchors_1/concat_xmax/axis"
  device: "/device:CPU:0"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "ext_decode_all_anchors_1/sub_4"
  op: "Sub"
  input: "ext_decode_all_anchors_1/concat_ymax"
  input: "ext_decode_all_anchors_1/concat_ymin"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ext_decode_all_anchors_1/sub_5"
  op: "Sub"
  input: "ext_decode_all_anchors_1/concat_xmax"
  input: "ext_decode_all_anchors_1/concat_xmin"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ext_decode_all_anchors_1/truediv_8/y"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 2.0
      }
    }
  }
}
node {
  name: "ext_decode_all_anchors_1/truediv_8"
  op: "RealDiv"
  input: "ext_decode_all_anchors_1/sub_4"
  input: "ext_decode_all_anchors_1/truediv_8/y"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ext_decode_all_anchors_1/add_4"
  op: "AddV2"
  input: "ext_decode_all_anchors_1/concat_ymin"
  input: "ext_decode_all_anchors_1/truediv_8"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ext_decode_all_anchors_1/truediv_9/y"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 2.0
      }
    }
  }
}
node {
  name: "ext_decode_all_anchors_1/truediv_9"
  op: "RealDiv"
  input: "ext_decode_all_anchors_1/sub_5"
  input: "ext_decode_all_anchors_1/truediv_9/y"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ext_decode_all_anchors_1/add_5"
  op: "AddV2"
  input: "ext_decode_all_anchors_1/concat_xmin"
  input: "ext_decode_all_anchors_1/truediv_9"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ext_decode_all_anchors_1/strided_slice/stack"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\000\000\000\376\377\377\377"
      }
    }
  }
}
node {
  name: "ext_decode_all_anchors_1/strided_slice/stack_1"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\000\000\000\377\377\377\377"
      }
    }
  }
}
node {
  name: "ext_decode_all_anchors_1/strided_slice/stack_2"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "ext_decode_all_anchors_1/strided_slice"
  op: "StridedSlice"
  input: "Reshape"
  input: "ext_decode_all_anchors_1/strided_slice/stack"
  input: "ext_decode_all_anchors_1/strided_slice/stack_1"
  input: "ext_decode_all_anchors_1/strided_slice/stack_2"
  device: "/device:CPU:0"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 1
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 1
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 2
    }
  }
}
node {
  name: "ext_decode_all_anchors_1/mul/y"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.20000000298023224
      }
    }
  }
}
node {
  name: "ext_decode_all_anchors_1/mul"
  op: "Mul"
  input: "ext_decode_all_anchors_1/strided_slice"
  input: "ext_decode_all_anchors_1/mul/y"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ext_decode_all_anchors_1/Exp"
  op: "Exp"
  input: "ext_decode_all_anchors_1/mul"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ext_decode_all_anchors_1/mul_1"
  op: "Mul"
  input: "ext_decode_all_anchors_1/Exp"
  input: "ext_decode_all_anchors_1/sub_4"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ext_decode_all_anchors_1/strided_slice_1/stack"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\000\000\000\377\377\377\377"
      }
    }
  }
}
node {
  name: "ext_decode_all_anchors_1/strided_slice_1/stack_1"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\000\000\000\000\000\000\000"
      }
    }
  }
}
node {
  name: "ext_decode_all_anchors_1/strided_slice_1/stack_2"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "ext_decode_all_anchors_1/strided_slice_1"
  op: "StridedSlice"
  input: "Reshape"
  input: "ext_decode_all_anchors_1/strided_slice_1/stack"
  input: "ext_decode_all_anchors_1/strided_slice_1/stack_1"
  input: "ext_decode_all_anchors_1/strided_slice_1/stack_2"
  device: "/device:CPU:0"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 1
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 1
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 2
    }
  }
}
node {
  name: "ext_decode_all_anchors_1/mul_2/y"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.20000000298023224
      }
    }
  }
}
node {
  name: "ext_decode_all_anchors_1/mul_2"
  op: "Mul"
  input: "ext_decode_all_anchors_1/strided_slice_1"
  input: "ext_decode_all_anchors_1/mul_2/y"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ext_decode_all_anchors_1/Exp_1"
  op: "Exp"
  input: "ext_decode_all_anchors_1/mul_2"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ext_decode_all_anchors_1/mul_3"
  op: "Mul"
  input: "ext_decode_all_anchors_1/Exp_1"
  input: "ext_decode_all_anchors_1/sub_5"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ext_decode_all_anchors_1/strided_slice_2/stack"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\000\000\000\000\000\000\000"
      }
    }
  }
}
node {
  name: "ext_decode_all_anchors_1/strided_slice_2/stack_1"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "ext_decode_all_anchors_1/strided_slice_2/stack_2"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "ext_decode_all_anchors_1/strided_slice_2"
  op: "StridedSlice"
  input: "Reshape"
  input: "ext_decode_all_anchors_1/strided_slice_2/stack"
  input: "ext_decode_all_anchors_1/strided_slice_2/stack_1"
  input: "ext_decode_all_anchors_1/strided_slice_2/stack_2"
  device: "/device:CPU:0"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 1
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 1
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 2
    }
  }
}
node {
  name: "ext_decode_all_anchors_1/mul_4/y"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.10000000149011612
      }
    }
  }
}
node {
  name: "ext_decode_all_anchors_1/mul_4"
  op: "Mul"
  input: "ext_decode_all_anchors_1/strided_slice_2"
  input: "ext_decode_all_anchors_1/mul_4/y"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ext_decode_all_anchors_1/mul_5"
  op: "Mul"
  input: "ext_decode_all_anchors_1/mul_4"
  input: "ext_decode_all_anchors_1/sub_4"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ext_decode_all_anchors_1/add_6"
  op: "AddV2"
  input: "ext_decode_all_anchors_1/mul_5"
  input: "ext_decode_all_anchors_1/add_4"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ext_decode_all_anchors_1/strided_slice_3/stack"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "ext_decode_all_anchors_1/strided_slice_3/stack_1"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\000\000\000\002\000\000\000"
      }
    }
  }
}
node {
  name: "ext_decode_all_anchors_1/strided_slice_3/stack_2"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "ext_decode_all_anchors_1/strided_slice_3"
  op: "StridedSlice"
  input: "Reshape"
  input: "ext_decode_all_anchors_1/strided_slice_3/stack"
  input: "ext_decode_all_anchors_1/strided_slice_3/stack_1"
  input: "ext_decode_all_anchors_1/strided_slice_3/stack_2"
  device: "/device:CPU:0"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 1
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 1
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 2
    }
  }
}
node {
  name: "ext_decode_all_anchors_1/mul_6/y"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.10000000149011612
      }
    }
  }
}
node {
  name: "ext_decode_all_anchors_1/mul_6"
  op: "Mul"
  input: "ext_decode_all_anchors_1/strided_slice_3"
  input: "ext_decode_all_anchors_1/mul_6/y"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ext_decode_all_anchors_1/mul_7"
  op: "Mul"
  input: "ext_decode_all_anchors_1/mul_6"
  input: "ext_decode_all_anchors_1/sub_5"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ext_decode_all_anchors_1/add_7"
  op: "AddV2"
  input: "ext_decode_all_anchors_1/mul_7"
  input: "ext_decode_all_anchors_1/add_5"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ext_decode_all_anchors_1/truediv_10/y"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 2.0
      }
    }
  }
}
node {
  name: "ext_decode_all_anchors_1/truediv_10"
  op: "RealDiv"
  input: "ext_decode_all_anchors_1/mul_1"
  input: "ext_decode_all_anchors_1/truediv_10/y"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ext_decode_all_anchors_1/sub_6"
  op: "Sub"
  input: "ext_decode_all_anchors_1/add_6"
  input: "ext_decode_all_anchors_1/truediv_10"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ext_decode_all_anchors_1/truediv_11/y"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 2.0
      }
    }
  }
}
node {
  name: "ext_decode_all_anchors_1/truediv_11"
  op: "RealDiv"
  input: "ext_decode_all_anchors_1/mul_3"
  input: "ext_decode_all_anchors_1/truediv_11/y"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ext_decode_all_anchors_1/sub_7"
  op: "Sub"
  input: "ext_decode_all_anchors_1/add_7"
  input: "ext_decode_all_anchors_1/truediv_11"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ext_decode_all_anchors_1/truediv_12/y"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 2.0
      }
    }
  }
}
node {
  name: "ext_decode_all_anchors_1/truediv_12"
  op: "RealDiv"
  input: "ext_decode_all_anchors_1/mul_1"
  input: "ext_decode_all_anchors_1/truediv_12/y"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ext_decode_all_anchors_1/add_8"
  op: "AddV2"
  input: "ext_decode_all_anchors_1/add_6"
  input: "ext_decode_all_anchors_1/truediv_12"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ext_decode_all_anchors_1/truediv_13/y"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 2.0
      }
    }
  }
}
node {
  name: "ext_decode_all_anchors_1/truediv_13"
  op: "RealDiv"
  input: "ext_decode_all_anchors_1/mul_3"
  input: "ext_decode_all_anchors_1/truediv_13/y"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ext_decode_all_anchors_1/add_9"
  op: "AddV2"
  input: "ext_decode_all_anchors_1/add_7"
  input: "ext_decode_all_anchors_1/truediv_13"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ext_decode_all_anchors_1/stack"
  op: "Pack"
  input: "ext_decode_all_anchors_1/sub_6"
  input: "ext_decode_all_anchors_1/sub_7"
  input: "ext_decode_all_anchors_1/add_8"
  input: "ext_decode_all_anchors_1/add_9"
  device: "/device:CPU:0"
  attr {
    key: "N"
    value {
      i: 4
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "axis"
    value {
      i: -1
    }
  }
}
node {
  name: "ext_decode_all_anchors_1/Const"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\244\005\000\000\004\000\000\000"
      }
    }
  }
}
node {
  name: "ext_decode_all_anchors_1/split/split_dim"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "ext_decode_all_anchors_1/split"
  op: "SplitV"
  input: "ext_decode_all_anchors_1/stack"
  input: "ext_decode_all_anchors_1/Const"
  input: "ext_decode_all_anchors_1/split/split_dim"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tlen"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "num_split"
    value {
      i: 2
    }
  }
}
node {
  name: "concat/axis"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "concat"
  op: "ConcatV2"
  input: "ext_decode_all_anchors_1/split"
  input: "ext_decode_all_anchors_1/split:1"
  input: "concat/axis"
  device: "/device:CPU:0"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "select_bboxes/Softmax"
  op: "Softmax"
  input: "Reshape_1"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "select_bboxes/select_bboxes/strided_slice/stack"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "select_bboxes/select_bboxes/strided_slice/stack_1"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\000\000\000\002\000\000\000"
      }
    }
  }
}
node {
  name: "select_bboxes/select_bboxes/strided_slice/stack_2"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "select_bboxes/select_bboxes/strided_slice"
  op: "StridedSlice"
  input: "select_bboxes/Softmax"
  input: "select_bboxes/select_bboxes/strided_slice/stack"
  input: "select_bboxes/select_bboxes/strided_slice/stack_1"
  input: "select_bboxes/select_bboxes/strided_slice/stack_2"
  device: "/device:CPU:0"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 1
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 1
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 2
    }
  }
}
node {
  name: "select_bboxes/select_bboxes/Greater/y"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.20000000298023224
      }
    }
  }
}
node {
  name: "select_bboxes/select_bboxes/Greater"
  op: "Greater"
  input: "select_bboxes/select_bboxes/strided_slice"
  input: "select_bboxes/select_bboxes/Greater/y"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "select_bboxes/select_bboxes/ones_like/Shape"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1448
      }
    }
  }
}
node {
  name: "select_bboxes/select_bboxes/ones_like/Const"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "select_bboxes/select_bboxes/ones_like"
  op: "Fill"
  input: "select_bboxes/select_bboxes/ones_like/Shape"
  input: "select_bboxes/select_bboxes/ones_like/Const"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "select_bboxes/select_bboxes/zeros_like/shape_as_tensor"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1448
      }
    }
  }
}
node {
  name: "select_bboxes/select_bboxes/zeros_like/Const"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "select_bboxes/select_bboxes/zeros_like"
  op: "Fill"
  input: "select_bboxes/select_bboxes/zeros_like/shape_as_tensor"
  input: "select_bboxes/select_bboxes/zeros_like/Const"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "select_bboxes/select_bboxes/Select"
  op: "Select"
  input: "select_bboxes/select_bboxes/Greater"
  input: "select_bboxes/select_bboxes/ones_like"
  input: "select_bboxes/select_bboxes/zeros_like"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "select_bboxes/select_bboxes/ExpandDims/dim"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "select_bboxes/select_bboxes/ExpandDims"
  op: "ExpandDims"
  input: "select_bboxes/select_bboxes/Select"
  input: "select_bboxes/select_bboxes/ExpandDims/dim"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tdim"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "select_bboxes/select_bboxes/Mul"
  op: "Mul"
  input: "concat"
  input: "select_bboxes/select_bboxes/ExpandDims"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "select_bboxes/select_bboxes/Mul_1"
  op: "Mul"
  input: "select_bboxes/select_bboxes/strided_slice"
  input: "select_bboxes/select_bboxes/Select"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "select_bboxes/unstack"
  op: "Unpack"
  input: "select_bboxes/select_bboxes/Mul"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "axis"
    value {
      i: -1
    }
  }
  attr {
    key: "num"
    value {
      i: 4
    }
  }
}
node {
  name: "select_bboxes/clip_bboxes_1/Maximum/y"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "select_bboxes/clip_bboxes_1/Maximum"
  op: "Maximum"
  input: "select_bboxes/unstack"
  input: "select_bboxes/clip_bboxes_1/Maximum/y"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "select_bboxes/clip_bboxes_1/Maximum_1/y"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "select_bboxes/clip_bboxes_1/Maximum_1"
  op: "Maximum"
  input: "select_bboxes/unstack:1"
  input: "select_bboxes/clip_bboxes_1/Maximum_1/y"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "select_bboxes/clip_bboxes_1/Minimum/y"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "select_bboxes/clip_bboxes_1/Minimum"
  op: "Minimum"
  input: "select_bboxes/unstack:2"
  input: "select_bboxes/clip_bboxes_1/Minimum/y"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "select_bboxes/clip_bboxes_1/Minimum_1/y"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "select_bboxes/clip_bboxes_1/Minimum_1"
  op: "Minimum"
  input: "select_bboxes/unstack:3"
  input: "select_bboxes/clip_bboxes_1/Minimum_1/y"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "select_bboxes/clip_bboxes_1/Minimum_2"
  op: "Minimum"
  input: "select_bboxes/clip_bboxes_1/Maximum"
  input: "select_bboxes/clip_bboxes_1/Minimum"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "select_bboxes/clip_bboxes_1/Minimum_3"
  op: "Minimum"
  input: "select_bboxes/clip_bboxes_1/Maximum_1"
  input: "select_bboxes/clip_bboxes_1/Minimum_1"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "select_bboxes/filter_bboxes_1/sub"
  op: "Sub"
  input: "select_bboxes/clip_bboxes_1/Minimum_1"
  input: "select_bboxes/clip_bboxes_1/Minimum_3"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "select_bboxes/filter_bboxes_1/sub_1"
  op: "Sub"
  input: "select_bboxes/clip_bboxes_1/Minimum"
  input: "select_bboxes/clip_bboxes_1/Minimum_2"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "select_bboxes/filter_bboxes_1/Greater/y"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.10000000149011612
      }
    }
  }
}
node {
  name: "select_bboxes/filter_bboxes_1/Greater"
  op: "Greater"
  input: "select_bboxes/filter_bboxes_1/sub"
  input: "select_bboxes/filter_bboxes_1/Greater/y"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "select_bboxes/filter_bboxes_1/Greater_1/y"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.10000000149011612
      }
    }
  }
}
node {
  name: "select_bboxes/filter_bboxes_1/Greater_1"
  op: "Greater"
  input: "select_bboxes/filter_bboxes_1/sub_1"
  input: "select_bboxes/filter_bboxes_1/Greater_1/y"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "select_bboxes/filter_bboxes_1/LogicalAnd"
  op: "LogicalAnd"
  input: "select_bboxes/filter_bboxes_1/Greater"
  input: "select_bboxes/filter_bboxes_1/Greater_1"
  device: "/device:CPU:0"
}
node {
  name: "select_bboxes/filter_bboxes_1/Cast"
  op: "Cast"
  input: "select_bboxes/filter_bboxes_1/LogicalAnd"
  device: "/device:CPU:0"
  attr {
    key: "DstT"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "SrcT"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "Truncate"
    value {
      b: false
    }
  }
}
node {
  name: "select_bboxes/filter_bboxes_1/Mul"
  op: "Mul"
  input: "select_bboxes/clip_bboxes_1/Minimum_2"
  input: "select_bboxes/filter_bboxes_1/Cast"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "select_bboxes/filter_bboxes_1/Mul_1"
  op: "Mul"
  input: "select_bboxes/clip_bboxes_1/Minimum_3"
  input: "select_bboxes/filter_bboxes_1/Cast"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "select_bboxes/filter_bboxes_1/Mul_2"
  op: "Mul"
  input: "select_bboxes/clip_bboxes_1/Minimum"
  input: "select_bboxes/filter_bboxes_1/Cast"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "select_bboxes/filter_bboxes_1/Mul_3"
  op: "Mul"
  input: "select_bboxes/clip_bboxes_1/Minimum_1"
  input: "select_bboxes/filter_bboxes_1/Cast"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "select_bboxes/filter_bboxes_1/Mul_4"
  op: "Mul"
  input: "select_bboxes/select_bboxes/Mul_1"
  input: "select_bboxes/filter_bboxes_1/Cast"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "select_bboxes/sort_bboxes_1/Shape"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1448
      }
    }
  }
}
node {
  name: "select_bboxes/sort_bboxes_1/strided_slice/stack"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "select_bboxes/sort_bboxes_1/strided_slice/stack_1"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "select_bboxes/sort_bboxes_1/strided_slice/stack_2"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "select_bboxes/sort_bboxes_1/strided_slice"
  op: "StridedSlice"
  input: "select_bboxes/sort_bboxes_1/Shape"
  input: "select_bboxes/sort_bboxes_1/strided_slice/stack"
  input: "select_bboxes/sort_bboxes_1/strided_slice/stack_1"
  input: "select_bboxes/sort_bboxes_1/strided_slice/stack_2"
  device: "/device:CPU:0"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "select_bboxes/sort_bboxes_1/Minimum/x"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 200
      }
    }
  }
}
node {
  name: "select_bboxes/sort_bboxes_1/Minimum"
  op: "Minimum"
  input: "select_bboxes/sort_bboxes_1/Minimum/x"
  input: "select_bboxes/sort_bboxes_1/strided_slice"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "select_bboxes/sort_bboxes_1/TopKV2"
  op: "TopKV2"
  input: "select_bboxes/filter_bboxes_1/Mul_4"
  input: "select_bboxes/sort_bboxes_1/Minimum"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "sorted"
    value {
      b: true
    }
  }
}
node {
  name: "select_bboxes/sort_bboxes_1/GatherV2/axis"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "select_bboxes/sort_bboxes_1/GatherV2"
  op: "GatherV2"
  input: "select_bboxes/filter_bboxes_1/Mul"
  input: "select_bboxes/sort_bboxes_1/TopKV2:1"
  input: "select_bboxes/sort_bboxes_1/GatherV2/axis"
  device: "/device:CPU:0"
  attr {
    key: "Taxis"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tindices"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tparams"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "batch_dims"
    value {
      i: 0
    }
  }
}
node {
  name: "select_bboxes/sort_bboxes_1/GatherV2_1/axis"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "select_bboxes/sort_bboxes_1/GatherV2_1"
  op: "GatherV2"
  input: "select_bboxes/filter_bboxes_1/Mul_1"
  input: "select_bboxes/sort_bboxes_1/TopKV2:1"
  input: "select_bboxes/sort_bboxes_1/GatherV2_1/axis"
  device: "/device:CPU:0"
  attr {
    key: "Taxis"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tindices"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tparams"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "batch_dims"
    value {
      i: 0
    }
  }
}
node {
  name: "select_bboxes/sort_bboxes_1/GatherV2_2/axis"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "select_bboxes/sort_bboxes_1/GatherV2_2"
  op: "GatherV2"
  input: "select_bboxes/filter_bboxes_1/Mul_2"
  input: "select_bboxes/sort_bboxes_1/TopKV2:1"
  input: "select_bboxes/sort_bboxes_1/GatherV2_2/axis"
  device: "/device:CPU:0"
  attr {
    key: "Taxis"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tindices"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tparams"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "batch_dims"
    value {
      i: 0
    }
  }
}
node {
  name: "select_bboxes/sort_bboxes_1/GatherV2_3/axis"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "select_bboxes/sort_bboxes_1/GatherV2_3"
  op: "GatherV2"
  input: "select_bboxes/filter_bboxes_1/Mul_3"
  input: "select_bboxes/sort_bboxes_1/TopKV2:1"
  input: "select_bboxes/sort_bboxes_1/GatherV2_3/axis"
  device: "/device:CPU:0"
  attr {
    key: "Taxis"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tindices"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tparams"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "batch_dims"
    value {
      i: 0
    }
  }
}
node {
  name: "select_bboxes/sort_bboxes_1/sub/x"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 200
      }
    }
  }
}
node {
  name: "select_bboxes/sort_bboxes_1/sub"
  op: "Sub"
  input: "select_bboxes/sort_bboxes_1/sub/x"
  input: "select_bboxes/sort_bboxes_1/strided_slice"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "select_bboxes/sort_bboxes_1/Maximum/y"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "select_bboxes/sort_bboxes_1/Maximum"
  op: "Maximum"
  input: "select_bboxes/sort_bboxes_1/sub"
  input: "select_bboxes/sort_bboxes_1/Maximum/y"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "select_bboxes/sort_bboxes_1/stack/0"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "select_bboxes/sort_bboxes_1/stack"
  op: "Pack"
  input: "select_bboxes/sort_bboxes_1/stack/0"
  input: "select_bboxes/sort_bboxes_1/Maximum"
  device: "/device:CPU:0"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "select_bboxes/sort_bboxes_1/ExpandDims/dim"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "select_bboxes/sort_bboxes_1/ExpandDims"
  op: "ExpandDims"
  input: "select_bboxes/sort_bboxes_1/stack"
  input: "select_bboxes/sort_bboxes_1/ExpandDims/dim"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tdim"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "select_bboxes/sort_bboxes_1/Pad"
  op: "Pad"
  input: "select_bboxes/sort_bboxes_1/GatherV2"
  input: "select_bboxes/sort_bboxes_1/ExpandDims"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tpaddings"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "select_bboxes/sort_bboxes_1/Pad_1"
  op: "Pad"
  input: "select_bboxes/sort_bboxes_1/GatherV2_1"
  input: "select_bboxes/sort_bboxes_1/ExpandDims"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tpaddings"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "select_bboxes/sort_bboxes_1/Pad_2"
  op: "Pad"
  input: "select_bboxes/sort_bboxes_1/GatherV2_2"
  input: "select_bboxes/sort_bboxes_1/ExpandDims"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tpaddings"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "select_bboxes/sort_bboxes_1/Pad_3"
  op: "Pad"
  input: "select_bboxes/sort_bboxes_1/GatherV2_3"
  input: "select_bboxes/sort_bboxes_1/ExpandDims"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tpaddings"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "select_bboxes/sort_bboxes_1/Pad_4"
  op: "Pad"
  input: "select_bboxes/sort_bboxes_1/TopKV2"
  input: "select_bboxes/sort_bboxes_1/ExpandDims"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tpaddings"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "select_bboxes/stack"
  op: "Pack"
  input: "select_bboxes/sort_bboxes_1/Pad"
  input: "select_bboxes/sort_bboxes_1/Pad_1"
  input: "select_bboxes/sort_bboxes_1/Pad_2"
  input: "select_bboxes/sort_bboxes_1/Pad_3"
  device: "/device:CPU:0"
  attr {
    key: "N"
    value {
      i: 4
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "axis"
    value {
      i: -1
    }
  }
}
node {
  name: "select_bboxes/nms_bboxes_1/non_max_suppression/iou_threshold"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.44999998807907104
      }
    }
  }
}
node {
  name: "select_bboxes/nms_bboxes_1/non_max_suppression/score_threshold"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: -inf
      }
    }
  }
}
node {
  name: "select_bboxes/nms_bboxes_1/non_max_suppression/NonMaxSuppressionV3/max_output_size"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 20
      }
    }
  }
}
node {
  name: "select_bboxes/nms_bboxes_1/non_max_suppression/NonMaxSuppressionV3"
  op: "NonMaxSuppressionV3"
  input: "select_bboxes/stack"
  input: "select_bboxes/sort_bboxes_1/Pad_4"
  input: "select_bboxes/nms_bboxes_1/non_max_suppression/NonMaxSuppressionV3/max_output_size"
  input: "select_bboxes/nms_bboxes_1/non_max_suppression/iou_threshold"
  input: "select_bboxes/nms_bboxes_1/non_max_suppression/score_threshold"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "T_threshold"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "select_bboxes/nms_bboxes_1/GatherV2/axis"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "select_bboxes/nms_bboxes_1/GatherV2"
  op: "GatherV2"
  input: "select_bboxes/sort_bboxes_1/Pad_4"
  input: "select_bboxes/nms_bboxes_1/non_max_suppression/NonMaxSuppressionV3"
  input: "select_bboxes/nms_bboxes_1/GatherV2/axis"
  device: "/device:CPU:0"
  attr {
    key: "Taxis"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tindices"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tparams"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "batch_dims"
    value {
      i: 0
    }
  }
}
node {
  name: "select_bboxes/nms_bboxes_1/GatherV2_1/axis"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "select_bboxes/nms_bboxes_1/GatherV2_1"
  op: "GatherV2"
  input: "select_bboxes/stack"
  input: "select_bboxes/nms_bboxes_1/non_max_suppression/NonMaxSuppressionV3"
  input: "select_bboxes/nms_bboxes_1/GatherV2_1/axis"
  device: "/device:CPU:0"
  attr {
    key: "Taxis"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tindices"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tparams"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "batch_dims"
    value {
      i: 0
    }
  }
}
node {
  name: "ones_like/Shape"
  op: "Shape"
  input: "select_bboxes/nms_bboxes_1/GatherV2"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "ones_like/Const"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "ones_like"
  op: "Fill"
  input: "ones_like/Shape"
  input: "ones_like/Const"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "mul/y"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "mul"
  op: "Mul"
  input: "ones_like"
  input: "mul/y"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "concat_1/concat_dim"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "concat_1/concat"
  op: "Identity"
  input: "mul"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "concat_2/concat_dim"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "concat_2/concat"
  op: "Identity"
  input: "select_bboxes/nms_bboxes_1/GatherV2"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "concat_3/concat_dim"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "concat_3/concat"
  op: "Identity"
  input: "select_bboxes/nms_bboxes_1/GatherV2_1"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ExpandDims/dim"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "ExpandDims"
  op: "ExpandDims"
  input: "concat_2/concat"
  input: "ExpandDims/dim"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tdim"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "concat_4/axis"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "concat_4"
  op: "ConcatV2"
  input: "ExpandDims"
  input: "concat_3/concat"
  input: "concat_4/axis"
  device: "/device:CPU:0"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "save/filename/input"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "model"
      }
    }
  }
}
node {
  name: "save/filename"
  op: "PlaceholderWithDefault"
  input: "save/filename/input"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "shape"
    value {
      shape {
      }
    }
  }
}
node {
  name: "save/Const"
  op: "PlaceholderWithDefault"
  input: "save/filename"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "shape"
    value {
      shape {
      }
    }
  }
}
node {
  name: "save/SaveV2/tensor_names"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 264
          }
        }
        string_val: "ssd300/Conv/BatchNorm/beta"
        string_val: "ssd300/Conv/BatchNorm/moving_mean"
        string_val: "ssd300/Conv/BatchNorm/moving_variance"
        string_val: "ssd300/Conv/weights"
        string_val: "ssd300/Conv_1/BatchNorm/beta"
        string_val: "ssd300/Conv_1/BatchNorm/moving_mean"
        string_val: "ssd300/Conv_1/BatchNorm/moving_variance"
        string_val: "ssd300/Conv_1/weights"
        string_val: "ssd300/expanded_conv/depthwise/BatchNorm/beta"
        string_val: "ssd300/expanded_conv/depthwise/BatchNorm/moving_mean"
        string_val: "ssd300/expanded_conv/depthwise/BatchNorm/moving_variance"
        string_val: "ssd300/expanded_conv/depthwise/depthwise_weights"
        string_val: "ssd300/expanded_conv/project/BatchNorm/beta"
        string_val: "ssd300/expanded_conv/project/BatchNorm/moving_mean"
        string_val: "ssd300/expanded_conv/project/BatchNorm/moving_variance"
        string_val: "ssd300/expanded_conv/project/weights"
        string_val: "ssd300/expanded_conv_1/depthwise/BatchNorm/beta"
        string_val: "ssd300/expanded_conv_1/depthwise/BatchNorm/moving_mean"
        string_val: "ssd300/expanded_conv_1/depthwise/BatchNorm/moving_variance"
        string_val: "ssd300/expanded_conv_1/depthwise/depthwise_weights"
        string_val: "ssd300/expanded_conv_1/expand/BatchNorm/beta"
        string_val: "ssd300/expanded_conv_1/expand/BatchNorm/moving_mean"
        string_val: "ssd300/expanded_conv_1/expand/BatchNorm/moving_variance"
        string_val: "ssd300/expanded_conv_1/expand/weights"
        string_val: "ssd300/expanded_conv_1/project/BatchNorm/beta"
        string_val: "ssd300/expanded_conv_1/project/BatchNorm/moving_mean"
        string_val: "ssd300/expanded_conv_1/project/BatchNorm/moving_variance"
        string_val: "ssd300/expanded_conv_1/project/weights"
        string_val: "ssd300/expanded_conv_10/depthwise/BatchNorm/beta"
        string_val: "ssd300/expanded_conv_10/depthwise/BatchNorm/moving_mean"
        string_val: "ssd300/expanded_conv_10/depthwise/BatchNorm/moving_variance"
        string_val: "ssd300/expanded_conv_10/depthwise/depthwise_weights"
        string_val: "ssd300/expanded_conv_10/expand/BatchNorm/beta"
        string_val: "ssd300/expanded_conv_10/expand/BatchNorm/moving_mean"
        string_val: "ssd300/expanded_conv_10/expand/BatchNorm/moving_variance"
        string_val: "ssd300/expanded_conv_10/expand/weights"
        string_val: "ssd300/expanded_conv_10/project/BatchNorm/beta"
        string_val: "ssd300/expanded_conv_10/project/BatchNorm/moving_mean"
        string_val: "ssd300/expanded_conv_10/project/BatchNorm/moving_variance"
        string_val: "ssd300/expanded_conv_10/project/weights"
        string_val: "ssd300/expanded_conv_11/depthwise/BatchNorm/beta"
        string_val: "ssd300/expanded_conv_11/depthwise/BatchNorm/moving_mean"
        string_val: "ssd300/expanded_conv_11/depthwise/BatchNorm/moving_variance"
        string_val: "ssd300/expanded_conv_11/depthwise/depthwise_weights"
        string_val: "ssd300/expanded_conv_11/expand/BatchNorm/beta"
        string_val: "ssd300/expanded_conv_11/expand/BatchNorm/moving_mean"
        string_val: "ssd300/expanded_conv_11/expand/BatchNorm/moving_variance"
        string_val: "ssd300/expanded_conv_11/expand/weights"
        string_val: "ssd300/expanded_conv_11/project/BatchNorm/beta"
        string_val: "ssd300/expanded_conv_11/project/BatchNorm/moving_mean"
        string_val: "ssd300/expanded_conv_11/project/BatchNorm/moving_variance"
        string_val: "ssd300/expanded_conv_11/project/weights"
        string_val: "ssd300/expanded_conv_12/depthwise/BatchNorm/beta"
        string_val: "ssd300/expanded_conv_12/depthwise/BatchNorm/moving_mean"
        string_val: "ssd300/expanded_conv_12/depthwise/BatchNorm/moving_variance"
        string_val: "ssd300/expanded_conv_12/depthwise/depthwise_weights"
        string_val: "ssd300/expanded_conv_12/expand/BatchNorm/beta"
        string_val: "ssd300/expanded_conv_12/expand/BatchNorm/moving_mean"
        string_val: "ssd300/expanded_conv_12/expand/BatchNorm/moving_variance"
        string_val: "ssd300/expanded_conv_12/expand/weights"
        string_val: "ssd300/expanded_conv_12/project/BatchNorm/beta"
        string_val: "ssd300/expanded_conv_12/project/BatchNorm/moving_mean"
        string_val: "ssd300/expanded_conv_12/project/BatchNorm/moving_variance"
        string_val: "ssd300/expanded_conv_12/project/weights"
        string_val: "ssd300/expanded_conv_13/depthwise/BatchNorm/beta"
        string_val: "ssd300/expanded_conv_13/depthwise/BatchNorm/moving_mean"
        string_val: "ssd300/expanded_conv_13/depthwise/BatchNorm/moving_variance"
        string_val: "ssd300/expanded_conv_13/depthwise/depthwise_weights"
        string_val: "ssd300/expanded_conv_13/expand/BatchNorm/beta"
        string_val: "ssd300/expanded_conv_13/expand/BatchNorm/moving_mean"
        string_val: "ssd300/expanded_conv_13/expand/BatchNorm/moving_variance"
        string_val: "ssd300/expanded_conv_13/expand/weights"
        string_val: "ssd300/expanded_conv_13/project/BatchNorm/beta"
        string_val: "ssd300/expanded_conv_13/project/BatchNorm/moving_mean"
        string_val: "ssd300/expanded_conv_13/project/BatchNorm/moving_variance"
        string_val: "ssd300/expanded_conv_13/project/weights"
        string_val: "ssd300/expanded_conv_14/depthwise/BatchNorm/beta"
        string_val: "ssd300/expanded_conv_14/depthwise/BatchNorm/moving_mean"
        string_val: "ssd300/expanded_conv_14/depthwise/BatchNorm/moving_variance"
        string_val: "ssd300/expanded_conv_14/depthwise/depthwise_weights"
        string_val: "ssd300/expanded_conv_14/expand/BatchNorm/beta"
        string_val: "ssd300/expanded_conv_14/expand/BatchNorm/moving_mean"
        string_val: "ssd300/expanded_conv_14/expand/BatchNorm/moving_variance"
        string_val: "ssd300/expanded_conv_14/expand/weights"
        string_val: "ssd300/expanded_conv_14/project/BatchNorm/beta"
        string_val: "ssd300/expanded_conv_14/project/BatchNorm/moving_mean"
        string_val: "ssd300/expanded_conv_14/project/BatchNorm/moving_variance"
        string_val: "ssd300/expanded_conv_14/project/weights"
        string_val: "ssd300/expanded_conv_15/depthwise/BatchNorm/beta"
        string_val: "ssd300/expanded_conv_15/depthwise/BatchNorm/moving_mean"
        string_val: "ssd300/expanded_conv_15/depthwise/BatchNorm/moving_variance"
        string_val: "ssd300/expanded_conv_15/depthwise/depthwise_weights"
        string_val: "ssd300/expanded_conv_15/expand/BatchNorm/beta"
        string_val: "ssd300/expanded_conv_15/expand/BatchNorm/moving_mean"
        string_val: "ssd300/expanded_conv_15/expand/BatchNorm/moving_variance"
        string_val: "ssd300/expanded_conv_15/expand/weights"
        string_val: "ssd300/expanded_conv_15/project/BatchNorm/beta"
        string_val: "ssd300/expanded_conv_15/project/BatchNorm/moving_mean"
        string_val: "ssd300/expanded_conv_15/project/BatchNorm/moving_variance"
        string_val: "ssd300/expanded_conv_15/project/weights"
        string_val: "ssd300/expanded_conv_16/depthwise/BatchNorm/beta"
        string_val: "ssd300/expanded_conv_16/depthwise/BatchNorm/moving_mean"
        string_val: "ssd300/expanded_conv_16/depthwise/BatchNorm/moving_variance"
        string_val: "ssd300/expanded_conv_16/depthwise/depthwise_weights"
        string_val: "ssd300/expanded_conv_16/expand/BatchNorm/beta"
        string_val: "ssd300/expanded_conv_16/expand/BatchNorm/moving_mean"
        string_val: "ssd300/expanded_conv_16/expand/BatchNorm/moving_variance"
        string_val: "ssd300/expanded_conv_16/expand/weights"
        string_val: "ssd300/expanded_conv_16/project/BatchNorm/beta"
        string_val: "ssd300/expanded_conv_16/project/BatchNorm/moving_mean"
        string_val: "ssd300/expanded_conv_16/project/BatchNorm/moving_variance"
        string_val: "ssd300/expanded_conv_16/project/weights"
        string_val: "ssd300/expanded_conv_2/depthwise/BatchNorm/beta"
        string_val: "ssd300/expanded_conv_2/depthwise/BatchNorm/moving_mean"
        string_val: "ssd300/expanded_conv_2/depthwise/BatchNorm/moving_variance"
        string_val: "ssd300/expanded_conv_2/depthwise/depthwise_weights"
        string_val: "ssd300/expanded_conv_2/expand/BatchNorm/beta"
        string_val: "ssd300/expanded_conv_2/expand/BatchNorm/moving_mean"
        string_val: "ssd300/expanded_conv_2/expand/BatchNorm/moving_variance"
        string_val: "ssd300/expanded_conv_2/expand/weights"
        string_val: "ssd300/expanded_conv_2/project/BatchNorm/beta"
        string_val: "ssd300/expanded_conv_2/project/BatchNorm/moving_mean"
        string_val: "ssd300/expanded_conv_2/project/BatchNorm/moving_variance"
        string_val: "ssd300/expanded_conv_2/project/weights"
        string_val: "ssd300/expanded_conv_3/depthwise/BatchNorm/beta"
        string_val: "ssd300/expanded_conv_3/depthwise/BatchNorm/moving_mean"
        string_val: "ssd300/expanded_conv_3/depthwise/BatchNorm/moving_variance"
        string_val: "ssd300/expanded_conv_3/depthwise/depthwise_weights"
        string_val: "ssd300/expanded_conv_3/expand/BatchNorm/beta"
        string_val: "ssd300/expanded_conv_3/expand/BatchNorm/moving_mean"
        string_val: "ssd300/expanded_conv_3/expand/BatchNorm/moving_variance"
        string_val: "ssd300/expanded_conv_3/expand/weights"
        string_val: "ssd300/expanded_conv_3/project/BatchNorm/beta"
        string_val: "ssd300/expanded_conv_3/project/BatchNorm/moving_mean"
        string_val: "ssd300/expanded_conv_3/project/BatchNorm/moving_variance"
        string_val: "ssd300/expanded_conv_3/project/weights"
        string_val: "ssd300/expanded_conv_4/depthwise/BatchNorm/beta"
        string_val: "ssd300/expanded_conv_4/depthwise/BatchNorm/moving_mean"
        string_val: "ssd300/expanded_conv_4/depthwise/BatchNorm/moving_variance"
        string_val: "ssd300/expanded_conv_4/depthwise/depthwise_weights"
        string_val: "ssd300/expanded_conv_4/expand/BatchNorm/beta"
        string_val: "ssd300/expanded_conv_4/expand/BatchNorm/moving_mean"
        string_val: "ssd300/expanded_conv_4/expand/BatchNorm/moving_variance"
        string_val: "ssd300/expanded_conv_4/expand/weights"
        string_val: "ssd300/expanded_conv_4/project/BatchNorm/beta"
        string_val: "ssd300/expanded_conv_4/project/BatchNorm/moving_mean"
        string_val: "ssd300/expanded_conv_4/project/BatchNorm/moving_variance"
        string_val: "ssd300/expanded_conv_4/project/weights"
        string_val: "ssd300/expanded_conv_5/depthwise/BatchNorm/beta"
        string_val: "ssd300/expanded_conv_5/depthwise/BatchNorm/moving_mean"
        string_val: "ssd300/expanded_conv_5/depthwise/BatchNorm/moving_variance"
        string_val: "ssd300/expanded_conv_5/depthwise/depthwise_weights"
        string_val: "ssd300/expanded_conv_5/expand/BatchNorm/beta"
        string_val: "ssd300/expanded_conv_5/expand/BatchNorm/moving_mean"
        string_val: "ssd300/expanded_conv_5/expand/BatchNorm/moving_variance"
        string_val: "ssd300/expanded_conv_5/expand/weights"
        string_val: "ssd300/expanded_conv_5/project/BatchNorm/beta"
        string_val: "ssd300/expanded_conv_5/project/BatchNorm/moving_mean"
        string_val: "ssd300/expanded_conv_5/project/BatchNorm/moving_variance"
        string_val: "ssd300/expanded_conv_5/project/weights"
        string_val: "ssd300/expanded_conv_6/depthwise/BatchNorm/beta"
        string_val: "ssd300/expanded_conv_6/depthwise/BatchNorm/moving_mean"
        string_val: "ssd300/expanded_conv_6/depthwise/BatchNorm/moving_variance"
        string_val: "ssd300/expanded_conv_6/depthwise/depthwise_weights"
        string_val: "ssd300/expanded_conv_6/expand/BatchNorm/beta"
        string_val: "ssd300/expanded_conv_6/expand/BatchNorm/moving_mean"
        string_val: "ssd300/expanded_conv_6/expand/BatchNorm/moving_variance"
        string_val: "ssd300/expanded_conv_6/expand/weights"
        string_val: "ssd300/expanded_conv_6/project/BatchNorm/beta"
        string_val: "ssd300/expanded_conv_6/project/BatchNorm/moving_mean"
        string_val: "ssd300/expanded_conv_6/project/BatchNorm/moving_variance"
        string_val: "ssd300/expanded_conv_6/project/weights"
        string_val: "ssd300/expanded_conv_7/depthwise/BatchNorm/beta"
        string_val: "ssd300/expanded_conv_7/depthwise/BatchNorm/moving_mean"
        string_val: "ssd300/expanded_conv_7/depthwise/BatchNorm/moving_variance"
        string_val: "ssd300/expanded_conv_7/depthwise/depthwise_weights"
        string_val: "ssd300/expanded_conv_7/expand/BatchNorm/beta"
        string_val: "ssd300/expanded_conv_7/expand/BatchNorm/moving_mean"
        string_val: "ssd300/expanded_conv_7/expand/BatchNorm/moving_variance"
        string_val: "ssd300/expanded_conv_7/expand/weights"
        string_val: "ssd300/expanded_conv_7/project/BatchNorm/beta"
        string_val: "ssd300/expanded_conv_7/project/BatchNorm/moving_mean"
        string_val: "ssd300/expanded_conv_7/project/BatchNorm/moving_variance"
        string_val: "ssd300/expanded_conv_7/project/weights"
        string_val: "ssd300/expanded_conv_8/depthwise/BatchNorm/beta"
        string_val: "ssd300/expanded_conv_8/depthwise/BatchNorm/moving_mean"
        string_val: "ssd300/expanded_conv_8/depthwise/BatchNorm/moving_variance"
        string_val: "ssd300/expanded_conv_8/depthwise/depthwise_weights"
        string_val: "ssd300/expanded_conv_8/expand/BatchNorm/beta"
        string_val: "ssd300/expanded_conv_8/expand/BatchNorm/moving_mean"
        string_val: "ssd300/expanded_conv_8/expand/BatchNorm/moving_variance"
        string_val: "ssd300/expanded_conv_8/expand/weights"
        string_val: "ssd300/expanded_conv_8/project/BatchNorm/beta"
        string_val: "ssd300/expanded_conv_8/project/BatchNorm/moving_mean"
        string_val: "ssd300/expanded_conv_8/project/BatchNorm/moving_variance"
        string_val: "ssd300/expanded_conv_8/project/weights"
        string_val: "ssd300/expanded_conv_9/depthwise/BatchNorm/beta"
        string_val: "ssd300/expanded_conv_9/depthwise/BatchNorm/moving_mean"
        string_val: "ssd300/expanded_conv_9/depthwise/BatchNorm/moving_variance"
        string_val: "ssd300/expanded_conv_9/depthwise/depthwise_weights"
        string_val: "ssd300/expanded_conv_9/expand/BatchNorm/beta"
        string_val: "ssd300/expanded_conv_9/expand/BatchNorm/moving_mean"
        string_val: "ssd300/expanded_conv_9/expand/BatchNorm/moving_variance"
        string_val: "ssd300/expanded_conv_9/expand/weights"
        string_val: "ssd300/expanded_conv_9/project/BatchNorm/beta"
        string_val: "ssd300/expanded_conv_9/project/BatchNorm/moving_mean"
        string_val: "ssd300/expanded_conv_9/project/BatchNorm/moving_variance"
        string_val: "ssd300/expanded_conv_9/project/weights"
        string_val: "ssd300/layer_19_1_Conv2d_2_1x1_256/BatchNorm/beta"
        string_val: "ssd300/layer_19_1_Conv2d_2_1x1_256/BatchNorm/moving_mean"
        string_val: "ssd300/layer_19_1_Conv2d_2_1x1_256/BatchNorm/moving_variance"
        string_val: "ssd300/layer_19_1_Conv2d_2_1x1_256/weights"
        string_val: "ssd300/layer_19_1_Conv2d_3_1x1_128/BatchNorm/beta"
        string_val: "ssd300/layer_19_1_Conv2d_3_1x1_128/BatchNorm/moving_mean"
        string_val: "ssd300/layer_19_1_Conv2d_3_1x1_128/BatchNorm/moving_variance"
        string_val: "ssd300/layer_19_1_Conv2d_3_1x1_128/weights"
        string_val: "ssd300/layer_19_1_Conv2d_4_1x1_128/BatchNorm/beta"
        string_val: "ssd300/layer_19_1_Conv2d_4_1x1_128/BatchNorm/moving_mean"
        string_val: "ssd300/layer_19_1_Conv2d_4_1x1_128/BatchNorm/moving_variance"
        string_val: "ssd300/layer_19_1_Conv2d_4_1x1_128/weights"
        string_val: "ssd300/layer_19_1_Conv2d_5_1x1_64/BatchNorm/beta"
        string_val: "ssd300/layer_19_1_Conv2d_5_1x1_64/BatchNorm/moving_mean"
        string_val: "ssd300/layer_19_1_Conv2d_5_1x1_64/BatchNorm/moving_variance"
        string_val: "ssd300/layer_19_1_Conv2d_5_1x1_64/weights"
        string_val: "ssd300/layer_19_2_Conv2d_2_3x3_s2_512/BatchNorm/beta"
        string_val: "ssd300/layer_19_2_Conv2d_2_3x3_s2_512/BatchNorm/moving_mean"
        string_val: "ssd300/layer_19_2_Conv2d_2_3x3_s2_512/BatchNorm/moving_variance"
        string_val: "ssd300/layer_19_2_Conv2d_2_3x3_s2_512/weights"
        string_val: "ssd300/layer_19_2_Conv2d_2_3x3_s2_512_depthwise/BatchNorm/beta"
        string_val: "ssd300/layer_19_2_Conv2d_2_3x3_s2_512_depthwise/BatchNorm/moving_mean"
        string_val: "ssd300/layer_19_2_Conv2d_2_3x3_s2_512_depthwise/BatchNorm/moving_variance"
        string_val: "ssd300/layer_19_2_Conv2d_2_3x3_s2_512_depthwise/depthwise_weights"
        string_val: "ssd300/layer_19_2_Conv2d_3_3x3_s2_256/BatchNorm/beta"
        string_val: "ssd300/layer_19_2_Conv2d_3_3x3_s2_256/BatchNorm/moving_mean"
        string_val: "ssd300/layer_19_2_Conv2d_3_3x3_s2_256/BatchNorm/moving_variance"
        string_val: "ssd300/layer_19_2_Conv2d_3_3x3_s2_256/weights"
        string_val: "ssd300/layer_19_2_Conv2d_3_3x3_s2_256_depthwise/BatchNorm/beta"
        string_val: "ssd300/layer_19_2_Conv2d_3_3x3_s2_256_depthwise/BatchNorm/moving_mean"
        string_val: "ssd300/layer_19_2_Conv2d_3_3x3_s2_256_depthwise/BatchNorm/moving_variance"
        string_val: "ssd300/layer_19_2_Conv2d_3_3x3_s2_256_depthwise/depthwise_weights"
        string_val: "ssd300/layer_19_2_Conv2d_4_3x3_s2_256/BatchNorm/beta"
        string_val: "ssd300/layer_19_2_Conv2d_4_3x3_s2_256/BatchNorm/moving_mean"
        string_val: "ssd300/layer_19_2_Conv2d_4_3x3_s2_256/BatchNorm/moving_variance"
        string_val: "ssd300/layer_19_2_Conv2d_4_3x3_s2_256/weights"
        string_val: "ssd300/layer_19_2_Conv2d_4_3x3_s2_256_depthwise/BatchNorm/beta"
        string_val: "ssd300/layer_19_2_Conv2d_4_3x3_s2_256_depthwise/BatchNorm/moving_mean"
        string_val: "ssd300/layer_19_2_Conv2d_4_3x3_s2_256_depthwise/BatchNorm/moving_variance"
        string_val: "ssd300/layer_19_2_Conv2d_4_3x3_s2_256_depthwise/depthwise_weights"
        string_val: "ssd300/layer_19_2_Conv2d_5_3x3_s2_128/BatchNorm/beta"
        string_val: "ssd300/layer_19_2_Conv2d_5_3x3_s2_128/BatchNorm/moving_mean"
        string_val: "ssd300/layer_19_2_Conv2d_5_3x3_s2_128/BatchNorm/moving_variance"
        string_val: "ssd300/layer_19_2_Conv2d_5_3x3_s2_128/weights"
        string_val: "ssd300/layer_19_2_Conv2d_5_3x3_s2_128_depthwise/BatchNorm/beta"
        string_val: "ssd300/layer_19_2_Conv2d_5_3x3_s2_128_depthwise/BatchNorm/moving_mean"
        string_val: "ssd300/layer_19_2_Conv2d_5_3x3_s2_128_depthwise/BatchNorm/moving_variance"
        string_val: "ssd300/layer_19_2_Conv2d_5_3x3_s2_128_depthwise/depthwise_weights"
        string_val: "ssd300/multibox_head/cls_0/bias"
        string_val: "ssd300/multibox_head/cls_0/kernel"
        string_val: "ssd300/multibox_head/cls_1/bias"
        string_val: "ssd300/multibox_head/cls_1/kernel"
        string_val: "ssd300/multibox_head/loc_0/bias"
        string_val: "ssd300/multibox_head/loc_0/kernel"
        string_val: "ssd300/multibox_head/loc_1/bias"
        string_val: "ssd300/multibox_head/loc_1/kernel"
      }
    }
  }
}
node {
  name: "save/SaveV2/shape_and_slices"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 264
          }
        }
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
      }
    }
  }
}
node {
  name: "save/SaveV2"
  op: "SaveV2"
  input: "save/Const"
  input: "save/SaveV2/tensor_names"
  input: "save/SaveV2/shape_and_slices"
  input: "ssd300/Conv/BatchNorm/beta"
  input: "ssd300/Conv/BatchNorm/moving_mean"
  input: "ssd300/Conv/BatchNorm/moving_variance"
  input: "ssd300/Conv/weights"
  input: "ssd300/Conv_1/BatchNorm/beta"
  input: "ssd300/Conv_1/BatchNorm/moving_mean"
  input: "ssd300/Conv_1/BatchNorm/moving_variance"
  input: "ssd300/Conv_1/weights"
  input: "ssd300/expanded_conv/depthwise/BatchNorm/beta"
  input: "ssd300/expanded_conv/depthwise/BatchNorm/moving_mean"
  input: "ssd300/expanded_conv/depthwise/BatchNorm/moving_variance"
  input: "ssd300/expanded_conv/depthwise/depthwise_weights"
  input: "ssd300/expanded_conv/project/BatchNorm/beta"
  input: "ssd300/expanded_conv/project/BatchNorm/moving_mean"
  input: "ssd300/expanded_conv/project/BatchNorm/moving_variance"
  input: "ssd300/expanded_conv/project/weights"
  input: "ssd300/expanded_conv_1/depthwise/BatchNorm/beta"
  input: "ssd300/expanded_conv_1/depthwise/BatchNorm/moving_mean"
  input: "ssd300/expanded_conv_1/depthwise/BatchNorm/moving_variance"
  input: "ssd300/expanded_conv_1/depthwise/depthwise_weights"
  input: "ssd300/expanded_conv_1/expand/BatchNorm/beta"
  input: "ssd300/expanded_conv_1/expand/BatchNorm/moving_mean"
  input: "ssd300/expanded_conv_1/expand/BatchNorm/moving_variance"
  input: "ssd300/expanded_conv_1/expand/weights"
  input: "ssd300/expanded_conv_1/project/BatchNorm/beta"
  input: "ssd300/expanded_conv_1/project/BatchNorm/moving_mean"
  input: "ssd300/expanded_conv_1/project/BatchNorm/moving_variance"
  input: "ssd300/expanded_conv_1/project/weights"
  input: "ssd300/expanded_conv_10/depthwise/BatchNorm/beta"
  input: "ssd300/expanded_conv_10/depthwise/BatchNorm/moving_mean"
  input: "ssd300/expanded_conv_10/depthwise/BatchNorm/moving_variance"
  input: "ssd300/expanded_conv_10/depthwise/depthwise_weights"
  input: "ssd300/expanded_conv_10/expand/BatchNorm/beta"
  input: "ssd300/expanded_conv_10/expand/BatchNorm/moving_mean"
  input: "ssd300/expanded_conv_10/expand/BatchNorm/moving_variance"
  input: "ssd300/expanded_conv_10/expand/weights"
  input: "ssd300/expanded_conv_10/project/BatchNorm/beta"
  input: "ssd300/expanded_conv_10/project/BatchNorm/moving_mean"
  input: "ssd300/expanded_conv_10/project/BatchNorm/moving_variance"
  input: "ssd300/expanded_conv_10/project/weights"
  input: "ssd300/expanded_conv_11/depthwise/BatchNorm/beta"
  input: "ssd300/expanded_conv_11/depthwise/BatchNorm/moving_mean"
  input: "ssd300/expanded_conv_11/depthwise/BatchNorm/moving_variance"
  input: "ssd300/expanded_conv_11/depthwise/depthwise_weights"
  input: "ssd300/expanded_conv_11/expand/BatchNorm/beta"
  input: "ssd300/expanded_conv_11/expand/BatchNorm/moving_mean"
  input: "ssd300/expanded_conv_11/expand/BatchNorm/moving_variance"
  input: "ssd300/expanded_conv_11/expand/weights"
  input: "ssd300/expanded_conv_11/project/BatchNorm/beta"
  input: "ssd300/expanded_conv_11/project/BatchNorm/moving_mean"
  input: "ssd300/expanded_conv_11/project/BatchNorm/moving_variance"
  input: "ssd300/expanded_conv_11/project/weights"
  input: "ssd300/expanded_conv_12/depthwise/BatchNorm/beta"
  input: "ssd300/expanded_conv_12/depthwise/BatchNorm/moving_mean"
  input: "ssd300/expanded_conv_12/depthwise/BatchNorm/moving_variance"
  input: "ssd300/expanded_conv_12/depthwise/depthwise_weights"
  input: "ssd300/expanded_conv_12/expand/BatchNorm/beta"
  input: "ssd300/expanded_conv_12/expand/BatchNorm/moving_mean"
  input: "ssd300/expanded_conv_12/expand/BatchNorm/moving_variance"
  input: "ssd300/expanded_conv_12/expand/weights"
  input: "ssd300/expanded_conv_12/project/BatchNorm/beta"
  input: "ssd300/expanded_conv_12/project/BatchNorm/moving_mean"
  input: "ssd300/expanded_conv_12/project/BatchNorm/moving_variance"
  input: "ssd300/expanded_conv_12/project/weights"
  input: "ssd300/expanded_conv_13/depthwise/BatchNorm/beta"
  input: "ssd300/expanded_conv_13/depthwise/BatchNorm/moving_mean"
  input: "ssd300/expanded_conv_13/depthwise/BatchNorm/moving_variance"
  input: "ssd300/expanded_conv_13/depthwise/depthwise_weights"
  input: "ssd300/expanded_conv_13/expand/BatchNorm/beta"
  input: "ssd300/expanded_conv_13/expand/BatchNorm/moving_mean"
  input: "ssd300/expanded_conv_13/expand/BatchNorm/moving_variance"
  input: "ssd300/expanded_conv_13/expand/weights"
  input: "ssd300/expanded_conv_13/project/BatchNorm/beta"
  input: "ssd300/expanded_conv_13/project/BatchNorm/moving_mean"
  input: "ssd300/expanded_conv_13/project/BatchNorm/moving_variance"
  input: "ssd300/expanded_conv_13/project/weights"
  input: "ssd300/expanded_conv_14/depthwise/BatchNorm/beta"
  input: "ssd300/expanded_conv_14/depthwise/BatchNorm/moving_mean"
  input: "ssd300/expanded_conv_14/depthwise/BatchNorm/moving_variance"
  input: "ssd300/expanded_conv_14/depthwise/depthwise_weights"
  input: "ssd300/expanded_conv_14/expand/BatchNorm/beta"
  input: "ssd300/expanded_conv_14/expand/BatchNorm/moving_mean"
  input: "ssd300/expanded_conv_14/expand/BatchNorm/moving_variance"
  input: "ssd300/expanded_conv_14/expand/weights"
  input: "ssd300/expanded_conv_14/project/BatchNorm/beta"
  input: "ssd300/expanded_conv_14/project/BatchNorm/moving_mean"
  input: "ssd300/expanded_conv_14/project/BatchNorm/moving_variance"
  input: "ssd300/expanded_conv_14/project/weights"
  input: "ssd300/expanded_conv_15/depthwise/BatchNorm/beta"
  input: "ssd300/expanded_conv_15/depthwise/BatchNorm/moving_mean"
  input: "ssd300/expanded_conv_15/depthwise/BatchNorm/moving_variance"
  input: "ssd300/expanded_conv_15/depthwise/depthwise_weights"
  input: "ssd300/expanded_conv_15/expand/BatchNorm/beta"
  input: "ssd300/expanded_conv_15/expand/BatchNorm/moving_mean"
  input: "ssd300/expanded_conv_15/expand/BatchNorm/moving_variance"
  input: "ssd300/expanded_conv_15/expand/weights"
  input: "ssd300/expanded_conv_15/project/BatchNorm/beta"
  input: "ssd300/expanded_conv_15/project/BatchNorm/moving_mean"
  input: "ssd300/expanded_conv_15/project/BatchNorm/moving_variance"
  input: "ssd300/expanded_conv_15/project/weights"
  input: "ssd300/expanded_conv_16/depthwise/BatchNorm/beta"
  input: "ssd300/expanded_conv_16/depthwise/BatchNorm/moving_mean"
  input: "ssd300/expanded_conv_16/depthwise/BatchNorm/moving_variance"
  input: "ssd300/expanded_conv_16/depthwise/depthwise_weights"
  input: "ssd300/expanded_conv_16/expand/BatchNorm/beta"
  input: "ssd300/expanded_conv_16/expand/BatchNorm/moving_mean"
  input: "ssd300/expanded_conv_16/expand/BatchNorm/moving_variance"
  input: "ssd300/expanded_conv_16/expand/weights"
  input: "ssd300/expanded_conv_16/project/BatchNorm/beta"
  input: "ssd300/expanded_conv_16/project/BatchNorm/moving_mean"
  input: "ssd300/expanded_conv_16/project/BatchNorm/moving_variance"
  input: "ssd300/expanded_conv_16/project/weights"
  input: "ssd300/expanded_conv_2/depthwise/BatchNorm/beta"
  input: "ssd300/expanded_conv_2/depthwise/BatchNorm/moving_mean"
  input: "ssd300/expanded_conv_2/depthwise/BatchNorm/moving_variance"
  input: "ssd300/expanded_conv_2/depthwise/depthwise_weights"
  input: "ssd300/expanded_conv_2/expand/BatchNorm/beta"
  input: "ssd300/expanded_conv_2/expand/BatchNorm/moving_mean"
  input: "ssd300/expanded_conv_2/expand/BatchNorm/moving_variance"
  input: "ssd300/expanded_conv_2/expand/weights"
  input: "ssd300/expanded_conv_2/project/BatchNorm/beta"
  input: "ssd300/expanded_conv_2/project/BatchNorm/moving_mean"
  input: "ssd300/expanded_conv_2/project/BatchNorm/moving_variance"
  input: "ssd300/expanded_conv_2/project/weights"
  input: "ssd300/expanded_conv_3/depthwise/BatchNorm/beta"
  input: "ssd300/expanded_conv_3/depthwise/BatchNorm/moving_mean"
  input: "ssd300/expanded_conv_3/depthwise/BatchNorm/moving_variance"
  input: "ssd300/expanded_conv_3/depthwise/depthwise_weights"
  input: "ssd300/expanded_conv_3/expand/BatchNorm/beta"
  input: "ssd300/expanded_conv_3/expand/BatchNorm/moving_mean"
  input: "ssd300/expanded_conv_3/expand/BatchNorm/moving_variance"
  input: "ssd300/expanded_conv_3/expand/weights"
  input: "ssd300/expanded_conv_3/project/BatchNorm/beta"
  input: "ssd300/expanded_conv_3/project/BatchNorm/moving_mean"
  input: "ssd300/expanded_conv_3/project/BatchNorm/moving_variance"
  input: "ssd300/expanded_conv_3/project/weights"
  input: "ssd300/expanded_conv_4/depthwise/BatchNorm/beta"
  input: "ssd300/expanded_conv_4/depthwise/BatchNorm/moving_mean"
  input: "ssd300/expanded_conv_4/depthwise/BatchNorm/moving_variance"
  input: "ssd300/expanded_conv_4/depthwise/depthwise_weights"
  input: "ssd300/expanded_conv_4/expand/BatchNorm/beta"
  input: "ssd300/expanded_conv_4/expand/BatchNorm/moving_mean"
  input: "ssd300/expanded_conv_4/expand/BatchNorm/moving_variance"
  input: "ssd300/expanded_conv_4/expand/weights"
  input: "ssd300/expanded_conv_4/project/BatchNorm/beta"
  input: "ssd300/expanded_conv_4/project/BatchNorm/moving_mean"
  input: "ssd300/expanded_conv_4/project/BatchNorm/moving_variance"
  input: "ssd300/expanded_conv_4/project/weights"
  input: "ssd300/expanded_conv_5/depthwise/BatchNorm/beta"
  input: "ssd300/expanded_conv_5/depthwise/BatchNorm/moving_mean"
  input: "ssd300/expanded_conv_5/depthwise/BatchNorm/moving_variance"
  input: "ssd300/expanded_conv_5/depthwise/depthwise_weights"
  input: "ssd300/expanded_conv_5/expand/BatchNorm/beta"
  input: "ssd300/expanded_conv_5/expand/BatchNorm/moving_mean"
  input: "ssd300/expanded_conv_5/expand/BatchNorm/moving_variance"
  input: "ssd300/expanded_conv_5/expand/weights"
  input: "ssd300/expanded_conv_5/project/BatchNorm/beta"
  input: "ssd300/expanded_conv_5/project/BatchNorm/moving_mean"
  input: "ssd300/expanded_conv_5/project/BatchNorm/moving_variance"
  input: "ssd300/expanded_conv_5/project/weights"
  input: "ssd300/expanded_conv_6/depthwise/BatchNorm/beta"
  input: "ssd300/expanded_conv_6/depthwise/BatchNorm/moving_mean"
  input: "ssd300/expanded_conv_6/depthwise/BatchNorm/moving_variance"
  input: "ssd300/expanded_conv_6/depthwise/depthwise_weights"
  input: "ssd300/expanded_conv_6/expand/BatchNorm/beta"
  input: "ssd300/expanded_conv_6/expand/BatchNorm/moving_mean"
  input: "ssd300/expanded_conv_6/expand/BatchNorm/moving_variance"
  input: "ssd300/expanded_conv_6/expand/weights"
  input: "ssd300/expanded_conv_6/project/BatchNorm/beta"
  input: "ssd300/expanded_conv_6/project/BatchNorm/moving_mean"
  input: "ssd300/expanded_conv_6/project/BatchNorm/moving_variance"
  input: "ssd300/expanded_conv_6/project/weights"
  input: "ssd300/expanded_conv_7/depthwise/BatchNorm/beta"
  input: "ssd300/expanded_conv_7/depthwise/BatchNorm/moving_mean"
  input: "ssd300/expanded_conv_7/depthwise/BatchNorm/moving_variance"
  input: "ssd300/expanded_conv_7/depthwise/depthwise_weights"
  input: "ssd300/expanded_conv_7/expand/BatchNorm/beta"
  input: "ssd300/expanded_conv_7/expand/BatchNorm/moving_mean"
  input: "ssd300/expanded_conv_7/expand/BatchNorm/moving_variance"
  input: "ssd300/expanded_conv_7/expand/weights"
  input: "ssd300/expanded_conv_7/project/BatchNorm/beta"
  input: "ssd300/expanded_conv_7/project/BatchNorm/moving_mean"
  input: "ssd300/expanded_conv_7/project/BatchNorm/moving_variance"
  input: "ssd300/expanded_conv_7/project/weights"
  input: "ssd300/expanded_conv_8/depthwise/BatchNorm/beta"
  input: "ssd300/expanded_conv_8/depthwise/BatchNorm/moving_mean"
  input: "ssd300/expanded_conv_8/depthwise/BatchNorm/moving_variance"
  input: "ssd300/expanded_conv_8/depthwise/depthwise_weights"
  input: "ssd300/expanded_conv_8/expand/BatchNorm/beta"
  input: "ssd300/expanded_conv_8/expand/BatchNorm/moving_mean"
  input: "ssd300/expanded_conv_8/expand/BatchNorm/moving_variance"
  input: "ssd300/expanded_conv_8/expand/weights"
  input: "ssd300/expanded_conv_8/project/BatchNorm/beta"
  input: "ssd300/expanded_conv_8/project/BatchNorm/moving_mean"
  input: "ssd300/expanded_conv_8/project/BatchNorm/moving_variance"
  input: "ssd300/expanded_conv_8/project/weights"
  input: "ssd300/expanded_conv_9/depthwise/BatchNorm/beta"
  input: "ssd300/expanded_conv_9/depthwise/BatchNorm/moving_mean"
  input: "ssd300/expanded_conv_9/depthwise/BatchNorm/moving_variance"
  input: "ssd300/expanded_conv_9/depthwise/depthwise_weights"
  input: "ssd300/expanded_conv_9/expand/BatchNorm/beta"
  input: "ssd300/expanded_conv_9/expand/BatchNorm/moving_mean"
  input: "ssd300/expanded_conv_9/expand/BatchNorm/moving_variance"
  input: "ssd300/expanded_conv_9/expand/weights"
  input: "ssd300/expanded_conv_9/project/BatchNorm/beta"
  input: "ssd300/expanded_conv_9/project/BatchNorm/moving_mean"
  input: "ssd300/expanded_conv_9/project/BatchNorm/moving_variance"
  input: "ssd300/expanded_conv_9/project/weights"
  input: "ssd300/layer_19_1_Conv2d_2_1x1_256/BatchNorm/beta"
  input: "ssd300/layer_19_1_Conv2d_2_1x1_256/BatchNorm/moving_mean"
  input: "ssd300/layer_19_1_Conv2d_2_1x1_256/BatchNorm/moving_variance"
  input: "ssd300/layer_19_1_Conv2d_2_1x1_256/weights"
  input: "ssd300/layer_19_1_Conv2d_3_1x1_128/BatchNorm/beta"
  input: "ssd300/layer_19_1_Conv2d_3_1x1_128/BatchNorm/moving_mean"
  input: "ssd300/layer_19_1_Conv2d_3_1x1_128/BatchNorm/moving_variance"
  input: "ssd300/layer_19_1_Conv2d_3_1x1_128/weights"
  input: "ssd300/layer_19_1_Conv2d_4_1x1_128/BatchNorm/beta"
  input: "ssd300/layer_19_1_Conv2d_4_1x1_128/BatchNorm/moving_mean"
  input: "ssd300/layer_19_1_Conv2d_4_1x1_128/BatchNorm/moving_variance"
  input: "ssd300/layer_19_1_Conv2d_4_1x1_128/weights"
  input: "ssd300/layer_19_1_Conv2d_5_1x1_64/BatchNorm/beta"
  input: "ssd300/layer_19_1_Conv2d_5_1x1_64/BatchNorm/moving_mean"
  input: "ssd300/layer_19_1_Conv2d_5_1x1_64/BatchNorm/moving_variance"
  input: "ssd300/layer_19_1_Conv2d_5_1x1_64/weights"
  input: "ssd300/layer_19_2_Conv2d_2_3x3_s2_512/BatchNorm/beta"
  input: "ssd300/layer_19_2_Conv2d_2_3x3_s2_512/BatchNorm/moving_mean"
  input: "ssd300/layer_19_2_Conv2d_2_3x3_s2_512/BatchNorm/moving_variance"
  input: "ssd300/layer_19_2_Conv2d_2_3x3_s2_512/weights"
  input: "ssd300/layer_19_2_Conv2d_2_3x3_s2_512_depthwise/BatchNorm/beta"
  input: "ssd300/layer_19_2_Conv2d_2_3x3_s2_512_depthwise/BatchNorm/moving_mean"
  input: "ssd300/layer_19_2_Conv2d_2_3x3_s2_512_depthwise/BatchNorm/moving_variance"
  input: "ssd300/layer_19_2_Conv2d_2_3x3_s2_512_depthwise/depthwise_weights"
  input: "ssd300/layer_19_2_Conv2d_3_3x3_s2_256/BatchNorm/beta"
  input: "ssd300/layer_19_2_Conv2d_3_3x3_s2_256/BatchNorm/moving_mean"
  input: "ssd300/layer_19_2_Conv2d_3_3x3_s2_256/BatchNorm/moving_variance"
  input: "ssd300/layer_19_2_Conv2d_3_3x3_s2_256/weights"
  input: "ssd300/layer_19_2_Conv2d_3_3x3_s2_256_depthwise/BatchNorm/beta"
  input: "ssd300/layer_19_2_Conv2d_3_3x3_s2_256_depthwise/BatchNorm/moving_mean"
  input: "ssd300/layer_19_2_Conv2d_3_3x3_s2_256_depthwise/BatchNorm/moving_variance"
  input: "ssd300/layer_19_2_Conv2d_3_3x3_s2_256_depthwise/depthwise_weights"
  input: "ssd300/layer_19_2_Conv2d_4_3x3_s2_256/BatchNorm/beta"
  input: "ssd300/layer_19_2_Conv2d_4_3x3_s2_256/BatchNorm/moving_mean"
  input: "ssd300/layer_19_2_Conv2d_4_3x3_s2_256/BatchNorm/moving_variance"
  input: "ssd300/layer_19_2_Conv2d_4_3x3_s2_256/weights"
  input: "ssd300/layer_19_2_Conv2d_4_3x3_s2_256_depthwise/BatchNorm/beta"
  input: "ssd300/layer_19_2_Conv2d_4_3x3_s2_256_depthwise/BatchNorm/moving_mean"
  input: "ssd300/layer_19_2_Conv2d_4_3x3_s2_256_depthwise/BatchNorm/moving_variance"
  input: "ssd300/layer_19_2_Conv2d_4_3x3_s2_256_depthwise/depthwise_weights"
  input: "ssd300/layer_19_2_Conv2d_5_3x3_s2_128/BatchNorm/beta"
  input: "ssd300/layer_19_2_Conv2d_5_3x3_s2_128/BatchNorm/moving_mean"
  input: "ssd300/layer_19_2_Conv2d_5_3x3_s2_128/BatchNorm/moving_variance"
  input: "ssd300/layer_19_2_Conv2d_5_3x3_s2_128/weights"
  input: "ssd300/layer_19_2_Conv2d_5_3x3_s2_128_depthwise/BatchNorm/beta"
  input: "ssd300/layer_19_2_Conv2d_5_3x3_s2_128_depthwise/BatchNorm/moving_mean"
  input: "ssd300/layer_19_2_Conv2d_5_3x3_s2_128_depthwise/BatchNorm/moving_variance"
  input: "ssd300/layer_19_2_Conv2d_5_3x3_s2_128_depthwise/depthwise_weights"
  input: "ssd300/multibox_head/cls_0/bias"
  input: "ssd300/multibox_head/cls_0/kernel"
  input: "ssd300/multibox_head/cls_1/bias"
  input: "ssd300/multibox_head/cls_1/kernel"
  input: "ssd300/multibox_head/loc_0/bias"
  input: "ssd300/multibox_head/loc_0/kernel"
  input: "ssd300/multibox_head/loc_1/bias"
  input: "ssd300/multibox_head/loc_1/kernel"
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/control_dependency"
  op: "Identity"
  input: "save/Const"
  input: "^save/SaveV2"
  attr {
    key: "T"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@save/Const"
      }
    }
  }
}
node {
  name: "save/RestoreV2/tensor_names"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 264
          }
        }
        string_val: "ssd300/Conv/BatchNorm/beta"
        string_val: "ssd300/Conv/BatchNorm/moving_mean"
        string_val: "ssd300/Conv/BatchNorm/moving_variance"
        string_val: "ssd300/Conv/weights"
        string_val: "ssd300/Conv_1/BatchNorm/beta"
        string_val: "ssd300/Conv_1/BatchNorm/moving_mean"
        string_val: "ssd300/Conv_1/BatchNorm/moving_variance"
        string_val: "ssd300/Conv_1/weights"
        string_val: "ssd300/expanded_conv/depthwise/BatchNorm/beta"
        string_val: "ssd300/expanded_conv/depthwise/BatchNorm/moving_mean"
        string_val: "ssd300/expanded_conv/depthwise/BatchNorm/moving_variance"
        string_val: "ssd300/expanded_conv/depthwise/depthwise_weights"
        string_val: "ssd300/expanded_conv/project/BatchNorm/beta"
        string_val: "ssd300/expanded_conv/project/BatchNorm/moving_mean"
        string_val: "ssd300/expanded_conv/project/BatchNorm/moving_variance"
        string_val: "ssd300/expanded_conv/project/weights"
        string_val: "ssd300/expanded_conv_1/depthwise/BatchNorm/beta"
        string_val: "ssd300/expanded_conv_1/depthwise/BatchNorm/moving_mean"
        string_val: "ssd300/expanded_conv_1/depthwise/BatchNorm/moving_variance"
        string_val: "ssd300/expanded_conv_1/depthwise/depthwise_weights"
        string_val: "ssd300/expanded_conv_1/expand/BatchNorm/beta"
        string_val: "ssd300/expanded_conv_1/expand/BatchNorm/moving_mean"
        string_val: "ssd300/expanded_conv_1/expand/BatchNorm/moving_variance"
        string_val: "ssd300/expanded_conv_1/expand/weights"
        string_val: "ssd300/expanded_conv_1/project/BatchNorm/beta"
        string_val: "ssd300/expanded_conv_1/project/BatchNorm/moving_mean"
        string_val: "ssd300/expanded_conv_1/project/BatchNorm/moving_variance"
        string_val: "ssd300/expanded_conv_1/project/weights"
        string_val: "ssd300/expanded_conv_10/depthwise/BatchNorm/beta"
        string_val: "ssd300/expanded_conv_10/depthwise/BatchNorm/moving_mean"
        string_val: "ssd300/expanded_conv_10/depthwise/BatchNorm/moving_variance"
        string_val: "ssd300/expanded_conv_10/depthwise/depthwise_weights"
        string_val: "ssd300/expanded_conv_10/expand/BatchNorm/beta"
        string_val: "ssd300/expanded_conv_10/expand/BatchNorm/moving_mean"
        string_val: "ssd300/expanded_conv_10/expand/BatchNorm/moving_variance"
        string_val: "ssd300/expanded_conv_10/expand/weights"
        string_val: "ssd300/expanded_conv_10/project/BatchNorm/beta"
        string_val: "ssd300/expanded_conv_10/project/BatchNorm/moving_mean"
        string_val: "ssd300/expanded_conv_10/project/BatchNorm/moving_variance"
        string_val: "ssd300/expanded_conv_10/project/weights"
        string_val: "ssd300/expanded_conv_11/depthwise/BatchNorm/beta"
        string_val: "ssd300/expanded_conv_11/depthwise/BatchNorm/moving_mean"
        string_val: "ssd300/expanded_conv_11/depthwise/BatchNorm/moving_variance"
        string_val: "ssd300/expanded_conv_11/depthwise/depthwise_weights"
        string_val: "ssd300/expanded_conv_11/expand/BatchNorm/beta"
        string_val: "ssd300/expanded_conv_11/expand/BatchNorm/moving_mean"
        string_val: "ssd300/expanded_conv_11/expand/BatchNorm/moving_variance"
        string_val: "ssd300/expanded_conv_11/expand/weights"
        string_val: "ssd300/expanded_conv_11/project/BatchNorm/beta"
        string_val: "ssd300/expanded_conv_11/project/BatchNorm/moving_mean"
        string_val: "ssd300/expanded_conv_11/project/BatchNorm/moving_variance"
        string_val: "ssd300/expanded_conv_11/project/weights"
        string_val: "ssd300/expanded_conv_12/depthwise/BatchNorm/beta"
        string_val: "ssd300/expanded_conv_12/depthwise/BatchNorm/moving_mean"
        string_val: "ssd300/expanded_conv_12/depthwise/BatchNorm/moving_variance"
        string_val: "ssd300/expanded_conv_12/depthwise/depthwise_weights"
        string_val: "ssd300/expanded_conv_12/expand/BatchNorm/beta"
        string_val: "ssd300/expanded_conv_12/expand/BatchNorm/moving_mean"
        string_val: "ssd300/expanded_conv_12/expand/BatchNorm/moving_variance"
        string_val: "ssd300/expanded_conv_12/expand/weights"
        string_val: "ssd300/expanded_conv_12/project/BatchNorm/beta"
        string_val: "ssd300/expanded_conv_12/project/BatchNorm/moving_mean"
        string_val: "ssd300/expanded_conv_12/project/BatchNorm/moving_variance"
        string_val: "ssd300/expanded_conv_12/project/weights"
        string_val: "ssd300/expanded_conv_13/depthwise/BatchNorm/beta"
        string_val: "ssd300/expanded_conv_13/depthwise/BatchNorm/moving_mean"
        string_val: "ssd300/expanded_conv_13/depthwise/BatchNorm/moving_variance"
        string_val: "ssd300/expanded_conv_13/depthwise/depthwise_weights"
        string_val: "ssd300/expanded_conv_13/expand/BatchNorm/beta"
        string_val: "ssd300/expanded_conv_13/expand/BatchNorm/moving_mean"
        string_val: "ssd300/expanded_conv_13/expand/BatchNorm/moving_variance"
        string_val: "ssd300/expanded_conv_13/expand/weights"
        string_val: "ssd300/expanded_conv_13/project/BatchNorm/beta"
        string_val: "ssd300/expanded_conv_13/project/BatchNorm/moving_mean"
        string_val: "ssd300/expanded_conv_13/project/BatchNorm/moving_variance"
        string_val: "ssd300/expanded_conv_13/project/weights"
        string_val: "ssd300/expanded_conv_14/depthwise/BatchNorm/beta"
        string_val: "ssd300/expanded_conv_14/depthwise/BatchNorm/moving_mean"
        string_val: "ssd300/expanded_conv_14/depthwise/BatchNorm/moving_variance"
        string_val: "ssd300/expanded_conv_14/depthwise/depthwise_weights"
        string_val: "ssd300/expanded_conv_14/expand/BatchNorm/beta"
        string_val: "ssd300/expanded_conv_14/expand/BatchNorm/moving_mean"
        string_val: "ssd300/expanded_conv_14/expand/BatchNorm/moving_variance"
        string_val: "ssd300/expanded_conv_14/expand/weights"
        string_val: "ssd300/expanded_conv_14/project/BatchNorm/beta"
        string_val: "ssd300/expanded_conv_14/project/BatchNorm/moving_mean"
        string_val: "ssd300/expanded_conv_14/project/BatchNorm/moving_variance"
        string_val: "ssd300/expanded_conv_14/project/weights"
        string_val: "ssd300/expanded_conv_15/depthwise/BatchNorm/beta"
        string_val: "ssd300/expanded_conv_15/depthwise/BatchNorm/moving_mean"
        string_val: "ssd300/expanded_conv_15/depthwise/BatchNorm/moving_variance"
        string_val: "ssd300/expanded_conv_15/depthwise/depthwise_weights"
        string_val: "ssd300/expanded_conv_15/expand/BatchNorm/beta"
        string_val: "ssd300/expanded_conv_15/expand/BatchNorm/moving_mean"
        string_val: "ssd300/expanded_conv_15/expand/BatchNorm/moving_variance"
        string_val: "ssd300/expanded_conv_15/expand/weights"
        string_val: "ssd300/expanded_conv_15/project/BatchNorm/beta"
        string_val: "ssd300/expanded_conv_15/project/BatchNorm/moving_mean"
        string_val: "ssd300/expanded_conv_15/project/BatchNorm/moving_variance"
        string_val: "ssd300/expanded_conv_15/project/weights"
        string_val: "ssd300/expanded_conv_16/depthwise/BatchNorm/beta"
        string_val: "ssd300/expanded_conv_16/depthwise/BatchNorm/moving_mean"
        string_val: "ssd300/expanded_conv_16/depthwise/BatchNorm/moving_variance"
        string_val: "ssd300/expanded_conv_16/depthwise/depthwise_weights"
        string_val: "ssd300/expanded_conv_16/expand/BatchNorm/beta"
        string_val: "ssd300/expanded_conv_16/expand/BatchNorm/moving_mean"
        string_val: "ssd300/expanded_conv_16/expand/BatchNorm/moving_variance"
        string_val: "ssd300/expanded_conv_16/expand/weights"
        string_val: "ssd300/expanded_conv_16/project/BatchNorm/beta"
        string_val: "ssd300/expanded_conv_16/project/BatchNorm/moving_mean"
        string_val: "ssd300/expanded_conv_16/project/BatchNorm/moving_variance"
        string_val: "ssd300/expanded_conv_16/project/weights"
        string_val: "ssd300/expanded_conv_2/depthwise/BatchNorm/beta"
        string_val: "ssd300/expanded_conv_2/depthwise/BatchNorm/moving_mean"
        string_val: "ssd300/expanded_conv_2/depthwise/BatchNorm/moving_variance"
        string_val: "ssd300/expanded_conv_2/depthwise/depthwise_weights"
        string_val: "ssd300/expanded_conv_2/expand/BatchNorm/beta"
        string_val: "ssd300/expanded_conv_2/expand/BatchNorm/moving_mean"
        string_val: "ssd300/expanded_conv_2/expand/BatchNorm/moving_variance"
        string_val: "ssd300/expanded_conv_2/expand/weights"
        string_val: "ssd300/expanded_conv_2/project/BatchNorm/beta"
        string_val: "ssd300/expanded_conv_2/project/BatchNorm/moving_mean"
        string_val: "ssd300/expanded_conv_2/project/BatchNorm/moving_variance"
        string_val: "ssd300/expanded_conv_2/project/weights"
        string_val: "ssd300/expanded_conv_3/depthwise/BatchNorm/beta"
        string_val: "ssd300/expanded_conv_3/depthwise/BatchNorm/moving_mean"
        string_val: "ssd300/expanded_conv_3/depthwise/BatchNorm/moving_variance"
        string_val: "ssd300/expanded_conv_3/depthwise/depthwise_weights"
        string_val: "ssd300/expanded_conv_3/expand/BatchNorm/beta"
        string_val: "ssd300/expanded_conv_3/expand/BatchNorm/moving_mean"
        string_val: "ssd300/expanded_conv_3/expand/BatchNorm/moving_variance"
        string_val: "ssd300/expanded_conv_3/expand/weights"
        string_val: "ssd300/expanded_conv_3/project/BatchNorm/beta"
        string_val: "ssd300/expanded_conv_3/project/BatchNorm/moving_mean"
        string_val: "ssd300/expanded_conv_3/project/BatchNorm/moving_variance"
        string_val: "ssd300/expanded_conv_3/project/weights"
        string_val: "ssd300/expanded_conv_4/depthwise/BatchNorm/beta"
        string_val: "ssd300/expanded_conv_4/depthwise/BatchNorm/moving_mean"
        string_val: "ssd300/expanded_conv_4/depthwise/BatchNorm/moving_variance"
        string_val: "ssd300/expanded_conv_4/depthwise/depthwise_weights"
        string_val: "ssd300/expanded_conv_4/expand/BatchNorm/beta"
        string_val: "ssd300/expanded_conv_4/expand/BatchNorm/moving_mean"
        string_val: "ssd300/expanded_conv_4/expand/BatchNorm/moving_variance"
        string_val: "ssd300/expanded_conv_4/expand/weights"
        string_val: "ssd300/expanded_conv_4/project/BatchNorm/beta"
        string_val: "ssd300/expanded_conv_4/project/BatchNorm/moving_mean"
        string_val: "ssd300/expanded_conv_4/project/BatchNorm/moving_variance"
        string_val: "ssd300/expanded_conv_4/project/weights"
        string_val: "ssd300/expanded_conv_5/depthwise/BatchNorm/beta"
        string_val: "ssd300/expanded_conv_5/depthwise/BatchNorm/moving_mean"
        string_val: "ssd300/expanded_conv_5/depthwise/BatchNorm/moving_variance"
        string_val: "ssd300/expanded_conv_5/depthwise/depthwise_weights"
        string_val: "ssd300/expanded_conv_5/expand/BatchNorm/beta"
        string_val: "ssd300/expanded_conv_5/expand/BatchNorm/moving_mean"
        string_val: "ssd300/expanded_conv_5/expand/BatchNorm/moving_variance"
        string_val: "ssd300/expanded_conv_5/expand/weights"
        string_val: "ssd300/expanded_conv_5/project/BatchNorm/beta"
        string_val: "ssd300/expanded_conv_5/project/BatchNorm/moving_mean"
        string_val: "ssd300/expanded_conv_5/project/BatchNorm/moving_variance"
        string_val: "ssd300/expanded_conv_5/project/weights"
        string_val: "ssd300/expanded_conv_6/depthwise/BatchNorm/beta"
        string_val: "ssd300/expanded_conv_6/depthwise/BatchNorm/moving_mean"
        string_val: "ssd300/expanded_conv_6/depthwise/BatchNorm/moving_variance"
        string_val: "ssd300/expanded_conv_6/depthwise/depthwise_weights"
        string_val: "ssd300/expanded_conv_6/expand/BatchNorm/beta"
        string_val: "ssd300/expanded_conv_6/expand/BatchNorm/moving_mean"
        string_val: "ssd300/expanded_conv_6/expand/BatchNorm/moving_variance"
        string_val: "ssd300/expanded_conv_6/expand/weights"
        string_val: "ssd300/expanded_conv_6/project/BatchNorm/beta"
        string_val: "ssd300/expanded_conv_6/project/BatchNorm/moving_mean"
        string_val: "ssd300/expanded_conv_6/project/BatchNorm/moving_variance"
        string_val: "ssd300/expanded_conv_6/project/weights"
        string_val: "ssd300/expanded_conv_7/depthwise/BatchNorm/beta"
        string_val: "ssd300/expanded_conv_7/depthwise/BatchNorm/moving_mean"
        string_val: "ssd300/expanded_conv_7/depthwise/BatchNorm/moving_variance"
        string_val: "ssd300/expanded_conv_7/depthwise/depthwise_weights"
        string_val: "ssd300/expanded_conv_7/expand/BatchNorm/beta"
        string_val: "ssd300/expanded_conv_7/expand/BatchNorm/moving_mean"
        string_val: "ssd300/expanded_conv_7/expand/BatchNorm/moving_variance"
        string_val: "ssd300/expanded_conv_7/expand/weights"
        string_val: "ssd300/expanded_conv_7/project/BatchNorm/beta"
        string_val: "ssd300/expanded_conv_7/project/BatchNorm/moving_mean"
        string_val: "ssd300/expanded_conv_7/project/BatchNorm/moving_variance"
        string_val: "ssd300/expanded_conv_7/project/weights"
        string_val: "ssd300/expanded_conv_8/depthwise/BatchNorm/beta"
        string_val: "ssd300/expanded_conv_8/depthwise/BatchNorm/moving_mean"
        string_val: "ssd300/expanded_conv_8/depthwise/BatchNorm/moving_variance"
        string_val: "ssd300/expanded_conv_8/depthwise/depthwise_weights"
        string_val: "ssd300/expanded_conv_8/expand/BatchNorm/beta"
        string_val: "ssd300/expanded_conv_8/expand/BatchNorm/moving_mean"
        string_val: "ssd300/expanded_conv_8/expand/BatchNorm/moving_variance"
        string_val: "ssd300/expanded_conv_8/expand/weights"
        string_val: "ssd300/expanded_conv_8/project/BatchNorm/beta"
        string_val: "ssd300/expanded_conv_8/project/BatchNorm/moving_mean"
        string_val: "ssd300/expanded_conv_8/project/BatchNorm/moving_variance"
        string_val: "ssd300/expanded_conv_8/project/weights"
        string_val: "ssd300/expanded_conv_9/depthwise/BatchNorm/beta"
        string_val: "ssd300/expanded_conv_9/depthwise/BatchNorm/moving_mean"
        string_val: "ssd300/expanded_conv_9/depthwise/BatchNorm/moving_variance"
        string_val: "ssd300/expanded_conv_9/depthwise/depthwise_weights"
        string_val: "ssd300/expanded_conv_9/expand/BatchNorm/beta"
        string_val: "ssd300/expanded_conv_9/expand/BatchNorm/moving_mean"
        string_val: "ssd300/expanded_conv_9/expand/BatchNorm/moving_variance"
        string_val: "ssd300/expanded_conv_9/expand/weights"
        string_val: "ssd300/expanded_conv_9/project/BatchNorm/beta"
        string_val: "ssd300/expanded_conv_9/project/BatchNorm/moving_mean"
        string_val: "ssd300/expanded_conv_9/project/BatchNorm/moving_variance"
        string_val: "ssd300/expanded_conv_9/project/weights"
        string_val: "ssd300/layer_19_1_Conv2d_2_1x1_256/BatchNorm/beta"
        string_val: "ssd300/layer_19_1_Conv2d_2_1x1_256/BatchNorm/moving_mean"
        string_val: "ssd300/layer_19_1_Conv2d_2_1x1_256/BatchNorm/moving_variance"
        string_val: "ssd300/layer_19_1_Conv2d_2_1x1_256/weights"
        string_val: "ssd300/layer_19_1_Conv2d_3_1x1_128/BatchNorm/beta"
        string_val: "ssd300/layer_19_1_Conv2d_3_1x1_128/BatchNorm/moving_mean"
        string_val: "ssd300/layer_19_1_Conv2d_3_1x1_128/BatchNorm/moving_variance"
        string_val: "ssd300/layer_19_1_Conv2d_3_1x1_128/weights"
        string_val: "ssd300/layer_19_1_Conv2d_4_1x1_128/BatchNorm/beta"
        string_val: "ssd300/layer_19_1_Conv2d_4_1x1_128/BatchNorm/moving_mean"
        string_val: "ssd300/layer_19_1_Conv2d_4_1x1_128/BatchNorm/moving_variance"
        string_val: "ssd300/layer_19_1_Conv2d_4_1x1_128/weights"
        string_val: "ssd300/layer_19_1_Conv2d_5_1x1_64/BatchNorm/beta"
        string_val: "ssd300/layer_19_1_Conv2d_5_1x1_64/BatchNorm/moving_mean"
        string_val: "ssd300/layer_19_1_Conv2d_5_1x1_64/BatchNorm/moving_variance"
        string_val: "ssd300/layer_19_1_Conv2d_5_1x1_64/weights"
        string_val: "ssd300/layer_19_2_Conv2d_2_3x3_s2_512/BatchNorm/beta"
        string_val: "ssd300/layer_19_2_Conv2d_2_3x3_s2_512/BatchNorm/moving_mean"
        string_val: "ssd300/layer_19_2_Conv2d_2_3x3_s2_512/BatchNorm/moving_variance"
        string_val: "ssd300/layer_19_2_Conv2d_2_3x3_s2_512/weights"
        string_val: "ssd300/layer_19_2_Conv2d_2_3x3_s2_512_depthwise/BatchNorm/beta"
        string_val: "ssd300/layer_19_2_Conv2d_2_3x3_s2_512_depthwise/BatchNorm/moving_mean"
        string_val: "ssd300/layer_19_2_Conv2d_2_3x3_s2_512_depthwise/BatchNorm/moving_variance"
        string_val: "ssd300/layer_19_2_Conv2d_2_3x3_s2_512_depthwise/depthwise_weights"
        string_val: "ssd300/layer_19_2_Conv2d_3_3x3_s2_256/BatchNorm/beta"
        string_val: "ssd300/layer_19_2_Conv2d_3_3x3_s2_256/BatchNorm/moving_mean"
        string_val: "ssd300/layer_19_2_Conv2d_3_3x3_s2_256/BatchNorm/moving_variance"
        string_val: "ssd300/layer_19_2_Conv2d_3_3x3_s2_256/weights"
        string_val: "ssd300/layer_19_2_Conv2d_3_3x3_s2_256_depthwise/BatchNorm/beta"
        string_val: "ssd300/layer_19_2_Conv2d_3_3x3_s2_256_depthwise/BatchNorm/moving_mean"
        string_val: "ssd300/layer_19_2_Conv2d_3_3x3_s2_256_depthwise/BatchNorm/moving_variance"
        string_val: "ssd300/layer_19_2_Conv2d_3_3x3_s2_256_depthwise/depthwise_weights"
        string_val: "ssd300/layer_19_2_Conv2d_4_3x3_s2_256/BatchNorm/beta"
        string_val: "ssd300/layer_19_2_Conv2d_4_3x3_s2_256/BatchNorm/moving_mean"
        string_val: "ssd300/layer_19_2_Conv2d_4_3x3_s2_256/BatchNorm/moving_variance"
        string_val: "ssd300/layer_19_2_Conv2d_4_3x3_s2_256/weights"
        string_val: "ssd300/layer_19_2_Conv2d_4_3x3_s2_256_depthwise/BatchNorm/beta"
        string_val: "ssd300/layer_19_2_Conv2d_4_3x3_s2_256_depthwise/BatchNorm/moving_mean"
        string_val: "ssd300/layer_19_2_Conv2d_4_3x3_s2_256_depthwise/BatchNorm/moving_variance"
        string_val: "ssd300/layer_19_2_Conv2d_4_3x3_s2_256_depthwise/depthwise_weights"
        string_val: "ssd300/layer_19_2_Conv2d_5_3x3_s2_128/BatchNorm/beta"
        string_val: "ssd300/layer_19_2_Conv2d_5_3x3_s2_128/BatchNorm/moving_mean"
        string_val: "ssd300/layer_19_2_Conv2d_5_3x3_s2_128/BatchNorm/moving_variance"
        string_val: "ssd300/layer_19_2_Conv2d_5_3x3_s2_128/weights"
        string_val: "ssd300/layer_19_2_Conv2d_5_3x3_s2_128_depthwise/BatchNorm/beta"
        string_val: "ssd300/layer_19_2_Conv2d_5_3x3_s2_128_depthwise/BatchNorm/moving_mean"
        string_val: "ssd300/layer_19_2_Conv2d_5_3x3_s2_128_depthwise/BatchNorm/moving_variance"
        string_val: "ssd300/layer_19_2_Conv2d_5_3x3_s2_128_depthwise/depthwise_weights"
        string_val: "ssd300/multibox_head/cls_0/bias"
        string_val: "ssd300/multibox_head/cls_0/kernel"
        string_val: "ssd300/multibox_head/cls_1/bias"
        string_val: "ssd300/multibox_head/cls_1/kernel"
        string_val: "ssd300/multibox_head/loc_0/bias"
        string_val: "ssd300/multibox_head/loc_0/kernel"
        string_val: "ssd300/multibox_head/loc_1/bias"
        string_val: "ssd300/multibox_head/loc_1/kernel"
      }
    }
  }
}
node {
  name: "save/RestoreV2/shape_and_slices"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 264
          }
        }
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2/tensor_names"
  input: "save/RestoreV2/shape_and_slices"
  device: "/device:CPU:0"
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign"
  op: "Assign"
  input: "ssd300/Conv/BatchNorm/beta"
  input: "save/RestoreV2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/Conv/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_1"
  op: "Assign"
  input: "ssd300/Conv/BatchNorm/moving_mean"
  input: "save/RestoreV2:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/Conv/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_2"
  op: "Assign"
  input: "ssd300/Conv/BatchNorm/moving_variance"
  input: "save/RestoreV2:2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/Conv/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_3"
  op: "Assign"
  input: "ssd300/Conv/weights"
  input: "save/RestoreV2:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/Conv/weights"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_4"
  op: "Assign"
  input: "ssd300/Conv_1/BatchNorm/beta"
  input: "save/RestoreV2:4"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/Conv_1/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_5"
  op: "Assign"
  input: "ssd300/Conv_1/BatchNorm/moving_mean"
  input: "save/RestoreV2:5"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/Conv_1/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_6"
  op: "Assign"
  input: "ssd300/Conv_1/BatchNorm/moving_variance"
  input: "save/RestoreV2:6"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/Conv_1/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_7"
  op: "Assign"
  input: "ssd300/Conv_1/weights"
  input: "save/RestoreV2:7"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/Conv_1/weights"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_8"
  op: "Assign"
  input: "ssd300/expanded_conv/depthwise/BatchNorm/beta"
  input: "save/RestoreV2:8"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv/depthwise/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_9"
  op: "Assign"
  input: "ssd300/expanded_conv/depthwise/BatchNorm/moving_mean"
  input: "save/RestoreV2:9"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv/depthwise/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_10"
  op: "Assign"
  input: "ssd300/expanded_conv/depthwise/BatchNorm/moving_variance"
  input: "save/RestoreV2:10"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv/depthwise/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_11"
  op: "Assign"
  input: "ssd300/expanded_conv/depthwise/depthwise_weights"
  input: "save/RestoreV2:11"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv/depthwise/depthwise_weights"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_12"
  op: "Assign"
  input: "ssd300/expanded_conv/project/BatchNorm/beta"
  input: "save/RestoreV2:12"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv/project/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_13"
  op: "Assign"
  input: "ssd300/expanded_conv/project/BatchNorm/moving_mean"
  input: "save/RestoreV2:13"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv/project/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_14"
  op: "Assign"
  input: "ssd300/expanded_conv/project/BatchNorm/moving_variance"
  input: "save/RestoreV2:14"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv/project/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_15"
  op: "Assign"
  input: "ssd300/expanded_conv/project/weights"
  input: "save/RestoreV2:15"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv/project/weights"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_16"
  op: "Assign"
  input: "ssd300/expanded_conv_1/depthwise/BatchNorm/beta"
  input: "save/RestoreV2:16"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv_1/depthwise/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_17"
  op: "Assign"
  input: "ssd300/expanded_conv_1/depthwise/BatchNorm/moving_mean"
  input: "save/RestoreV2:17"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv_1/depthwise/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_18"
  op: "Assign"
  input: "ssd300/expanded_conv_1/depthwise/BatchNorm/moving_variance"
  input: "save/RestoreV2:18"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv_1/depthwise/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_19"
  op: "Assign"
  input: "ssd300/expanded_conv_1/depthwise/depthwise_weights"
  input: "save/RestoreV2:19"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv_1/depthwise/depthwise_weights"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_20"
  op: "Assign"
  input: "ssd300/expanded_conv_1/expand/BatchNorm/beta"
  input: "save/RestoreV2:20"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv_1/expand/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_21"
  op: "Assign"
  input: "ssd300/expanded_conv_1/expand/BatchNorm/moving_mean"
  input: "save/RestoreV2:21"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv_1/expand/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_22"
  op: "Assign"
  input: "ssd300/expanded_conv_1/expand/BatchNorm/moving_variance"
  input: "save/RestoreV2:22"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv_1/expand/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_23"
  op: "Assign"
  input: "ssd300/expanded_conv_1/expand/weights"
  input: "save/RestoreV2:23"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv_1/expand/weights"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_24"
  op: "Assign"
  input: "ssd300/expanded_conv_1/project/BatchNorm/beta"
  input: "save/RestoreV2:24"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv_1/project/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_25"
  op: "Assign"
  input: "ssd300/expanded_conv_1/project/BatchNorm/moving_mean"
  input: "save/RestoreV2:25"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv_1/project/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_26"
  op: "Assign"
  input: "ssd300/expanded_conv_1/project/BatchNorm/moving_variance"
  input: "save/RestoreV2:26"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv_1/project/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_27"
  op: "Assign"
  input: "ssd300/expanded_conv_1/project/weights"
  input: "save/RestoreV2:27"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv_1/project/weights"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_28"
  op: "Assign"
  input: "ssd300/expanded_conv_10/depthwise/BatchNorm/beta"
  input: "save/RestoreV2:28"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv_10/depthwise/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_29"
  op: "Assign"
  input: "ssd300/expanded_conv_10/depthwise/BatchNorm/moving_mean"
  input: "save/RestoreV2:29"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv_10/depthwise/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_30"
  op: "Assign"
  input: "ssd300/expanded_conv_10/depthwise/BatchNorm/moving_variance"
  input: "save/RestoreV2:30"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv_10/depthwise/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_31"
  op: "Assign"
  input: "ssd300/expanded_conv_10/depthwise/depthwise_weights"
  input: "save/RestoreV2:31"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv_10/depthwise/depthwise_weights"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_32"
  op: "Assign"
  input: "ssd300/expanded_conv_10/expand/BatchNorm/beta"
  input: "save/RestoreV2:32"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv_10/expand/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_33"
  op: "Assign"
  input: "ssd300/expanded_conv_10/expand/BatchNorm/moving_mean"
  input: "save/RestoreV2:33"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv_10/expand/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_34"
  op: "Assign"
  input: "ssd300/expanded_conv_10/expand/BatchNorm/moving_variance"
  input: "save/RestoreV2:34"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv_10/expand/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_35"
  op: "Assign"
  input: "ssd300/expanded_conv_10/expand/weights"
  input: "save/RestoreV2:35"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv_10/expand/weights"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_36"
  op: "Assign"
  input: "ssd300/expanded_conv_10/project/BatchNorm/beta"
  input: "save/RestoreV2:36"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv_10/project/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_37"
  op: "Assign"
  input: "ssd300/expanded_conv_10/project/BatchNorm/moving_mean"
  input: "save/RestoreV2:37"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv_10/project/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_38"
  op: "Assign"
  input: "ssd300/expanded_conv_10/project/BatchNorm/moving_variance"
  input: "save/RestoreV2:38"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv_10/project/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_39"
  op: "Assign"
  input: "ssd300/expanded_conv_10/project/weights"
  input: "save/RestoreV2:39"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv_10/project/weights"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_40"
  op: "Assign"
  input: "ssd300/expanded_conv_11/depthwise/BatchNorm/beta"
  input: "save/RestoreV2:40"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv_11/depthwise/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_41"
  op: "Assign"
  input: "ssd300/expanded_conv_11/depthwise/BatchNorm/moving_mean"
  input: "save/RestoreV2:41"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv_11/depthwise/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_42"
  op: "Assign"
  input: "ssd300/expanded_conv_11/depthwise/BatchNorm/moving_variance"
  input: "save/RestoreV2:42"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv_11/depthwise/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_43"
  op: "Assign"
  input: "ssd300/expanded_conv_11/depthwise/depthwise_weights"
  input: "save/RestoreV2:43"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv_11/depthwise/depthwise_weights"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_44"
  op: "Assign"
  input: "ssd300/expanded_conv_11/expand/BatchNorm/beta"
  input: "save/RestoreV2:44"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv_11/expand/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_45"
  op: "Assign"
  input: "ssd300/expanded_conv_11/expand/BatchNorm/moving_mean"
  input: "save/RestoreV2:45"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv_11/expand/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_46"
  op: "Assign"
  input: "ssd300/expanded_conv_11/expand/BatchNorm/moving_variance"
  input: "save/RestoreV2:46"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv_11/expand/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_47"
  op: "Assign"
  input: "ssd300/expanded_conv_11/expand/weights"
  input: "save/RestoreV2:47"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv_11/expand/weights"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_48"
  op: "Assign"
  input: "ssd300/expanded_conv_11/project/BatchNorm/beta"
  input: "save/RestoreV2:48"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv_11/project/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_49"
  op: "Assign"
  input: "ssd300/expanded_conv_11/project/BatchNorm/moving_mean"
  input: "save/RestoreV2:49"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv_11/project/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_50"
  op: "Assign"
  input: "ssd300/expanded_conv_11/project/BatchNorm/moving_variance"
  input: "save/RestoreV2:50"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv_11/project/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_51"
  op: "Assign"
  input: "ssd300/expanded_conv_11/project/weights"
  input: "save/RestoreV2:51"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv_11/project/weights"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_52"
  op: "Assign"
  input: "ssd300/expanded_conv_12/depthwise/BatchNorm/beta"
  input: "save/RestoreV2:52"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv_12/depthwise/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_53"
  op: "Assign"
  input: "ssd300/expanded_conv_12/depthwise/BatchNorm/moving_mean"
  input: "save/RestoreV2:53"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv_12/depthwise/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_54"
  op: "Assign"
  input: "ssd300/expanded_conv_12/depthwise/BatchNorm/moving_variance"
  input: "save/RestoreV2:54"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv_12/depthwise/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_55"
  op: "Assign"
  input: "ssd300/expanded_conv_12/depthwise/depthwise_weights"
  input: "save/RestoreV2:55"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv_12/depthwise/depthwise_weights"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_56"
  op: "Assign"
  input: "ssd300/expanded_conv_12/expand/BatchNorm/beta"
  input: "save/RestoreV2:56"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv_12/expand/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_57"
  op: "Assign"
  input: "ssd300/expanded_conv_12/expand/BatchNorm/moving_mean"
  input: "save/RestoreV2:57"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv_12/expand/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_58"
  op: "Assign"
  input: "ssd300/expanded_conv_12/expand/BatchNorm/moving_variance"
  input: "save/RestoreV2:58"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv_12/expand/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_59"
  op: "Assign"
  input: "ssd300/expanded_conv_12/expand/weights"
  input: "save/RestoreV2:59"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv_12/expand/weights"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_60"
  op: "Assign"
  input: "ssd300/expanded_conv_12/project/BatchNorm/beta"
  input: "save/RestoreV2:60"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv_12/project/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_61"
  op: "Assign"
  input: "ssd300/expanded_conv_12/project/BatchNorm/moving_mean"
  input: "save/RestoreV2:61"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv_12/project/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_62"
  op: "Assign"
  input: "ssd300/expanded_conv_12/project/BatchNorm/moving_variance"
  input: "save/RestoreV2:62"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv_12/project/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_63"
  op: "Assign"
  input: "ssd300/expanded_conv_12/project/weights"
  input: "save/RestoreV2:63"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv_12/project/weights"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_64"
  op: "Assign"
  input: "ssd300/expanded_conv_13/depthwise/BatchNorm/beta"
  input: "save/RestoreV2:64"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv_13/depthwise/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_65"
  op: "Assign"
  input: "ssd300/expanded_conv_13/depthwise/BatchNorm/moving_mean"
  input: "save/RestoreV2:65"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv_13/depthwise/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_66"
  op: "Assign"
  input: "ssd300/expanded_conv_13/depthwise/BatchNorm/moving_variance"
  input: "save/RestoreV2:66"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv_13/depthwise/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_67"
  op: "Assign"
  input: "ssd300/expanded_conv_13/depthwise/depthwise_weights"
  input: "save/RestoreV2:67"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv_13/depthwise/depthwise_weights"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_68"
  op: "Assign"
  input: "ssd300/expanded_conv_13/expand/BatchNorm/beta"
  input: "save/RestoreV2:68"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv_13/expand/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_69"
  op: "Assign"
  input: "ssd300/expanded_conv_13/expand/BatchNorm/moving_mean"
  input: "save/RestoreV2:69"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv_13/expand/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_70"
  op: "Assign"
  input: "ssd300/expanded_conv_13/expand/BatchNorm/moving_variance"
  input: "save/RestoreV2:70"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv_13/expand/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_71"
  op: "Assign"
  input: "ssd300/expanded_conv_13/expand/weights"
  input: "save/RestoreV2:71"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv_13/expand/weights"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_72"
  op: "Assign"
  input: "ssd300/expanded_conv_13/project/BatchNorm/beta"
  input: "save/RestoreV2:72"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv_13/project/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_73"
  op: "Assign"
  input: "ssd300/expanded_conv_13/project/BatchNorm/moving_mean"
  input: "save/RestoreV2:73"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv_13/project/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_74"
  op: "Assign"
  input: "ssd300/expanded_conv_13/project/BatchNorm/moving_variance"
  input: "save/RestoreV2:74"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv_13/project/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_75"
  op: "Assign"
  input: "ssd300/expanded_conv_13/project/weights"
  input: "save/RestoreV2:75"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv_13/project/weights"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_76"
  op: "Assign"
  input: "ssd300/expanded_conv_14/depthwise/BatchNorm/beta"
  input: "save/RestoreV2:76"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv_14/depthwise/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_77"
  op: "Assign"
  input: "ssd300/expanded_conv_14/depthwise/BatchNorm/moving_mean"
  input: "save/RestoreV2:77"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv_14/depthwise/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_78"
  op: "Assign"
  input: "ssd300/expanded_conv_14/depthwise/BatchNorm/moving_variance"
  input: "save/RestoreV2:78"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv_14/depthwise/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_79"
  op: "Assign"
  input: "ssd300/expanded_conv_14/depthwise/depthwise_weights"
  input: "save/RestoreV2:79"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv_14/depthwise/depthwise_weights"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_80"
  op: "Assign"
  input: "ssd300/expanded_conv_14/expand/BatchNorm/beta"
  input: "save/RestoreV2:80"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv_14/expand/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_81"
  op: "Assign"
  input: "ssd300/expanded_conv_14/expand/BatchNorm/moving_mean"
  input: "save/RestoreV2:81"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv_14/expand/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_82"
  op: "Assign"
  input: "ssd300/expanded_conv_14/expand/BatchNorm/moving_variance"
  input: "save/RestoreV2:82"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv_14/expand/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_83"
  op: "Assign"
  input: "ssd300/expanded_conv_14/expand/weights"
  input: "save/RestoreV2:83"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv_14/expand/weights"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_84"
  op: "Assign"
  input: "ssd300/expanded_conv_14/project/BatchNorm/beta"
  input: "save/RestoreV2:84"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv_14/project/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_85"
  op: "Assign"
  input: "ssd300/expanded_conv_14/project/BatchNorm/moving_mean"
  input: "save/RestoreV2:85"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv_14/project/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_86"
  op: "Assign"
  input: "ssd300/expanded_conv_14/project/BatchNorm/moving_variance"
  input: "save/RestoreV2:86"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv_14/project/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_87"
  op: "Assign"
  input: "ssd300/expanded_conv_14/project/weights"
  input: "save/RestoreV2:87"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv_14/project/weights"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_88"
  op: "Assign"
  input: "ssd300/expanded_conv_15/depthwise/BatchNorm/beta"
  input: "save/RestoreV2:88"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv_15/depthwise/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_89"
  op: "Assign"
  input: "ssd300/expanded_conv_15/depthwise/BatchNorm/moving_mean"
  input: "save/RestoreV2:89"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv_15/depthwise/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_90"
  op: "Assign"
  input: "ssd300/expanded_conv_15/depthwise/BatchNorm/moving_variance"
  input: "save/RestoreV2:90"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv_15/depthwise/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_91"
  op: "Assign"
  input: "ssd300/expanded_conv_15/depthwise/depthwise_weights"
  input: "save/RestoreV2:91"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv_15/depthwise/depthwise_weights"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_92"
  op: "Assign"
  input: "ssd300/expanded_conv_15/expand/BatchNorm/beta"
  input: "save/RestoreV2:92"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv_15/expand/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_93"
  op: "Assign"
  input: "ssd300/expanded_conv_15/expand/BatchNorm/moving_mean"
  input: "save/RestoreV2:93"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv_15/expand/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_94"
  op: "Assign"
  input: "ssd300/expanded_conv_15/expand/BatchNorm/moving_variance"
  input: "save/RestoreV2:94"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv_15/expand/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_95"
  op: "Assign"
  input: "ssd300/expanded_conv_15/expand/weights"
  input: "save/RestoreV2:95"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv_15/expand/weights"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_96"
  op: "Assign"
  input: "ssd300/expanded_conv_15/project/BatchNorm/beta"
  input: "save/RestoreV2:96"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv_15/project/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_97"
  op: "Assign"
  input: "ssd300/expanded_conv_15/project/BatchNorm/moving_mean"
  input: "save/RestoreV2:97"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv_15/project/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_98"
  op: "Assign"
  input: "ssd300/expanded_conv_15/project/BatchNorm/moving_variance"
  input: "save/RestoreV2:98"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv_15/project/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_99"
  op: "Assign"
  input: "ssd300/expanded_conv_15/project/weights"
  input: "save/RestoreV2:99"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv_15/project/weights"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_100"
  op: "Assign"
  input: "ssd300/expanded_conv_16/depthwise/BatchNorm/beta"
  input: "save/RestoreV2:100"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv_16/depthwise/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_101"
  op: "Assign"
  input: "ssd300/expanded_conv_16/depthwise/BatchNorm/moving_mean"
  input: "save/RestoreV2:101"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv_16/depthwise/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_102"
  op: "Assign"
  input: "ssd300/expanded_conv_16/depthwise/BatchNorm/moving_variance"
  input: "save/RestoreV2:102"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv_16/depthwise/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_103"
  op: "Assign"
  input: "ssd300/expanded_conv_16/depthwise/depthwise_weights"
  input: "save/RestoreV2:103"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv_16/depthwise/depthwise_weights"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_104"
  op: "Assign"
  input: "ssd300/expanded_conv_16/expand/BatchNorm/beta"
  input: "save/RestoreV2:104"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv_16/expand/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_105"
  op: "Assign"
  input: "ssd300/expanded_conv_16/expand/BatchNorm/moving_mean"
  input: "save/RestoreV2:105"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv_16/expand/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_106"
  op: "Assign"
  input: "ssd300/expanded_conv_16/expand/BatchNorm/moving_variance"
  input: "save/RestoreV2:106"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv_16/expand/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_107"
  op: "Assign"
  input: "ssd300/expanded_conv_16/expand/weights"
  input: "save/RestoreV2:107"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv_16/expand/weights"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_108"
  op: "Assign"
  input: "ssd300/expanded_conv_16/project/BatchNorm/beta"
  input: "save/RestoreV2:108"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv_16/project/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_109"
  op: "Assign"
  input: "ssd300/expanded_conv_16/project/BatchNorm/moving_mean"
  input: "save/RestoreV2:109"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv_16/project/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_110"
  op: "Assign"
  input: "ssd300/expanded_conv_16/project/BatchNorm/moving_variance"
  input: "save/RestoreV2:110"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv_16/project/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_111"
  op: "Assign"
  input: "ssd300/expanded_conv_16/project/weights"
  input: "save/RestoreV2:111"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv_16/project/weights"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_112"
  op: "Assign"
  input: "ssd300/expanded_conv_2/depthwise/BatchNorm/beta"
  input: "save/RestoreV2:112"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv_2/depthwise/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_113"
  op: "Assign"
  input: "ssd300/expanded_conv_2/depthwise/BatchNorm/moving_mean"
  input: "save/RestoreV2:113"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv_2/depthwise/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_114"
  op: "Assign"
  input: "ssd300/expanded_conv_2/depthwise/BatchNorm/moving_variance"
  input: "save/RestoreV2:114"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv_2/depthwise/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_115"
  op: "Assign"
  input: "ssd300/expanded_conv_2/depthwise/depthwise_weights"
  input: "save/RestoreV2:115"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv_2/depthwise/depthwise_weights"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_116"
  op: "Assign"
  input: "ssd300/expanded_conv_2/expand/BatchNorm/beta"
  input: "save/RestoreV2:116"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv_2/expand/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_117"
  op: "Assign"
  input: "ssd300/expanded_conv_2/expand/BatchNorm/moving_mean"
  input: "save/RestoreV2:117"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv_2/expand/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_118"
  op: "Assign"
  input: "ssd300/expanded_conv_2/expand/BatchNorm/moving_variance"
  input: "save/RestoreV2:118"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv_2/expand/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_119"
  op: "Assign"
  input: "ssd300/expanded_conv_2/expand/weights"
  input: "save/RestoreV2:119"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv_2/expand/weights"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_120"
  op: "Assign"
  input: "ssd300/expanded_conv_2/project/BatchNorm/beta"
  input: "save/RestoreV2:120"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv_2/project/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_121"
  op: "Assign"
  input: "ssd300/expanded_conv_2/project/BatchNorm/moving_mean"
  input: "save/RestoreV2:121"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv_2/project/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_122"
  op: "Assign"
  input: "ssd300/expanded_conv_2/project/BatchNorm/moving_variance"
  input: "save/RestoreV2:122"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv_2/project/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_123"
  op: "Assign"
  input: "ssd300/expanded_conv_2/project/weights"
  input: "save/RestoreV2:123"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv_2/project/weights"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_124"
  op: "Assign"
  input: "ssd300/expanded_conv_3/depthwise/BatchNorm/beta"
  input: "save/RestoreV2:124"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv_3/depthwise/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_125"
  op: "Assign"
  input: "ssd300/expanded_conv_3/depthwise/BatchNorm/moving_mean"
  input: "save/RestoreV2:125"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv_3/depthwise/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_126"
  op: "Assign"
  input: "ssd300/expanded_conv_3/depthwise/BatchNorm/moving_variance"
  input: "save/RestoreV2:126"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv_3/depthwise/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_127"
  op: "Assign"
  input: "ssd300/expanded_conv_3/depthwise/depthwise_weights"
  input: "save/RestoreV2:127"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv_3/depthwise/depthwise_weights"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_128"
  op: "Assign"
  input: "ssd300/expanded_conv_3/expand/BatchNorm/beta"
  input: "save/RestoreV2:128"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv_3/expand/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_129"
  op: "Assign"
  input: "ssd300/expanded_conv_3/expand/BatchNorm/moving_mean"
  input: "save/RestoreV2:129"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv_3/expand/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_130"
  op: "Assign"
  input: "ssd300/expanded_conv_3/expand/BatchNorm/moving_variance"
  input: "save/RestoreV2:130"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv_3/expand/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_131"
  op: "Assign"
  input: "ssd300/expanded_conv_3/expand/weights"
  input: "save/RestoreV2:131"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv_3/expand/weights"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_132"
  op: "Assign"
  input: "ssd300/expanded_conv_3/project/BatchNorm/beta"
  input: "save/RestoreV2:132"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv_3/project/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_133"
  op: "Assign"
  input: "ssd300/expanded_conv_3/project/BatchNorm/moving_mean"
  input: "save/RestoreV2:133"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv_3/project/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_134"
  op: "Assign"
  input: "ssd300/expanded_conv_3/project/BatchNorm/moving_variance"
  input: "save/RestoreV2:134"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv_3/project/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_135"
  op: "Assign"
  input: "ssd300/expanded_conv_3/project/weights"
  input: "save/RestoreV2:135"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv_3/project/weights"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_136"
  op: "Assign"
  input: "ssd300/expanded_conv_4/depthwise/BatchNorm/beta"
  input: "save/RestoreV2:136"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv_4/depthwise/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_137"
  op: "Assign"
  input: "ssd300/expanded_conv_4/depthwise/BatchNorm/moving_mean"
  input: "save/RestoreV2:137"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv_4/depthwise/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_138"
  op: "Assign"
  input: "ssd300/expanded_conv_4/depthwise/BatchNorm/moving_variance"
  input: "save/RestoreV2:138"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv_4/depthwise/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_139"
  op: "Assign"
  input: "ssd300/expanded_conv_4/depthwise/depthwise_weights"
  input: "save/RestoreV2:139"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv_4/depthwise/depthwise_weights"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_140"
  op: "Assign"
  input: "ssd300/expanded_conv_4/expand/BatchNorm/beta"
  input: "save/RestoreV2:140"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv_4/expand/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_141"
  op: "Assign"
  input: "ssd300/expanded_conv_4/expand/BatchNorm/moving_mean"
  input: "save/RestoreV2:141"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv_4/expand/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_142"
  op: "Assign"
  input: "ssd300/expanded_conv_4/expand/BatchNorm/moving_variance"
  input: "save/RestoreV2:142"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv_4/expand/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_143"
  op: "Assign"
  input: "ssd300/expanded_conv_4/expand/weights"
  input: "save/RestoreV2:143"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv_4/expand/weights"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_144"
  op: "Assign"
  input: "ssd300/expanded_conv_4/project/BatchNorm/beta"
  input: "save/RestoreV2:144"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv_4/project/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_145"
  op: "Assign"
  input: "ssd300/expanded_conv_4/project/BatchNorm/moving_mean"
  input: "save/RestoreV2:145"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv_4/project/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_146"
  op: "Assign"
  input: "ssd300/expanded_conv_4/project/BatchNorm/moving_variance"
  input: "save/RestoreV2:146"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv_4/project/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_147"
  op: "Assign"
  input: "ssd300/expanded_conv_4/project/weights"
  input: "save/RestoreV2:147"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv_4/project/weights"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_148"
  op: "Assign"
  input: "ssd300/expanded_conv_5/depthwise/BatchNorm/beta"
  input: "save/RestoreV2:148"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv_5/depthwise/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_149"
  op: "Assign"
  input: "ssd300/expanded_conv_5/depthwise/BatchNorm/moving_mean"
  input: "save/RestoreV2:149"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv_5/depthwise/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_150"
  op: "Assign"
  input: "ssd300/expanded_conv_5/depthwise/BatchNorm/moving_variance"
  input: "save/RestoreV2:150"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv_5/depthwise/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_151"
  op: "Assign"
  input: "ssd300/expanded_conv_5/depthwise/depthwise_weights"
  input: "save/RestoreV2:151"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv_5/depthwise/depthwise_weights"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_152"
  op: "Assign"
  input: "ssd300/expanded_conv_5/expand/BatchNorm/beta"
  input: "save/RestoreV2:152"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv_5/expand/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_153"
  op: "Assign"
  input: "ssd300/expanded_conv_5/expand/BatchNorm/moving_mean"
  input: "save/RestoreV2:153"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv_5/expand/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_154"
  op: "Assign"
  input: "ssd300/expanded_conv_5/expand/BatchNorm/moving_variance"
  input: "save/RestoreV2:154"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv_5/expand/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_155"
  op: "Assign"
  input: "ssd300/expanded_conv_5/expand/weights"
  input: "save/RestoreV2:155"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv_5/expand/weights"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_156"
  op: "Assign"
  input: "ssd300/expanded_conv_5/project/BatchNorm/beta"
  input: "save/RestoreV2:156"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv_5/project/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_157"
  op: "Assign"
  input: "ssd300/expanded_conv_5/project/BatchNorm/moving_mean"
  input: "save/RestoreV2:157"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv_5/project/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_158"
  op: "Assign"
  input: "ssd300/expanded_conv_5/project/BatchNorm/moving_variance"
  input: "save/RestoreV2:158"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv_5/project/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_159"
  op: "Assign"
  input: "ssd300/expanded_conv_5/project/weights"
  input: "save/RestoreV2:159"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv_5/project/weights"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_160"
  op: "Assign"
  input: "ssd300/expanded_conv_6/depthwise/BatchNorm/beta"
  input: "save/RestoreV2:160"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv_6/depthwise/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_161"
  op: "Assign"
  input: "ssd300/expanded_conv_6/depthwise/BatchNorm/moving_mean"
  input: "save/RestoreV2:161"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv_6/depthwise/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_162"
  op: "Assign"
  input: "ssd300/expanded_conv_6/depthwise/BatchNorm/moving_variance"
  input: "save/RestoreV2:162"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv_6/depthwise/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_163"
  op: "Assign"
  input: "ssd300/expanded_conv_6/depthwise/depthwise_weights"
  input: "save/RestoreV2:163"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv_6/depthwise/depthwise_weights"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_164"
  op: "Assign"
  input: "ssd300/expanded_conv_6/expand/BatchNorm/beta"
  input: "save/RestoreV2:164"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv_6/expand/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_165"
  op: "Assign"
  input: "ssd300/expanded_conv_6/expand/BatchNorm/moving_mean"
  input: "save/RestoreV2:165"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv_6/expand/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_166"
  op: "Assign"
  input: "ssd300/expanded_conv_6/expand/BatchNorm/moving_variance"
  input: "save/RestoreV2:166"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv_6/expand/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_167"
  op: "Assign"
  input: "ssd300/expanded_conv_6/expand/weights"
  input: "save/RestoreV2:167"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv_6/expand/weights"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_168"
  op: "Assign"
  input: "ssd300/expanded_conv_6/project/BatchNorm/beta"
  input: "save/RestoreV2:168"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv_6/project/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_169"
  op: "Assign"
  input: "ssd300/expanded_conv_6/project/BatchNorm/moving_mean"
  input: "save/RestoreV2:169"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv_6/project/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_170"
  op: "Assign"
  input: "ssd300/expanded_conv_6/project/BatchNorm/moving_variance"
  input: "save/RestoreV2:170"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv_6/project/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_171"
  op: "Assign"
  input: "ssd300/expanded_conv_6/project/weights"
  input: "save/RestoreV2:171"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv_6/project/weights"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_172"
  op: "Assign"
  input: "ssd300/expanded_conv_7/depthwise/BatchNorm/beta"
  input: "save/RestoreV2:172"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv_7/depthwise/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_173"
  op: "Assign"
  input: "ssd300/expanded_conv_7/depthwise/BatchNorm/moving_mean"
  input: "save/RestoreV2:173"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv_7/depthwise/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_174"
  op: "Assign"
  input: "ssd300/expanded_conv_7/depthwise/BatchNorm/moving_variance"
  input: "save/RestoreV2:174"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv_7/depthwise/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_175"
  op: "Assign"
  input: "ssd300/expanded_conv_7/depthwise/depthwise_weights"
  input: "save/RestoreV2:175"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv_7/depthwise/depthwise_weights"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_176"
  op: "Assign"
  input: "ssd300/expanded_conv_7/expand/BatchNorm/beta"
  input: "save/RestoreV2:176"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv_7/expand/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_177"
  op: "Assign"
  input: "ssd300/expanded_conv_7/expand/BatchNorm/moving_mean"
  input: "save/RestoreV2:177"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv_7/expand/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_178"
  op: "Assign"
  input: "ssd300/expanded_conv_7/expand/BatchNorm/moving_variance"
  input: "save/RestoreV2:178"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv_7/expand/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_179"
  op: "Assign"
  input: "ssd300/expanded_conv_7/expand/weights"
  input: "save/RestoreV2:179"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv_7/expand/weights"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_180"
  op: "Assign"
  input: "ssd300/expanded_conv_7/project/BatchNorm/beta"
  input: "save/RestoreV2:180"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv_7/project/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_181"
  op: "Assign"
  input: "ssd300/expanded_conv_7/project/BatchNorm/moving_mean"
  input: "save/RestoreV2:181"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv_7/project/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_182"
  op: "Assign"
  input: "ssd300/expanded_conv_7/project/BatchNorm/moving_variance"
  input: "save/RestoreV2:182"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv_7/project/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_183"
  op: "Assign"
  input: "ssd300/expanded_conv_7/project/weights"
  input: "save/RestoreV2:183"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv_7/project/weights"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_184"
  op: "Assign"
  input: "ssd300/expanded_conv_8/depthwise/BatchNorm/beta"
  input: "save/RestoreV2:184"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv_8/depthwise/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_185"
  op: "Assign"
  input: "ssd300/expanded_conv_8/depthwise/BatchNorm/moving_mean"
  input: "save/RestoreV2:185"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv_8/depthwise/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_186"
  op: "Assign"
  input: "ssd300/expanded_conv_8/depthwise/BatchNorm/moving_variance"
  input: "save/RestoreV2:186"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv_8/depthwise/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_187"
  op: "Assign"
  input: "ssd300/expanded_conv_8/depthwise/depthwise_weights"
  input: "save/RestoreV2:187"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv_8/depthwise/depthwise_weights"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_188"
  op: "Assign"
  input: "ssd300/expanded_conv_8/expand/BatchNorm/beta"
  input: "save/RestoreV2:188"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv_8/expand/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_189"
  op: "Assign"
  input: "ssd300/expanded_conv_8/expand/BatchNorm/moving_mean"
  input: "save/RestoreV2:189"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv_8/expand/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_190"
  op: "Assign"
  input: "ssd300/expanded_conv_8/expand/BatchNorm/moving_variance"
  input: "save/RestoreV2:190"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv_8/expand/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_191"
  op: "Assign"
  input: "ssd300/expanded_conv_8/expand/weights"
  input: "save/RestoreV2:191"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv_8/expand/weights"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_192"
  op: "Assign"
  input: "ssd300/expanded_conv_8/project/BatchNorm/beta"
  input: "save/RestoreV2:192"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv_8/project/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_193"
  op: "Assign"
  input: "ssd300/expanded_conv_8/project/BatchNorm/moving_mean"
  input: "save/RestoreV2:193"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv_8/project/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_194"
  op: "Assign"
  input: "ssd300/expanded_conv_8/project/BatchNorm/moving_variance"
  input: "save/RestoreV2:194"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv_8/project/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_195"
  op: "Assign"
  input: "ssd300/expanded_conv_8/project/weights"
  input: "save/RestoreV2:195"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv_8/project/weights"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_196"
  op: "Assign"
  input: "ssd300/expanded_conv_9/depthwise/BatchNorm/beta"
  input: "save/RestoreV2:196"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv_9/depthwise/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_197"
  op: "Assign"
  input: "ssd300/expanded_conv_9/depthwise/BatchNorm/moving_mean"
  input: "save/RestoreV2:197"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv_9/depthwise/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_198"
  op: "Assign"
  input: "ssd300/expanded_conv_9/depthwise/BatchNorm/moving_variance"
  input: "save/RestoreV2:198"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv_9/depthwise/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_199"
  op: "Assign"
  input: "ssd300/expanded_conv_9/depthwise/depthwise_weights"
  input: "save/RestoreV2:199"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv_9/depthwise/depthwise_weights"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_200"
  op: "Assign"
  input: "ssd300/expanded_conv_9/expand/BatchNorm/beta"
  input: "save/RestoreV2:200"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv_9/expand/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_201"
  op: "Assign"
  input: "ssd300/expanded_conv_9/expand/BatchNorm/moving_mean"
  input: "save/RestoreV2:201"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv_9/expand/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_202"
  op: "Assign"
  input: "ssd300/expanded_conv_9/expand/BatchNorm/moving_variance"
  input: "save/RestoreV2:202"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv_9/expand/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_203"
  op: "Assign"
  input: "ssd300/expanded_conv_9/expand/weights"
  input: "save/RestoreV2:203"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv_9/expand/weights"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_204"
  op: "Assign"
  input: "ssd300/expanded_conv_9/project/BatchNorm/beta"
  input: "save/RestoreV2:204"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv_9/project/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_205"
  op: "Assign"
  input: "ssd300/expanded_conv_9/project/BatchNorm/moving_mean"
  input: "save/RestoreV2:205"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv_9/project/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_206"
  op: "Assign"
  input: "ssd300/expanded_conv_9/project/BatchNorm/moving_variance"
  input: "save/RestoreV2:206"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv_9/project/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_207"
  op: "Assign"
  input: "ssd300/expanded_conv_9/project/weights"
  input: "save/RestoreV2:207"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv_9/project/weights"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_208"
  op: "Assign"
  input: "ssd300/layer_19_1_Conv2d_2_1x1_256/BatchNorm/beta"
  input: "save/RestoreV2:208"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/layer_19_1_Conv2d_2_1x1_256/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_209"
  op: "Assign"
  input: "ssd300/layer_19_1_Conv2d_2_1x1_256/BatchNorm/moving_mean"
  input: "save/RestoreV2:209"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/layer_19_1_Conv2d_2_1x1_256/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_210"
  op: "Assign"
  input: "ssd300/layer_19_1_Conv2d_2_1x1_256/BatchNorm/moving_variance"
  input: "save/RestoreV2:210"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/layer_19_1_Conv2d_2_1x1_256/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_211"
  op: "Assign"
  input: "ssd300/layer_19_1_Conv2d_2_1x1_256/weights"
  input: "save/RestoreV2:211"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/layer_19_1_Conv2d_2_1x1_256/weights"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_212"
  op: "Assign"
  input: "ssd300/layer_19_1_Conv2d_3_1x1_128/BatchNorm/beta"
  input: "save/RestoreV2:212"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/layer_19_1_Conv2d_3_1x1_128/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_213"
  op: "Assign"
  input: "ssd300/layer_19_1_Conv2d_3_1x1_128/BatchNorm/moving_mean"
  input: "save/RestoreV2:213"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/layer_19_1_Conv2d_3_1x1_128/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_214"
  op: "Assign"
  input: "ssd300/layer_19_1_Conv2d_3_1x1_128/BatchNorm/moving_variance"
  input: "save/RestoreV2:214"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/layer_19_1_Conv2d_3_1x1_128/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_215"
  op: "Assign"
  input: "ssd300/layer_19_1_Conv2d_3_1x1_128/weights"
  input: "save/RestoreV2:215"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/layer_19_1_Conv2d_3_1x1_128/weights"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_216"
  op: "Assign"
  input: "ssd300/layer_19_1_Conv2d_4_1x1_128/BatchNorm/beta"
  input: "save/RestoreV2:216"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/layer_19_1_Conv2d_4_1x1_128/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_217"
  op: "Assign"
  input: "ssd300/layer_19_1_Conv2d_4_1x1_128/BatchNorm/moving_mean"
  input: "save/RestoreV2:217"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/layer_19_1_Conv2d_4_1x1_128/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_218"
  op: "Assign"
  input: "ssd300/layer_19_1_Conv2d_4_1x1_128/BatchNorm/moving_variance"
  input: "save/RestoreV2:218"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/layer_19_1_Conv2d_4_1x1_128/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_219"
  op: "Assign"
  input: "ssd300/layer_19_1_Conv2d_4_1x1_128/weights"
  input: "save/RestoreV2:219"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/layer_19_1_Conv2d_4_1x1_128/weights"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_220"
  op: "Assign"
  input: "ssd300/layer_19_1_Conv2d_5_1x1_64/BatchNorm/beta"
  input: "save/RestoreV2:220"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/layer_19_1_Conv2d_5_1x1_64/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_221"
  op: "Assign"
  input: "ssd300/layer_19_1_Conv2d_5_1x1_64/BatchNorm/moving_mean"
  input: "save/RestoreV2:221"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/layer_19_1_Conv2d_5_1x1_64/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_222"
  op: "Assign"
  input: "ssd300/layer_19_1_Conv2d_5_1x1_64/BatchNorm/moving_variance"
  input: "save/RestoreV2:222"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/layer_19_1_Conv2d_5_1x1_64/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_223"
  op: "Assign"
  input: "ssd300/layer_19_1_Conv2d_5_1x1_64/weights"
  input: "save/RestoreV2:223"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/layer_19_1_Conv2d_5_1x1_64/weights"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_224"
  op: "Assign"
  input: "ssd300/layer_19_2_Conv2d_2_3x3_s2_512/BatchNorm/beta"
  input: "save/RestoreV2:224"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/layer_19_2_Conv2d_2_3x3_s2_512/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_225"
  op: "Assign"
  input: "ssd300/layer_19_2_Conv2d_2_3x3_s2_512/BatchNorm/moving_mean"
  input: "save/RestoreV2:225"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/layer_19_2_Conv2d_2_3x3_s2_512/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_226"
  op: "Assign"
  input: "ssd300/layer_19_2_Conv2d_2_3x3_s2_512/BatchNorm/moving_variance"
  input: "save/RestoreV2:226"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/layer_19_2_Conv2d_2_3x3_s2_512/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_227"
  op: "Assign"
  input: "ssd300/layer_19_2_Conv2d_2_3x3_s2_512/weights"
  input: "save/RestoreV2:227"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/layer_19_2_Conv2d_2_3x3_s2_512/weights"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_228"
  op: "Assign"
  input: "ssd300/layer_19_2_Conv2d_2_3x3_s2_512_depthwise/BatchNorm/beta"
  input: "save/RestoreV2:228"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/layer_19_2_Conv2d_2_3x3_s2_512_depthwise/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_229"
  op: "Assign"
  input: "ssd300/layer_19_2_Conv2d_2_3x3_s2_512_depthwise/BatchNorm/moving_mean"
  input: "save/RestoreV2:229"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/layer_19_2_Conv2d_2_3x3_s2_512_depthwise/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_230"
  op: "Assign"
  input: "ssd300/layer_19_2_Conv2d_2_3x3_s2_512_depthwise/BatchNorm/moving_variance"
  input: "save/RestoreV2:230"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/layer_19_2_Conv2d_2_3x3_s2_512_depthwise/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_231"
  op: "Assign"
  input: "ssd300/layer_19_2_Conv2d_2_3x3_s2_512_depthwise/depthwise_weights"
  input: "save/RestoreV2:231"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/layer_19_2_Conv2d_2_3x3_s2_512_depthwise/depthwise_weights"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_232"
  op: "Assign"
  input: "ssd300/layer_19_2_Conv2d_3_3x3_s2_256/BatchNorm/beta"
  input: "save/RestoreV2:232"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/layer_19_2_Conv2d_3_3x3_s2_256/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_233"
  op: "Assign"
  input: "ssd300/layer_19_2_Conv2d_3_3x3_s2_256/BatchNorm/moving_mean"
  input: "save/RestoreV2:233"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/layer_19_2_Conv2d_3_3x3_s2_256/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_234"
  op: "Assign"
  input: "ssd300/layer_19_2_Conv2d_3_3x3_s2_256/BatchNorm/moving_variance"
  input: "save/RestoreV2:234"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/layer_19_2_Conv2d_3_3x3_s2_256/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_235"
  op: "Assign"
  input: "ssd300/layer_19_2_Conv2d_3_3x3_s2_256/weights"
  input: "save/RestoreV2:235"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/layer_19_2_Conv2d_3_3x3_s2_256/weights"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_236"
  op: "Assign"
  input: "ssd300/layer_19_2_Conv2d_3_3x3_s2_256_depthwise/BatchNorm/beta"
  input: "save/RestoreV2:236"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/layer_19_2_Conv2d_3_3x3_s2_256_depthwise/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_237"
  op: "Assign"
  input: "ssd300/layer_19_2_Conv2d_3_3x3_s2_256_depthwise/BatchNorm/moving_mean"
  input: "save/RestoreV2:237"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/layer_19_2_Conv2d_3_3x3_s2_256_depthwise/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_238"
  op: "Assign"
  input: "ssd300/layer_19_2_Conv2d_3_3x3_s2_256_depthwise/BatchNorm/moving_variance"
  input: "save/RestoreV2:238"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/layer_19_2_Conv2d_3_3x3_s2_256_depthwise/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_239"
  op: "Assign"
  input: "ssd300/layer_19_2_Conv2d_3_3x3_s2_256_depthwise/depthwise_weights"
  input: "save/RestoreV2:239"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/layer_19_2_Conv2d_3_3x3_s2_256_depthwise/depthwise_weights"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_240"
  op: "Assign"
  input: "ssd300/layer_19_2_Conv2d_4_3x3_s2_256/BatchNorm/beta"
  input: "save/RestoreV2:240"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/layer_19_2_Conv2d_4_3x3_s2_256/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_241"
  op: "Assign"
  input: "ssd300/layer_19_2_Conv2d_4_3x3_s2_256/BatchNorm/moving_mean"
  input: "save/RestoreV2:241"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/layer_19_2_Conv2d_4_3x3_s2_256/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_242"
  op: "Assign"
  input: "ssd300/layer_19_2_Conv2d_4_3x3_s2_256/BatchNorm/moving_variance"
  input: "save/RestoreV2:242"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/layer_19_2_Conv2d_4_3x3_s2_256/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_243"
  op: "Assign"
  input: "ssd300/layer_19_2_Conv2d_4_3x3_s2_256/weights"
  input: "save/RestoreV2:243"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/layer_19_2_Conv2d_4_3x3_s2_256/weights"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_244"
  op: "Assign"
  input: "ssd300/layer_19_2_Conv2d_4_3x3_s2_256_depthwise/BatchNorm/beta"
  input: "save/RestoreV2:244"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/layer_19_2_Conv2d_4_3x3_s2_256_depthwise/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_245"
  op: "Assign"
  input: "ssd300/layer_19_2_Conv2d_4_3x3_s2_256_depthwise/BatchNorm/moving_mean"
  input: "save/RestoreV2:245"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/layer_19_2_Conv2d_4_3x3_s2_256_depthwise/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_246"
  op: "Assign"
  input: "ssd300/layer_19_2_Conv2d_4_3x3_s2_256_depthwise/BatchNorm/moving_variance"
  input: "save/RestoreV2:246"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/layer_19_2_Conv2d_4_3x3_s2_256_depthwise/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_247"
  op: "Assign"
  input: "ssd300/layer_19_2_Conv2d_4_3x3_s2_256_depthwise/depthwise_weights"
  input: "save/RestoreV2:247"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/layer_19_2_Conv2d_4_3x3_s2_256_depthwise/depthwise_weights"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_248"
  op: "Assign"
  input: "ssd300/layer_19_2_Conv2d_5_3x3_s2_128/BatchNorm/beta"
  input: "save/RestoreV2:248"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/layer_19_2_Conv2d_5_3x3_s2_128/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_249"
  op: "Assign"
  input: "ssd300/layer_19_2_Conv2d_5_3x3_s2_128/BatchNorm/moving_mean"
  input: "save/RestoreV2:249"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/layer_19_2_Conv2d_5_3x3_s2_128/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_250"
  op: "Assign"
  input: "ssd300/layer_19_2_Conv2d_5_3x3_s2_128/BatchNorm/moving_variance"
  input: "save/RestoreV2:250"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/layer_19_2_Conv2d_5_3x3_s2_128/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_251"
  op: "Assign"
  input: "ssd300/layer_19_2_Conv2d_5_3x3_s2_128/weights"
  input: "save/RestoreV2:251"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/layer_19_2_Conv2d_5_3x3_s2_128/weights"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_252"
  op: "Assign"
  input: "ssd300/layer_19_2_Conv2d_5_3x3_s2_128_depthwise/BatchNorm/beta"
  input: "save/RestoreV2:252"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/layer_19_2_Conv2d_5_3x3_s2_128_depthwise/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_253"
  op: "Assign"
  input: "ssd300/layer_19_2_Conv2d_5_3x3_s2_128_depthwise/BatchNorm/moving_mean"
  input: "save/RestoreV2:253"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/layer_19_2_Conv2d_5_3x3_s2_128_depthwise/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_254"
  op: "Assign"
  input: "ssd300/layer_19_2_Conv2d_5_3x3_s2_128_depthwise/BatchNorm/moving_variance"
  input: "save/RestoreV2:254"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/layer_19_2_Conv2d_5_3x3_s2_128_depthwise/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_255"
  op: "Assign"
  input: "ssd300/layer_19_2_Conv2d_5_3x3_s2_128_depthwise/depthwise_weights"
  input: "save/RestoreV2:255"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/layer_19_2_Conv2d_5_3x3_s2_128_depthwise/depthwise_weights"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_256"
  op: "Assign"
  input: "ssd300/multibox_head/cls_0/bias"
  input: "save/RestoreV2:256"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/multibox_head/cls_0/bias"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_257"
  op: "Assign"
  input: "ssd300/multibox_head/cls_0/kernel"
  input: "save/RestoreV2:257"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/multibox_head/cls_0/kernel"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_258"
  op: "Assign"
  input: "ssd300/multibox_head/cls_1/bias"
  input: "save/RestoreV2:258"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/multibox_head/cls_1/bias"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_259"
  op: "Assign"
  input: "ssd300/multibox_head/cls_1/kernel"
  input: "save/RestoreV2:259"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/multibox_head/cls_1/kernel"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_260"
  op: "Assign"
  input: "ssd300/multibox_head/loc_0/bias"
  input: "save/RestoreV2:260"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/multibox_head/loc_0/bias"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_261"
  op: "Assign"
  input: "ssd300/multibox_head/loc_0/kernel"
  input: "save/RestoreV2:261"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/multibox_head/loc_0/kernel"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_262"
  op: "Assign"
  input: "ssd300/multibox_head/loc_1/bias"
  input: "save/RestoreV2:262"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/multibox_head/loc_1/bias"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_263"
  op: "Assign"
  input: "ssd300/multibox_head/loc_1/kernel"
  input: "save/RestoreV2:263"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/multibox_head/loc_1/kernel"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/restore_all"
  op: "NoOp"
  input: "^save/Assign"
  input: "^save/Assign_1"
  input: "^save/Assign_10"
  input: "^save/Assign_100"
  input: "^save/Assign_101"
  input: "^save/Assign_102"
  input: "^save/Assign_103"
  input: "^save/Assign_104"
  input: "^save/Assign_105"
  input: "^save/Assign_106"
  input: "^save/Assign_107"
  input: "^save/Assign_108"
  input: "^save/Assign_109"
  input: "^save/Assign_11"
  input: "^save/Assign_110"
  input: "^save/Assign_111"
  input: "^save/Assign_112"
  input: "^save/Assign_113"
  input: "^save/Assign_114"
  input: "^save/Assign_115"
  input: "^save/Assign_116"
  input: "^save/Assign_117"
  input: "^save/Assign_118"
  input: "^save/Assign_119"
  input: "^save/Assign_12"
  input: "^save/Assign_120"
  input: "^save/Assign_121"
  input: "^save/Assign_122"
  input: "^save/Assign_123"
  input: "^save/Assign_124"
  input: "^save/Assign_125"
  input: "^save/Assign_126"
  input: "^save/Assign_127"
  input: "^save/Assign_128"
  input: "^save/Assign_129"
  input: "^save/Assign_13"
  input: "^save/Assign_130"
  input: "^save/Assign_131"
  input: "^save/Assign_132"
  input: "^save/Assign_133"
  input: "^save/Assign_134"
  input: "^save/Assign_135"
  input: "^save/Assign_136"
  input: "^save/Assign_137"
  input: "^save/Assign_138"
  input: "^save/Assign_139"
  input: "^save/Assign_14"
  input: "^save/Assign_140"
  input: "^save/Assign_141"
  input: "^save/Assign_142"
  input: "^save/Assign_143"
  input: "^save/Assign_144"
  input: "^save/Assign_145"
  input: "^save/Assign_146"
  input: "^save/Assign_147"
  input: "^save/Assign_148"
  input: "^save/Assign_149"
  input: "^save/Assign_15"
  input: "^save/Assign_150"
  input: "^save/Assign_151"
  input: "^save/Assign_152"
  input: "^save/Assign_153"
  input: "^save/Assign_154"
  input: "^save/Assign_155"
  input: "^save/Assign_156"
  input: "^save/Assign_157"
  input: "^save/Assign_158"
  input: "^save/Assign_159"
  input: "^save/Assign_16"
  input: "^save/Assign_160"
  input: "^save/Assign_161"
  input: "^save/Assign_162"
  input: "^save/Assign_163"
  input: "^save/Assign_164"
  input: "^save/Assign_165"
  input: "^save/Assign_166"
  input: "^save/Assign_167"
  input: "^save/Assign_168"
  input: "^save/Assign_169"
  input: "^save/Assign_17"
  input: "^save/Assign_170"
  input: "^save/Assign_171"
  input: "^save/Assign_172"
  input: "^save/Assign_173"
  input: "^save/Assign_174"
  input: "^save/Assign_175"
  input: "^save/Assign_176"
  input: "^save/Assign_177"
  input: "^save/Assign_178"
  input: "^save/Assign_179"
  input: "^save/Assign_18"
  input: "^save/Assign_180"
  input: "^save/Assign_181"
  input: "^save/Assign_182"
  input: "^save/Assign_183"
  input: "^save/Assign_184"
  input: "^save/Assign_185"
  input: "^save/Assign_186"
  input: "^save/Assign_187"
  input: "^save/Assign_188"
  input: "^save/Assign_189"
  input: "^save/Assign_19"
  input: "^save/Assign_190"
  input: "^save/Assign_191"
  input: "^save/Assign_192"
  input: "^save/Assign_193"
  input: "^save/Assign_194"
  input: "^save/Assign_195"
  input: "^save/Assign_196"
  input: "^save/Assign_197"
  input: "^save/Assign_198"
  input: "^save/Assign_199"
  input: "^save/Assign_2"
  input: "^save/Assign_20"
  input: "^save/Assign_200"
  input: "^save/Assign_201"
  input: "^save/Assign_202"
  input: "^save/Assign_203"
  input: "^save/Assign_204"
  input: "^save/Assign_205"
  input: "^save/Assign_206"
  input: "^save/Assign_207"
  input: "^save/Assign_208"
  input: "^save/Assign_209"
  input: "^save/Assign_21"
  input: "^save/Assign_210"
  input: "^save/Assign_211"
  input: "^save/Assign_212"
  input: "^save/Assign_213"
  input: "^save/Assign_214"
  input: "^save/Assign_215"
  input: "^save/Assign_216"
  input: "^save/Assign_217"
  input: "^save/Assign_218"
  input: "^save/Assign_219"
  input: "^save/Assign_22"
  input: "^save/Assign_220"
  input: "^save/Assign_221"
  input: "^save/Assign_222"
  input: "^save/Assign_223"
  input: "^save/Assign_224"
  input: "^save/Assign_225"
  input: "^save/Assign_226"
  input: "^save/Assign_227"
  input: "^save/Assign_228"
  input: "^save/Assign_229"
  input: "^save/Assign_23"
  input: "^save/Assign_230"
  input: "^save/Assign_231"
  input: "^save/Assign_232"
  input: "^save/Assign_233"
  input: "^save/Assign_234"
  input: "^save/Assign_235"
  input: "^save/Assign_236"
  input: "^save/Assign_237"
  input: "^save/Assign_238"
  input: "^save/Assign_239"
  input: "^save/Assign_24"
  input: "^save/Assign_240"
  input: "^save/Assign_241"
  input: "^save/Assign_242"
  input: "^save/Assign_243"
  input: "^save/Assign_244"
  input: "^save/Assign_245"
  input: "^save/Assign_246"
  input: "^save/Assign_247"
  input: "^save/Assign_248"
  input: "^save/Assign_249"
  input: "^save/Assign_25"
  input: "^save/Assign_250"
  input: "^save/Assign_251"
  input: "^save/Assign_252"
  input: "^save/Assign_253"
  input: "^save/Assign_254"
  input: "^save/Assign_255"
  input: "^save/Assign_256"
  input: "^save/Assign_257"
  input: "^save/Assign_258"
  input: "^save/Assign_259"
  input: "^save/Assign_26"
  input: "^save/Assign_260"
  input: "^save/Assign_261"
  input: "^save/Assign_262"
  input: "^save/Assign_263"
  input: "^save/Assign_27"
  input: "^save/Assign_28"
  input: "^save/Assign_29"
  input: "^save/Assign_3"
  input: "^save/Assign_30"
  input: "^save/Assign_31"
  input: "^save/Assign_32"
  input: "^save/Assign_33"
  input: "^save/Assign_34"
  input: "^save/Assign_35"
  input: "^save/Assign_36"
  input: "^save/Assign_37"
  input: "^save/Assign_38"
  input: "^save/Assign_39"
  input: "^save/Assign_4"
  input: "^save/Assign_40"
  input: "^save/Assign_41"
  input: "^save/Assign_42"
  input: "^save/Assign_43"
  input: "^save/Assign_44"
  input: "^save/Assign_45"
  input: "^save/Assign_46"
  input: "^save/Assign_47"
  input: "^save/Assign_48"
  input: "^save/Assign_49"
  input: "^save/Assign_5"
  input: "^save/Assign_50"
  input: "^save/Assign_51"
  input: "^save/Assign_52"
  input: "^save/Assign_53"
  input: "^save/Assign_54"
  input: "^save/Assign_55"
  input: "^save/Assign_56"
  input: "^save/Assign_57"
  input: "^save/Assign_58"
  input: "^save/Assign_59"
  input: "^save/Assign_6"
  input: "^save/Assign_60"
  input: "^save/Assign_61"
  input: "^save/Assign_62"
  input: "^save/Assign_63"
  input: "^save/Assign_64"
  input: "^save/Assign_65"
  input: "^save/Assign_66"
  input: "^save/Assign_67"
  input: "^save/Assign_68"
  input: "^save/Assign_69"
  input: "^save/Assign_7"
  input: "^save/Assign_70"
  input: "^save/Assign_71"
  input: "^save/Assign_72"
  input: "^save/Assign_73"
  input: "^save/Assign_74"
  input: "^save/Assign_75"
  input: "^save/Assign_76"
  input: "^save/Assign_77"
  input: "^save/Assign_78"
  input: "^save/Assign_79"
  input: "^save/Assign_8"
  input: "^save/Assign_80"
  input: "^save/Assign_81"
  input: "^save/Assign_82"
  input: "^save/Assign_83"
  input: "^save/Assign_84"
  input: "^save/Assign_85"
  input: "^save/Assign_86"
  input: "^save/Assign_87"
  input: "^save/Assign_88"
  input: "^save/Assign_89"
  input: "^save/Assign_9"
  input: "^save/Assign_90"
  input: "^save/Assign_91"
  input: "^save/Assign_92"
  input: "^save/Assign_93"
  input: "^save/Assign_94"
  input: "^save/Assign_95"
  input: "^save/Assign_96"
  input: "^save/Assign_97"
  input: "^save/Assign_98"
  input: "^save/Assign_99"
}
node {
  name: "init"
  op: "NoOp"
  input: "^ssd300/Conv/BatchNorm/beta/Assign"
  input: "^ssd300/Conv/BatchNorm/moving_mean/Assign"
  input: "^ssd300/Conv/BatchNorm/moving_variance/Assign"
  input: "^ssd300/Conv/weights/Assign"
  input: "^ssd300/Conv_1/BatchNorm/beta/Assign"
  input: "^ssd300/Conv_1/BatchNorm/moving_mean/Assign"
  input: "^ssd300/Conv_1/BatchNorm/moving_variance/Assign"
  input: "^ssd300/Conv_1/weights/Assign"
  input: "^ssd300/expanded_conv/depthwise/BatchNorm/beta/Assign"
  input: "^ssd300/expanded_conv/depthwise/BatchNorm/moving_mean/Assign"
  input: "^ssd300/expanded_conv/depthwise/BatchNorm/moving_variance/Assign"
  input: "^ssd300/expanded_conv/depthwise/depthwise_weights/Assign"
  input: "^ssd300/expanded_conv/project/BatchNorm/beta/Assign"
  input: "^ssd300/expanded_conv/project/BatchNorm/moving_mean/Assign"
  input: "^ssd300/expanded_conv/project/BatchNorm/moving_variance/Assign"
  input: "^ssd300/expanded_conv/project/weights/Assign"
  input: "^ssd300/expanded_conv_1/depthwise/BatchNorm/beta/Assign"
  input: "^ssd300/expanded_conv_1/depthwise/BatchNorm/moving_mean/Assign"
  input: "^ssd300/expanded_conv_1/depthwise/BatchNorm/moving_variance/Assign"
  input: "^ssd300/expanded_conv_1/depthwise/depthwise_weights/Assign"
  input: "^ssd300/expanded_conv_1/expand/BatchNorm/beta/Assign"
  input: "^ssd300/expanded_conv_1/expand/BatchNorm/moving_mean/Assign"
  input: "^ssd300/expanded_conv_1/expand/BatchNorm/moving_variance/Assign"
  input: "^ssd300/expanded_conv_1/expand/weights/Assign"
  input: "^ssd300/expanded_conv_1/project/BatchNorm/beta/Assign"
  input: "^ssd300/expanded_conv_1/project/BatchNorm/moving_mean/Assign"
  input: "^ssd300/expanded_conv_1/project/BatchNorm/moving_variance/Assign"
  input: "^ssd300/expanded_conv_1/project/weights/Assign"
  input: "^ssd300/expanded_conv_10/depthwise/BatchNorm/beta/Assign"
  input: "^ssd300/expanded_conv_10/depthwise/BatchNorm/moving_mean/Assign"
  input: "^ssd300/expanded_conv_10/depthwise/BatchNorm/moving_variance/Assign"
  input: "^ssd300/expanded_conv_10/depthwise/depthwise_weights/Assign"
  input: "^ssd300/expanded_conv_10/expand/BatchNorm/beta/Assign"
  input: "^ssd300/expanded_conv_10/expand/BatchNorm/moving_mean/Assign"
  input: "^ssd300/expanded_conv_10/expand/BatchNorm/moving_variance/Assign"
  input: "^ssd300/expanded_conv_10/expand/weights/Assign"
  input: "^ssd300/expanded_conv_10/project/BatchNorm/beta/Assign"
  input: "^ssd300/expanded_conv_10/project/BatchNorm/moving_mean/Assign"
  input: "^ssd300/expanded_conv_10/project/BatchNorm/moving_variance/Assign"
  input: "^ssd300/expanded_conv_10/project/weights/Assign"
  input: "^ssd300/expanded_conv_11/depthwise/BatchNorm/beta/Assign"
  input: "^ssd300/expanded_conv_11/depthwise/BatchNorm/moving_mean/Assign"
  input: "^ssd300/expanded_conv_11/depthwise/BatchNorm/moving_variance/Assign"
  input: "^ssd300/expanded_conv_11/depthwise/depthwise_weights/Assign"
  input: "^ssd300/expanded_conv_11/expand/BatchNorm/beta/Assign"
  input: "^ssd300/expanded_conv_11/expand/BatchNorm/moving_mean/Assign"
  input: "^ssd300/expanded_conv_11/expand/BatchNorm/moving_variance/Assign"
  input: "^ssd300/expanded_conv_11/expand/weights/Assign"
  input: "^ssd300/expanded_conv_11/project/BatchNorm/beta/Assign"
  input: "^ssd300/expanded_conv_11/project/BatchNorm/moving_mean/Assign"
  input: "^ssd300/expanded_conv_11/project/BatchNorm/moving_variance/Assign"
  input: "^ssd300/expanded_conv_11/project/weights/Assign"
  input: "^ssd300/expanded_conv_12/depthwise/BatchNorm/beta/Assign"
  input: "^ssd300/expanded_conv_12/depthwise/BatchNorm/moving_mean/Assign"
  input: "^ssd300/expanded_conv_12/depthwise/BatchNorm/moving_variance/Assign"
  input: "^ssd300/expanded_conv_12/depthwise/depthwise_weights/Assign"
  input: "^ssd300/expanded_conv_12/expand/BatchNorm/beta/Assign"
  input: "^ssd300/expanded_conv_12/expand/BatchNorm/moving_mean/Assign"
  input: "^ssd300/expanded_conv_12/expand/BatchNorm/moving_variance/Assign"
  input: "^ssd300/expanded_conv_12/expand/weights/Assign"
  input: "^ssd300/expanded_conv_12/project/BatchNorm/beta/Assign"
  input: "^ssd300/expanded_conv_12/project/BatchNorm/moving_mean/Assign"
  input: "^ssd300/expanded_conv_12/project/BatchNorm/moving_variance/Assign"
  input: "^ssd300/expanded_conv_12/project/weights/Assign"
  input: "^ssd300/expanded_conv_13/depthwise/BatchNorm/beta/Assign"
  input: "^ssd300/expanded_conv_13/depthwise/BatchNorm/moving_mean/Assign"
  input: "^ssd300/expanded_conv_13/depthwise/BatchNorm/moving_variance/Assign"
  input: "^ssd300/expanded_conv_13/depthwise/depthwise_weights/Assign"
  input: "^ssd300/expanded_conv_13/expand/BatchNorm/beta/Assign"
  input: "^ssd300/expanded_conv_13/expand/BatchNorm/moving_mean/Assign"
  input: "^ssd300/expanded_conv_13/expand/BatchNorm/moving_variance/Assign"
  input: "^ssd300/expanded_conv_13/expand/weights/Assign"
  input: "^ssd300/expanded_conv_13/project/BatchNorm/beta/Assign"
  input: "^ssd300/expanded_conv_13/project/BatchNorm/moving_mean/Assign"
  input: "^ssd300/expanded_conv_13/project/BatchNorm/moving_variance/Assign"
  input: "^ssd300/expanded_conv_13/project/weights/Assign"
  input: "^ssd300/expanded_conv_14/depthwise/BatchNorm/beta/Assign"
  input: "^ssd300/expanded_conv_14/depthwise/BatchNorm/moving_mean/Assign"
  input: "^ssd300/expanded_conv_14/depthwise/BatchNorm/moving_variance/Assign"
  input: "^ssd300/expanded_conv_14/depthwise/depthwise_weights/Assign"
  input: "^ssd300/expanded_conv_14/expand/BatchNorm/beta/Assign"
  input: "^ssd300/expanded_conv_14/expand/BatchNorm/moving_mean/Assign"
  input: "^ssd300/expanded_conv_14/expand/BatchNorm/moving_variance/Assign"
  input: "^ssd300/expanded_conv_14/expand/weights/Assign"
  input: "^ssd300/expanded_conv_14/project/BatchNorm/beta/Assign"
  input: "^ssd300/expanded_conv_14/project/BatchNorm/moving_mean/Assign"
  input: "^ssd300/expanded_conv_14/project/BatchNorm/moving_variance/Assign"
  input: "^ssd300/expanded_conv_14/project/weights/Assign"
  input: "^ssd300/expanded_conv_15/depthwise/BatchNorm/beta/Assign"
  input: "^ssd300/expanded_conv_15/depthwise/BatchNorm/moving_mean/Assign"
  input: "^ssd300/expanded_conv_15/depthwise/BatchNorm/moving_variance/Assign"
  input: "^ssd300/expanded_conv_15/depthwise/depthwise_weights/Assign"
  input: "^ssd300/expanded_conv_15/expand/BatchNorm/beta/Assign"
  input: "^ssd300/expanded_conv_15/expand/BatchNorm/moving_mean/Assign"
  input: "^ssd300/expanded_conv_15/expand/BatchNorm/moving_variance/Assign"
  input: "^ssd300/expanded_conv_15/expand/weights/Assign"
  input: "^ssd300/expanded_conv_15/project/BatchNorm/beta/Assign"
  input: "^ssd300/expanded_conv_15/project/BatchNorm/moving_mean/Assign"
  input: "^ssd300/expanded_conv_15/project/BatchNorm/moving_variance/Assign"
  input: "^ssd300/expanded_conv_15/project/weights/Assign"
  input: "^ssd300/expanded_conv_16/depthwise/BatchNorm/beta/Assign"
  input: "^ssd300/expanded_conv_16/depthwise/BatchNorm/moving_mean/Assign"
  input: "^ssd300/expanded_conv_16/depthwise/BatchNorm/moving_variance/Assign"
  input: "^ssd300/expanded_conv_16/depthwise/depthwise_weights/Assign"
  input: "^ssd300/expanded_conv_16/expand/BatchNorm/beta/Assign"
  input: "^ssd300/expanded_conv_16/expand/BatchNorm/moving_mean/Assign"
  input: "^ssd300/expanded_conv_16/expand/BatchNorm/moving_variance/Assign"
  input: "^ssd300/expanded_conv_16/expand/weights/Assign"
  input: "^ssd300/expanded_conv_16/project/BatchNorm/beta/Assign"
  input: "^ssd300/expanded_conv_16/project/BatchNorm/moving_mean/Assign"
  input: "^ssd300/expanded_conv_16/project/BatchNorm/moving_variance/Assign"
  input: "^ssd300/expanded_conv_16/project/weights/Assign"
  input: "^ssd300/expanded_conv_2/depthwise/BatchNorm/beta/Assign"
  input: "^ssd300/expanded_conv_2/depthwise/BatchNorm/moving_mean/Assign"
  input: "^ssd300/expanded_conv_2/depthwise/BatchNorm/moving_variance/Assign"
  input: "^ssd300/expanded_conv_2/depthwise/depthwise_weights/Assign"
  input: "^ssd300/expanded_conv_2/expand/BatchNorm/beta/Assign"
  input: "^ssd300/expanded_conv_2/expand/BatchNorm/moving_mean/Assign"
  input: "^ssd300/expanded_conv_2/expand/BatchNorm/moving_variance/Assign"
  input: "^ssd300/expanded_conv_2/expand/weights/Assign"
  input: "^ssd300/expanded_conv_2/project/BatchNorm/beta/Assign"
  input: "^ssd300/expanded_conv_2/project/BatchNorm/moving_mean/Assign"
  input: "^ssd300/expanded_conv_2/project/BatchNorm/moving_variance/Assign"
  input: "^ssd300/expanded_conv_2/project/weights/Assign"
  input: "^ssd300/expanded_conv_3/depthwise/BatchNorm/beta/Assign"
  input: "^ssd300/expanded_conv_3/depthwise/BatchNorm/moving_mean/Assign"
  input: "^ssd300/expanded_conv_3/depthwise/BatchNorm/moving_variance/Assign"
  input: "^ssd300/expanded_conv_3/depthwise/depthwise_weights/Assign"
  input: "^ssd300/expanded_conv_3/expand/BatchNorm/beta/Assign"
  input: "^ssd300/expanded_conv_3/expand/BatchNorm/moving_mean/Assign"
  input: "^ssd300/expanded_conv_3/expand/BatchNorm/moving_variance/Assign"
  input: "^ssd300/expanded_conv_3/expand/weights/Assign"
  input: "^ssd300/expanded_conv_3/project/BatchNorm/beta/Assign"
  input: "^ssd300/expanded_conv_3/project/BatchNorm/moving_mean/Assign"
  input: "^ssd300/expanded_conv_3/project/BatchNorm/moving_variance/Assign"
  input: "^ssd300/expanded_conv_3/project/weights/Assign"
  input: "^ssd300/expanded_conv_4/depthwise/BatchNorm/beta/Assign"
  input: "^ssd300/expanded_conv_4/depthwise/BatchNorm/moving_mean/Assign"
  input: "^ssd300/expanded_conv_4/depthwise/BatchNorm/moving_variance/Assign"
  input: "^ssd300/expanded_conv_4/depthwise/depthwise_weights/Assign"
  input: "^ssd300/expanded_conv_4/expand/BatchNorm/beta/Assign"
  input: "^ssd300/expanded_conv_4/expand/BatchNorm/moving_mean/Assign"
  input: "^ssd300/expanded_conv_4/expand/BatchNorm/moving_variance/Assign"
  input: "^ssd300/expanded_conv_4/expand/weights/Assign"
  input: "^ssd300/expanded_conv_4/project/BatchNorm/beta/Assign"
  input: "^ssd300/expanded_conv_4/project/BatchNorm/moving_mean/Assign"
  input: "^ssd300/expanded_conv_4/project/BatchNorm/moving_variance/Assign"
  input: "^ssd300/expanded_conv_4/project/weights/Assign"
  input: "^ssd300/expanded_conv_5/depthwise/BatchNorm/beta/Assign"
  input: "^ssd300/expanded_conv_5/depthwise/BatchNorm/moving_mean/Assign"
  input: "^ssd300/expanded_conv_5/depthwise/BatchNorm/moving_variance/Assign"
  input: "^ssd300/expanded_conv_5/depthwise/depthwise_weights/Assign"
  input: "^ssd300/expanded_conv_5/expand/BatchNorm/beta/Assign"
  input: "^ssd300/expanded_conv_5/expand/BatchNorm/moving_mean/Assign"
  input: "^ssd300/expanded_conv_5/expand/BatchNorm/moving_variance/Assign"
  input: "^ssd300/expanded_conv_5/expand/weights/Assign"
  input: "^ssd300/expanded_conv_5/project/BatchNorm/beta/Assign"
  input: "^ssd300/expanded_conv_5/project/BatchNorm/moving_mean/Assign"
  input: "^ssd300/expanded_conv_5/project/BatchNorm/moving_variance/Assign"
  input: "^ssd300/expanded_conv_5/project/weights/Assign"
  input: "^ssd300/expanded_conv_6/depthwise/BatchNorm/beta/Assign"
  input: "^ssd300/expanded_conv_6/depthwise/BatchNorm/moving_mean/Assign"
  input: "^ssd300/expanded_conv_6/depthwise/BatchNorm/moving_variance/Assign"
  input: "^ssd300/expanded_conv_6/depthwise/depthwise_weights/Assign"
  input: "^ssd300/expanded_conv_6/expand/BatchNorm/beta/Assign"
  input: "^ssd300/expanded_conv_6/expand/BatchNorm/moving_mean/Assign"
  input: "^ssd300/expanded_conv_6/expand/BatchNorm/moving_variance/Assign"
  input: "^ssd300/expanded_conv_6/expand/weights/Assign"
  input: "^ssd300/expanded_conv_6/project/BatchNorm/beta/Assign"
  input: "^ssd300/expanded_conv_6/project/BatchNorm/moving_mean/Assign"
  input: "^ssd300/expanded_conv_6/project/BatchNorm/moving_variance/Assign"
  input: "^ssd300/expanded_conv_6/project/weights/Assign"
  input: "^ssd300/expanded_conv_7/depthwise/BatchNorm/beta/Assign"
  input: "^ssd300/expanded_conv_7/depthwise/BatchNorm/moving_mean/Assign"
  input: "^ssd300/expanded_conv_7/depthwise/BatchNorm/moving_variance/Assign"
  input: "^ssd300/expanded_conv_7/depthwise/depthwise_weights/Assign"
  input: "^ssd300/expanded_conv_7/expand/BatchNorm/beta/Assign"
  input: "^ssd300/expanded_conv_7/expand/BatchNorm/moving_mean/Assign"
  input: "^ssd300/expanded_conv_7/expand/BatchNorm/moving_variance/Assign"
  input: "^ssd300/expanded_conv_7/expand/weights/Assign"
  input: "^ssd300/expanded_conv_7/project/BatchNorm/beta/Assign"
  input: "^ssd300/expanded_conv_7/project/BatchNorm/moving_mean/Assign"
  input: "^ssd300/expanded_conv_7/project/BatchNorm/moving_variance/Assign"
  input: "^ssd300/expanded_conv_7/project/weights/Assign"
  input: "^ssd300/expanded_conv_8/depthwise/BatchNorm/beta/Assign"
  input: "^ssd300/expanded_conv_8/depthwise/BatchNorm/moving_mean/Assign"
  input: "^ssd300/expanded_conv_8/depthwise/BatchNorm/moving_variance/Assign"
  input: "^ssd300/expanded_conv_8/depthwise/depthwise_weights/Assign"
  input: "^ssd300/expanded_conv_8/expand/BatchNorm/beta/Assign"
  input: "^ssd300/expanded_conv_8/expand/BatchNorm/moving_mean/Assign"
  input: "^ssd300/expanded_conv_8/expand/BatchNorm/moving_variance/Assign"
  input: "^ssd300/expanded_conv_8/expand/weights/Assign"
  input: "^ssd300/expanded_conv_8/project/BatchNorm/beta/Assign"
  input: "^ssd300/expanded_conv_8/project/BatchNorm/moving_mean/Assign"
  input: "^ssd300/expanded_conv_8/project/BatchNorm/moving_variance/Assign"
  input: "^ssd300/expanded_conv_8/project/weights/Assign"
  input: "^ssd300/expanded_conv_9/depthwise/BatchNorm/beta/Assign"
  input: "^ssd300/expanded_conv_9/depthwise/BatchNorm/moving_mean/Assign"
  input: "^ssd300/expanded_conv_9/depthwise/BatchNorm/moving_variance/Assign"
  input: "^ssd300/expanded_conv_9/depthwise/depthwise_weights/Assign"
  input: "^ssd300/expanded_conv_9/expand/BatchNorm/beta/Assign"
  input: "^ssd300/expanded_conv_9/expand/BatchNorm/moving_mean/Assign"
  input: "^ssd300/expanded_conv_9/expand/BatchNorm/moving_variance/Assign"
  input: "^ssd300/expanded_conv_9/expand/weights/Assign"
  input: "^ssd300/expanded_conv_9/project/BatchNorm/beta/Assign"
  input: "^ssd300/expanded_conv_9/project/BatchNorm/moving_mean/Assign"
  input: "^ssd300/expanded_conv_9/project/BatchNorm/moving_variance/Assign"
  input: "^ssd300/expanded_conv_9/project/weights/Assign"
  input: "^ssd300/layer_19_1_Conv2d_2_1x1_256/BatchNorm/beta/Assign"
  input: "^ssd300/layer_19_1_Conv2d_2_1x1_256/BatchNorm/moving_mean/Assign"
  input: "^ssd300/layer_19_1_Conv2d_2_1x1_256/BatchNorm/moving_variance/Assign"
  input: "^ssd300/layer_19_1_Conv2d_2_1x1_256/weights/Assign"
  input: "^ssd300/layer_19_1_Conv2d_3_1x1_128/BatchNorm/beta/Assign"
  input: "^ssd300/layer_19_1_Conv2d_3_1x1_128/BatchNorm/moving_mean/Assign"
  input: "^ssd300/layer_19_1_Conv2d_3_1x1_128/BatchNorm/moving_variance/Assign"
  input: "^ssd300/layer_19_1_Conv2d_3_1x1_128/weights/Assign"
  input: "^ssd300/layer_19_1_Conv2d_4_1x1_128/BatchNorm/beta/Assign"
  input: "^ssd300/layer_19_1_Conv2d_4_1x1_128/BatchNorm/moving_mean/Assign"
  input: "^ssd300/layer_19_1_Conv2d_4_1x1_128/BatchNorm/moving_variance/Assign"
  input: "^ssd300/layer_19_1_Conv2d_4_1x1_128/weights/Assign"
  input: "^ssd300/layer_19_1_Conv2d_5_1x1_64/BatchNorm/beta/Assign"
  input: "^ssd300/layer_19_1_Conv2d_5_1x1_64/BatchNorm/moving_mean/Assign"
  input: "^ssd300/layer_19_1_Conv2d_5_1x1_64/BatchNorm/moving_variance/Assign"
  input: "^ssd300/layer_19_1_Conv2d_5_1x1_64/weights/Assign"
  input: "^ssd300/layer_19_2_Conv2d_2_3x3_s2_512/BatchNorm/beta/Assign"
  input: "^ssd300/layer_19_2_Conv2d_2_3x3_s2_512/BatchNorm/moving_mean/Assign"
  input: "^ssd300/layer_19_2_Conv2d_2_3x3_s2_512/BatchNorm/moving_variance/Assign"
  input: "^ssd300/layer_19_2_Conv2d_2_3x3_s2_512/weights/Assign"
  input: "^ssd300/layer_19_2_Conv2d_2_3x3_s2_512_depthwise/BatchNorm/beta/Assign"
  input: "^ssd300/layer_19_2_Conv2d_2_3x3_s2_512_depthwise/BatchNorm/moving_mean/Assign"
  input: "^ssd300/layer_19_2_Conv2d_2_3x3_s2_512_depthwise/BatchNorm/moving_variance/Assign"
  input: "^ssd300/layer_19_2_Conv2d_2_3x3_s2_512_depthwise/depthwise_weights/Assign"
  input: "^ssd300/layer_19_2_Conv2d_3_3x3_s2_256/BatchNorm/beta/Assign"
  input: "^ssd300/layer_19_2_Conv2d_3_3x3_s2_256/BatchNorm/moving_mean/Assign"
  input: "^ssd300/layer_19_2_Conv2d_3_3x3_s2_256/BatchNorm/moving_variance/Assign"
  input: "^ssd300/layer_19_2_Conv2d_3_3x3_s2_256/weights/Assign"
  input: "^ssd300/layer_19_2_Conv2d_3_3x3_s2_256_depthwise/BatchNorm/beta/Assign"
  input: "^ssd300/layer_19_2_Conv2d_3_3x3_s2_256_depthwise/BatchNorm/moving_mean/Assign"
  input: "^ssd300/layer_19_2_Conv2d_3_3x3_s2_256_depthwise/BatchNorm/moving_variance/Assign"
  input: "^ssd300/layer_19_2_Conv2d_3_3x3_s2_256_depthwise/depthwise_weights/Assign"
  input: "^ssd300/layer_19_2_Conv2d_4_3x3_s2_256/BatchNorm/beta/Assign"
  input: "^ssd300/layer_19_2_Conv2d_4_3x3_s2_256/BatchNorm/moving_mean/Assign"
  input: "^ssd300/layer_19_2_Conv2d_4_3x3_s2_256/BatchNorm/moving_variance/Assign"
  input: "^ssd300/layer_19_2_Conv2d_4_3x3_s2_256/weights/Assign"
  input: "^ssd300/layer_19_2_Conv2d_4_3x3_s2_256_depthwise/BatchNorm/beta/Assign"
  input: "^ssd300/layer_19_2_Conv2d_4_3x3_s2_256_depthwise/BatchNorm/moving_mean/Assign"
  input: "^ssd300/layer_19_2_Conv2d_4_3x3_s2_256_depthwise/BatchNorm/moving_variance/Assign"
  input: "^ssd300/layer_19_2_Conv2d_4_3x3_s2_256_depthwise/depthwise_weights/Assign"
  input: "^ssd300/layer_19_2_Conv2d_5_3x3_s2_128/BatchNorm/beta/Assign"
  input: "^ssd300/layer_19_2_Conv2d_5_3x3_s2_128/BatchNorm/moving_mean/Assign"
  input: "^ssd300/layer_19_2_Conv2d_5_3x3_s2_128/BatchNorm/moving_variance/Assign"
  input: "^ssd300/layer_19_2_Conv2d_5_3x3_s2_128/weights/Assign"
  input: "^ssd300/layer_19_2_Conv2d_5_3x3_s2_128_depthwise/BatchNorm/beta/Assign"
  input: "^ssd300/layer_19_2_Conv2d_5_3x3_s2_128_depthwise/BatchNorm/moving_mean/Assign"
  input: "^ssd300/layer_19_2_Conv2d_5_3x3_s2_128_depthwise/BatchNorm/moving_variance/Assign"
  input: "^ssd300/layer_19_2_Conv2d_5_3x3_s2_128_depthwise/depthwise_weights/Assign"
  input: "^ssd300/multibox_head/cls_0/bias/Assign"
  input: "^ssd300/multibox_head/cls_0/kernel/Assign"
  input: "^ssd300/multibox_head/cls_1/bias/Assign"
  input: "^ssd300/multibox_head/cls_1/kernel/Assign"
  input: "^ssd300/multibox_head/loc_0/bias/Assign"
  input: "^ssd300/multibox_head/loc_0/kernel/Assign"
  input: "^ssd300/multibox_head/loc_1/bias/Assign"
  input: "^ssd300/multibox_head/loc_1/kernel/Assign"
}
node {
  name: "outputs/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "outputs"
  op: "ConcatV2"
  input: "ssd300/concat"
  input: "ssd300/concat_1"
  input: "outputs/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 5792
          }
          dim {
            size: 1
          }
        }
        tensor_content: "K\\4\275K\\4\275,h\307=,h\307=\214%\277\274\214%\277\274j\003\235=j\003\235=\177g4\275\360Z\016\274\306m\307=\312\n~=\360Z\016\274\177g4\275\312\n~=\306m\307=\010_\030<K\\4\275\032Q\032>,h\307=\216\302\365<\214%\277\274\270\036\005>j\003\235=82\030<\360Z\016\274\346S\032>\312\n~=Q\3356=\177g4\275l?\354=\306m\307=\351E\200=K\\4\275\036\356P>,h\307=\254\252\252=\214%\277\274\274\273;>j\003\235=O@\200=\360Z\016\274\352\360P>\312\n~=\260\250\310=\177g4\275\272\274,>\306m\307=\357\177\355=K\\4\275\220\305\203>,h\307=Y\362\013>\214%\277\274\277Xr>j\003\235=Uz\355=\360Z\016\274\367\306\203>\312\n~=[\361\032>\177g4\275\275Yc>\306m\307=\372\\->K\\4\275\022\024\237>,h\307=\\\217B>\214%\277\274\341z\224>j\003\235=.Z->\360Z\016\274x\025\237>\312\n~=^\216Q>\177g4\275`\373\214>\306m\307=\376\371c>K\\4\275\223b\272>,h\307=_,y>\214%\277\274c\311\257>j\003\235=0\367c>\360Z\016\274\372c\272>\312\n~=\261\025\204>\177g4\275\341I\250>\306m\307=\201K\215>K\\4\275\025\261\325>,h\307=\261\344\227>\214%\277\274\345\027\313>j\003\235=\032J\215>\360Z\016\274|\262\325>\312\n~=3d\237>\177g4\275c\230\303>\306m\307=\003\232\250>K\\4\275\227\377\360>,h\307=33\263>\214%\277\274gf\346>j\003\235=\234\230\250>\360Z\016\274\376\000\361>\312\n~=\265\262\272>\177g4\275\345\346\336>\306m\307=\205\350\303>K\\4\275\r\'\006?,h\307=\265\201\316>\214%\277\274t\332\000?j\003\235=\036\347\303>\360Z\016\274\300\'\006?\312\n~=7\001\326>\177g4\275g5\372>\306m\307=\0067\337>K\\4\275M\316\023?,h\307=6\320\351>\214%\277\274\265\201\016?j\003\235=\2375\337>\360Z\016\274\000\317\023?\312\n~=\270O\361>\177g4\275\364\301\n?\306m\307=\210\205\372>K\\4\275\216u!?,h\307=\\\217\002?\214%\277\274\366(\034?j\003\235=!\204\372>\360Z\016\274Av!?\312\n~=\035O\006?\177g4\2755i\030?\306m\307=\005\352\n?K\\4\275\317\034/?,h\307=\2356\020?\214%\277\2747\320)?j\003\235=R\351\n?\360Z\016\274\202\035/?\312\n~=^\366\023?\177g4\275v\020&?\306m\307=F\221\030?K\\4\275\020\304<?,h\307=\336\335\035?\214%\277\274xw7?j\003\235=\223\220\030?\360Z\016\274\303\304<?\312\n~=\237\235!?\177g4\275\267\2673?\306m\307=\2078&?K\\4\275QkJ?,h\307=\037\205+?\214%\277\274\271\036E?j\003\235=\3247&?\360Z\016\274\004lJ?\312\n~=\340D/?\177g4\275\370^A?\306m\307=\307\3373?K\\4\275\221\022X?,h\307=_,9?\214%\277\274\371\305R?j\003\235=\024\3373?\360Z\016\274D\023X?\312\n~= \354<?\177g4\2758\006O?\306m\307=\010\207A?K\\4\275\322\271e?,h\307=\240\323F?\214%\277\274:m`?j\003\235=U\206A?\360Z\016\274\205\272e?\312\n~=a\223J?\177g4\275y\255\\?\306m\307=I.O?K\\4\275\023as?,h\307=\341zT?\214%\277\274{\024n?j\003\235=\226-O?\360Z\016\274\306as?\312\n~=\242:X?\177g4\275\272Tj?\306m\307=\212\325\\?K\\4\275*\204\200?,h\307=\"\"b?\214%\277\274\274\273{?j\003\235=\327\324\\?\360Z\016\274\204\204\200?\312\n~=\343\341e?\177g4\275\373\373w?\306m\307=\313|j?K\\4\275\313W\207?,h\307=c\311o?\214%\277\274~\261\204?j\003\235=\030|j?\360Z\016\274$X\207?\312\n~=$\211s?\177g4\275\236\321\202?\306m\307=K\\4\275\010_\030<,h\307=\032Q\032>\214%\277\274\216\302\365<j\003\235=\270\036\005>\177g4\275Q\3356=\306m\307=l?\354=\360Z\016\27482\030<\312\n~=\346S\032>\010_\030<\010_\030<\032Q\032>\032Q\032>\216\302\365<\216\302\365<\270\036\005>\270\036\005>82\030<Q\3356=\346S\032>l?\354=Q\3356=82\030<l?\354=\346S\032>\351E\200=\010_\030<\036\356P>\032Q\032>\254\252\252=\216\302\365<\274\273;>\270\036\005>O@\200=Q\3356=\352\360P>l?\354=\260\250\310=82\030<\272\274,>\346S\032>\357\177\355=\010_\030<\220\305\203>\032Q\032>Y\362\013>\216\302\365<\277Xr>\270\036\005>Uz\355=Q\3356=\367\306\203>l?\354=[\361\032>82\030<\275Yc>\346S\032>\372\\->\010_\030<\022\024\237>\032Q\032>\\\217B>\216\302\365<\341z\224>\270\036\005>.Z->Q\3356=x\025\237>l?\354=^\216Q>82\030<`\373\214>\346S\032>\376\371c>\010_\030<\223b\272>\032Q\032>_,y>\216\302\365<c\311\257>\270\036\005>0\367c>Q\3356=\372c\272>l?\354=\261\025\204>82\030<\341I\250>\346S\032>\201K\215>\010_\030<\025\261\325>\032Q\032>\261\344\227>\216\302\365<\345\027\313>\270\036\005>\032J\215>Q\3356=|\262\325>l?\354=3d\237>82\030<c\230\303>\346S\032>\003\232\250>\010_\030<\227\377\360>\032Q\032>33\263>\216\302\365<gf\346>\270\036\005>\234\230\250>Q\3356=\376\000\361>l?\354=\265\262\272>82\030<\345\346\336>\346S\032>\205\350\303>\010_\030<\r\'\006?\032Q\032>\265\201\316>\216\302\365<t\332\000?\270\036\005>\036\347\303>Q\3356=\300\'\006?l?\354=7\001\326>82\030<g5\372>\346S\032>\0067\337>\010_\030<M\316\023?\032Q\032>6\320\351>\216\302\365<\265\201\016?\270\036\005>\2375\337>Q\3356=\000\317\023?l?\354=\270O\361>82\030<\364\301\n?\346S\032>\210\205\372>\010_\030<\216u!?\032Q\032>\\\217\002?\216\302\365<\366(\034?\270\036\005>!\204\372>Q\3356=Av!?l?\354=\035O\006?82\030<5i\030?\346S\032>\005\352\n?\010_\030<\317\034/?\032Q\032>\2356\020?\216\302\365<7\320)?\270\036\005>R\351\n?Q\3356=\202\035/?l?\354=^\366\023?82\030<v\020&?\346S\032>F\221\030?\010_\030<\020\304<?\032Q\032>\336\335\035?\216\302\365<xw7?\270\036\005>\223\220\030?Q\3356=\303\304<?l?\354=\237\235!?82\030<\267\2673?\346S\032>\2078&?\010_\030<QkJ?\032Q\032>\037\205+?\216\302\365<\271\036E?\270\036\005>\3247&?Q\3356=\004lJ?l?\354=\340D/?82\030<\370^A?\346S\032>\307\3373?\010_\030<\221\022X?\032Q\032>_,9?\216\302\365<\371\305R?\270\036\005>\024\3373?Q\3356=D\023X?l?\354= \354<?82\030<8\006O?\346S\032>\010\207A?\010_\030<\322\271e?\032Q\032>\240\323F?\216\302\365<:m`?\270\036\005>U\206A?Q\3356=\205\272e?l?\354=a\223J?82\030<y\255\\?\346S\032>I.O?\010_\030<\023as?\032Q\032>\341zT?\216\302\365<{\024n?\270\036\005>\226-O?Q\3356=\306as?l?\354=\242:X?82\030<\272Tj?\346S\032>\212\325\\?\010_\030<*\204\200?\032Q\032>\"\"b?\216\302\365<\274\273{?\270\036\005>\327\324\\?Q\3356=\204\204\200?l?\354=\343\341e?82\030<\373\373w?\346S\032>\313|j?\010_\030<\313W\207?\032Q\032>c\311o?\216\302\365<~\261\204?\270\036\005>\030|j?Q\3356=$X\207?l?\354=$\211s?82\030<\236\321\202?\346S\032>K\\4\275\351E\200=,h\307=\036\356P>\214%\277\274\254\252\252=j\003\235=\274\273;>\177g4\275\260\250\310=\306m\307=\272\274,>\360Z\016\274O@\200=\312\n~=\352\360P>\010_\030<\351E\200=\032Q\032>\036\356P>\216\302\365<\254\252\252=\270\036\005>\274\273;>82\030<\260\250\310=\346S\032>\272\274,>Q\3356=O@\200=l?\354=\352\360P>\351E\200=\351E\200=\036\356P>\036\356P>\254\252\252=\254\252\252=\274\273;>\274\273;>O@\200=\260\250\310=\352\360P>\272\274,>\260\250\310=O@\200=\272\274,>\352\360P>\357\177\355=\351E\200=\220\305\203>\036\356P>Y\362\013>\254\252\252=\277Xr>\274\273;>Uz\355=\260\250\310=\367\306\203>\272\274,>[\361\032>O@\200=\275Yc>\352\360P>\372\\->\351E\200=\022\024\237>\036\356P>\\\217B>\254\252\252=\341z\224>\274\273;>.Z->\260\250\310=x\025\237>\272\274,>^\216Q>O@\200=`\373\214>\352\360P>\376\371c>\351E\200=\223b\272>\036\356P>_,y>\254\252\252=c\311\257>\274\273;>0\367c>\260\250\310=\372c\272>\272\274,>\261\025\204>O@\200=\341I\250>\352\360P>\201K\215>\351E\200=\025\261\325>\036\356P>\261\344\227>\254\252\252=\345\027\313>\274\273;>\032J\215>\260\250\310=|\262\325>\272\274,>3d\237>O@\200=c\230\303>\352\360P>\003\232\250>\351E\200=\227\377\360>\036\356P>33\263>\254\252\252=gf\346>\274\273;>\234\230\250>\260\250\310=\376\000\361>\272\274,>\265\262\272>O@\200=\345\346\336>\352\360P>\205\350\303>\351E\200=\r\'\006?\036\356P>\265\201\316>\254\252\252=t\332\000?\274\273;>\036\347\303>\260\250\310=\300\'\006?\272\274,>7\001\326>O@\200=g5\372>\352\360P>\0067\337>\351E\200=M\316\023?\036\356P>6\320\351>\254\252\252=\265\201\016?\274\273;>\2375\337>\260\250\310=\000\317\023?\272\274,>\270O\361>O@\200=\364\301\n?\352\360P>\210\205\372>\351E\200=\216u!?\036\356P>\\\217\002?\254\252\252=\366(\034?\274\273;>!\204\372>\260\250\310=Av!?\272\274,>\035O\006?O@\200=5i\030?\352\360P>\005\352\n?\351E\200=\317\034/?\036\356P>\2356\020?\254\252\252=7\320)?\274\273;>R\351\n?\260\250\310=\202\035/?\272\274,>^\366\023?O@\200=v\020&?\352\360P>F\221\030?\351E\200=\020\304<?\036\356P>\336\335\035?\254\252\252=xw7?\274\273;>\223\220\030?\260\250\310=\303\304<?\272\274,>\237\235!?O@\200=\267\2673?\352\360P>\2078&?\351E\200=QkJ?\036\356P>\037\205+?\254\252\252=\271\036E?\274\273;>\3247&?\260\250\310=\004lJ?\272\274,>\340D/?O@\200=\370^A?\352\360P>\307\3373?\351E\200=\221\022X?\036\356P>_,9?\254\252\252=\371\305R?\274\273;>\024\3373?\260\250\310=D\023X?\272\274,> \354<?O@\200=8\006O?\352\360P>\010\207A?\351E\200=\322\271e?\036\356P>\240\323F?\254\252\252=:m`?\274\273;>U\206A?\260\250\310=\205\272e?\272\274,>a\223J?O@\200=y\255\\?\352\360P>I.O?\351E\200=\023as?\036\356P>\341zT?\254\252\252={\024n?\274\273;>\226-O?\260\250\310=\306as?\272\274,>\242:X?O@\200=\272Tj?\352\360P>\212\325\\?\351E\200=*\204\200?\036\356P>\"\"b?\254\252\252=\274\273{?\274\273;>\327\324\\?\260\250\310=\204\204\200?\272\274,>\343\341e?O@\200=\373\373w?\352\360P>\313|j?\351E\200=\313W\207?\036\356P>c\311o?\254\252\252=~\261\204?\274\273;>\030|j?\260\250\310=$X\207?\272\274,>$\211s?O@\200=\236\321\202?\352\360P>K\\4\275\357\177\355=,h\307=\220\305\203>\214%\277\274Y\362\013>j\003\235=\277Xr>\177g4\275[\361\032>\306m\307=\275Yc>\360Z\016\274Uz\355=\312\n~=\367\306\203>\010_\030<\357\177\355=\032Q\032>\220\305\203>\216\302\365<Y\362\013>\270\036\005>\277Xr>82\030<[\361\032>\346S\032>\275Yc>Q\3356=Uz\355=l?\354=\367\306\203>\351E\200=\357\177\355=\036\356P>\220\305\203>\254\252\252=Y\362\013>\274\273;>\277Xr>O@\200=[\361\032>\352\360P>\275Yc>\260\250\310=Uz\355=\272\274,>\367\306\203>\357\177\355=\357\177\355=\220\305\203>\220\305\203>Y\362\013>Y\362\013>\277Xr>\277Xr>Uz\355=[\361\032>\367\306\203>\275Yc>[\361\032>Uz\355=\275Yc>\367\306\203>\372\\->\357\177\355=\022\024\237>\220\305\203>\\\217B>Y\362\013>\341z\224>\277Xr>.Z->[\361\032>x\025\237>\275Yc>^\216Q>Uz\355=`\373\214>\367\306\203>\376\371c>\357\177\355=\223b\272>\220\305\203>_,y>Y\362\013>c\311\257>\277Xr>0\367c>[\361\032>\372c\272>\275Yc>\261\025\204>Uz\355=\341I\250>\367\306\203>\201K\215>\357\177\355=\025\261\325>\220\305\203>\261\344\227>Y\362\013>\345\027\313>\277Xr>\032J\215>[\361\032>|\262\325>\275Yc>3d\237>Uz\355=c\230\303>\367\306\203>\003\232\250>\357\177\355=\227\377\360>\220\305\203>33\263>Y\362\013>gf\346>\277Xr>\234\230\250>[\361\032>\376\000\361>\275Yc>\265\262\272>Uz\355=\345\346\336>\367\306\203>\205\350\303>\357\177\355=\r\'\006?\220\305\203>\265\201\316>Y\362\013>t\332\000?\277Xr>\036\347\303>[\361\032>\300\'\006?\275Yc>7\001\326>Uz\355=g5\372>\367\306\203>\0067\337>\357\177\355=M\316\023?\220\305\203>6\320\351>Y\362\013>\265\201\016?\277Xr>\2375\337>[\361\032>\000\317\023?\275Yc>\270O\361>Uz\355=\364\301\n?\367\306\203>\210\205\372>\357\177\355=\216u!?\220\305\203>\\\217\002?Y\362\013>\366(\034?\277Xr>!\204\372>[\361\032>Av!?\275Yc>\035O\006?Uz\355=5i\030?\367\306\203>\005\352\n?\357\177\355=\317\034/?\220\305\203>\2356\020?Y\362\013>7\320)?\277Xr>R\351\n?[\361\032>\202\035/?\275Yc>^\366\023?Uz\355=v\020&?\367\306\203>F\221\030?\357\177\355=\020\304<?\220\305\203>\336\335\035?Y\362\013>xw7?\277Xr>\223\220\030?[\361\032>\303\304<?\275Yc>\237\235!?Uz\355=\267\2673?\367\306\203>\2078&?\357\177\355=QkJ?\220\305\203>\037\205+?Y\362\013>\271\036E?\277Xr>\3247&?[\361\032>\004lJ?\275Yc>\340D/?Uz\355=\370^A?\367\306\203>\307\3373?\357\177\355=\221\022X?\220\305\203>_,9?Y\362\013>\371\305R?\277Xr>\024\3373?[\361\032>D\023X?\275Yc> \354<?Uz\355=8\006O?\367\306\203>\010\207A?\357\177\355=\322\271e?\220\305\203>\240\323F?Y\362\013>:m`?\277Xr>U\206A?[\361\032>\205\272e?\275Yc>a\223J?Uz\355=y\255\\?\367\306\203>I.O?\357\177\355=\023as?\220\305\203>\341zT?Y\362\013>{\024n?\277Xr>\226-O?[\361\032>\306as?\275Yc>\242:X?Uz\355=\272Tj?\367\306\203>\212\325\\?\357\177\355=*\204\200?\220\305\203>\"\"b?Y\362\013>\274\273{?\277Xr>\327\324\\?[\361\032>\204\204\200?\275Yc>\343\341e?Uz\355=\373\373w?\367\306\203>\313|j?\357\177\355=\313W\207?\220\305\203>c\311o?Y\362\013>~\261\204?\277Xr>\030|j?[\361\032>$X\207?\275Yc>$\211s?Uz\355=\236\321\202?\367\306\203>K\\4\275\372\\->,h\307=\022\024\237>\214%\277\274\\\217B>j\003\235=\341z\224>\177g4\275^\216Q>\306m\307=`\373\214>\360Z\016\274.Z->\312\n~=x\025\237>\010_\030<\372\\->\032Q\032>\022\024\237>\216\302\365<\\\217B>\270\036\005>\341z\224>82\030<^\216Q>\346S\032>`\373\214>Q\3356=.Z->l?\354=x\025\237>\351E\200=\372\\->\036\356P>\022\024\237>\254\252\252=\\\217B>\274\273;>\341z\224>O@\200=^\216Q>\352\360P>`\373\214>\260\250\310=.Z->\272\274,>x\025\237>\357\177\355=\372\\->\220\305\203>\022\024\237>Y\362\013>\\\217B>\277Xr>\341z\224>Uz\355=^\216Q>\367\306\203>`\373\214>[\361\032>.Z->\275Yc>x\025\237>\372\\->\372\\->\022\024\237>\022\024\237>\\\217B>\\\217B>\341z\224>\341z\224>.Z->^\216Q>x\025\237>`\373\214>^\216Q>.Z->`\373\214>x\025\237>\376\371c>\372\\->\223b\272>\022\024\237>_,y>\\\217B>c\311\257>\341z\224>0\367c>^\216Q>\372c\272>`\373\214>\261\025\204>.Z->\341I\250>x\025\237>\201K\215>\372\\->\025\261\325>\022\024\237>\261\344\227>\\\217B>\345\027\313>\341z\224>\032J\215>^\216Q>|\262\325>`\373\214>3d\237>.Z->c\230\303>x\025\237>\003\232\250>\372\\->\227\377\360>\022\024\237>33\263>\\\217B>gf\346>\341z\224>\234\230\250>^\216Q>\376\000\361>`\373\214>\265\262\272>.Z->\345\346\336>x\025\237>\205\350\303>\372\\->\r\'\006?\022\024\237>\265\201\316>\\\217B>t\332\000?\341z\224>\036\347\303>^\216Q>\300\'\006?`\373\214>7\001\326>.Z->g5\372>x\025\237>\0067\337>\372\\->M\316\023?\022\024\237>6\320\351>\\\217B>\265\201\016?\341z\224>\2375\337>^\216Q>\000\317\023?`\373\214>\270O\361>.Z->\364\301\n?x\025\237>\210\205\372>\372\\->\216u!?\022\024\237>\\\217\002?\\\217B>\366(\034?\341z\224>!\204\372>^\216Q>Av!?`\373\214>\035O\006?.Z->5i\030?x\025\237>\005\352\n?\372\\->\317\034/?\022\024\237>\2356\020?\\\217B>7\320)?\341z\224>R\351\n?^\216Q>\202\035/?`\373\214>^\366\023?.Z->v\020&?x\025\237>F\221\030?\372\\->\020\304<?\022\024\237>\336\335\035?\\\217B>xw7?\341z\224>\223\220\030?^\216Q>\303\304<?`\373\214>\237\235!?.Z->\267\2673?x\025\237>\2078&?\372\\->QkJ?\022\024\237>\037\205+?\\\217B>\271\036E?\341z\224>\3247&?^\216Q>\004lJ?`\373\214>\340D/?.Z->\370^A?x\025\237>\307\3373?\372\\->\221\022X?\022\024\237>_,9?\\\217B>\371\305R?\341z\224>\024\3373?^\216Q>D\023X?`\373\214> \354<?.Z->8\006O?x\025\237>\010\207A?\372\\->\322\271e?\022\024\237>\240\323F?\\\217B>:m`?\341z\224>U\206A?^\216Q>\205\272e?`\373\214>a\223J?.Z->y\255\\?x\025\237>I.O?\372\\->\023as?\022\024\237>\341zT?\\\217B>{\024n?\341z\224>\226-O?^\216Q>\306as?`\373\214>\242:X?.Z->\272Tj?x\025\237>\212\325\\?\372\\->*\204\200?\022\024\237>\"\"b?\\\217B>\274\273{?\341z\224>\327\324\\?^\216Q>\204\204\200?`\373\214>\343\341e?.Z->\373\373w?x\025\237>\313|j?\372\\->\313W\207?\022\024\237>c\311o?\\\217B>~\261\204?\341z\224>\030|j?^\216Q>$X\207?`\373\214>$\211s?.Z->\236\321\202?x\025\237>K\\4\275\376\371c>,h\307=\223b\272>\214%\277\274_,y>j\003\235=c\311\257>\177g4\275\261\025\204>\306m\307=\341I\250>\360Z\016\2740\367c>\312\n~=\372c\272>\010_\030<\376\371c>\032Q\032>\223b\272>\216\302\365<_,y>\270\036\005>c\311\257>82\030<\261\025\204>\346S\032>\341I\250>Q\3356=0\367c>l?\354=\372c\272>\351E\200=\376\371c>\036\356P>\223b\272>\254\252\252=_,y>\274\273;>c\311\257>O@\200=\261\025\204>\352\360P>\341I\250>\260\250\310=0\367c>\272\274,>\372c\272>\357\177\355=\376\371c>\220\305\203>\223b\272>Y\362\013>_,y>\277Xr>c\311\257>Uz\355=\261\025\204>\367\306\203>\341I\250>[\361\032>0\367c>\275Yc>\372c\272>\372\\->\376\371c>\022\024\237>\223b\272>\\\217B>_,y>\341z\224>c\311\257>.Z->\261\025\204>x\025\237>\341I\250>^\216Q>0\367c>`\373\214>\372c\272>\376\371c>\376\371c>\223b\272>\223b\272>_,y>_,y>c\311\257>c\311\257>0\367c>\261\025\204>\372c\272>\341I\250>\261\025\204>0\367c>\341I\250>\372c\272>\201K\215>\376\371c>\025\261\325>\223b\272>\261\344\227>_,y>\345\027\313>c\311\257>\032J\215>\261\025\204>|\262\325>\341I\250>3d\237>0\367c>c\230\303>\372c\272>\003\232\250>\376\371c>\227\377\360>\223b\272>33\263>_,y>gf\346>c\311\257>\234\230\250>\261\025\204>\376\000\361>\341I\250>\265\262\272>0\367c>\345\346\336>\372c\272>\205\350\303>\376\371c>\r\'\006?\223b\272>\265\201\316>_,y>t\332\000?c\311\257>\036\347\303>\261\025\204>\300\'\006?\341I\250>7\001\326>0\367c>g5\372>\372c\272>\0067\337>\376\371c>M\316\023?\223b\272>6\320\351>_,y>\265\201\016?c\311\257>\2375\337>\261\025\204>\000\317\023?\341I\250>\270O\361>0\367c>\364\301\n?\372c\272>\210\205\372>\376\371c>\216u!?\223b\272>\\\217\002?_,y>\366(\034?c\311\257>!\204\372>\261\025\204>Av!?\341I\250>\035O\006?0\367c>5i\030?\372c\272>\005\352\n?\376\371c>\317\034/?\223b\272>\2356\020?_,y>7\320)?c\311\257>R\351\n?\261\025\204>\202\035/?\341I\250>^\366\023?0\367c>v\020&?\372c\272>F\221\030?\376\371c>\020\304<?\223b\272>\336\335\035?_,y>xw7?c\311\257>\223\220\030?\261\025\204>\303\304<?\341I\250>\237\235!?0\367c>\267\2673?\372c\272>\2078&?\376\371c>QkJ?\223b\272>\037\205+?_,y>\271\036E?c\311\257>\3247&?\261\025\204>\004lJ?\341I\250>\340D/?0\367c>\370^A?\372c\272>\307\3373?\376\371c>\221\022X?\223b\272>_,9?_,y>\371\305R?c\311\257>\024\3373?\261\025\204>D\023X?\341I\250> \354<?0\367c>8\006O?\372c\272>\010\207A?\376\371c>\322\271e?\223b\272>\240\323F?_,y>:m`?c\311\257>U\206A?\261\025\204>\205\272e?\341I\250>a\223J?0\367c>y\255\\?\372c\272>I.O?\376\371c>\023as?\223b\272>\341zT?_,y>{\024n?c\311\257>\226-O?\261\025\204>\306as?\341I\250>\242:X?0\367c>\272Tj?\372c\272>\212\325\\?\376\371c>*\204\200?\223b\272>\"\"b?_,y>\274\273{?c\311\257>\327\324\\?\261\025\204>\204\204\200?\341I\250>\343\341e?0\367c>\373\373w?\372c\272>\313|j?\376\371c>\313W\207?\223b\272>c\311o?_,y>~\261\204?c\311\257>\030|j?\261\025\204>$X\207?\341I\250>$\211s?0\367c>\236\321\202?\372c\272>K\\4\275\201K\215>,h\307=\025\261\325>\214%\277\274\261\344\227>j\003\235=\345\027\313>\177g4\2753d\237>\306m\307=c\230\303>\360Z\016\274\032J\215>\312\n~=|\262\325>\010_\030<\201K\215>\032Q\032>\025\261\325>\216\302\365<\261\344\227>\270\036\005>\345\027\313>82\030<3d\237>\346S\032>c\230\303>Q\3356=\032J\215>l?\354=|\262\325>\351E\200=\201K\215>\036\356P>\025\261\325>\254\252\252=\261\344\227>\274\273;>\345\027\313>O@\200=3d\237>\352\360P>c\230\303>\260\250\310=\032J\215>\272\274,>|\262\325>\357\177\355=\201K\215>\220\305\203>\025\261\325>Y\362\013>\261\344\227>\277Xr>\345\027\313>Uz\355=3d\237>\367\306\203>c\230\303>[\361\032>\032J\215>\275Yc>|\262\325>\372\\->\201K\215>\022\024\237>\025\261\325>\\\217B>\261\344\227>\341z\224>\345\027\313>.Z->3d\237>x\025\237>c\230\303>^\216Q>\032J\215>`\373\214>|\262\325>\376\371c>\201K\215>\223b\272>\025\261\325>_,y>\261\344\227>c\311\257>\345\027\313>0\367c>3d\237>\372c\272>c\230\303>\261\025\204>\032J\215>\341I\250>|\262\325>\201K\215>\201K\215>\025\261\325>\025\261\325>\261\344\227>\261\344\227>\345\027\313>\345\027\313>\032J\215>3d\237>|\262\325>c\230\303>3d\237>\032J\215>c\230\303>|\262\325>\003\232\250>\201K\215>\227\377\360>\025\261\325>33\263>\261\344\227>gf\346>\345\027\313>\234\230\250>3d\237>\376\000\361>c\230\303>\265\262\272>\032J\215>\345\346\336>|\262\325>\205\350\303>\201K\215>\r\'\006?\025\261\325>\265\201\316>\261\344\227>t\332\000?\345\027\313>\036\347\303>3d\237>\300\'\006?c\230\303>7\001\326>\032J\215>g5\372>|\262\325>\0067\337>\201K\215>M\316\023?\025\261\325>6\320\351>\261\344\227>\265\201\016?\345\027\313>\2375\337>3d\237>\000\317\023?c\230\303>\270O\361>\032J\215>\364\301\n?|\262\325>\210\205\372>\201K\215>\216u!?\025\261\325>\\\217\002?\261\344\227>\366(\034?\345\027\313>!\204\372>3d\237>Av!?c\230\303>\035O\006?\032J\215>5i\030?|\262\325>\005\352\n?\201K\215>\317\034/?\025\261\325>\2356\020?\261\344\227>7\320)?\345\027\313>R\351\n?3d\237>\202\035/?c\230\303>^\366\023?\032J\215>v\020&?|\262\325>F\221\030?\201K\215>\020\304<?\025\261\325>\336\335\035?\261\344\227>xw7?\345\027\313>\223\220\030?3d\237>\303\304<?c\230\303>\237\235!?\032J\215>\267\2673?|\262\325>\2078&?\201K\215>QkJ?\025\261\325>\037\205+?\261\344\227>\271\036E?\345\027\313>\3247&?3d\237>\004lJ?c\230\303>\340D/?\032J\215>\370^A?|\262\325>\307\3373?\201K\215>\221\022X?\025\261\325>_,9?\261\344\227>\371\305R?\345\027\313>\024\3373?3d\237>D\023X?c\230\303> \354<?\032J\215>8\006O?|\262\325>\010\207A?\201K\215>\322\271e?\025\261\325>\240\323F?\261\344\227>:m`?\345\027\313>U\206A?3d\237>\205\272e?c\230\303>a\223J?\032J\215>y\255\\?|\262\325>I.O?\201K\215>\023as?\025\261\325>\341zT?\261\344\227>{\024n?\345\027\313>\226-O?3d\237>\306as?c\230\303>\242:X?\032J\215>\272Tj?|\262\325>\212\325\\?\201K\215>*\204\200?\025\261\325>\"\"b?\261\344\227>\274\273{?\345\027\313>\327\324\\?3d\237>\204\204\200?c\230\303>\343\341e?\032J\215>\373\373w?|\262\325>\313|j?\201K\215>\313W\207?\025\261\325>c\311o?\261\344\227>~\261\204?\345\027\313>\030|j?3d\237>$X\207?c\230\303>$\211s?\032J\215>\236\321\202?|\262\325>K\\4\275\003\232\250>,h\307=\227\377\360>\214%\277\27433\263>j\003\235=gf\346>\177g4\275\265\262\272>\306m\307=\345\346\336>\360Z\016\274\234\230\250>\312\n~=\376\000\361>\010_\030<\003\232\250>\032Q\032>\227\377\360>\216\302\365<33\263>\270\036\005>gf\346>82\030<\265\262\272>\346S\032>\345\346\336>Q\3356=\234\230\250>l?\354=\376\000\361>\351E\200=\003\232\250>\036\356P>\227\377\360>\254\252\252=33\263>\274\273;>gf\346>O@\200=\265\262\272>\352\360P>\345\346\336>\260\250\310=\234\230\250>\272\274,>\376\000\361>\357\177\355=\003\232\250>\220\305\203>\227\377\360>Y\362\013>33\263>\277Xr>gf\346>Uz\355=\265\262\272>\367\306\203>\345\346\336>[\361\032>\234\230\250>\275Yc>\376\000\361>\372\\->\003\232\250>\022\024\237>\227\377\360>\\\217B>33\263>\341z\224>gf\346>.Z->\265\262\272>x\025\237>\345\346\336>^\216Q>\234\230\250>`\373\214>\376\000\361>\376\371c>\003\232\250>\223b\272>\227\377\360>_,y>33\263>c\311\257>gf\346>0\367c>\265\262\272>\372c\272>\345\346\336>\261\025\204>\234\230\250>\341I\250>\376\000\361>\201K\215>\003\232\250>\025\261\325>\227\377\360>\261\344\227>33\263>\345\027\313>gf\346>\032J\215>\265\262\272>|\262\325>\345\346\336>3d\237>\234\230\250>c\230\303>\376\000\361>\003\232\250>\003\232\250>\227\377\360>\227\377\360>33\263>33\263>gf\346>gf\346>\234\230\250>\265\262\272>\376\000\361>\345\346\336>\265\262\272>\234\230\250>\345\346\336>\376\000\361>\205\350\303>\003\232\250>\r\'\006?\227\377\360>\265\201\316>33\263>t\332\000?gf\346>\036\347\303>\265\262\272>\300\'\006?\345\346\336>7\001\326>\234\230\250>g5\372>\376\000\361>\0067\337>\003\232\250>M\316\023?\227\377\360>6\320\351>33\263>\265\201\016?gf\346>\2375\337>\265\262\272>\000\317\023?\345\346\336>\270O\361>\234\230\250>\364\301\n?\376\000\361>\210\205\372>\003\232\250>\216u!?\227\377\360>\\\217\002?33\263>\366(\034?gf\346>!\204\372>\265\262\272>Av!?\345\346\336>\035O\006?\234\230\250>5i\030?\376\000\361>\005\352\n?\003\232\250>\317\034/?\227\377\360>\2356\020?33\263>7\320)?gf\346>R\351\n?\265\262\272>\202\035/?\345\346\336>^\366\023?\234\230\250>v\020&?\376\000\361>F\221\030?\003\232\250>\020\304<?\227\377\360>\336\335\035?33\263>xw7?gf\346>\223\220\030?\265\262\272>\303\304<?\345\346\336>\237\235!?\234\230\250>\267\2673?\376\000\361>\2078&?\003\232\250>QkJ?\227\377\360>\037\205+?33\263>\271\036E?gf\346>\3247&?\265\262\272>\004lJ?\345\346\336>\340D/?\234\230\250>\370^A?\376\000\361>\307\3373?\003\232\250>\221\022X?\227\377\360>_,9?33\263>\371\305R?gf\346>\024\3373?\265\262\272>D\023X?\345\346\336> \354<?\234\230\250>8\006O?\376\000\361>\010\207A?\003\232\250>\322\271e?\227\377\360>\240\323F?33\263>:m`?gf\346>U\206A?\265\262\272>\205\272e?\345\346\336>a\223J?\234\230\250>y\255\\?\376\000\361>I.O?\003\232\250>\023as?\227\377\360>\341zT?33\263>{\024n?gf\346>\226-O?\265\262\272>\306as?\345\346\336>\242:X?\234\230\250>\272Tj?\376\000\361>\212\325\\?\003\232\250>*\204\200?\227\377\360>\"\"b?33\263>\274\273{?gf\346>\327\324\\?\265\262\272>\204\204\200?\345\346\336>\343\341e?\234\230\250>\373\373w?\376\000\361>\313|j?\003\232\250>\313W\207?\227\377\360>c\311o?33\263>~\261\204?gf\346>\030|j?\265\262\272>$X\207?\345\346\336>$\211s?\234\230\250>\236\321\202?\376\000\361>K\\4\275\205\350\303>,h\307=\r\'\006?\214%\277\274\265\201\316>j\003\235=t\332\000?\177g4\2757\001\326>\306m\307=g5\372>\360Z\016\274\036\347\303>\312\n~=\300\'\006?\010_\030<\205\350\303>\032Q\032>\r\'\006?\216\302\365<\265\201\316>\270\036\005>t\332\000?82\030<7\001\326>\346S\032>g5\372>Q\3356=\036\347\303>l?\354=\300\'\006?\351E\200=\205\350\303>\036\356P>\r\'\006?\254\252\252=\265\201\316>\274\273;>t\332\000?O@\200=7\001\326>\352\360P>g5\372>\260\250\310=\036\347\303>\272\274,>\300\'\006?\357\177\355=\205\350\303>\220\305\203>\r\'\006?Y\362\013>\265\201\316>\277Xr>t\332\000?Uz\355=7\001\326>\367\306\203>g5\372>[\361\032>\036\347\303>\275Yc>\300\'\006?\372\\->\205\350\303>\022\024\237>\r\'\006?\\\217B>\265\201\316>\341z\224>t\332\000?.Z->7\001\326>x\025\237>g5\372>^\216Q>\036\347\303>`\373\214>\300\'\006?\376\371c>\205\350\303>\223b\272>\r\'\006?_,y>\265\201\316>c\311\257>t\332\000?0\367c>7\001\326>\372c\272>g5\372>\261\025\204>\036\347\303>\341I\250>\300\'\006?\201K\215>\205\350\303>\025\261\325>\r\'\006?\261\344\227>\265\201\316>\345\027\313>t\332\000?\032J\215>7\001\326>|\262\325>g5\372>3d\237>\036\347\303>c\230\303>\300\'\006?\003\232\250>\205\350\303>\227\377\360>\r\'\006?33\263>\265\201\316>gf\346>t\332\000?\234\230\250>7\001\326>\376\000\361>g5\372>\265\262\272>\036\347\303>\345\346\336>\300\'\006?\205\350\303>\205\350\303>\r\'\006?\r\'\006?\265\201\316>\265\201\316>t\332\000?t\332\000?\036\347\303>7\001\326>\300\'\006?g5\372>7\001\326>\036\347\303>g5\372>\300\'\006?\0067\337>\205\350\303>M\316\023?\r\'\006?6\320\351>\265\201\316>\265\201\016?t\332\000?\2375\337>7\001\326>\000\317\023?g5\372>\270O\361>\036\347\303>\364\301\n?\300\'\006?\210\205\372>\205\350\303>\216u!?\r\'\006?\\\217\002?\265\201\316>\366(\034?t\332\000?!\204\372>7\001\326>Av!?g5\372>\035O\006?\036\347\303>5i\030?\300\'\006?\005\352\n?\205\350\303>\317\034/?\r\'\006?\2356\020?\265\201\316>7\320)?t\332\000?R\351\n?7\001\326>\202\035/?g5\372>^\366\023?\036\347\303>v\020&?\300\'\006?F\221\030?\205\350\303>\020\304<?\r\'\006?\336\335\035?\265\201\316>xw7?t\332\000?\223\220\030?7\001\326>\303\304<?g5\372>\237\235!?\036\347\303>\267\2673?\300\'\006?\2078&?\205\350\303>QkJ?\r\'\006?\037\205+?\265\201\316>\271\036E?t\332\000?\3247&?7\001\326>\004lJ?g5\372>\340D/?\036\347\303>\370^A?\300\'\006?\307\3373?\205\350\303>\221\022X?\r\'\006?_,9?\265\201\316>\371\305R?t\332\000?\024\3373?7\001\326>D\023X?g5\372> \354<?\036\347\303>8\006O?\300\'\006?\010\207A?\205\350\303>\322\271e?\r\'\006?\240\323F?\265\201\316>:m`?t\332\000?U\206A?7\001\326>\205\272e?g5\372>a\223J?\036\347\303>y\255\\?\300\'\006?I.O?\205\350\303>\023as?\r\'\006?\341zT?\265\201\316>{\024n?t\332\000?\226-O?7\001\326>\306as?g5\372>\242:X?\036\347\303>\272Tj?\300\'\006?\212\325\\?\205\350\303>*\204\200?\r\'\006?\"\"b?\265\201\316>\274\273{?t\332\000?\327\324\\?7\001\326>\204\204\200?g5\372>\343\341e?\036\347\303>\373\373w?\300\'\006?\313|j?\205\350\303>\313W\207?\r\'\006?c\311o?\265\201\316>~\261\204?t\332\000?\030|j?7\001\326>$X\207?g5\372>$\211s?\036\347\303>\236\321\202?\300\'\006?K\\4\275\0067\337>,h\307=M\316\023?\214%\277\2746\320\351>j\003\235=\265\201\016?\177g4\275\270O\361>\306m\307=\364\301\n?\360Z\016\274\2375\337>\312\n~=\000\317\023?\010_\030<\0067\337>\032Q\032>M\316\023?\216\302\365<6\320\351>\270\036\005>\265\201\016?82\030<\270O\361>\346S\032>\364\301\n?Q\3356=\2375\337>l?\354=\000\317\023?\351E\200=\0067\337>\036\356P>M\316\023?\254\252\252=6\320\351>\274\273;>\265\201\016?O@\200=\270O\361>\352\360P>\364\301\n?\260\250\310=\2375\337>\272\274,>\000\317\023?\357\177\355=\0067\337>\220\305\203>M\316\023?Y\362\013>6\320\351>\277Xr>\265\201\016?Uz\355=\270O\361>\367\306\203>\364\301\n?[\361\032>\2375\337>\275Yc>\000\317\023?\372\\->\0067\337>\022\024\237>M\316\023?\\\217B>6\320\351>\341z\224>\265\201\016?.Z->\270O\361>x\025\237>\364\301\n?^\216Q>\2375\337>`\373\214>\000\317\023?\376\371c>\0067\337>\223b\272>M\316\023?_,y>6\320\351>c\311\257>\265\201\016?0\367c>\270O\361>\372c\272>\364\301\n?\261\025\204>\2375\337>\341I\250>\000\317\023?\201K\215>\0067\337>\025\261\325>M\316\023?\261\344\227>6\320\351>\345\027\313>\265\201\016?\032J\215>\270O\361>|\262\325>\364\301\n?3d\237>\2375\337>c\230\303>\000\317\023?\003\232\250>\0067\337>\227\377\360>M\316\023?33\263>6\320\351>gf\346>\265\201\016?\234\230\250>\270O\361>\376\000\361>\364\301\n?\265\262\272>\2375\337>\345\346\336>\000\317\023?\205\350\303>\0067\337>\r\'\006?M\316\023?\265\201\316>6\320\351>t\332\000?\265\201\016?\036\347\303>\270O\361>\300\'\006?\364\301\n?7\001\326>\2375\337>g5\372>\000\317\023?\0067\337>\0067\337>M\316\023?M\316\023?6\320\351>6\320\351>\265\201\016?\265\201\016?\2375\337>\270O\361>\000\317\023?\364\301\n?\270O\361>\2375\337>\364\301\n?\000\317\023?\210\205\372>\0067\337>\216u!?M\316\023?\\\217\002?6\320\351>\366(\034?\265\201\016?!\204\372>\270O\361>Av!?\364\301\n?\035O\006?\2375\337>5i\030?\000\317\023?\005\352\n?\0067\337>\317\034/?M\316\023?\2356\020?6\320\351>7\320)?\265\201\016?R\351\n?\270O\361>\202\035/?\364\301\n?^\366\023?\2375\337>v\020&?\000\317\023?F\221\030?\0067\337>\020\304<?M\316\023?\336\335\035?6\320\351>xw7?\265\201\016?\223\220\030?\270O\361>\303\304<?\364\301\n?\237\235!?\2375\337>\267\2673?\000\317\023?\2078&?\0067\337>QkJ?M\316\023?\037\205+?6\320\351>\271\036E?\265\201\016?\3247&?\270O\361>\004lJ?\364\301\n?\340D/?\2375\337>\370^A?\000\317\023?\307\3373?\0067\337>\221\022X?M\316\023?_,9?6\320\351>\371\305R?\265\201\016?\024\3373?\270O\361>D\023X?\364\301\n? \354<?\2375\337>8\006O?\000\317\023?\010\207A?\0067\337>\322\271e?M\316\023?\240\323F?6\320\351>:m`?\265\201\016?U\206A?\270O\361>\205\272e?\364\301\n?a\223J?\2375\337>y\255\\?\000\317\023?I.O?\0067\337>\023as?M\316\023?\341zT?6\320\351>{\024n?\265\201\016?\226-O?\270O\361>\306as?\364\301\n?\242:X?\2375\337>\272Tj?\000\317\023?\212\325\\?\0067\337>*\204\200?M\316\023?\"\"b?6\320\351>\274\273{?\265\201\016?\327\324\\?\270O\361>\204\204\200?\364\301\n?\343\341e?\2375\337>\373\373w?\000\317\023?\313|j?\0067\337>\313W\207?M\316\023?c\311o?6\320\351>~\261\204?\265\201\016?\030|j?\270O\361>$X\207?\364\301\n?$\211s?\2375\337>\236\321\202?\000\317\023?K\\4\275\210\205\372>,h\307=\216u!?\214%\277\274\\\217\002?j\003\235=\366(\034?\177g4\275\035O\006?\306m\307=5i\030?\360Z\016\274!\204\372>\312\n~=Av!?\010_\030<\210\205\372>\032Q\032>\216u!?\216\302\365<\\\217\002?\270\036\005>\366(\034?82\030<\035O\006?\346S\032>5i\030?Q\3356=!\204\372>l?\354=Av!?\351E\200=\210\205\372>\036\356P>\216u!?\254\252\252=\\\217\002?\274\273;>\366(\034?O@\200=\035O\006?\352\360P>5i\030?\260\250\310=!\204\372>\272\274,>Av!?\357\177\355=\210\205\372>\220\305\203>\216u!?Y\362\013>\\\217\002?\277Xr>\366(\034?Uz\355=\035O\006?\367\306\203>5i\030?[\361\032>!\204\372>\275Yc>Av!?\372\\->\210\205\372>\022\024\237>\216u!?\\\217B>\\\217\002?\341z\224>\366(\034?.Z->\035O\006?x\025\237>5i\030?^\216Q>!\204\372>`\373\214>Av!?\376\371c>\210\205\372>\223b\272>\216u!?_,y>\\\217\002?c\311\257>\366(\034?0\367c>\035O\006?\372c\272>5i\030?\261\025\204>!\204\372>\341I\250>Av!?\201K\215>\210\205\372>\025\261\325>\216u!?\261\344\227>\\\217\002?\345\027\313>\366(\034?\032J\215>\035O\006?|\262\325>5i\030?3d\237>!\204\372>c\230\303>Av!?\003\232\250>\210\205\372>\227\377\360>\216u!?33\263>\\\217\002?gf\346>\366(\034?\234\230\250>\035O\006?\376\000\361>5i\030?\265\262\272>!\204\372>\345\346\336>Av!?\205\350\303>\210\205\372>\r\'\006?\216u!?\265\201\316>\\\217\002?t\332\000?\366(\034?\036\347\303>\035O\006?\300\'\006?5i\030?7\001\326>!\204\372>g5\372>Av!?\0067\337>\210\205\372>M\316\023?\216u!?6\320\351>\\\217\002?\265\201\016?\366(\034?\2375\337>\035O\006?\000\317\023?5i\030?\270O\361>!\204\372>\364\301\n?Av!?\210\205\372>\210\205\372>\216u!?\216u!?\\\217\002?\\\217\002?\366(\034?\366(\034?!\204\372>\035O\006?Av!?5i\030?\035O\006?!\204\372>5i\030?Av!?\005\352\n?\210\205\372>\317\034/?\216u!?\2356\020?\\\217\002?7\320)?\366(\034?R\351\n?\035O\006?\202\035/?5i\030?^\366\023?!\204\372>v\020&?Av!?F\221\030?\210\205\372>\020\304<?\216u!?\336\335\035?\\\217\002?xw7?\366(\034?\223\220\030?\035O\006?\303\304<?5i\030?\237\235!?!\204\372>\267\2673?Av!?\2078&?\210\205\372>QkJ?\216u!?\037\205+?\\\217\002?\271\036E?\366(\034?\3247&?\035O\006?\004lJ?5i\030?\340D/?!\204\372>\370^A?Av!?\307\3373?\210\205\372>\221\022X?\216u!?_,9?\\\217\002?\371\305R?\366(\034?\024\3373?\035O\006?D\023X?5i\030? \354<?!\204\372>8\006O?Av!?\010\207A?\210\205\372>\322\271e?\216u!?\240\323F?\\\217\002?:m`?\366(\034?U\206A?\035O\006?\205\272e?5i\030?a\223J?!\204\372>y\255\\?Av!?I.O?\210\205\372>\023as?\216u!?\341zT?\\\217\002?{\024n?\366(\034?\226-O?\035O\006?\306as?5i\030?\242:X?!\204\372>\272Tj?Av!?\212\325\\?\210\205\372>*\204\200?\216u!?\"\"b?\\\217\002?\274\273{?\366(\034?\327\324\\?\035O\006?\204\204\200?5i\030?\343\341e?!\204\372>\373\373w?Av!?\313|j?\210\205\372>\313W\207?\216u!?c\311o?\\\217\002?~\261\204?\366(\034?\030|j?\035O\006?$X\207?5i\030?$\211s?!\204\372>\236\321\202?Av!?K\\4\275\005\352\n?,h\307=\317\034/?\214%\277\274\2356\020?j\003\235=7\320)?\177g4\275^\366\023?\306m\307=v\020&?\360Z\016\274R\351\n?\312\n~=\202\035/?\010_\030<\005\352\n?\032Q\032>\317\034/?\216\302\365<\2356\020?\270\036\005>7\320)?82\030<^\366\023?\346S\032>v\020&?Q\3356=R\351\n?l?\354=\202\035/?\351E\200=\005\352\n?\036\356P>\317\034/?\254\252\252=\2356\020?\274\273;>7\320)?O@\200=^\366\023?\352\360P>v\020&?\260\250\310=R\351\n?\272\274,>\202\035/?\357\177\355=\005\352\n?\220\305\203>\317\034/?Y\362\013>\2356\020?\277Xr>7\320)?Uz\355=^\366\023?\367\306\203>v\020&?[\361\032>R\351\n?\275Yc>\202\035/?\372\\->\005\352\n?\022\024\237>\317\034/?\\\217B>\2356\020?\341z\224>7\320)?.Z->^\366\023?x\025\237>v\020&?^\216Q>R\351\n?`\373\214>\202\035/?\376\371c>\005\352\n?\223b\272>\317\034/?_,y>\2356\020?c\311\257>7\320)?0\367c>^\366\023?\372c\272>v\020&?\261\025\204>R\351\n?\341I\250>\202\035/?\201K\215>\005\352\n?\025\261\325>\317\034/?\261\344\227>\2356\020?\345\027\313>7\320)?\032J\215>^\366\023?|\262\325>v\020&?3d\237>R\351\n?c\230\303>\202\035/?\003\232\250>\005\352\n?\227\377\360>\317\034/?33\263>\2356\020?gf\346>7\320)?\234\230\250>^\366\023?\376\000\361>v\020&?\265\262\272>R\351\n?\345\346\336>\202\035/?\205\350\303>\005\352\n?\r\'\006?\317\034/?\265\201\316>\2356\020?t\332\000?7\320)?\036\347\303>^\366\023?\300\'\006?v\020&?7\001\326>R\351\n?g5\372>\202\035/?\0067\337>\005\352\n?M\316\023?\317\034/?6\320\351>\2356\020?\265\201\016?7\320)?\2375\337>^\366\023?\000\317\023?v\020&?\270O\361>R\351\n?\364\301\n?\202\035/?\210\205\372>\005\352\n?\216u!?\317\034/?\\\217\002?\2356\020?\366(\034?7\320)?!\204\372>^\366\023?Av!?v\020&?\035O\006?R\351\n?5i\030?\202\035/?\005\352\n?\005\352\n?\317\034/?\317\034/?\2356\020?\2356\020?7\320)?7\320)?R\351\n?^\366\023?\202\035/?v\020&?^\366\023?R\351\n?v\020&?\202\035/?F\221\030?\005\352\n?\020\304<?\317\034/?\336\335\035?\2356\020?xw7?7\320)?\223\220\030?^\366\023?\303\304<?v\020&?\237\235!?R\351\n?\267\2673?\202\035/?\2078&?\005\352\n?QkJ?\317\034/?\037\205+?\2356\020?\271\036E?7\320)?\3247&?^\366\023?\004lJ?v\020&?\340D/?R\351\n?\370^A?\202\035/?\307\3373?\005\352\n?\221\022X?\317\034/?_,9?\2356\020?\371\305R?7\320)?\024\3373?^\366\023?D\023X?v\020&? \354<?R\351\n?8\006O?\202\035/?\010\207A?\005\352\n?\322\271e?\317\034/?\240\323F?\2356\020?:m`?7\320)?U\206A?^\366\023?\205\272e?v\020&?a\223J?R\351\n?y\255\\?\202\035/?I.O?\005\352\n?\023as?\317\034/?\341zT?\2356\020?{\024n?7\320)?\226-O?^\366\023?\306as?v\020&?\242:X?R\351\n?\272Tj?\202\035/?\212\325\\?\005\352\n?*\204\200?\317\034/?\"\"b?\2356\020?\274\273{?7\320)?\327\324\\?^\366\023?\204\204\200?v\020&?\343\341e?R\351\n?\373\373w?\202\035/?\313|j?\005\352\n?\313W\207?\317\034/?c\311o?\2356\020?~\261\204?7\320)?\030|j?^\366\023?$X\207?v\020&?$\211s?R\351\n?\236\321\202?\202\035/?K\\4\275F\221\030?,h\307=\020\304<?\214%\277\274\336\335\035?j\003\235=xw7?\177g4\275\237\235!?\306m\307=\267\2673?\360Z\016\274\223\220\030?\312\n~=\303\304<?\010_\030<F\221\030?\032Q\032>\020\304<?\216\302\365<\336\335\035?\270\036\005>xw7?82\030<\237\235!?\346S\032>\267\2673?Q\3356=\223\220\030?l?\354=\303\304<?\351E\200=F\221\030?\036\356P>\020\304<?\254\252\252=\336\335\035?\274\273;>xw7?O@\200=\237\235!?\352\360P>\267\2673?\260\250\310=\223\220\030?\272\274,>\303\304<?\357\177\355=F\221\030?\220\305\203>\020\304<?Y\362\013>\336\335\035?\277Xr>xw7?Uz\355=\237\235!?\367\306\203>\267\2673?[\361\032>\223\220\030?\275Yc>\303\304<?\372\\->F\221\030?\022\024\237>\020\304<?\\\217B>\336\335\035?\341z\224>xw7?.Z->\237\235!?x\025\237>\267\2673?^\216Q>\223\220\030?`\373\214>\303\304<?\376\371c>F\221\030?\223b\272>\020\304<?_,y>\336\335\035?c\311\257>xw7?0\367c>\237\235!?\372c\272>\267\2673?\261\025\204>\223\220\030?\341I\250>\303\304<?\201K\215>F\221\030?\025\261\325>\020\304<?\261\344\227>\336\335\035?\345\027\313>xw7?\032J\215>\237\235!?|\262\325>\267\2673?3d\237>\223\220\030?c\230\303>\303\304<?\003\232\250>F\221\030?\227\377\360>\020\304<?33\263>\336\335\035?gf\346>xw7?\234\230\250>\237\235!?\376\000\361>\267\2673?\265\262\272>\223\220\030?\345\346\336>\303\304<?\205\350\303>F\221\030?\r\'\006?\020\304<?\265\201\316>\336\335\035?t\332\000?xw7?\036\347\303>\237\235!?\300\'\006?\267\2673?7\001\326>\223\220\030?g5\372>\303\304<?\0067\337>F\221\030?M\316\023?\020\304<?6\320\351>\336\335\035?\265\201\016?xw7?\2375\337>\237\235!?\000\317\023?\267\2673?\270O\361>\223\220\030?\364\301\n?\303\304<?\210\205\372>F\221\030?\216u!?\020\304<?\\\217\002?\336\335\035?\366(\034?xw7?!\204\372>\237\235!?Av!?\267\2673?\035O\006?\223\220\030?5i\030?\303\304<?\005\352\n?F\221\030?\317\034/?\020\304<?\2356\020?\336\335\035?7\320)?xw7?R\351\n?\237\235!?\202\035/?\267\2673?^\366\023?\223\220\030?v\020&?\303\304<?F\221\030?F\221\030?\020\304<?\020\304<?\336\335\035?\336\335\035?xw7?xw7?\223\220\030?\237\235!?\303\304<?\267\2673?\237\235!?\223\220\030?\267\2673?\303\304<?\2078&?F\221\030?QkJ?\020\304<?\037\205+?\336\335\035?\271\036E?xw7?\3247&?\237\235!?\004lJ?\267\2673?\340D/?\223\220\030?\370^A?\303\304<?\307\3373?F\221\030?\221\022X?\020\304<?_,9?\336\335\035?\371\305R?xw7?\024\3373?\237\235!?D\023X?\267\2673? \354<?\223\220\030?8\006O?\303\304<?\010\207A?F\221\030?\322\271e?\020\304<?\240\323F?\336\335\035?:m`?xw7?U\206A?\237\235!?\205\272e?\267\2673?a\223J?\223\220\030?y\255\\?\303\304<?I.O?F\221\030?\023as?\020\304<?\341zT?\336\335\035?{\024n?xw7?\226-O?\237\235!?\306as?\267\2673?\242:X?\223\220\030?\272Tj?\303\304<?\212\325\\?F\221\030?*\204\200?\020\304<?\"\"b?\336\335\035?\274\273{?xw7?\327\324\\?\237\235!?\204\204\200?\267\2673?\343\341e?\223\220\030?\373\373w?\303\304<?\313|j?F\221\030?\313W\207?\020\304<?c\311o?\336\335\035?~\261\204?xw7?\030|j?\237\235!?$X\207?\267\2673?$\211s?\223\220\030?\236\321\202?\303\304<?K\\4\275\2078&?,h\307=QkJ?\214%\277\274\037\205+?j\003\235=\271\036E?\177g4\275\340D/?\306m\307=\370^A?\360Z\016\274\3247&?\312\n~=\004lJ?\010_\030<\2078&?\032Q\032>QkJ?\216\302\365<\037\205+?\270\036\005>\271\036E?82\030<\340D/?\346S\032>\370^A?Q\3356=\3247&?l?\354=\004lJ?\351E\200=\2078&?\036\356P>QkJ?\254\252\252=\037\205+?\274\273;>\271\036E?O@\200=\340D/?\352\360P>\370^A?\260\250\310=\3247&?\272\274,>\004lJ?\357\177\355=\2078&?\220\305\203>QkJ?Y\362\013>\037\205+?\277Xr>\271\036E?Uz\355=\340D/?\367\306\203>\370^A?[\361\032>\3247&?\275Yc>\004lJ?\372\\->\2078&?\022\024\237>QkJ?\\\217B>\037\205+?\341z\224>\271\036E?.Z->\340D/?x\025\237>\370^A?^\216Q>\3247&?`\373\214>\004lJ?\376\371c>\2078&?\223b\272>QkJ?_,y>\037\205+?c\311\257>\271\036E?0\367c>\340D/?\372c\272>\370^A?\261\025\204>\3247&?\341I\250>\004lJ?\201K\215>\2078&?\025\261\325>QkJ?\261\344\227>\037\205+?\345\027\313>\271\036E?\032J\215>\340D/?|\262\325>\370^A?3d\237>\3247&?c\230\303>\004lJ?\003\232\250>\2078&?\227\377\360>QkJ?33\263>\037\205+?gf\346>\271\036E?\234\230\250>\340D/?\376\000\361>\370^A?\265\262\272>\3247&?\345\346\336>\004lJ?\205\350\303>\2078&?\r\'\006?QkJ?\265\201\316>\037\205+?t\332\000?\271\036E?\036\347\303>\340D/?\300\'\006?\370^A?7\001\326>\3247&?g5\372>\004lJ?\0067\337>\2078&?M\316\023?QkJ?6\320\351>\037\205+?\265\201\016?\271\036E?\2375\337>\340D/?\000\317\023?\370^A?\270O\361>\3247&?\364\301\n?\004lJ?\210\205\372>\2078&?\216u!?QkJ?\\\217\002?\037\205+?\366(\034?\271\036E?!\204\372>\340D/?Av!?\370^A?\035O\006?\3247&?5i\030?\004lJ?\005\352\n?\2078&?\317\034/?QkJ?\2356\020?\037\205+?7\320)?\271\036E?R\351\n?\340D/?\202\035/?\370^A?^\366\023?\3247&?v\020&?\004lJ?F\221\030?\2078&?\020\304<?QkJ?\336\335\035?\037\205+?xw7?\271\036E?\223\220\030?\340D/?\303\304<?\370^A?\237\235!?\3247&?\267\2673?\004lJ?\2078&?\2078&?QkJ?QkJ?\037\205+?\037\205+?\271\036E?\271\036E?\3247&?\340D/?\004lJ?\370^A?\340D/?\3247&?\370^A?\004lJ?\307\3373?\2078&?\221\022X?QkJ?_,9?\037\205+?\371\305R?\271\036E?\024\3373?\340D/?D\023X?\370^A? \354<?\3247&?8\006O?\004lJ?\010\207A?\2078&?\322\271e?QkJ?\240\323F?\037\205+?:m`?\271\036E?U\206A?\340D/?\205\272e?\370^A?a\223J?\3247&?y\255\\?\004lJ?I.O?\2078&?\023as?QkJ?\341zT?\037\205+?{\024n?\271\036E?\226-O?\340D/?\306as?\370^A?\242:X?\3247&?\272Tj?\004lJ?\212\325\\?\2078&?*\204\200?QkJ?\"\"b?\037\205+?\274\273{?\271\036E?\327\324\\?\340D/?\204\204\200?\370^A?\343\341e?\3247&?\373\373w?\004lJ?\313|j?\2078&?\313W\207?QkJ?c\311o?\037\205+?~\261\204?\271\036E?\030|j?\340D/?$X\207?\370^A?$\211s?\3247&?\236\321\202?\004lJ?K\\4\275\307\3373?,h\307=\221\022X?\214%\277\274_,9?j\003\235=\371\305R?\177g4\275 \354<?\306m\307=8\006O?\360Z\016\274\024\3373?\312\n~=D\023X?\010_\030<\307\3373?\032Q\032>\221\022X?\216\302\365<_,9?\270\036\005>\371\305R?82\030< \354<?\346S\032>8\006O?Q\3356=\024\3373?l?\354=D\023X?\351E\200=\307\3373?\036\356P>\221\022X?\254\252\252=_,9?\274\273;>\371\305R?O@\200= \354<?\352\360P>8\006O?\260\250\310=\024\3373?\272\274,>D\023X?\357\177\355=\307\3373?\220\305\203>\221\022X?Y\362\013>_,9?\277Xr>\371\305R?Uz\355= \354<?\367\306\203>8\006O?[\361\032>\024\3373?\275Yc>D\023X?\372\\->\307\3373?\022\024\237>\221\022X?\\\217B>_,9?\341z\224>\371\305R?.Z-> \354<?x\025\237>8\006O?^\216Q>\024\3373?`\373\214>D\023X?\376\371c>\307\3373?\223b\272>\221\022X?_,y>_,9?c\311\257>\371\305R?0\367c> \354<?\372c\272>8\006O?\261\025\204>\024\3373?\341I\250>D\023X?\201K\215>\307\3373?\025\261\325>\221\022X?\261\344\227>_,9?\345\027\313>\371\305R?\032J\215> \354<?|\262\325>8\006O?3d\237>\024\3373?c\230\303>D\023X?\003\232\250>\307\3373?\227\377\360>\221\022X?33\263>_,9?gf\346>\371\305R?\234\230\250> \354<?\376\000\361>8\006O?\265\262\272>\024\3373?\345\346\336>D\023X?\205\350\303>\307\3373?\r\'\006?\221\022X?\265\201\316>_,9?t\332\000?\371\305R?\036\347\303> \354<?\300\'\006?8\006O?7\001\326>\024\3373?g5\372>D\023X?\0067\337>\307\3373?M\316\023?\221\022X?6\320\351>_,9?\265\201\016?\371\305R?\2375\337> \354<?\000\317\023?8\006O?\270O\361>\024\3373?\364\301\n?D\023X?\210\205\372>\307\3373?\216u!?\221\022X?\\\217\002?_,9?\366(\034?\371\305R?!\204\372> \354<?Av!?8\006O?\035O\006?\024\3373?5i\030?D\023X?\005\352\n?\307\3373?\317\034/?\221\022X?\2356\020?_,9?7\320)?\371\305R?R\351\n? \354<?\202\035/?8\006O?^\366\023?\024\3373?v\020&?D\023X?F\221\030?\307\3373?\020\304<?\221\022X?\336\335\035?_,9?xw7?\371\305R?\223\220\030? \354<?\303\304<?8\006O?\237\235!?\024\3373?\267\2673?D\023X?\2078&?\307\3373?QkJ?\221\022X?\037\205+?_,9?\271\036E?\371\305R?\3247&? \354<?\004lJ?8\006O?\340D/?\024\3373?\370^A?D\023X?\307\3373?\307\3373?\221\022X?\221\022X?_,9?_,9?\371\305R?\371\305R?\024\3373? \354<?D\023X?8\006O? \354<?\024\3373?8\006O?D\023X?\010\207A?\307\3373?\322\271e?\221\022X?\240\323F?_,9?:m`?\371\305R?U\206A? \354<?\205\272e?8\006O?a\223J?\024\3373?y\255\\?D\023X?I.O?\307\3373?\023as?\221\022X?\341zT?_,9?{\024n?\371\305R?\226-O? \354<?\306as?8\006O?\242:X?\024\3373?\272Tj?D\023X?\212\325\\?\307\3373?*\204\200?\221\022X?\"\"b?_,9?\274\273{?\371\305R?\327\324\\? \354<?\204\204\200?8\006O?\343\341e?\024\3373?\373\373w?D\023X?\313|j?\307\3373?\313W\207?\221\022X?c\311o?_,9?~\261\204?\371\305R?\030|j? \354<?$X\207?8\006O?$\211s?\024\3373?\236\321\202?D\023X?K\\4\275\010\207A?,h\307=\322\271e?\214%\277\274\240\323F?j\003\235=:m`?\177g4\275a\223J?\306m\307=y\255\\?\360Z\016\274U\206A?\312\n~=\205\272e?\010_\030<\010\207A?\032Q\032>\322\271e?\216\302\365<\240\323F?\270\036\005>:m`?82\030<a\223J?\346S\032>y\255\\?Q\3356=U\206A?l?\354=\205\272e?\351E\200=\010\207A?\036\356P>\322\271e?\254\252\252=\240\323F?\274\273;>:m`?O@\200=a\223J?\352\360P>y\255\\?\260\250\310=U\206A?\272\274,>\205\272e?\357\177\355=\010\207A?\220\305\203>\322\271e?Y\362\013>\240\323F?\277Xr>:m`?Uz\355=a\223J?\367\306\203>y\255\\?[\361\032>U\206A?\275Yc>\205\272e?\372\\->\010\207A?\022\024\237>\322\271e?\\\217B>\240\323F?\341z\224>:m`?.Z->a\223J?x\025\237>y\255\\?^\216Q>U\206A?`\373\214>\205\272e?\376\371c>\010\207A?\223b\272>\322\271e?_,y>\240\323F?c\311\257>:m`?0\367c>a\223J?\372c\272>y\255\\?\261\025\204>U\206A?\341I\250>\205\272e?\201K\215>\010\207A?\025\261\325>\322\271e?\261\344\227>\240\323F?\345\027\313>:m`?\032J\215>a\223J?|\262\325>y\255\\?3d\237>U\206A?c\230\303>\205\272e?\003\232\250>\010\207A?\227\377\360>\322\271e?33\263>\240\323F?gf\346>:m`?\234\230\250>a\223J?\376\000\361>y\255\\?\265\262\272>U\206A?\345\346\336>\205\272e?\205\350\303>\010\207A?\r\'\006?\322\271e?\265\201\316>\240\323F?t\332\000?:m`?\036\347\303>a\223J?\300\'\006?y\255\\?7\001\326>U\206A?g5\372>\205\272e?\0067\337>\010\207A?M\316\023?\322\271e?6\320\351>\240\323F?\265\201\016?:m`?\2375\337>a\223J?\000\317\023?y\255\\?\270O\361>U\206A?\364\301\n?\205\272e?\210\205\372>\010\207A?\216u!?\322\271e?\\\217\002?\240\323F?\366(\034?:m`?!\204\372>a\223J?Av!?y\255\\?\035O\006?U\206A?5i\030?\205\272e?\005\352\n?\010\207A?\317\034/?\322\271e?\2356\020?\240\323F?7\320)?:m`?R\351\n?a\223J?\202\035/?y\255\\?^\366\023?U\206A?v\020&?\205\272e?F\221\030?\010\207A?\020\304<?\322\271e?\336\335\035?\240\323F?xw7?:m`?\223\220\030?a\223J?\303\304<?y\255\\?\237\235!?U\206A?\267\2673?\205\272e?\2078&?\010\207A?QkJ?\322\271e?\037\205+?\240\323F?\271\036E?:m`?\3247&?a\223J?\004lJ?y\255\\?\340D/?U\206A?\370^A?\205\272e?\307\3373?\010\207A?\221\022X?\322\271e?_,9?\240\323F?\371\305R?:m`?\024\3373?a\223J?D\023X?y\255\\? \354<?U\206A?8\006O?\205\272e?\010\207A?\010\207A?\322\271e?\322\271e?\240\323F?\240\323F?:m`?:m`?U\206A?a\223J?\205\272e?y\255\\?a\223J?U\206A?y\255\\?\205\272e?I.O?\010\207A?\023as?\322\271e?\341zT?\240\323F?{\024n?:m`?\226-O?a\223J?\306as?y\255\\?\242:X?U\206A?\272Tj?\205\272e?\212\325\\?\010\207A?*\204\200?\322\271e?\"\"b?\240\323F?\274\273{?:m`?\327\324\\?a\223J?\204\204\200?y\255\\?\343\341e?U\206A?\373\373w?\205\272e?\313|j?\010\207A?\313W\207?\322\271e?c\311o?\240\323F?~\261\204?:m`?\030|j?a\223J?$X\207?y\255\\?$\211s?U\206A?\236\321\202?\205\272e?K\\4\275I.O?,h\307=\023as?\214%\277\274\341zT?j\003\235={\024n?\177g4\275\242:X?\306m\307=\272Tj?\360Z\016\274\226-O?\312\n~=\306as?\010_\030<I.O?\032Q\032>\023as?\216\302\365<\341zT?\270\036\005>{\024n?82\030<\242:X?\346S\032>\272Tj?Q\3356=\226-O?l?\354=\306as?\351E\200=I.O?\036\356P>\023as?\254\252\252=\341zT?\274\273;>{\024n?O@\200=\242:X?\352\360P>\272Tj?\260\250\310=\226-O?\272\274,>\306as?\357\177\355=I.O?\220\305\203>\023as?Y\362\013>\341zT?\277Xr>{\024n?Uz\355=\242:X?\367\306\203>\272Tj?[\361\032>\226-O?\275Yc>\306as?\372\\->I.O?\022\024\237>\023as?\\\217B>\341zT?\341z\224>{\024n?.Z->\242:X?x\025\237>\272Tj?^\216Q>\226-O?`\373\214>\306as?\376\371c>I.O?\223b\272>\023as?_,y>\341zT?c\311\257>{\024n?0\367c>\242:X?\372c\272>\272Tj?\261\025\204>\226-O?\341I\250>\306as?\201K\215>I.O?\025\261\325>\023as?\261\344\227>\341zT?\345\027\313>{\024n?\032J\215>\242:X?|\262\325>\272Tj?3d\237>\226-O?c\230\303>\306as?\003\232\250>I.O?\227\377\360>\023as?33\263>\341zT?gf\346>{\024n?\234\230\250>\242:X?\376\000\361>\272Tj?\265\262\272>\226-O?\345\346\336>\306as?\205\350\303>I.O?\r\'\006?\023as?\265\201\316>\341zT?t\332\000?{\024n?\036\347\303>\242:X?\300\'\006?\272Tj?7\001\326>\226-O?g5\372>\306as?\0067\337>I.O?M\316\023?\023as?6\320\351>\341zT?\265\201\016?{\024n?\2375\337>\242:X?\000\317\023?\272Tj?\270O\361>\226-O?\364\301\n?\306as?\210\205\372>I.O?\216u!?\023as?\\\217\002?\341zT?\366(\034?{\024n?!\204\372>\242:X?Av!?\272Tj?\035O\006?\226-O?5i\030?\306as?\005\352\n?I.O?\317\034/?\023as?\2356\020?\341zT?7\320)?{\024n?R\351\n?\242:X?\202\035/?\272Tj?^\366\023?\226-O?v\020&?\306as?F\221\030?I.O?\020\304<?\023as?\336\335\035?\341zT?xw7?{\024n?\223\220\030?\242:X?\303\304<?\272Tj?\237\235!?\226-O?\267\2673?\306as?\2078&?I.O?QkJ?\023as?\037\205+?\341zT?\271\036E?{\024n?\3247&?\242:X?\004lJ?\272Tj?\340D/?\226-O?\370^A?\306as?\307\3373?I.O?\221\022X?\023as?_,9?\341zT?\371\305R?{\024n?\024\3373?\242:X?D\023X?\272Tj? \354<?\226-O?8\006O?\306as?\010\207A?I.O?\322\271e?\023as?\240\323F?\341zT?:m`?{\024n?U\206A?\242:X?\205\272e?\272Tj?a\223J?\226-O?y\255\\?\306as?I.O?I.O?\023as?\023as?\341zT?\341zT?{\024n?{\024n?\226-O?\242:X?\306as?\272Tj?\242:X?\226-O?\272Tj?\306as?\212\325\\?I.O?*\204\200?\023as?\"\"b?\341zT?\274\273{?{\024n?\327\324\\?\242:X?\204\204\200?\272Tj?\343\341e?\226-O?\373\373w?\306as?\313|j?I.O?\313W\207?\023as?c\311o?\341zT?~\261\204?{\024n?\030|j?\242:X?$X\207?\272Tj?$\211s?\226-O?\236\321\202?\306as?K\\4\275\212\325\\?,h\307=*\204\200?\214%\277\274\"\"b?j\003\235=\274\273{?\177g4\275\343\341e?\306m\307=\373\373w?\360Z\016\274\327\324\\?\312\n~=\204\204\200?\010_\030<\212\325\\?\032Q\032>*\204\200?\216\302\365<\"\"b?\270\036\005>\274\273{?82\030<\343\341e?\346S\032>\373\373w?Q\3356=\327\324\\?l?\354=\204\204\200?\351E\200=\212\325\\?\036\356P>*\204\200?\254\252\252=\"\"b?\274\273;>\274\273{?O@\200=\343\341e?\352\360P>\373\373w?\260\250\310=\327\324\\?\272\274,>\204\204\200?\357\177\355=\212\325\\?\220\305\203>*\204\200?Y\362\013>\"\"b?\277Xr>\274\273{?Uz\355=\343\341e?\367\306\203>\373\373w?[\361\032>\327\324\\?\275Yc>\204\204\200?\372\\->\212\325\\?\022\024\237>*\204\200?\\\217B>\"\"b?\341z\224>\274\273{?.Z->\343\341e?x\025\237>\373\373w?^\216Q>\327\324\\?`\373\214>\204\204\200?\376\371c>\212\325\\?\223b\272>*\204\200?_,y>\"\"b?c\311\257>\274\273{?0\367c>\343\341e?\372c\272>\373\373w?\261\025\204>\327\324\\?\341I\250>\204\204\200?\201K\215>\212\325\\?\025\261\325>*\204\200?\261\344\227>\"\"b?\345\027\313>\274\273{?\032J\215>\343\341e?|\262\325>\373\373w?3d\237>\327\324\\?c\230\303>\204\204\200?\003\232\250>\212\325\\?\227\377\360>*\204\200?33\263>\"\"b?gf\346>\274\273{?\234\230\250>\343\341e?\376\000\361>\373\373w?\265\262\272>\327\324\\?\345\346\336>\204\204\200?\205\350\303>\212\325\\?\r\'\006?*\204\200?\265\201\316>\"\"b?t\332\000?\274\273{?\036\347\303>\343\341e?\300\'\006?\373\373w?7\001\326>\327\324\\?g5\372>\204\204\200?\0067\337>\212\325\\?M\316\023?*\204\200?6\320\351>\"\"b?\265\201\016?\274\273{?\2375\337>\343\341e?\000\317\023?\373\373w?\270O\361>\327\324\\?\364\301\n?\204\204\200?\210\205\372>\212\325\\?\216u!?*\204\200?\\\217\002?\"\"b?\366(\034?\274\273{?!\204\372>\343\341e?Av!?\373\373w?\035O\006?\327\324\\?5i\030?\204\204\200?\005\352\n?\212\325\\?\317\034/?*\204\200?\2356\020?\"\"b?7\320)?\274\273{?R\351\n?\343\341e?\202\035/?\373\373w?^\366\023?\327\324\\?v\020&?\204\204\200?F\221\030?\212\325\\?\020\304<?*\204\200?\336\335\035?\"\"b?xw7?\274\273{?\223\220\030?\343\341e?\303\304<?\373\373w?\237\235!?\327\324\\?\267\2673?\204\204\200?\2078&?\212\325\\?QkJ?*\204\200?\037\205+?\"\"b?\271\036E?\274\273{?\3247&?\343\341e?\004lJ?\373\373w?\340D/?\327\324\\?\370^A?\204\204\200?\307\3373?\212\325\\?\221\022X?*\204\200?_,9?\"\"b?\371\305R?\274\273{?\024\3373?\343\341e?D\023X?\373\373w? \354<?\327\324\\?8\006O?\204\204\200?\010\207A?\212\325\\?\322\271e?*\204\200?\240\323F?\"\"b?:m`?\274\273{?U\206A?\343\341e?\205\272e?\373\373w?a\223J?\327\324\\?y\255\\?\204\204\200?I.O?\212\325\\?\023as?*\204\200?\341zT?\"\"b?{\024n?\274\273{?\226-O?\343\341e?\306as?\373\373w?\242:X?\327\324\\?\272Tj?\204\204\200?\212\325\\?\212\325\\?*\204\200?*\204\200?\"\"b?\"\"b?\274\273{?\274\273{?\327\324\\?\343\341e?\204\204\200?\373\373w?\343\341e?\327\324\\?\373\373w?\204\204\200?\313|j?\212\325\\?\313W\207?*\204\200?c\311o?\"\"b?~\261\204?\274\273{?\030|j?\343\341e?$X\207?\373\373w?$\211s?\327\324\\?\236\321\202?\204\204\200?K\\4\275\313|j?,h\307=\313W\207?\214%\277\274c\311o?j\003\235=~\261\204?\177g4\275$\211s?\306m\307=\236\321\202?\360Z\016\274\030|j?\312\n~=$X\207?\010_\030<\313|j?\032Q\032>\313W\207?\216\302\365<c\311o?\270\036\005>~\261\204?82\030<$\211s?\346S\032>\236\321\202?Q\3356=\030|j?l?\354=$X\207?\351E\200=\313|j?\036\356P>\313W\207?\254\252\252=c\311o?\274\273;>~\261\204?O@\200=$\211s?\352\360P>\236\321\202?\260\250\310=\030|j?\272\274,>$X\207?\357\177\355=\313|j?\220\305\203>\313W\207?Y\362\013>c\311o?\277Xr>~\261\204?Uz\355=$\211s?\367\306\203>\236\321\202?[\361\032>\030|j?\275Yc>$X\207?\372\\->\313|j?\022\024\237>\313W\207?\\\217B>c\311o?\341z\224>~\261\204?.Z->$\211s?x\025\237>\236\321\202?^\216Q>\030|j?`\373\214>$X\207?\376\371c>\313|j?\223b\272>\313W\207?_,y>c\311o?c\311\257>~\261\204?0\367c>$\211s?\372c\272>\236\321\202?\261\025\204>\030|j?\341I\250>$X\207?\201K\215>\313|j?\025\261\325>\313W\207?\261\344\227>c\311o?\345\027\313>~\261\204?\032J\215>$\211s?|\262\325>\236\321\202?3d\237>\030|j?c\230\303>$X\207?\003\232\250>\313|j?\227\377\360>\313W\207?33\263>c\311o?gf\346>~\261\204?\234\230\250>$\211s?\376\000\361>\236\321\202?\265\262\272>\030|j?\345\346\336>$X\207?\205\350\303>\313|j?\r\'\006?\313W\207?\265\201\316>c\311o?t\332\000?~\261\204?\036\347\303>$\211s?\300\'\006?\236\321\202?7\001\326>\030|j?g5\372>$X\207?\0067\337>\313|j?M\316\023?\313W\207?6\320\351>c\311o?\265\201\016?~\261\204?\2375\337>$\211s?\000\317\023?\236\321\202?\270O\361>\030|j?\364\301\n?$X\207?\210\205\372>\313|j?\216u!?\313W\207?\\\217\002?c\311o?\366(\034?~\261\204?!\204\372>$\211s?Av!?\236\321\202?\035O\006?\030|j?5i\030?$X\207?\005\352\n?\313|j?\317\034/?\313W\207?\2356\020?c\311o?7\320)?~\261\204?R\351\n?$\211s?\202\035/?\236\321\202?^\366\023?\030|j?v\020&?$X\207?F\221\030?\313|j?\020\304<?\313W\207?\336\335\035?c\311o?xw7?~\261\204?\223\220\030?$\211s?\303\304<?\236\321\202?\237\235!?\030|j?\267\2673?$X\207?\2078&?\313|j?QkJ?\313W\207?\037\205+?c\311o?\271\036E?~\261\204?\3247&?$\211s?\004lJ?\236\321\202?\340D/?\030|j?\370^A?$X\207?\307\3373?\313|j?\221\022X?\313W\207?_,9?c\311o?\371\305R?~\261\204?\024\3373?$\211s?D\023X?\236\321\202? \354<?\030|j?8\006O?$X\207?\010\207A?\313|j?\322\271e?\313W\207?\240\323F?c\311o?:m`?~\261\204?U\206A?$\211s?\205\272e?\236\321\202?a\223J?\030|j?y\255\\?$X\207?I.O?\313|j?\023as?\313W\207?\341zT?c\311o?{\024n?~\261\204?\226-O?$\211s?\306as?\236\321\202?\242:X?\030|j?\272Tj?$X\207?\212\325\\?\313|j?*\204\200?\313W\207?\"\"b?c\311o?\274\273{?~\261\204?\327\324\\?$\211s?\204\204\200?\236\321\202?\343\341e?\030|j?\373\373w?$X\207?\313|j?\313|j?\313W\207?\313W\207?c\311o?c\311o?~\261\204?~\261\204?\030|j?$\211s?$X\207?\236\321\202?$\211s?\030|j?\236\321\202?$X\207?@Y\006<@Y\006<\233\346}?\233\346}?\320\314L=\320\314L=33s?33s?l\253\013\276J*:>nu\221?nuQ?J*:>l\253\013\276nuQ?nu\221?"
      }
    }
  }
}
node {
  name: "Const_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 5792
          }
          dim {
            size: 1
          }
        }
        tensor_content
      }
    }
  }
}
node {
  name: "concat_5/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "concat_5"
  op: "ConcatV2"
  input: "Const"
  input: "Const_1"
  input: "concat_5/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "priorbox_data/shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\377\377\377\377\002\000\000\000\240\026\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "priorbox_data"
  op: "Reshape"
  input: "concat_5"
  input: "priorbox_data/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "loc_data/shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\377\377\377\377\240\026\000\000\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "loc_data"
  op: "Reshape"
  input: "ssd300/concat_1"
  input: "loc_data/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "conf_data/shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\377\377\377\377P\013\000\000\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "conf_data"
  op: "Reshape"
  input: "ssd300/concat"
  input: "conf_data/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
versions {
  producer: 134
}

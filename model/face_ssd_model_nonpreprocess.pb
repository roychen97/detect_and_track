node {
  name: "input_image"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
        dim {
          size: 3
        }
        dim {
          size: 300
        }
        dim {
          size: 300
        }
      }
    }
  }
}
node {
  name: "get_layer_anchors/range/start"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "get_layer_anchors/range/limit"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 19
      }
    }
  }
}
node {
  name: "get_layer_anchors/range/delta"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "get_layer_anchors/range"
  op: "Range"
  input: "get_layer_anchors/range/start"
  input: "get_layer_anchors/range/limit"
  input: "get_layer_anchors/range/delta"
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "get_layer_anchors/range_1/start"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "get_layer_anchors/range_1/limit"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 19
      }
    }
  }
}
node {
  name: "get_layer_anchors/range_1/delta"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "get_layer_anchors/range_1"
  op: "Range"
  input: "get_layer_anchors/range_1/start"
  input: "get_layer_anchors/range_1/limit"
  input: "get_layer_anchors/range_1/delta"
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "get_layer_anchors/meshgrid/Reshape/shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\377\377\377\377\001\000\000\000"
      }
    }
  }
}
node {
  name: "get_layer_anchors/meshgrid/Reshape"
  op: "Reshape"
  input: "get_layer_anchors/range"
  input: "get_layer_anchors/meshgrid/Reshape/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "get_layer_anchors/meshgrid/Reshape_1/shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\377\377\377\377"
      }
    }
  }
}
node {
  name: "get_layer_anchors/meshgrid/Reshape_1"
  op: "Reshape"
  input: "get_layer_anchors/range_1"
  input: "get_layer_anchors/meshgrid/Reshape_1/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "get_layer_anchors/meshgrid/Size"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 19
      }
    }
  }
}
node {
  name: "get_layer_anchors/meshgrid/Size_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 19
      }
    }
  }
}
node {
  name: "get_layer_anchors/meshgrid/Reshape_2/shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\377\377\377\377"
      }
    }
  }
}
node {
  name: "get_layer_anchors/meshgrid/Reshape_2"
  op: "Reshape"
  input: "get_layer_anchors/meshgrid/Reshape"
  input: "get_layer_anchors/meshgrid/Reshape_2/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "get_layer_anchors/meshgrid/Reshape_3/shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\377\377\377\377\001\000\000\000"
      }
    }
  }
}
node {
  name: "get_layer_anchors/meshgrid/Reshape_3"
  op: "Reshape"
  input: "get_layer_anchors/meshgrid/Reshape_1"
  input: "get_layer_anchors/meshgrid/Reshape_3/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "get_layer_anchors/meshgrid/ones/mul"
  op: "Mul"
  input: "get_layer_anchors/meshgrid/Size_1"
  input: "get_layer_anchors/meshgrid/Size"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "get_layer_anchors/meshgrid/ones/Less/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1000
      }
    }
  }
}
node {
  name: "get_layer_anchors/meshgrid/ones/Less"
  op: "Less"
  input: "get_layer_anchors/meshgrid/ones/mul"
  input: "get_layer_anchors/meshgrid/ones/Less/y"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "get_layer_anchors/meshgrid/ones/packed"
  op: "Pack"
  input: "get_layer_anchors/meshgrid/Size_1"
  input: "get_layer_anchors/meshgrid/Size"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "get_layer_anchors/meshgrid/ones/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "get_layer_anchors/meshgrid/ones"
  op: "Fill"
  input: "get_layer_anchors/meshgrid/ones/packed"
  input: "get_layer_anchors/meshgrid/ones/Const"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "get_layer_anchors/meshgrid/mul"
  op: "Mul"
  input: "get_layer_anchors/meshgrid/Reshape_2"
  input: "get_layer_anchors/meshgrid/ones"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "get_layer_anchors/meshgrid/mul_1"
  op: "Mul"
  input: "get_layer_anchors/meshgrid/Reshape_3"
  input: "get_layer_anchors/meshgrid/ones"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "get_layer_anchors/Cast"
  op: "Cast"
  input: "get_layer_anchors/meshgrid/mul_1"
  attr {
    key: "DstT"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "SrcT"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Truncate"
    value {
      b: false
    }
  }
}
node {
  name: "get_layer_anchors/add/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.5
      }
    }
  }
}
node {
  name: "get_layer_anchors/add"
  op: "AddV2"
  input: "get_layer_anchors/Cast"
  input: "get_layer_anchors/add/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "get_layer_anchors/mul/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 16.0
      }
    }
  }
}
node {
  name: "get_layer_anchors/mul"
  op: "Mul"
  input: "get_layer_anchors/add"
  input: "get_layer_anchors/mul/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "get_layer_anchors/truediv/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 300.0
      }
    }
  }
}
node {
  name: "get_layer_anchors/truediv"
  op: "RealDiv"
  input: "get_layer_anchors/mul"
  input: "get_layer_anchors/truediv/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "get_layer_anchors/Cast_1"
  op: "Cast"
  input: "get_layer_anchors/meshgrid/mul"
  attr {
    key: "DstT"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "SrcT"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Truncate"
    value {
      b: false
    }
  }
}
node {
  name: "get_layer_anchors/add_1/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.5
      }
    }
  }
}
node {
  name: "get_layer_anchors/add_1"
  op: "AddV2"
  input: "get_layer_anchors/Cast_1"
  input: "get_layer_anchors/add_1/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "get_layer_anchors/mul_1/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 16.0
      }
    }
  }
}
node {
  name: "get_layer_anchors/mul_1"
  op: "Mul"
  input: "get_layer_anchors/add_1"
  input: "get_layer_anchors/mul_1/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "get_layer_anchors/truediv_1/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 300.0
      }
    }
  }
}
node {
  name: "get_layer_anchors/truediv_1"
  op: "RealDiv"
  input: "get_layer_anchors/mul_1"
  input: "get_layer_anchors/truediv_1/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "get_layer_anchors/ExpandDims/dim"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "get_layer_anchors/ExpandDims"
  op: "ExpandDims"
  input: "get_layer_anchors/truediv"
  input: "get_layer_anchors/ExpandDims/dim"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tdim"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "get_layer_anchors/ExpandDims_1/dim"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "get_layer_anchors/ExpandDims_1"
  op: "ExpandDims"
  input: "get_layer_anchors/truediv_1"
  input: "get_layer_anchors/ExpandDims_1/dim"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tdim"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "get_layer_anchors/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: ")\313\020>\315\314\314=\303\320\220=\303\320\020>"
      }
    }
  }
}
node {
  name: "get_layer_anchors/Const_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: ")\313\020>\315\314\314=\303\320\020>\303\320\220="
      }
    }
  }
}
node {
  name: "get_layer_anchors_1/range/start"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "get_layer_anchors_1/range/limit"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 10
      }
    }
  }
}
node {
  name: "get_layer_anchors_1/range/delta"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "get_layer_anchors_1/range"
  op: "Range"
  input: "get_layer_anchors_1/range/start"
  input: "get_layer_anchors_1/range/limit"
  input: "get_layer_anchors_1/range/delta"
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "get_layer_anchors_1/range_1/start"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "get_layer_anchors_1/range_1/limit"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 10
      }
    }
  }
}
node {
  name: "get_layer_anchors_1/range_1/delta"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "get_layer_anchors_1/range_1"
  op: "Range"
  input: "get_layer_anchors_1/range_1/start"
  input: "get_layer_anchors_1/range_1/limit"
  input: "get_layer_anchors_1/range_1/delta"
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "get_layer_anchors_1/meshgrid/Reshape/shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\377\377\377\377\001\000\000\000"
      }
    }
  }
}
node {
  name: "get_layer_anchors_1/meshgrid/Reshape"
  op: "Reshape"
  input: "get_layer_anchors_1/range"
  input: "get_layer_anchors_1/meshgrid/Reshape/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "get_layer_anchors_1/meshgrid/Reshape_1/shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\377\377\377\377"
      }
    }
  }
}
node {
  name: "get_layer_anchors_1/meshgrid/Reshape_1"
  op: "Reshape"
  input: "get_layer_anchors_1/range_1"
  input: "get_layer_anchors_1/meshgrid/Reshape_1/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "get_layer_anchors_1/meshgrid/Size"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 10
      }
    }
  }
}
node {
  name: "get_layer_anchors_1/meshgrid/Size_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 10
      }
    }
  }
}
node {
  name: "get_layer_anchors_1/meshgrid/Reshape_2/shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\377\377\377\377"
      }
    }
  }
}
node {
  name: "get_layer_anchors_1/meshgrid/Reshape_2"
  op: "Reshape"
  input: "get_layer_anchors_1/meshgrid/Reshape"
  input: "get_layer_anchors_1/meshgrid/Reshape_2/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "get_layer_anchors_1/meshgrid/Reshape_3/shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\377\377\377\377\001\000\000\000"
      }
    }
  }
}
node {
  name: "get_layer_anchors_1/meshgrid/Reshape_3"
  op: "Reshape"
  input: "get_layer_anchors_1/meshgrid/Reshape_1"
  input: "get_layer_anchors_1/meshgrid/Reshape_3/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "get_layer_anchors_1/meshgrid/ones/mul"
  op: "Mul"
  input: "get_layer_anchors_1/meshgrid/Size_1"
  input: "get_layer_anchors_1/meshgrid/Size"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "get_layer_anchors_1/meshgrid/ones/Less/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1000
      }
    }
  }
}
node {
  name: "get_layer_anchors_1/meshgrid/ones/Less"
  op: "Less"
  input: "get_layer_anchors_1/meshgrid/ones/mul"
  input: "get_layer_anchors_1/meshgrid/ones/Less/y"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "get_layer_anchors_1/meshgrid/ones/packed"
  op: "Pack"
  input: "get_layer_anchors_1/meshgrid/Size_1"
  input: "get_layer_anchors_1/meshgrid/Size"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "get_layer_anchors_1/meshgrid/ones/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "get_layer_anchors_1/meshgrid/ones"
  op: "Fill"
  input: "get_layer_anchors_1/meshgrid/ones/packed"
  input: "get_layer_anchors_1/meshgrid/ones/Const"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "get_layer_anchors_1/meshgrid/mul"
  op: "Mul"
  input: "get_layer_anchors_1/meshgrid/Reshape_2"
  input: "get_layer_anchors_1/meshgrid/ones"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "get_layer_anchors_1/meshgrid/mul_1"
  op: "Mul"
  input: "get_layer_anchors_1/meshgrid/Reshape_3"
  input: "get_layer_anchors_1/meshgrid/ones"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "get_layer_anchors_1/Cast"
  op: "Cast"
  input: "get_layer_anchors_1/meshgrid/mul_1"
  attr {
    key: "DstT"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "SrcT"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Truncate"
    value {
      b: false
    }
  }
}
node {
  name: "get_layer_anchors_1/add/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.5
      }
    }
  }
}
node {
  name: "get_layer_anchors_1/add"
  op: "AddV2"
  input: "get_layer_anchors_1/Cast"
  input: "get_layer_anchors_1/add/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "get_layer_anchors_1/mul/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 32.0
      }
    }
  }
}
node {
  name: "get_layer_anchors_1/mul"
  op: "Mul"
  input: "get_layer_anchors_1/add"
  input: "get_layer_anchors_1/mul/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "get_layer_anchors_1/truediv/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 300.0
      }
    }
  }
}
node {
  name: "get_layer_anchors_1/truediv"
  op: "RealDiv"
  input: "get_layer_anchors_1/mul"
  input: "get_layer_anchors_1/truediv/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "get_layer_anchors_1/Cast_1"
  op: "Cast"
  input: "get_layer_anchors_1/meshgrid/mul"
  attr {
    key: "DstT"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "SrcT"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Truncate"
    value {
      b: false
    }
  }
}
node {
  name: "get_layer_anchors_1/add_1/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.5
      }
    }
  }
}
node {
  name: "get_layer_anchors_1/add_1"
  op: "AddV2"
  input: "get_layer_anchors_1/Cast_1"
  input: "get_layer_anchors_1/add_1/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "get_layer_anchors_1/mul_1/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 32.0
      }
    }
  }
}
node {
  name: "get_layer_anchors_1/mul_1"
  op: "Mul"
  input: "get_layer_anchors_1/add_1"
  input: "get_layer_anchors_1/mul_1/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "get_layer_anchors_1/truediv_1/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 300.0
      }
    }
  }
}
node {
  name: "get_layer_anchors_1/truediv_1"
  op: "RealDiv"
  input: "get_layer_anchors_1/mul_1"
  input: "get_layer_anchors_1/truediv_1/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "get_layer_anchors_1/ExpandDims/dim"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "get_layer_anchors_1/ExpandDims"
  op: "ExpandDims"
  input: "get_layer_anchors_1/truediv"
  input: "get_layer_anchors_1/ExpandDims/dim"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tdim"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "get_layer_anchors_1/ExpandDims_1/dim"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "get_layer_anchors_1/ExpandDims_1"
  op: "ExpandDims"
  input: "get_layer_anchors_1/truediv_1"
  input: "get_layer_anchors_1/ExpandDims_1/dim"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tdim"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "get_layer_anchors_1/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 6
          }
        }
        tensor_content: "\237<\214>\315\314L>\303\320\020>\220{\354=\303\320\220>\361^\261>"
      }
    }
  }
}
node {
  name: "get_layer_anchors_1/Const_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 6
          }
        }
        tensor_content: "\237<\214>\315\314L>\303\320\220>\254\\\261>\303\320\020>\211x\354="
      }
    }
  }
}
node {
  name: "get_layer_anchors_2/range/start"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "get_layer_anchors_2/range/limit"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 5
      }
    }
  }
}
node {
  name: "get_layer_anchors_2/range/delta"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "get_layer_anchors_2/range"
  op: "Range"
  input: "get_layer_anchors_2/range/start"
  input: "get_layer_anchors_2/range/limit"
  input: "get_layer_anchors_2/range/delta"
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "get_layer_anchors_2/range_1/start"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "get_layer_anchors_2/range_1/limit"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 5
      }
    }
  }
}
node {
  name: "get_layer_anchors_2/range_1/delta"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "get_layer_anchors_2/range_1"
  op: "Range"
  input: "get_layer_anchors_2/range_1/start"
  input: "get_layer_anchors_2/range_1/limit"
  input: "get_layer_anchors_2/range_1/delta"
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "get_layer_anchors_2/meshgrid/Reshape/shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\377\377\377\377\001\000\000\000"
      }
    }
  }
}
node {
  name: "get_layer_anchors_2/meshgrid/Reshape"
  op: "Reshape"
  input: "get_layer_anchors_2/range"
  input: "get_layer_anchors_2/meshgrid/Reshape/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "get_layer_anchors_2/meshgrid/Reshape_1/shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\377\377\377\377"
      }
    }
  }
}
node {
  name: "get_layer_anchors_2/meshgrid/Reshape_1"
  op: "Reshape"
  input: "get_layer_anchors_2/range_1"
  input: "get_layer_anchors_2/meshgrid/Reshape_1/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "get_layer_anchors_2/meshgrid/Size"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 5
      }
    }
  }
}
node {
  name: "get_layer_anchors_2/meshgrid/Size_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 5
      }
    }
  }
}
node {
  name: "get_layer_anchors_2/meshgrid/Reshape_2/shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\377\377\377\377"
      }
    }
  }
}
node {
  name: "get_layer_anchors_2/meshgrid/Reshape_2"
  op: "Reshape"
  input: "get_layer_anchors_2/meshgrid/Reshape"
  input: "get_layer_anchors_2/meshgrid/Reshape_2/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "get_layer_anchors_2/meshgrid/Reshape_3/shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\377\377\377\377\001\000\000\000"
      }
    }
  }
}
node {
  name: "get_layer_anchors_2/meshgrid/Reshape_3"
  op: "Reshape"
  input: "get_layer_anchors_2/meshgrid/Reshape_1"
  input: "get_layer_anchors_2/meshgrid/Reshape_3/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "get_layer_anchors_2/meshgrid/ones/mul"
  op: "Mul"
  input: "get_layer_anchors_2/meshgrid/Size_1"
  input: "get_layer_anchors_2/meshgrid/Size"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "get_layer_anchors_2/meshgrid/ones/Less/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1000
      }
    }
  }
}
node {
  name: "get_layer_anchors_2/meshgrid/ones/Less"
  op: "Less"
  input: "get_layer_anchors_2/meshgrid/ones/mul"
  input: "get_layer_anchors_2/meshgrid/ones/Less/y"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "get_layer_anchors_2/meshgrid/ones/packed"
  op: "Pack"
  input: "get_layer_anchors_2/meshgrid/Size_1"
  input: "get_layer_anchors_2/meshgrid/Size"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "get_layer_anchors_2/meshgrid/ones/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "get_layer_anchors_2/meshgrid/ones"
  op: "Fill"
  input: "get_layer_anchors_2/meshgrid/ones/packed"
  input: "get_layer_anchors_2/meshgrid/ones/Const"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "get_layer_anchors_2/meshgrid/mul"
  op: "Mul"
  input: "get_layer_anchors_2/meshgrid/Reshape_2"
  input: "get_layer_anchors_2/meshgrid/ones"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "get_layer_anchors_2/meshgrid/mul_1"
  op: "Mul"
  input: "get_layer_anchors_2/meshgrid/Reshape_3"
  input: "get_layer_anchors_2/meshgrid/ones"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "get_layer_anchors_2/Cast"
  op: "Cast"
  input: "get_layer_anchors_2/meshgrid/mul_1"
  attr {
    key: "DstT"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "SrcT"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Truncate"
    value {
      b: false
    }
  }
}
node {
  name: "get_layer_anchors_2/add/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.5
      }
    }
  }
}
node {
  name: "get_layer_anchors_2/add"
  op: "AddV2"
  input: "get_layer_anchors_2/Cast"
  input: "get_layer_anchors_2/add/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "get_layer_anchors_2/mul/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 64.0
      }
    }
  }
}
node {
  name: "get_layer_anchors_2/mul"
  op: "Mul"
  input: "get_layer_anchors_2/add"
  input: "get_layer_anchors_2/mul/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "get_layer_anchors_2/truediv/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 300.0
      }
    }
  }
}
node {
  name: "get_layer_anchors_2/truediv"
  op: "RealDiv"
  input: "get_layer_anchors_2/mul"
  input: "get_layer_anchors_2/truediv/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "get_layer_anchors_2/Cast_1"
  op: "Cast"
  input: "get_layer_anchors_2/meshgrid/mul"
  attr {
    key: "DstT"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "SrcT"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Truncate"
    value {
      b: false
    }
  }
}
node {
  name: "get_layer_anchors_2/add_1/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.5
      }
    }
  }
}
node {
  name: "get_layer_anchors_2/add_1"
  op: "AddV2"
  input: "get_layer_anchors_2/Cast_1"
  input: "get_layer_anchors_2/add_1/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "get_layer_anchors_2/mul_1/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 64.0
      }
    }
  }
}
node {
  name: "get_layer_anchors_2/mul_1"
  op: "Mul"
  input: "get_layer_anchors_2/add_1"
  input: "get_layer_anchors_2/mul_1/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "get_layer_anchors_2/truediv_1/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 300.0
      }
    }
  }
}
node {
  name: "get_layer_anchors_2/truediv_1"
  op: "RealDiv"
  input: "get_layer_anchors_2/mul_1"
  input: "get_layer_anchors_2/truediv_1/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "get_layer_anchors_2/ExpandDims/dim"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "get_layer_anchors_2/ExpandDims"
  op: "ExpandDims"
  input: "get_layer_anchors_2/truediv"
  input: "get_layer_anchors_2/ExpandDims/dim"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tdim"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "get_layer_anchors_2/ExpandDims_1/dim"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "get_layer_anchors_2/ExpandDims_1"
  op: "ExpandDims"
  input: "get_layer_anchors_2/truediv_1"
  input: "get_layer_anchors_2/ExpandDims_1/dim"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tdim"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "get_layer_anchors_2/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 6
          }
        }
        tensor_content: "\314\177\350>\000\000\300>\266\303\207>\327\263]>\266\303\007?\002I&?"
      }
    }
  }
}
node {
  name: "get_layer_anchors_2/Const_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 6
          }
        }
        tensor_content: "\314\177\350>\000\000\300>\266\303\007?\341F&?\266\303\207>\001\261]>"
      }
    }
  }
}
node {
  name: "get_layer_anchors_3/range/start"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "get_layer_anchors_3/range/limit"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 3
      }
    }
  }
}
node {
  name: "get_layer_anchors_3/range/delta"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "get_layer_anchors_3/range"
  op: "Range"
  input: "get_layer_anchors_3/range/start"
  input: "get_layer_anchors_3/range/limit"
  input: "get_layer_anchors_3/range/delta"
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "get_layer_anchors_3/range_1/start"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "get_layer_anchors_3/range_1/limit"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 3
      }
    }
  }
}
node {
  name: "get_layer_anchors_3/range_1/delta"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "get_layer_anchors_3/range_1"
  op: "Range"
  input: "get_layer_anchors_3/range_1/start"
  input: "get_layer_anchors_3/range_1/limit"
  input: "get_layer_anchors_3/range_1/delta"
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "get_layer_anchors_3/meshgrid/Reshape/shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\377\377\377\377\001\000\000\000"
      }
    }
  }
}
node {
  name: "get_layer_anchors_3/meshgrid/Reshape"
  op: "Reshape"
  input: "get_layer_anchors_3/range"
  input: "get_layer_anchors_3/meshgrid/Reshape/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "get_layer_anchors_3/meshgrid/Reshape_1/shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\377\377\377\377"
      }
    }
  }
}
node {
  name: "get_layer_anchors_3/meshgrid/Reshape_1"
  op: "Reshape"
  input: "get_layer_anchors_3/range_1"
  input: "get_layer_anchors_3/meshgrid/Reshape_1/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "get_layer_anchors_3/meshgrid/Size"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 3
      }
    }
  }
}
node {
  name: "get_layer_anchors_3/meshgrid/Size_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 3
      }
    }
  }
}
node {
  name: "get_layer_anchors_3/meshgrid/Reshape_2/shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\377\377\377\377"
      }
    }
  }
}
node {
  name: "get_layer_anchors_3/meshgrid/Reshape_2"
  op: "Reshape"
  input: "get_layer_anchors_3/meshgrid/Reshape"
  input: "get_layer_anchors_3/meshgrid/Reshape_2/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "get_layer_anchors_3/meshgrid/Reshape_3/shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\377\377\377\377\001\000\000\000"
      }
    }
  }
}
node {
  name: "get_layer_anchors_3/meshgrid/Reshape_3"
  op: "Reshape"
  input: "get_layer_anchors_3/meshgrid/Reshape_1"
  input: "get_layer_anchors_3/meshgrid/Reshape_3/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "get_layer_anchors_3/meshgrid/ones/mul"
  op: "Mul"
  input: "get_layer_anchors_3/meshgrid/Size_1"
  input: "get_layer_anchors_3/meshgrid/Size"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "get_layer_anchors_3/meshgrid/ones/Less/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1000
      }
    }
  }
}
node {
  name: "get_layer_anchors_3/meshgrid/ones/Less"
  op: "Less"
  input: "get_layer_anchors_3/meshgrid/ones/mul"
  input: "get_layer_anchors_3/meshgrid/ones/Less/y"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "get_layer_anchors_3/meshgrid/ones/packed"
  op: "Pack"
  input: "get_layer_anchors_3/meshgrid/Size_1"
  input: "get_layer_anchors_3/meshgrid/Size"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "get_layer_anchors_3/meshgrid/ones/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "get_layer_anchors_3/meshgrid/ones"
  op: "Fill"
  input: "get_layer_anchors_3/meshgrid/ones/packed"
  input: "get_layer_anchors_3/meshgrid/ones/Const"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "get_layer_anchors_3/meshgrid/mul"
  op: "Mul"
  input: "get_layer_anchors_3/meshgrid/Reshape_2"
  input: "get_layer_anchors_3/meshgrid/ones"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "get_layer_anchors_3/meshgrid/mul_1"
  op: "Mul"
  input: "get_layer_anchors_3/meshgrid/Reshape_3"
  input: "get_layer_anchors_3/meshgrid/ones"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "get_layer_anchors_3/Cast"
  op: "Cast"
  input: "get_layer_anchors_3/meshgrid/mul_1"
  attr {
    key: "DstT"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "SrcT"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Truncate"
    value {
      b: false
    }
  }
}
node {
  name: "get_layer_anchors_3/add/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.5
      }
    }
  }
}
node {
  name: "get_layer_anchors_3/add"
  op: "AddV2"
  input: "get_layer_anchors_3/Cast"
  input: "get_layer_anchors_3/add/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "get_layer_anchors_3/mul/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 100.0
      }
    }
  }
}
node {
  name: "get_layer_anchors_3/mul"
  op: "Mul"
  input: "get_layer_anchors_3/add"
  input: "get_layer_anchors_3/mul/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "get_layer_anchors_3/truediv/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 300.0
      }
    }
  }
}
node {
  name: "get_layer_anchors_3/truediv"
  op: "RealDiv"
  input: "get_layer_anchors_3/mul"
  input: "get_layer_anchors_3/truediv/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "get_layer_anchors_3/Cast_1"
  op: "Cast"
  input: "get_layer_anchors_3/meshgrid/mul"
  attr {
    key: "DstT"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "SrcT"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Truncate"
    value {
      b: false
    }
  }
}
node {
  name: "get_layer_anchors_3/add_1/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.5
      }
    }
  }
}
node {
  name: "get_layer_anchors_3/add_1"
  op: "AddV2"
  input: "get_layer_anchors_3/Cast_1"
  input: "get_layer_anchors_3/add_1/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "get_layer_anchors_3/mul_1/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 100.0
      }
    }
  }
}
node {
  name: "get_layer_anchors_3/mul_1"
  op: "Mul"
  input: "get_layer_anchors_3/add_1"
  input: "get_layer_anchors_3/mul_1/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "get_layer_anchors_3/truediv_1/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 300.0
      }
    }
  }
}
node {
  name: "get_layer_anchors_3/truediv_1"
  op: "RealDiv"
  input: "get_layer_anchors_3/mul_1"
  input: "get_layer_anchors_3/truediv_1/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "get_layer_anchors_3/ExpandDims/dim"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "get_layer_anchors_3/ExpandDims"
  op: "ExpandDims"
  input: "get_layer_anchors_3/truediv"
  input: "get_layer_anchors_3/ExpandDims/dim"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tdim"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "get_layer_anchors_3/ExpandDims_1/dim"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "get_layer_anchors_3/ExpandDims_1"
  op: "ExpandDims"
  input: "get_layer_anchors_3/truediv_1"
  input: "get_layer_anchors_3/ExpandDims_1/dim"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tdim"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "get_layer_anchors_3/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 6
          }
        }
        tensor_content: "\374\251!?\315\314\014?\014\037\307>\363\224\242>\014\037G?\214\342s?"
      }
    }
  }
}
node {
  name: "get_layer_anchors_3/Const_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 6
          }
        }
        tensor_content: "\374\251!?\315\314\014?\014\037G?m\337s?\014\037\307>\336\222\242>"
      }
    }
  }
}
node {
  name: "get_layer_anchors_4/range/start"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "get_layer_anchors_4/range/limit"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "get_layer_anchors_4/range/delta"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "get_layer_anchors_4/range"
  op: "Range"
  input: "get_layer_anchors_4/range/start"
  input: "get_layer_anchors_4/range/limit"
  input: "get_layer_anchors_4/range/delta"
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "get_layer_anchors_4/range_1/start"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "get_layer_anchors_4/range_1/limit"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "get_layer_anchors_4/range_1/delta"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "get_layer_anchors_4/range_1"
  op: "Range"
  input: "get_layer_anchors_4/range_1/start"
  input: "get_layer_anchors_4/range_1/limit"
  input: "get_layer_anchors_4/range_1/delta"
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "get_layer_anchors_4/meshgrid/Reshape/shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\377\377\377\377\001\000\000\000"
      }
    }
  }
}
node {
  name: "get_layer_anchors_4/meshgrid/Reshape"
  op: "Reshape"
  input: "get_layer_anchors_4/range"
  input: "get_layer_anchors_4/meshgrid/Reshape/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "get_layer_anchors_4/meshgrid/Reshape_1/shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\377\377\377\377"
      }
    }
  }
}
node {
  name: "get_layer_anchors_4/meshgrid/Reshape_1"
  op: "Reshape"
  input: "get_layer_anchors_4/range_1"
  input: "get_layer_anchors_4/meshgrid/Reshape_1/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "get_layer_anchors_4/meshgrid/Size"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "get_layer_anchors_4/meshgrid/Size_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "get_layer_anchors_4/meshgrid/Reshape_2/shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\377\377\377\377"
      }
    }
  }
}
node {
  name: "get_layer_anchors_4/meshgrid/Reshape_2"
  op: "Reshape"
  input: "get_layer_anchors_4/meshgrid/Reshape"
  input: "get_layer_anchors_4/meshgrid/Reshape_2/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "get_layer_anchors_4/meshgrid/Reshape_3/shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\377\377\377\377\001\000\000\000"
      }
    }
  }
}
node {
  name: "get_layer_anchors_4/meshgrid/Reshape_3"
  op: "Reshape"
  input: "get_layer_anchors_4/meshgrid/Reshape_1"
  input: "get_layer_anchors_4/meshgrid/Reshape_3/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "get_layer_anchors_4/meshgrid/ones/mul"
  op: "Mul"
  input: "get_layer_anchors_4/meshgrid/Size_1"
  input: "get_layer_anchors_4/meshgrid/Size"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "get_layer_anchors_4/meshgrid/ones/Less/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1000
      }
    }
  }
}
node {
  name: "get_layer_anchors_4/meshgrid/ones/Less"
  op: "Less"
  input: "get_layer_anchors_4/meshgrid/ones/mul"
  input: "get_layer_anchors_4/meshgrid/ones/Less/y"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "get_layer_anchors_4/meshgrid/ones/packed"
  op: "Pack"
  input: "get_layer_anchors_4/meshgrid/Size_1"
  input: "get_layer_anchors_4/meshgrid/Size"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "get_layer_anchors_4/meshgrid/ones/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "get_layer_anchors_4/meshgrid/ones"
  op: "Fill"
  input: "get_layer_anchors_4/meshgrid/ones/packed"
  input: "get_layer_anchors_4/meshgrid/ones/Const"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "get_layer_anchors_4/meshgrid/mul"
  op: "Mul"
  input: "get_layer_anchors_4/meshgrid/Reshape_2"
  input: "get_layer_anchors_4/meshgrid/ones"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "get_layer_anchors_4/meshgrid/mul_1"
  op: "Mul"
  input: "get_layer_anchors_4/meshgrid/Reshape_3"
  input: "get_layer_anchors_4/meshgrid/ones"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "get_layer_anchors_4/Cast"
  op: "Cast"
  input: "get_layer_anchors_4/meshgrid/mul_1"
  attr {
    key: "DstT"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "SrcT"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Truncate"
    value {
      b: false
    }
  }
}
node {
  name: "get_layer_anchors_4/add/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.5
      }
    }
  }
}
node {
  name: "get_layer_anchors_4/add"
  op: "AddV2"
  input: "get_layer_anchors_4/Cast"
  input: "get_layer_anchors_4/add/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "get_layer_anchors_4/mul/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 150.0
      }
    }
  }
}
node {
  name: "get_layer_anchors_4/mul"
  op: "Mul"
  input: "get_layer_anchors_4/add"
  input: "get_layer_anchors_4/mul/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "get_layer_anchors_4/truediv/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 300.0
      }
    }
  }
}
node {
  name: "get_layer_anchors_4/truediv"
  op: "RealDiv"
  input: "get_layer_anchors_4/mul"
  input: "get_layer_anchors_4/truediv/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "get_layer_anchors_4/Cast_1"
  op: "Cast"
  input: "get_layer_anchors_4/meshgrid/mul"
  attr {
    key: "DstT"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "SrcT"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Truncate"
    value {
      b: false
    }
  }
}
node {
  name: "get_layer_anchors_4/add_1/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.5
      }
    }
  }
}
node {
  name: "get_layer_anchors_4/add_1"
  op: "AddV2"
  input: "get_layer_anchors_4/Cast_1"
  input: "get_layer_anchors_4/add_1/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "get_layer_anchors_4/mul_1/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 150.0
      }
    }
  }
}
node {
  name: "get_layer_anchors_4/mul_1"
  op: "Mul"
  input: "get_layer_anchors_4/add_1"
  input: "get_layer_anchors_4/mul_1/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "get_layer_anchors_4/truediv_1/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 300.0
      }
    }
  }
}
node {
  name: "get_layer_anchors_4/truediv_1"
  op: "RealDiv"
  input: "get_layer_anchors_4/mul_1"
  input: "get_layer_anchors_4/truediv_1/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "get_layer_anchors_4/ExpandDims/dim"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "get_layer_anchors_4/ExpandDims"
  op: "ExpandDims"
  input: "get_layer_anchors_4/truediv"
  input: "get_layer_anchors_4/ExpandDims/dim"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tdim"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "get_layer_anchors_4/ExpandDims_1/dim"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "get_layer_anchors_4/ExpandDims_1"
  op: "ExpandDims"
  input: "get_layer_anchors_4/truediv_1"
  input: "get_layer_anchors_4/ExpandDims_1/dim"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tdim"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "get_layer_anchors_4/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\373\313N?\232\2319?0=\003?0=\203?"
      }
    }
  }
}
node {
  name: "get_layer_anchors_4/Const_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\373\313N?\232\2319?0=\203?0=\003?"
      }
    }
  }
}
node {
  name: "get_layer_anchors_5/range/start"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "get_layer_anchors_5/range/limit"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "get_layer_anchors_5/range/delta"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "get_layer_anchors_5/range"
  op: "Range"
  input: "get_layer_anchors_5/range/start"
  input: "get_layer_anchors_5/range/limit"
  input: "get_layer_anchors_5/range/delta"
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "get_layer_anchors_5/range_1/start"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "get_layer_anchors_5/range_1/limit"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "get_layer_anchors_5/range_1/delta"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "get_layer_anchors_5/range_1"
  op: "Range"
  input: "get_layer_anchors_5/range_1/start"
  input: "get_layer_anchors_5/range_1/limit"
  input: "get_layer_anchors_5/range_1/delta"
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "get_layer_anchors_5/meshgrid/Reshape/shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\377\377\377\377\001\000\000\000"
      }
    }
  }
}
node {
  name: "get_layer_anchors_5/meshgrid/Reshape"
  op: "Reshape"
  input: "get_layer_anchors_5/range"
  input: "get_layer_anchors_5/meshgrid/Reshape/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "get_layer_anchors_5/meshgrid/Reshape_1/shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\377\377\377\377"
      }
    }
  }
}
node {
  name: "get_layer_anchors_5/meshgrid/Reshape_1"
  op: "Reshape"
  input: "get_layer_anchors_5/range_1"
  input: "get_layer_anchors_5/meshgrid/Reshape_1/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "get_layer_anchors_5/meshgrid/Size"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "get_layer_anchors_5/meshgrid/Size_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "get_layer_anchors_5/meshgrid/Reshape_2/shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\377\377\377\377"
      }
    }
  }
}
node {
  name: "get_layer_anchors_5/meshgrid/Reshape_2"
  op: "Reshape"
  input: "get_layer_anchors_5/meshgrid/Reshape"
  input: "get_layer_anchors_5/meshgrid/Reshape_2/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "get_layer_anchors_5/meshgrid/Reshape_3/shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\377\377\377\377\001\000\000\000"
      }
    }
  }
}
node {
  name: "get_layer_anchors_5/meshgrid/Reshape_3"
  op: "Reshape"
  input: "get_layer_anchors_5/meshgrid/Reshape_1"
  input: "get_layer_anchors_5/meshgrid/Reshape_3/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "get_layer_anchors_5/meshgrid/ones/mul"
  op: "Mul"
  input: "get_layer_anchors_5/meshgrid/Size_1"
  input: "get_layer_anchors_5/meshgrid/Size"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "get_layer_anchors_5/meshgrid/ones/Less/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1000
      }
    }
  }
}
node {
  name: "get_layer_anchors_5/meshgrid/ones/Less"
  op: "Less"
  input: "get_layer_anchors_5/meshgrid/ones/mul"
  input: "get_layer_anchors_5/meshgrid/ones/Less/y"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "get_layer_anchors_5/meshgrid/ones/packed"
  op: "Pack"
  input: "get_layer_anchors_5/meshgrid/Size_1"
  input: "get_layer_anchors_5/meshgrid/Size"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "get_layer_anchors_5/meshgrid/ones/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "get_layer_anchors_5/meshgrid/ones"
  op: "Fill"
  input: "get_layer_anchors_5/meshgrid/ones/packed"
  input: "get_layer_anchors_5/meshgrid/ones/Const"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "get_layer_anchors_5/meshgrid/mul"
  op: "Mul"
  input: "get_layer_anchors_5/meshgrid/Reshape_2"
  input: "get_layer_anchors_5/meshgrid/ones"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "get_layer_anchors_5/meshgrid/mul_1"
  op: "Mul"
  input: "get_layer_anchors_5/meshgrid/Reshape_3"
  input: "get_layer_anchors_5/meshgrid/ones"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "get_layer_anchors_5/Cast"
  op: "Cast"
  input: "get_layer_anchors_5/meshgrid/mul_1"
  attr {
    key: "DstT"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "SrcT"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Truncate"
    value {
      b: false
    }
  }
}
node {
  name: "get_layer_anchors_5/add/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.5
      }
    }
  }
}
node {
  name: "get_layer_anchors_5/add"
  op: "AddV2"
  input: "get_layer_anchors_5/Cast"
  input: "get_layer_anchors_5/add/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "get_layer_anchors_5/mul/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 300.0
      }
    }
  }
}
node {
  name: "get_layer_anchors_5/mul"
  op: "Mul"
  input: "get_layer_anchors_5/add"
  input: "get_layer_anchors_5/mul/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "get_layer_anchors_5/truediv/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 300.0
      }
    }
  }
}
node {
  name: "get_layer_anchors_5/truediv"
  op: "RealDiv"
  input: "get_layer_anchors_5/mul"
  input: "get_layer_anchors_5/truediv/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "get_layer_anchors_5/Cast_1"
  op: "Cast"
  input: "get_layer_anchors_5/meshgrid/mul"
  attr {
    key: "DstT"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "SrcT"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Truncate"
    value {
      b: false
    }
  }
}
node {
  name: "get_layer_anchors_5/add_1/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.5
      }
    }
  }
}
node {
  name: "get_layer_anchors_5/add_1"
  op: "AddV2"
  input: "get_layer_anchors_5/Cast_1"
  input: "get_layer_anchors_5/add_1/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "get_layer_anchors_5/mul_1/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 300.0
      }
    }
  }
}
node {
  name: "get_layer_anchors_5/mul_1"
  op: "Mul"
  input: "get_layer_anchors_5/add_1"
  input: "get_layer_anchors_5/mul_1/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "get_layer_anchors_5/truediv_1/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 300.0
      }
    }
  }
}
node {
  name: "get_layer_anchors_5/truediv_1"
  op: "RealDiv"
  input: "get_layer_anchors_5/mul_1"
  input: "get_layer_anchors_5/truediv_1/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "get_layer_anchors_5/ExpandDims/dim"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "get_layer_anchors_5/ExpandDims"
  op: "ExpandDims"
  input: "get_layer_anchors_5/truediv"
  input: "get_layer_anchors_5/ExpandDims/dim"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tdim"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "get_layer_anchors_5/ExpandDims_1/dim"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "get_layer_anchors_5/ExpandDims_1"
  op: "ExpandDims"
  input: "get_layer_anchors_5/truediv_1"
  input: "get_layer_anchors_5/ExpandDims_1/dim"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tdim"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "get_layer_anchors_5/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "6\315{?fff?\333\352\"?\333\352\242?"
      }
    }
  }
}
node {
  name: "get_layer_anchors_5/Const_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "6\315{?fff?\333\352\242?\333\352\"?"
      }
    }
  }
}
node {
  name: "ext_decode_all_anchors/truediv/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 2.0
      }
    }
  }
}
node {
  name: "ext_decode_all_anchors/truediv"
  op: "RealDiv"
  input: "get_layer_anchors/Const"
  input: "ext_decode_all_anchors/truediv/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ext_decode_all_anchors/sub"
  op: "Sub"
  input: "get_layer_anchors/ExpandDims"
  input: "ext_decode_all_anchors/truediv"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ext_decode_all_anchors/truediv_1/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 2.0
      }
    }
  }
}
node {
  name: "ext_decode_all_anchors/truediv_1"
  op: "RealDiv"
  input: "get_layer_anchors/Const_1"
  input: "ext_decode_all_anchors/truediv_1/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ext_decode_all_anchors/sub_1"
  op: "Sub"
  input: "get_layer_anchors/ExpandDims_1"
  input: "ext_decode_all_anchors/truediv_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ext_decode_all_anchors/truediv_2/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 2.0
      }
    }
  }
}
node {
  name: "ext_decode_all_anchors/truediv_2"
  op: "RealDiv"
  input: "get_layer_anchors/Const"
  input: "ext_decode_all_anchors/truediv_2/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ext_decode_all_anchors/add"
  op: "AddV2"
  input: "get_layer_anchors/ExpandDims"
  input: "ext_decode_all_anchors/truediv_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ext_decode_all_anchors/truediv_3/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 2.0
      }
    }
  }
}
node {
  name: "ext_decode_all_anchors/truediv_3"
  op: "RealDiv"
  input: "get_layer_anchors/Const_1"
  input: "ext_decode_all_anchors/truediv_3/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ext_decode_all_anchors/add_1"
  op: "AddV2"
  input: "get_layer_anchors/ExpandDims_1"
  input: "ext_decode_all_anchors/truediv_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ext_decode_all_anchors/Reshape/shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "ext_decode_all_anchors/Reshape"
  op: "Reshape"
  input: "ext_decode_all_anchors/sub"
  input: "ext_decode_all_anchors/Reshape/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "ext_decode_all_anchors/Reshape_1/shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "ext_decode_all_anchors/Reshape_1"
  op: "Reshape"
  input: "ext_decode_all_anchors/sub_1"
  input: "ext_decode_all_anchors/Reshape_1/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "ext_decode_all_anchors/Reshape_2/shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "ext_decode_all_anchors/Reshape_2"
  op: "Reshape"
  input: "ext_decode_all_anchors/add"
  input: "ext_decode_all_anchors/Reshape_2/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "ext_decode_all_anchors/Reshape_3/shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "ext_decode_all_anchors/Reshape_3"
  op: "Reshape"
  input: "ext_decode_all_anchors/add_1"
  input: "ext_decode_all_anchors/Reshape_3/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "ext_decode_all_anchors/truediv_4/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 2.0
      }
    }
  }
}
node {
  name: "ext_decode_all_anchors/truediv_4"
  op: "RealDiv"
  input: "get_layer_anchors_1/Const"
  input: "ext_decode_all_anchors/truediv_4/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ext_decode_all_anchors/sub_2"
  op: "Sub"
  input: "get_layer_anchors_1/ExpandDims"
  input: "ext_decode_all_anchors/truediv_4"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ext_decode_all_anchors/truediv_5/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 2.0
      }
    }
  }
}
node {
  name: "ext_decode_all_anchors/truediv_5"
  op: "RealDiv"
  input: "get_layer_anchors_1/Const_1"
  input: "ext_decode_all_anchors/truediv_5/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ext_decode_all_anchors/sub_3"
  op: "Sub"
  input: "get_layer_anchors_1/ExpandDims_1"
  input: "ext_decode_all_anchors/truediv_5"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ext_decode_all_anchors/truediv_6/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 2.0
      }
    }
  }
}
node {
  name: "ext_decode_all_anchors/truediv_6"
  op: "RealDiv"
  input: "get_layer_anchors_1/Const"
  input: "ext_decode_all_anchors/truediv_6/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ext_decode_all_anchors/add_2"
  op: "AddV2"
  input: "get_layer_anchors_1/ExpandDims"
  input: "ext_decode_all_anchors/truediv_6"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ext_decode_all_anchors/truediv_7/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 2.0
      }
    }
  }
}
node {
  name: "ext_decode_all_anchors/truediv_7"
  op: "RealDiv"
  input: "get_layer_anchors_1/Const_1"
  input: "ext_decode_all_anchors/truediv_7/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ext_decode_all_anchors/add_3"
  op: "AddV2"
  input: "get_layer_anchors_1/ExpandDims_1"
  input: "ext_decode_all_anchors/truediv_7"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ext_decode_all_anchors/Reshape_4/shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "ext_decode_all_anchors/Reshape_4"
  op: "Reshape"
  input: "ext_decode_all_anchors/sub_2"
  input: "ext_decode_all_anchors/Reshape_4/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "ext_decode_all_anchors/Reshape_5/shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "ext_decode_all_anchors/Reshape_5"
  op: "Reshape"
  input: "ext_decode_all_anchors/sub_3"
  input: "ext_decode_all_anchors/Reshape_5/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "ext_decode_all_anchors/Reshape_6/shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "ext_decode_all_anchors/Reshape_6"
  op: "Reshape"
  input: "ext_decode_all_anchors/add_2"
  input: "ext_decode_all_anchors/Reshape_6/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "ext_decode_all_anchors/Reshape_7/shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "ext_decode_all_anchors/Reshape_7"
  op: "Reshape"
  input: "ext_decode_all_anchors/add_3"
  input: "ext_decode_all_anchors/Reshape_7/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "ext_decode_all_anchors/truediv_8/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 2.0
      }
    }
  }
}
node {
  name: "ext_decode_all_anchors/truediv_8"
  op: "RealDiv"
  input: "get_layer_anchors_2/Const"
  input: "ext_decode_all_anchors/truediv_8/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ext_decode_all_anchors/sub_4"
  op: "Sub"
  input: "get_layer_anchors_2/ExpandDims"
  input: "ext_decode_all_anchors/truediv_8"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ext_decode_all_anchors/truediv_9/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 2.0
      }
    }
  }
}
node {
  name: "ext_decode_all_anchors/truediv_9"
  op: "RealDiv"
  input: "get_layer_anchors_2/Const_1"
  input: "ext_decode_all_anchors/truediv_9/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ext_decode_all_anchors/sub_5"
  op: "Sub"
  input: "get_layer_anchors_2/ExpandDims_1"
  input: "ext_decode_all_anchors/truediv_9"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ext_decode_all_anchors/truediv_10/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 2.0
      }
    }
  }
}
node {
  name: "ext_decode_all_anchors/truediv_10"
  op: "RealDiv"
  input: "get_layer_anchors_2/Const"
  input: "ext_decode_all_anchors/truediv_10/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ext_decode_all_anchors/add_4"
  op: "AddV2"
  input: "get_layer_anchors_2/ExpandDims"
  input: "ext_decode_all_anchors/truediv_10"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ext_decode_all_anchors/truediv_11/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 2.0
      }
    }
  }
}
node {
  name: "ext_decode_all_anchors/truediv_11"
  op: "RealDiv"
  input: "get_layer_anchors_2/Const_1"
  input: "ext_decode_all_anchors/truediv_11/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ext_decode_all_anchors/add_5"
  op: "AddV2"
  input: "get_layer_anchors_2/ExpandDims_1"
  input: "ext_decode_all_anchors/truediv_11"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ext_decode_all_anchors/Reshape_8/shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "ext_decode_all_anchors/Reshape_8"
  op: "Reshape"
  input: "ext_decode_all_anchors/sub_4"
  input: "ext_decode_all_anchors/Reshape_8/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "ext_decode_all_anchors/Reshape_9/shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "ext_decode_all_anchors/Reshape_9"
  op: "Reshape"
  input: "ext_decode_all_anchors/sub_5"
  input: "ext_decode_all_anchors/Reshape_9/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "ext_decode_all_anchors/Reshape_10/shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "ext_decode_all_anchors/Reshape_10"
  op: "Reshape"
  input: "ext_decode_all_anchors/add_4"
  input: "ext_decode_all_anchors/Reshape_10/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "ext_decode_all_anchors/Reshape_11/shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "ext_decode_all_anchors/Reshape_11"
  op: "Reshape"
  input: "ext_decode_all_anchors/add_5"
  input: "ext_decode_all_anchors/Reshape_11/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "ext_decode_all_anchors/truediv_12/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 2.0
      }
    }
  }
}
node {
  name: "ext_decode_all_anchors/truediv_12"
  op: "RealDiv"
  input: "get_layer_anchors_3/Const"
  input: "ext_decode_all_anchors/truediv_12/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ext_decode_all_anchors/sub_6"
  op: "Sub"
  input: "get_layer_anchors_3/ExpandDims"
  input: "ext_decode_all_anchors/truediv_12"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ext_decode_all_anchors/truediv_13/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 2.0
      }
    }
  }
}
node {
  name: "ext_decode_all_anchors/truediv_13"
  op: "RealDiv"
  input: "get_layer_anchors_3/Const_1"
  input: "ext_decode_all_anchors/truediv_13/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ext_decode_all_anchors/sub_7"
  op: "Sub"
  input: "get_layer_anchors_3/ExpandDims_1"
  input: "ext_decode_all_anchors/truediv_13"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ext_decode_all_anchors/truediv_14/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 2.0
      }
    }
  }
}
node {
  name: "ext_decode_all_anchors/truediv_14"
  op: "RealDiv"
  input: "get_layer_anchors_3/Const"
  input: "ext_decode_all_anchors/truediv_14/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ext_decode_all_anchors/add_6"
  op: "AddV2"
  input: "get_layer_anchors_3/ExpandDims"
  input: "ext_decode_all_anchors/truediv_14"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ext_decode_all_anchors/truediv_15/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 2.0
      }
    }
  }
}
node {
  name: "ext_decode_all_anchors/truediv_15"
  op: "RealDiv"
  input: "get_layer_anchors_3/Const_1"
  input: "ext_decode_all_anchors/truediv_15/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ext_decode_all_anchors/add_7"
  op: "AddV2"
  input: "get_layer_anchors_3/ExpandDims_1"
  input: "ext_decode_all_anchors/truediv_15"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ext_decode_all_anchors/Reshape_12/shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "ext_decode_all_anchors/Reshape_12"
  op: "Reshape"
  input: "ext_decode_all_anchors/sub_6"
  input: "ext_decode_all_anchors/Reshape_12/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "ext_decode_all_anchors/Reshape_13/shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "ext_decode_all_anchors/Reshape_13"
  op: "Reshape"
  input: "ext_decode_all_anchors/sub_7"
  input: "ext_decode_all_anchors/Reshape_13/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "ext_decode_all_anchors/Reshape_14/shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "ext_decode_all_anchors/Reshape_14"
  op: "Reshape"
  input: "ext_decode_all_anchors/add_6"
  input: "ext_decode_all_anchors/Reshape_14/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "ext_decode_all_anchors/Reshape_15/shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "ext_decode_all_anchors/Reshape_15"
  op: "Reshape"
  input: "ext_decode_all_anchors/add_7"
  input: "ext_decode_all_anchors/Reshape_15/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "ext_decode_all_anchors/truediv_16/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 2.0
      }
    }
  }
}
node {
  name: "ext_decode_all_anchors/truediv_16"
  op: "RealDiv"
  input: "get_layer_anchors_4/Const"
  input: "ext_decode_all_anchors/truediv_16/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ext_decode_all_anchors/sub_8"
  op: "Sub"
  input: "get_layer_anchors_4/ExpandDims"
  input: "ext_decode_all_anchors/truediv_16"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ext_decode_all_anchors/truediv_17/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 2.0
      }
    }
  }
}
node {
  name: "ext_decode_all_anchors/truediv_17"
  op: "RealDiv"
  input: "get_layer_anchors_4/Const_1"
  input: "ext_decode_all_anchors/truediv_17/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ext_decode_all_anchors/sub_9"
  op: "Sub"
  input: "get_layer_anchors_4/ExpandDims_1"
  input: "ext_decode_all_anchors/truediv_17"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ext_decode_all_anchors/truediv_18/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 2.0
      }
    }
  }
}
node {
  name: "ext_decode_all_anchors/truediv_18"
  op: "RealDiv"
  input: "get_layer_anchors_4/Const"
  input: "ext_decode_all_anchors/truediv_18/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ext_decode_all_anchors/add_8"
  op: "AddV2"
  input: "get_layer_anchors_4/ExpandDims"
  input: "ext_decode_all_anchors/truediv_18"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ext_decode_all_anchors/truediv_19/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 2.0
      }
    }
  }
}
node {
  name: "ext_decode_all_anchors/truediv_19"
  op: "RealDiv"
  input: "get_layer_anchors_4/Const_1"
  input: "ext_decode_all_anchors/truediv_19/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ext_decode_all_anchors/add_9"
  op: "AddV2"
  input: "get_layer_anchors_4/ExpandDims_1"
  input: "ext_decode_all_anchors/truediv_19"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ext_decode_all_anchors/Reshape_16/shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "ext_decode_all_anchors/Reshape_16"
  op: "Reshape"
  input: "ext_decode_all_anchors/sub_8"
  input: "ext_decode_all_anchors/Reshape_16/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "ext_decode_all_anchors/Reshape_17/shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "ext_decode_all_anchors/Reshape_17"
  op: "Reshape"
  input: "ext_decode_all_anchors/sub_9"
  input: "ext_decode_all_anchors/Reshape_17/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "ext_decode_all_anchors/Reshape_18/shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "ext_decode_all_anchors/Reshape_18"
  op: "Reshape"
  input: "ext_decode_all_anchors/add_8"
  input: "ext_decode_all_anchors/Reshape_18/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "ext_decode_all_anchors/Reshape_19/shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "ext_decode_all_anchors/Reshape_19"
  op: "Reshape"
  input: "ext_decode_all_anchors/add_9"
  input: "ext_decode_all_anchors/Reshape_19/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "ext_decode_all_anchors/truediv_20/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 2.0
      }
    }
  }
}
node {
  name: "ext_decode_all_anchors/truediv_20"
  op: "RealDiv"
  input: "get_layer_anchors_5/Const"
  input: "ext_decode_all_anchors/truediv_20/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ext_decode_all_anchors/sub_10"
  op: "Sub"
  input: "get_layer_anchors_5/ExpandDims"
  input: "ext_decode_all_anchors/truediv_20"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ext_decode_all_anchors/truediv_21/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 2.0
      }
    }
  }
}
node {
  name: "ext_decode_all_anchors/truediv_21"
  op: "RealDiv"
  input: "get_layer_anchors_5/Const_1"
  input: "ext_decode_all_anchors/truediv_21/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ext_decode_all_anchors/sub_11"
  op: "Sub"
  input: "get_layer_anchors_5/ExpandDims_1"
  input: "ext_decode_all_anchors/truediv_21"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ext_decode_all_anchors/truediv_22/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 2.0
      }
    }
  }
}
node {
  name: "ext_decode_all_anchors/truediv_22"
  op: "RealDiv"
  input: "get_layer_anchors_5/Const"
  input: "ext_decode_all_anchors/truediv_22/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ext_decode_all_anchors/add_10"
  op: "AddV2"
  input: "get_layer_anchors_5/ExpandDims"
  input: "ext_decode_all_anchors/truediv_22"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ext_decode_all_anchors/truediv_23/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 2.0
      }
    }
  }
}
node {
  name: "ext_decode_all_anchors/truediv_23"
  op: "RealDiv"
  input: "get_layer_anchors_5/Const_1"
  input: "ext_decode_all_anchors/truediv_23/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ext_decode_all_anchors/add_11"
  op: "AddV2"
  input: "get_layer_anchors_5/ExpandDims_1"
  input: "ext_decode_all_anchors/truediv_23"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ext_decode_all_anchors/Reshape_20/shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "ext_decode_all_anchors/Reshape_20"
  op: "Reshape"
  input: "ext_decode_all_anchors/sub_10"
  input: "ext_decode_all_anchors/Reshape_20/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "ext_decode_all_anchors/Reshape_21/shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "ext_decode_all_anchors/Reshape_21"
  op: "Reshape"
  input: "ext_decode_all_anchors/sub_11"
  input: "ext_decode_all_anchors/Reshape_21/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "ext_decode_all_anchors/Reshape_22/shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "ext_decode_all_anchors/Reshape_22"
  op: "Reshape"
  input: "ext_decode_all_anchors/add_10"
  input: "ext_decode_all_anchors/Reshape_22/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "ext_decode_all_anchors/Reshape_23/shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "ext_decode_all_anchors/Reshape_23"
  op: "Reshape"
  input: "ext_decode_all_anchors/add_11"
  input: "ext_decode_all_anchors/Reshape_23/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "ext_decode_all_anchors/concat_ymin/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "ext_decode_all_anchors/concat_ymin"
  op: "ConcatV2"
  input: "ext_decode_all_anchors/Reshape"
  input: "ext_decode_all_anchors/Reshape_4"
  input: "ext_decode_all_anchors/Reshape_8"
  input: "ext_decode_all_anchors/Reshape_12"
  input: "ext_decode_all_anchors/Reshape_16"
  input: "ext_decode_all_anchors/Reshape_20"
  input: "ext_decode_all_anchors/concat_ymin/axis"
  attr {
    key: "N"
    value {
      i: 6
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "ext_decode_all_anchors/concat_xmin/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "ext_decode_all_anchors/concat_xmin"
  op: "ConcatV2"
  input: "ext_decode_all_anchors/Reshape_1"
  input: "ext_decode_all_anchors/Reshape_5"
  input: "ext_decode_all_anchors/Reshape_9"
  input: "ext_decode_all_anchors/Reshape_13"
  input: "ext_decode_all_anchors/Reshape_17"
  input: "ext_decode_all_anchors/Reshape_21"
  input: "ext_decode_all_anchors/concat_xmin/axis"
  attr {
    key: "N"
    value {
      i: 6
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "ext_decode_all_anchors/concat_ymax/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "ext_decode_all_anchors/concat_ymax"
  op: "ConcatV2"
  input: "ext_decode_all_anchors/Reshape_2"
  input: "ext_decode_all_anchors/Reshape_6"
  input: "ext_decode_all_anchors/Reshape_10"
  input: "ext_decode_all_anchors/Reshape_14"
  input: "ext_decode_all_anchors/Reshape_18"
  input: "ext_decode_all_anchors/Reshape_22"
  input: "ext_decode_all_anchors/concat_ymax/axis"
  attr {
    key: "N"
    value {
      i: 6
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "ext_decode_all_anchors/concat_xmax/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "ext_decode_all_anchors/concat_xmax"
  op: "ConcatV2"
  input: "ext_decode_all_anchors/Reshape_3"
  input: "ext_decode_all_anchors/Reshape_7"
  input: "ext_decode_all_anchors/Reshape_11"
  input: "ext_decode_all_anchors/Reshape_15"
  input: "ext_decode_all_anchors/Reshape_19"
  input: "ext_decode_all_anchors/Reshape_23"
  input: "ext_decode_all_anchors/concat_xmax/axis"
  attr {
    key: "N"
    value {
      i: 6
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "ext_decode_all_anchors/Shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 2268
      }
    }
  }
}
node {
  name: "ext_decode_all_anchors/strided_slice/stack"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "ext_decode_all_anchors/strided_slice/stack_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "ext_decode_all_anchors/strided_slice/stack_2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "ext_decode_all_anchors/strided_slice"
  op: "StridedSlice"
  input: "ext_decode_all_anchors/Shape"
  input: "ext_decode_all_anchors/strided_slice/stack"
  input: "ext_decode_all_anchors/strided_slice/stack_1"
  input: "ext_decode_all_anchors/strided_slice/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "ext_decode_all_anchors/Tile/input"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 1
          }
          dim {
            size: 4
          }
        }
        tensor_content: "\315\314\314=\315\314\314=\315\314L>\315\314L>"
      }
    }
  }
}
node {
  name: "ext_decode_all_anchors/Tile/multiples/1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "ext_decode_all_anchors/Tile/multiples"
  op: "Pack"
  input: "ext_decode_all_anchors/strided_slice"
  input: "ext_decode_all_anchors/Tile/multiples/1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "ext_decode_all_anchors/Tile"
  op: "Tile"
  input: "ext_decode_all_anchors/Tile/input"
  input: "ext_decode_all_anchors/Tile/multiples"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tmultiples"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "ext_decode_all_anchors/concat/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "ext_decode_all_anchors/concat"
  op: "ConcatV2"
  input: "ext_decode_all_anchors/concat_xmin"
  input: "ext_decode_all_anchors/concat_ymin"
  input: "ext_decode_all_anchors/concat_xmax"
  input: "ext_decode_all_anchors/concat_ymax"
  input: "ext_decode_all_anchors/concat/axis"
  attr {
    key: "N"
    value {
      i: 4
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "ext_decode_all_anchors/Reshape_24/shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\004\000\000\000\377\377\377\377"
      }
    }
  }
}
node {
  name: "ext_decode_all_anchors/Reshape_24"
  op: "Reshape"
  input: "ext_decode_all_anchors/concat"
  input: "ext_decode_all_anchors/Reshape_24/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "ext_decode_all_anchors/transpose/perm"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\000\000\000\000"
      }
    }
  }
}
node {
  name: "ext_decode_all_anchors/transpose"
  op: "Transpose"
  input: "ext_decode_all_anchors/Reshape_24"
  input: "ext_decode_all_anchors/transpose/perm"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tperm"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "ext_decode_all_anchors/mul/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 4
      }
    }
  }
}
node {
  name: "ext_decode_all_anchors/mul"
  op: "Mul"
  input: "ext_decode_all_anchors/strided_slice"
  input: "ext_decode_all_anchors/mul/y"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "ext_decode_all_anchors/Reshape_25/shape/0"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "ext_decode_all_anchors/Reshape_25/shape/1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "ext_decode_all_anchors/Reshape_25/shape/3"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "ext_decode_all_anchors/Reshape_25/shape"
  op: "Pack"
  input: "ext_decode_all_anchors/Reshape_25/shape/0"
  input: "ext_decode_all_anchors/Reshape_25/shape/1"
  input: "ext_decode_all_anchors/mul"
  input: "ext_decode_all_anchors/Reshape_25/shape/3"
  attr {
    key: "N"
    value {
      i: 4
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "ext_decode_all_anchors/Reshape_25"
  op: "Reshape"
  input: "ext_decode_all_anchors/transpose"
  input: "ext_decode_all_anchors/Reshape_25/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "ext_decode_all_anchors/mul_1/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 4
      }
    }
  }
}
node {
  name: "ext_decode_all_anchors/mul_1"
  op: "Mul"
  input: "ext_decode_all_anchors/strided_slice"
  input: "ext_decode_all_anchors/mul_1/y"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "ext_decode_all_anchors/Reshape_26/shape/0"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "ext_decode_all_anchors/Reshape_26/shape/1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "ext_decode_all_anchors/Reshape_26/shape/3"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "ext_decode_all_anchors/Reshape_26/shape"
  op: "Pack"
  input: "ext_decode_all_anchors/Reshape_26/shape/0"
  input: "ext_decode_all_anchors/Reshape_26/shape/1"
  input: "ext_decode_all_anchors/mul_1"
  input: "ext_decode_all_anchors/Reshape_26/shape/3"
  attr {
    key: "N"
    value {
      i: 4
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "ext_decode_all_anchors/Reshape_26"
  op: "Reshape"
  input: "ext_decode_all_anchors/Tile"
  input: "ext_decode_all_anchors/Reshape_26/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "ext_decode_all_anchors/name/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "ext_decode_all_anchors/name"
  op: "ConcatV2"
  input: "ext_decode_all_anchors/Reshape_25"
  input: "ext_decode_all_anchors/Reshape_26"
  input: "ext_decode_all_anchors/name/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "ext_decode_all_anchors/strided_slice_1/stack"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000"
      }
    }
  }
}
node {
  name: "ext_decode_all_anchors/strided_slice_1/stack_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\000\000\000\000\001\000\000\000\000\000\000\000\000\000\000\000"
      }
    }
  }
}
node {
  name: "ext_decode_all_anchors/strided_slice_1/stack_2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "ext_decode_all_anchors/strided_slice_1"
  op: "StridedSlice"
  input: "ext_decode_all_anchors/name"
  input: "ext_decode_all_anchors/strided_slice_1/stack"
  input: "ext_decode_all_anchors/strided_slice_1/stack_1"
  input: "ext_decode_all_anchors/strided_slice_1/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 13
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 13
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 2
    }
  }
}
node {
  name: "ssd300/Conv/weights/Initializer/random_uniform/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/Conv/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\003\000\000\000\003\000\000\000\003\000\000\000 \000\000\000"
      }
    }
  }
}
node {
  name: "ssd300/Conv/weights/Initializer/random_uniform/min"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/Conv/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: -0.1380131095647812
      }
    }
  }
}
node {
  name: "ssd300/Conv/weights/Initializer/random_uniform/max"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/Conv/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.1380131095647812
      }
    }
  }
}
node {
  name: "ssd300/Conv/weights/Initializer/random_uniform/RandomUniform"
  op: "RandomUniform"
  input: "ssd300/Conv/weights/Initializer/random_uniform/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/Conv/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "ssd300/Conv/weights/Initializer/random_uniform/sub"
  op: "Sub"
  input: "ssd300/Conv/weights/Initializer/random_uniform/max"
  input: "ssd300/Conv/weights/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/Conv/weights"
      }
    }
  }
}
node {
  name: "ssd300/Conv/weights/Initializer/random_uniform/mul"
  op: "Mul"
  input: "ssd300/Conv/weights/Initializer/random_uniform/RandomUniform"
  input: "ssd300/Conv/weights/Initializer/random_uniform/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/Conv/weights"
      }
    }
  }
}
node {
  name: "ssd300/Conv/weights/Initializer/random_uniform"
  op: "Add"
  input: "ssd300/Conv/weights/Initializer/random_uniform/mul"
  input: "ssd300/Conv/weights/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/Conv/weights"
      }
    }
  }
}
node {
  name: "ssd300/Conv/weights"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/Conv/weights"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 3
        }
        dim {
          size: 3
        }
        dim {
          size: 3
        }
        dim {
          size: 32
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "ssd300/Conv/weights/Assign"
  op: "Assign"
  input: "ssd300/Conv/weights"
  input: "ssd300/Conv/weights/Initializer/random_uniform"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/Conv/weights"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "ssd300/Conv/weights/read"
  op: "Identity"
  input: "ssd300/Conv/weights"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/Conv/weights"
      }
    }
  }
}
node {
  name: "ssd300/Conv/layer_conv2d/Conv2D"
  op: "Conv2D"
  input: "input_image"
  input: "ssd300/Conv/weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NCHW"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "explicit_paddings"
    value {
      list {
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 2
        i: 2
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "ssd300/Conv/BatchNorm/beta/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/Conv/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 32
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "ssd300/Conv/BatchNorm/beta"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/Conv/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 32
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "ssd300/Conv/BatchNorm/beta/Assign"
  op: "Assign"
  input: "ssd300/Conv/BatchNorm/beta"
  input: "ssd300/Conv/BatchNorm/beta/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/Conv/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "ssd300/Conv/BatchNorm/beta/read"
  op: "Identity"
  input: "ssd300/Conv/BatchNorm/beta"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/Conv/BatchNorm/beta"
      }
    }
  }
}
node {
  name: "ssd300/Conv/BatchNorm/moving_mean/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/Conv/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 32
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "ssd300/Conv/BatchNorm/moving_mean"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/Conv/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 32
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "ssd300/Conv/BatchNorm/moving_mean/Assign"
  op: "Assign"
  input: "ssd300/Conv/BatchNorm/moving_mean"
  input: "ssd300/Conv/BatchNorm/moving_mean/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/Conv/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "ssd300/Conv/BatchNorm/moving_mean/read"
  op: "Identity"
  input: "ssd300/Conv/BatchNorm/moving_mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/Conv/BatchNorm/moving_mean"
      }
    }
  }
}
node {
  name: "ssd300/Conv/BatchNorm/moving_variance/Initializer/ones"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/Conv/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 32
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "ssd300/Conv/BatchNorm/moving_variance"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/Conv/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 32
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "ssd300/Conv/BatchNorm/moving_variance/Assign"
  op: "Assign"
  input: "ssd300/Conv/BatchNorm/moving_variance"
  input: "ssd300/Conv/BatchNorm/moving_variance/Initializer/ones"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/Conv/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "ssd300/Conv/BatchNorm/moving_variance/read"
  op: "Identity"
  input: "ssd300/Conv/BatchNorm/moving_variance"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/Conv/BatchNorm/moving_variance"
      }
    }
  }
}
node {
  name: "ssd300/Conv/BatchNorm/Reshape/shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000 \000\000\000\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "ssd300/Conv/BatchNorm/Reshape"
  op: "Reshape"
  input: "ssd300/Conv/BatchNorm/beta/read"
  input: "ssd300/Conv/BatchNorm/Reshape/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "ssd300/Conv/BatchNorm/Reshape_1/shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000 \000\000\000\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "ssd300/Conv/BatchNorm/Reshape_1"
  op: "Reshape"
  input: "ssd300/Conv/BatchNorm/moving_mean/read"
  input: "ssd300/Conv/BatchNorm/Reshape_1/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "ssd300/Conv/BatchNorm/Reshape_2/shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000 \000\000\000\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "ssd300/Conv/BatchNorm/Reshape_2"
  op: "Reshape"
  input: "ssd300/Conv/BatchNorm/moving_variance/read"
  input: "ssd300/Conv/BatchNorm/Reshape_2/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "ssd300/Conv/BatchNorm/batchnorm_1/Add/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0010000000474974513
      }
    }
  }
}
node {
  name: "ssd300/Conv/BatchNorm/batchnorm_1/Add"
  op: "Add"
  input: "ssd300/Conv/BatchNorm/Reshape_2"
  input: "ssd300/Conv/BatchNorm/batchnorm_1/Add/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ssd300/Conv/BatchNorm/batchnorm_1/Rsqrt"
  op: "Rsqrt"
  input: "ssd300/Conv/BatchNorm/batchnorm_1/Add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ssd300/Conv/BatchNorm/batchnorm_1/mul"
  op: "Mul"
  input: "ssd300/Conv/layer_conv2d/Conv2D"
  input: "ssd300/Conv/BatchNorm/batchnorm_1/Rsqrt"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ssd300/Conv/BatchNorm/batchnorm_1/mul_1"
  op: "Mul"
  input: "ssd300/Conv/BatchNorm/Reshape_1"
  input: "ssd300/Conv/BatchNorm/batchnorm_1/Rsqrt"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ssd300/Conv/BatchNorm/batchnorm_1/sub"
  op: "Sub"
  input: "ssd300/Conv/BatchNorm/Reshape"
  input: "ssd300/Conv/BatchNorm/batchnorm_1/mul_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ssd300/Conv/BatchNorm/batchnorm_1/Add_1"
  op: "Add"
  input: "ssd300/Conv/BatchNorm/batchnorm_1/mul"
  input: "ssd300/Conv/BatchNorm/batchnorm_1/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ssd300/Conv/Relu6"
  op: "Relu6"
  input: "ssd300/Conv/BatchNorm/batchnorm_1/Add_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ssd300/expanded_conv/depthwise/depthwise_weights/Initializer/random_uniform/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv/depthwise/depthwise_weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\003\000\000\000\003\000\000\000 \000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "ssd300/expanded_conv/depthwise/depthwise_weights/Initializer/random_uniform/min"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv/depthwise/depthwise_weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: -0.14213381707668304
      }
    }
  }
}
node {
  name: "ssd300/expanded_conv/depthwise/depthwise_weights/Initializer/random_uniform/max"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv/depthwise/depthwise_weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.14213381707668304
      }
    }
  }
}
node {
  name: "ssd300/expanded_conv/depthwise/depthwise_weights/Initializer/random_uniform/RandomUniform"
  op: "RandomUniform"
  input: "ssd300/expanded_conv/depthwise/depthwise_weights/Initializer/random_uniform/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv/depthwise/depthwise_weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "ssd300/expanded_conv/depthwise/depthwise_weights/Initializer/random_uniform/sub"
  op: "Sub"
  input: "ssd300/expanded_conv/depthwise/depthwise_weights/Initializer/random_uniform/max"
  input: "ssd300/expanded_conv/depthwise/depthwise_weights/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv/depthwise/depthwise_weights"
      }
    }
  }
}
node {
  name: "ssd300/expanded_conv/depthwise/depthwise_weights/Initializer/random_uniform/mul"
  op: "Mul"
  input: "ssd300/expanded_conv/depthwise/depthwise_weights/Initializer/random_uniform/RandomUniform"
  input: "ssd300/expanded_conv/depthwise/depthwise_weights/Initializer/random_uniform/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv/depthwise/depthwise_weights"
      }
    }
  }
}
node {
  name: "ssd300/expanded_conv/depthwise/depthwise_weights/Initializer/random_uniform"
  op: "Add"
  input: "ssd300/expanded_conv/depthwise/depthwise_weights/Initializer/random_uniform/mul"
  input: "ssd300/expanded_conv/depthwise/depthwise_weights/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv/depthwise/depthwise_weights"
      }
    }
  }
}
node {
  name: "ssd300/expanded_conv/depthwise/depthwise_weights"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv/depthwise/depthwise_weights"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 3
        }
        dim {
          size: 3
        }
        dim {
          size: 32
        }
        dim {
          size: 1
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "ssd300/expanded_conv/depthwise/depthwise_weights/Assign"
  op: "Assign"
  input: "ssd300/expanded_conv/depthwise/depthwise_weights"
  input: "ssd300/expanded_conv/depthwise/depthwise_weights/Initializer/random_uniform"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv/depthwise/depthwise_weights"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "ssd300/expanded_conv/depthwise/depthwise_weights/read"
  op: "Identity"
  input: "ssd300/expanded_conv/depthwise/depthwise_weights"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv/depthwise/depthwise_weights"
      }
    }
  }
}
node {
  name: "ssd300/expanded_conv/depthwise/layer_conv2d/depthwise/Shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\003\000\000\000\003\000\000\000 \000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "ssd300/expanded_conv/depthwise/layer_conv2d/depthwise/dilation_rate"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "ssd300/expanded_conv/depthwise/layer_conv2d/depthwise"
  op: "DepthwiseConv2dNative"
  input: "ssd300/Conv/Relu6"
  input: "ssd300/expanded_conv/depthwise/depthwise_weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NCHW"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
}
node {
  name: "ssd300/expanded_conv/depthwise/BatchNorm/beta/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv/depthwise/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 32
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "ssd300/expanded_conv/depthwise/BatchNorm/beta"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv/depthwise/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 32
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "ssd300/expanded_conv/depthwise/BatchNorm/beta/Assign"
  op: "Assign"
  input: "ssd300/expanded_conv/depthwise/BatchNorm/beta"
  input: "ssd300/expanded_conv/depthwise/BatchNorm/beta/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv/depthwise/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "ssd300/expanded_conv/depthwise/BatchNorm/beta/read"
  op: "Identity"
  input: "ssd300/expanded_conv/depthwise/BatchNorm/beta"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv/depthwise/BatchNorm/beta"
      }
    }
  }
}
node {
  name: "ssd300/expanded_conv/depthwise/BatchNorm/moving_mean/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv/depthwise/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 32
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "ssd300/expanded_conv/depthwise/BatchNorm/moving_mean"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv/depthwise/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 32
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "ssd300/expanded_conv/depthwise/BatchNorm/moving_mean/Assign"
  op: "Assign"
  input: "ssd300/expanded_conv/depthwise/BatchNorm/moving_mean"
  input: "ssd300/expanded_conv/depthwise/BatchNorm/moving_mean/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv/depthwise/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "ssd300/expanded_conv/depthwise/BatchNorm/moving_mean/read"
  op: "Identity"
  input: "ssd300/expanded_conv/depthwise/BatchNorm/moving_mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv/depthwise/BatchNorm/moving_mean"
      }
    }
  }
}
node {
  name: "ssd300/expanded_conv/depthwise/BatchNorm/moving_variance/Initializer/ones"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv/depthwise/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 32
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "ssd300/expanded_conv/depthwise/BatchNorm/moving_variance"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv/depthwise/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 32
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "ssd300/expanded_conv/depthwise/BatchNorm/moving_variance/Assign"
  op: "Assign"
  input: "ssd300/expanded_conv/depthwise/BatchNorm/moving_variance"
  input: "ssd300/expanded_conv/depthwise/BatchNorm/moving_variance/Initializer/ones"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv/depthwise/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "ssd300/expanded_conv/depthwise/BatchNorm/moving_variance/read"
  op: "Identity"
  input: "ssd300/expanded_conv/depthwise/BatchNorm/moving_variance"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv/depthwise/BatchNorm/moving_variance"
      }
    }
  }
}
node {
  name: "ssd300/expanded_conv/depthwise/BatchNorm/Reshape/shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000 \000\000\000\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "ssd300/expanded_conv/depthwise/BatchNorm/Reshape"
  op: "Reshape"
  input: "ssd300/expanded_conv/depthwise/BatchNorm/beta/read"
  input: "ssd300/expanded_conv/depthwise/BatchNorm/Reshape/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "ssd300/expanded_conv/depthwise/BatchNorm/Reshape_1/shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000 \000\000\000\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "ssd300/expanded_conv/depthwise/BatchNorm/Reshape_1"
  op: "Reshape"
  input: "ssd300/expanded_conv/depthwise/BatchNorm/moving_mean/read"
  input: "ssd300/expanded_conv/depthwise/BatchNorm/Reshape_1/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "ssd300/expanded_conv/depthwise/BatchNorm/Reshape_2/shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000 \000\000\000\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "ssd300/expanded_conv/depthwise/BatchNorm/Reshape_2"
  op: "Reshape"
  input: "ssd300/expanded_conv/depthwise/BatchNorm/moving_variance/read"
  input: "ssd300/expanded_conv/depthwise/BatchNorm/Reshape_2/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "ssd300/expanded_conv/depthwise/BatchNorm/batchnorm_1/Add/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0010000000474974513
      }
    }
  }
}
node {
  name: "ssd300/expanded_conv/depthwise/BatchNorm/batchnorm_1/Add"
  op: "Add"
  input: "ssd300/expanded_conv/depthwise/BatchNorm/Reshape_2"
  input: "ssd300/expanded_conv/depthwise/BatchNorm/batchnorm_1/Add/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ssd300/expanded_conv/depthwise/BatchNorm/batchnorm_1/Rsqrt"
  op: "Rsqrt"
  input: "ssd300/expanded_conv/depthwise/BatchNorm/batchnorm_1/Add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ssd300/expanded_conv/depthwise/BatchNorm/batchnorm_1/mul"
  op: "Mul"
  input: "ssd300/expanded_conv/depthwise/layer_conv2d/depthwise"
  input: "ssd300/expanded_conv/depthwise/BatchNorm/batchnorm_1/Rsqrt"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ssd300/expanded_conv/depthwise/BatchNorm/batchnorm_1/mul_1"
  op: "Mul"
  input: "ssd300/expanded_conv/depthwise/BatchNorm/Reshape_1"
  input: "ssd300/expanded_conv/depthwise/BatchNorm/batchnorm_1/Rsqrt"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ssd300/expanded_conv/depthwise/BatchNorm/batchnorm_1/sub"
  op: "Sub"
  input: "ssd300/expanded_conv/depthwise/BatchNorm/Reshape"
  input: "ssd300/expanded_conv/depthwise/BatchNorm/batchnorm_1/mul_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ssd300/expanded_conv/depthwise/BatchNorm/batchnorm_1/Add_1"
  op: "Add"
  input: "ssd300/expanded_conv/depthwise/BatchNorm/batchnorm_1/mul"
  input: "ssd300/expanded_conv/depthwise/BatchNorm/batchnorm_1/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ssd300/expanded_conv/depthwise/Relu6"
  op: "Relu6"
  input: "ssd300/expanded_conv/depthwise/BatchNorm/batchnorm_1/Add_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ssd300/expanded_conv/project/weights/Initializer/random_uniform/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv/project/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000 \000\000\000\020\000\000\000"
      }
    }
  }
}
node {
  name: "ssd300/expanded_conv/project/weights/Initializer/random_uniform/min"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv/project/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: -0.3535533845424652
      }
    }
  }
}
node {
  name: "ssd300/expanded_conv/project/weights/Initializer/random_uniform/max"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv/project/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.3535533845424652
      }
    }
  }
}
node {
  name: "ssd300/expanded_conv/project/weights/Initializer/random_uniform/RandomUniform"
  op: "RandomUniform"
  input: "ssd300/expanded_conv/project/weights/Initializer/random_uniform/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv/project/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "ssd300/expanded_conv/project/weights/Initializer/random_uniform/sub"
  op: "Sub"
  input: "ssd300/expanded_conv/project/weights/Initializer/random_uniform/max"
  input: "ssd300/expanded_conv/project/weights/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv/project/weights"
      }
    }
  }
}
node {
  name: "ssd300/expanded_conv/project/weights/Initializer/random_uniform/mul"
  op: "Mul"
  input: "ssd300/expanded_conv/project/weights/Initializer/random_uniform/RandomUniform"
  input: "ssd300/expanded_conv/project/weights/Initializer/random_uniform/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv/project/weights"
      }
    }
  }
}
node {
  name: "ssd300/expanded_conv/project/weights/Initializer/random_uniform"
  op: "Add"
  input: "ssd300/expanded_conv/project/weights/Initializer/random_uniform/mul"
  input: "ssd300/expanded_conv/project/weights/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv/project/weights"
      }
    }
  }
}
node {
  name: "ssd300/expanded_conv/project/weights"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv/project/weights"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
        dim {
          size: 1
        }
        dim {
          size: 32
        }
        dim {
          size: 16
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "ssd300/expanded_conv/project/weights/Assign"
  op: "Assign"
  input: "ssd300/expanded_conv/project/weights"
  input: "ssd300/expanded_conv/project/weights/Initializer/random_uniform"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv/project/weights"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "ssd300/expanded_conv/project/weights/read"
  op: "Identity"
  input: "ssd300/expanded_conv/project/weights"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv/project/weights"
      }
    }
  }
}
node {
  name: "ssd300/expanded_conv/project/layer_conv2d/Conv2D"
  op: "Conv2D"
  input: "ssd300/expanded_conv/depthwise/Relu6"
  input: "ssd300/expanded_conv/project/weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NCHW"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "explicit_paddings"
    value {
      list {
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "ssd300/expanded_conv/project/BatchNorm/beta/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv/project/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 16
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "ssd300/expanded_conv/project/BatchNorm/beta"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv/project/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 16
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "ssd300/expanded_conv/project/BatchNorm/beta/Assign"
  op: "Assign"
  input: "ssd300/expanded_conv/project/BatchNorm/beta"
  input: "ssd300/expanded_conv/project/BatchNorm/beta/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv/project/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "ssd300/expanded_conv/project/BatchNorm/beta/read"
  op: "Identity"
  input: "ssd300/expanded_conv/project/BatchNorm/beta"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv/project/BatchNorm/beta"
      }
    }
  }
}
node {
  name: "ssd300/expanded_conv/project/BatchNorm/moving_mean/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv/project/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 16
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "ssd300/expanded_conv/project/BatchNorm/moving_mean"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv/project/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 16
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "ssd300/expanded_conv/project/BatchNorm/moving_mean/Assign"
  op: "Assign"
  input: "ssd300/expanded_conv/project/BatchNorm/moving_mean"
  input: "ssd300/expanded_conv/project/BatchNorm/moving_mean/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv/project/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "ssd300/expanded_conv/project/BatchNorm/moving_mean/read"
  op: "Identity"
  input: "ssd300/expanded_conv/project/BatchNorm/moving_mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv/project/BatchNorm/moving_mean"
      }
    }
  }
}
node {
  name: "ssd300/expanded_conv/project/BatchNorm/moving_variance/Initializer/ones"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv/project/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 16
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "ssd300/expanded_conv/project/BatchNorm/moving_variance"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv/project/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 16
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "ssd300/expanded_conv/project/BatchNorm/moving_variance/Assign"
  op: "Assign"
  input: "ssd300/expanded_conv/project/BatchNorm/moving_variance"
  input: "ssd300/expanded_conv/project/BatchNorm/moving_variance/Initializer/ones"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv/project/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "ssd300/expanded_conv/project/BatchNorm/moving_variance/read"
  op: "Identity"
  input: "ssd300/expanded_conv/project/BatchNorm/moving_variance"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv/project/BatchNorm/moving_variance"
      }
    }
  }
}
node {
  name: "ssd300/expanded_conv/project/BatchNorm/Reshape/shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\020\000\000\000\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "ssd300/expanded_conv/project/BatchNorm/Reshape"
  op: "Reshape"
  input: "ssd300/expanded_conv/project/BatchNorm/beta/read"
  input: "ssd300/expanded_conv/project/BatchNorm/Reshape/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "ssd300/expanded_conv/project/BatchNorm/Reshape_1/shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\020\000\000\000\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "ssd300/expanded_conv/project/BatchNorm/Reshape_1"
  op: "Reshape"
  input: "ssd300/expanded_conv/project/BatchNorm/moving_mean/read"
  input: "ssd300/expanded_conv/project/BatchNorm/Reshape_1/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "ssd300/expanded_conv/project/BatchNorm/Reshape_2/shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\020\000\000\000\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "ssd300/expanded_conv/project/BatchNorm/Reshape_2"
  op: "Reshape"
  input: "ssd300/expanded_conv/project/BatchNorm/moving_variance/read"
  input: "ssd300/expanded_conv/project/BatchNorm/Reshape_2/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "ssd300/expanded_conv/project/BatchNorm/batchnorm_1/Add/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0010000000474974513
      }
    }
  }
}
node {
  name: "ssd300/expanded_conv/project/BatchNorm/batchnorm_1/Add"
  op: "Add"
  input: "ssd300/expanded_conv/project/BatchNorm/Reshape_2"
  input: "ssd300/expanded_conv/project/BatchNorm/batchnorm_1/Add/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ssd300/expanded_conv/project/BatchNorm/batchnorm_1/Rsqrt"
  op: "Rsqrt"
  input: "ssd300/expanded_conv/project/BatchNorm/batchnorm_1/Add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ssd300/expanded_conv/project/BatchNorm/batchnorm_1/mul"
  op: "Mul"
  input: "ssd300/expanded_conv/project/layer_conv2d/Conv2D"
  input: "ssd300/expanded_conv/project/BatchNorm/batchnorm_1/Rsqrt"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ssd300/expanded_conv/project/BatchNorm/batchnorm_1/mul_1"
  op: "Mul"
  input: "ssd300/expanded_conv/project/BatchNorm/Reshape_1"
  input: "ssd300/expanded_conv/project/BatchNorm/batchnorm_1/Rsqrt"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ssd300/expanded_conv/project/BatchNorm/batchnorm_1/sub"
  op: "Sub"
  input: "ssd300/expanded_conv/project/BatchNorm/Reshape"
  input: "ssd300/expanded_conv/project/BatchNorm/batchnorm_1/mul_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ssd300/expanded_conv/project/BatchNorm/batchnorm_1/Add_1"
  op: "Add"
  input: "ssd300/expanded_conv/project/BatchNorm/batchnorm_1/mul"
  input: "ssd300/expanded_conv/project/BatchNorm/batchnorm_1/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ssd300/expanded_conv_1/expand/weights/Initializer/random_uniform/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv_1/expand/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000\020\000\000\000`\000\000\000"
      }
    }
  }
}
node {
  name: "ssd300/expanded_conv_1/expand/weights/Initializer/random_uniform/min"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv_1/expand/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: -0.2314550280570984
      }
    }
  }
}
node {
  name: "ssd300/expanded_conv_1/expand/weights/Initializer/random_uniform/max"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv_1/expand/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.2314550280570984
      }
    }
  }
}
node {
  name: "ssd300/expanded_conv_1/expand/weights/Initializer/random_uniform/RandomUniform"
  op: "RandomUniform"
  input: "ssd300/expanded_conv_1/expand/weights/Initializer/random_uniform/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv_1/expand/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "ssd300/expanded_conv_1/expand/weights/Initializer/random_uniform/sub"
  op: "Sub"
  input: "ssd300/expanded_conv_1/expand/weights/Initializer/random_uniform/max"
  input: "ssd300/expanded_conv_1/expand/weights/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv_1/expand/weights"
      }
    }
  }
}
node {
  name: "ssd300/expanded_conv_1/expand/weights/Initializer/random_uniform/mul"
  op: "Mul"
  input: "ssd300/expanded_conv_1/expand/weights/Initializer/random_uniform/RandomUniform"
  input: "ssd300/expanded_conv_1/expand/weights/Initializer/random_uniform/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv_1/expand/weights"
      }
    }
  }
}
node {
  name: "ssd300/expanded_conv_1/expand/weights/Initializer/random_uniform"
  op: "Add"
  input: "ssd300/expanded_conv_1/expand/weights/Initializer/random_uniform/mul"
  input: "ssd300/expanded_conv_1/expand/weights/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv_1/expand/weights"
      }
    }
  }
}
node {
  name: "ssd300/expanded_conv_1/expand/weights"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv_1/expand/weights"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
        dim {
          size: 1
        }
        dim {
          size: 16
        }
        dim {
          size: 96
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "ssd300/expanded_conv_1/expand/weights/Assign"
  op: "Assign"
  input: "ssd300/expanded_conv_1/expand/weights"
  input: "ssd300/expanded_conv_1/expand/weights/Initializer/random_uniform"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv_1/expand/weights"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "ssd300/expanded_conv_1/expand/weights/read"
  op: "Identity"
  input: "ssd300/expanded_conv_1/expand/weights"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv_1/expand/weights"
      }
    }
  }
}
node {
  name: "ssd300/expanded_conv_1/expand/layer_conv2d/Conv2D"
  op: "Conv2D"
  input: "ssd300/expanded_conv/project/BatchNorm/batchnorm_1/Add_1"
  input: "ssd300/expanded_conv_1/expand/weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NCHW"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "explicit_paddings"
    value {
      list {
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "ssd300/expanded_conv_1/expand/BatchNorm/beta/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv_1/expand/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 96
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "ssd300/expanded_conv_1/expand/BatchNorm/beta"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv_1/expand/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 96
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "ssd300/expanded_conv_1/expand/BatchNorm/beta/Assign"
  op: "Assign"
  input: "ssd300/expanded_conv_1/expand/BatchNorm/beta"
  input: "ssd300/expanded_conv_1/expand/BatchNorm/beta/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv_1/expand/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "ssd300/expanded_conv_1/expand/BatchNorm/beta/read"
  op: "Identity"
  input: "ssd300/expanded_conv_1/expand/BatchNorm/beta"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv_1/expand/BatchNorm/beta"
      }
    }
  }
}
node {
  name: "ssd300/expanded_conv_1/expand/BatchNorm/moving_mean/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv_1/expand/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 96
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "ssd300/expanded_conv_1/expand/BatchNorm/moving_mean"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv_1/expand/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 96
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "ssd300/expanded_conv_1/expand/BatchNorm/moving_mean/Assign"
  op: "Assign"
  input: "ssd300/expanded_conv_1/expand/BatchNorm/moving_mean"
  input: "ssd300/expanded_conv_1/expand/BatchNorm/moving_mean/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv_1/expand/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "ssd300/expanded_conv_1/expand/BatchNorm/moving_mean/read"
  op: "Identity"
  input: "ssd300/expanded_conv_1/expand/BatchNorm/moving_mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv_1/expand/BatchNorm/moving_mean"
      }
    }
  }
}
node {
  name: "ssd300/expanded_conv_1/expand/BatchNorm/moving_variance/Initializer/ones"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv_1/expand/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 96
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "ssd300/expanded_conv_1/expand/BatchNorm/moving_variance"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv_1/expand/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 96
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "ssd300/expanded_conv_1/expand/BatchNorm/moving_variance/Assign"
  op: "Assign"
  input: "ssd300/expanded_conv_1/expand/BatchNorm/moving_variance"
  input: "ssd300/expanded_conv_1/expand/BatchNorm/moving_variance/Initializer/ones"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv_1/expand/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "ssd300/expanded_conv_1/expand/BatchNorm/moving_variance/read"
  op: "Identity"
  input: "ssd300/expanded_conv_1/expand/BatchNorm/moving_variance"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv_1/expand/BatchNorm/moving_variance"
      }
    }
  }
}
node {
  name: "ssd300/expanded_conv_1/expand/BatchNorm/Reshape/shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000`\000\000\000\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "ssd300/expanded_conv_1/expand/BatchNorm/Reshape"
  op: "Reshape"
  input: "ssd300/expanded_conv_1/expand/BatchNorm/beta/read"
  input: "ssd300/expanded_conv_1/expand/BatchNorm/Reshape/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "ssd300/expanded_conv_1/expand/BatchNorm/Reshape_1/shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000`\000\000\000\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "ssd300/expanded_conv_1/expand/BatchNorm/Reshape_1"
  op: "Reshape"
  input: "ssd300/expanded_conv_1/expand/BatchNorm/moving_mean/read"
  input: "ssd300/expanded_conv_1/expand/BatchNorm/Reshape_1/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "ssd300/expanded_conv_1/expand/BatchNorm/Reshape_2/shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000`\000\000\000\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "ssd300/expanded_conv_1/expand/BatchNorm/Reshape_2"
  op: "Reshape"
  input: "ssd300/expanded_conv_1/expand/BatchNorm/moving_variance/read"
  input: "ssd300/expanded_conv_1/expand/BatchNorm/Reshape_2/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "ssd300/expanded_conv_1/expand/BatchNorm/batchnorm_1/Add/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0010000000474974513
      }
    }
  }
}
node {
  name: "ssd300/expanded_conv_1/expand/BatchNorm/batchnorm_1/Add"
  op: "Add"
  input: "ssd300/expanded_conv_1/expand/BatchNorm/Reshape_2"
  input: "ssd300/expanded_conv_1/expand/BatchNorm/batchnorm_1/Add/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ssd300/expanded_conv_1/expand/BatchNorm/batchnorm_1/Rsqrt"
  op: "Rsqrt"
  input: "ssd300/expanded_conv_1/expand/BatchNorm/batchnorm_1/Add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ssd300/expanded_conv_1/expand/BatchNorm/batchnorm_1/mul"
  op: "Mul"
  input: "ssd300/expanded_conv_1/expand/layer_conv2d/Conv2D"
  input: "ssd300/expanded_conv_1/expand/BatchNorm/batchnorm_1/Rsqrt"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ssd300/expanded_conv_1/expand/BatchNorm/batchnorm_1/mul_1"
  op: "Mul"
  input: "ssd300/expanded_conv_1/expand/BatchNorm/Reshape_1"
  input: "ssd300/expanded_conv_1/expand/BatchNorm/batchnorm_1/Rsqrt"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ssd300/expanded_conv_1/expand/BatchNorm/batchnorm_1/sub"
  op: "Sub"
  input: "ssd300/expanded_conv_1/expand/BatchNorm/Reshape"
  input: "ssd300/expanded_conv_1/expand/BatchNorm/batchnorm_1/mul_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ssd300/expanded_conv_1/expand/BatchNorm/batchnorm_1/Add_1"
  op: "Add"
  input: "ssd300/expanded_conv_1/expand/BatchNorm/batchnorm_1/mul"
  input: "ssd300/expanded_conv_1/expand/BatchNorm/batchnorm_1/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ssd300/expanded_conv_1/expand/Relu6"
  op: "Relu6"
  input: "ssd300/expanded_conv_1/expand/BatchNorm/batchnorm_1/Add_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ssd300/expanded_conv_1/depthwise/depthwise_weights/Initializer/random_uniform/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv_1/depthwise/depthwise_weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\003\000\000\000\003\000\000\000`\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "ssd300/expanded_conv_1/depthwise/depthwise_weights/Initializer/random_uniform/min"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv_1/depthwise/depthwise_weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: -0.08290266990661621
      }
    }
  }
}
node {
  name: "ssd300/expanded_conv_1/depthwise/depthwise_weights/Initializer/random_uniform/max"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv_1/depthwise/depthwise_weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.08290266990661621
      }
    }
  }
}
node {
  name: "ssd300/expanded_conv_1/depthwise/depthwise_weights/Initializer/random_uniform/RandomUniform"
  op: "RandomUniform"
  input: "ssd300/expanded_conv_1/depthwise/depthwise_weights/Initializer/random_uniform/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv_1/depthwise/depthwise_weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "ssd300/expanded_conv_1/depthwise/depthwise_weights/Initializer/random_uniform/sub"
  op: "Sub"
  input: "ssd300/expanded_conv_1/depthwise/depthwise_weights/Initializer/random_uniform/max"
  input: "ssd300/expanded_conv_1/depthwise/depthwise_weights/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv_1/depthwise/depthwise_weights"
      }
    }
  }
}
node {
  name: "ssd300/expanded_conv_1/depthwise/depthwise_weights/Initializer/random_uniform/mul"
  op: "Mul"
  input: "ssd300/expanded_conv_1/depthwise/depthwise_weights/Initializer/random_uniform/RandomUniform"
  input: "ssd300/expanded_conv_1/depthwise/depthwise_weights/Initializer/random_uniform/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv_1/depthwise/depthwise_weights"
      }
    }
  }
}
node {
  name: "ssd300/expanded_conv_1/depthwise/depthwise_weights/Initializer/random_uniform"
  op: "Add"
  input: "ssd300/expanded_conv_1/depthwise/depthwise_weights/Initializer/random_uniform/mul"
  input: "ssd300/expanded_conv_1/depthwise/depthwise_weights/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv_1/depthwise/depthwise_weights"
      }
    }
  }
}
node {
  name: "ssd300/expanded_conv_1/depthwise/depthwise_weights"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv_1/depthwise/depthwise_weights"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 3
        }
        dim {
          size: 3
        }
        dim {
          size: 96
        }
        dim {
          size: 1
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "ssd300/expanded_conv_1/depthwise/depthwise_weights/Assign"
  op: "Assign"
  input: "ssd300/expanded_conv_1/depthwise/depthwise_weights"
  input: "ssd300/expanded_conv_1/depthwise/depthwise_weights/Initializer/random_uniform"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv_1/depthwise/depthwise_weights"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "ssd300/expanded_conv_1/depthwise/depthwise_weights/read"
  op: "Identity"
  input: "ssd300/expanded_conv_1/depthwise/depthwise_weights"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv_1/depthwise/depthwise_weights"
      }
    }
  }
}
node {
  name: "ssd300/expanded_conv_1/depthwise/layer_conv2d/depthwise/Shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\003\000\000\000\003\000\000\000`\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "ssd300/expanded_conv_1/depthwise/layer_conv2d/depthwise/dilation_rate"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "ssd300/expanded_conv_1/depthwise/layer_conv2d/depthwise"
  op: "DepthwiseConv2dNative"
  input: "ssd300/expanded_conv_1/expand/Relu6"
  input: "ssd300/expanded_conv_1/depthwise/depthwise_weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NCHW"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 2
        i: 2
      }
    }
  }
}
node {
  name: "ssd300/expanded_conv_1/depthwise/BatchNorm/beta/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv_1/depthwise/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 96
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "ssd300/expanded_conv_1/depthwise/BatchNorm/beta"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv_1/depthwise/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 96
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "ssd300/expanded_conv_1/depthwise/BatchNorm/beta/Assign"
  op: "Assign"
  input: "ssd300/expanded_conv_1/depthwise/BatchNorm/beta"
  input: "ssd300/expanded_conv_1/depthwise/BatchNorm/beta/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv_1/depthwise/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "ssd300/expanded_conv_1/depthwise/BatchNorm/beta/read"
  op: "Identity"
  input: "ssd300/expanded_conv_1/depthwise/BatchNorm/beta"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv_1/depthwise/BatchNorm/beta"
      }
    }
  }
}
node {
  name: "ssd300/expanded_conv_1/depthwise/BatchNorm/moving_mean/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv_1/depthwise/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 96
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "ssd300/expanded_conv_1/depthwise/BatchNorm/moving_mean"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv_1/depthwise/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 96
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "ssd300/expanded_conv_1/depthwise/BatchNorm/moving_mean/Assign"
  op: "Assign"
  input: "ssd300/expanded_conv_1/depthwise/BatchNorm/moving_mean"
  input: "ssd300/expanded_conv_1/depthwise/BatchNorm/moving_mean/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv_1/depthwise/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "ssd300/expanded_conv_1/depthwise/BatchNorm/moving_mean/read"
  op: "Identity"
  input: "ssd300/expanded_conv_1/depthwise/BatchNorm/moving_mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv_1/depthwise/BatchNorm/moving_mean"
      }
    }
  }
}
node {
  name: "ssd300/expanded_conv_1/depthwise/BatchNorm/moving_variance/Initializer/ones"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv_1/depthwise/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 96
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "ssd300/expanded_conv_1/depthwise/BatchNorm/moving_variance"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv_1/depthwise/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 96
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "ssd300/expanded_conv_1/depthwise/BatchNorm/moving_variance/Assign"
  op: "Assign"
  input: "ssd300/expanded_conv_1/depthwise/BatchNorm/moving_variance"
  input: "ssd300/expanded_conv_1/depthwise/BatchNorm/moving_variance/Initializer/ones"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv_1/depthwise/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "ssd300/expanded_conv_1/depthwise/BatchNorm/moving_variance/read"
  op: "Identity"
  input: "ssd300/expanded_conv_1/depthwise/BatchNorm/moving_variance"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv_1/depthwise/BatchNorm/moving_variance"
      }
    }
  }
}
node {
  name: "ssd300/expanded_conv_1/depthwise/BatchNorm/Reshape/shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000`\000\000\000\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "ssd300/expanded_conv_1/depthwise/BatchNorm/Reshape"
  op: "Reshape"
  input: "ssd300/expanded_conv_1/depthwise/BatchNorm/beta/read"
  input: "ssd300/expanded_conv_1/depthwise/BatchNorm/Reshape/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "ssd300/expanded_conv_1/depthwise/BatchNorm/Reshape_1/shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000`\000\000\000\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "ssd300/expanded_conv_1/depthwise/BatchNorm/Reshape_1"
  op: "Reshape"
  input: "ssd300/expanded_conv_1/depthwise/BatchNorm/moving_mean/read"
  input: "ssd300/expanded_conv_1/depthwise/BatchNorm/Reshape_1/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "ssd300/expanded_conv_1/depthwise/BatchNorm/Reshape_2/shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000`\000\000\000\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "ssd300/expanded_conv_1/depthwise/BatchNorm/Reshape_2"
  op: "Reshape"
  input: "ssd300/expanded_conv_1/depthwise/BatchNorm/moving_variance/read"
  input: "ssd300/expanded_conv_1/depthwise/BatchNorm/Reshape_2/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "ssd300/expanded_conv_1/depthwise/BatchNorm/batchnorm_1/Add/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0010000000474974513
      }
    }
  }
}
node {
  name: "ssd300/expanded_conv_1/depthwise/BatchNorm/batchnorm_1/Add"
  op: "Add"
  input: "ssd300/expanded_conv_1/depthwise/BatchNorm/Reshape_2"
  input: "ssd300/expanded_conv_1/depthwise/BatchNorm/batchnorm_1/Add/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ssd300/expanded_conv_1/depthwise/BatchNorm/batchnorm_1/Rsqrt"
  op: "Rsqrt"
  input: "ssd300/expanded_conv_1/depthwise/BatchNorm/batchnorm_1/Add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ssd300/expanded_conv_1/depthwise/BatchNorm/batchnorm_1/mul"
  op: "Mul"
  input: "ssd300/expanded_conv_1/depthwise/layer_conv2d/depthwise"
  input: "ssd300/expanded_conv_1/depthwise/BatchNorm/batchnorm_1/Rsqrt"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ssd300/expanded_conv_1/depthwise/BatchNorm/batchnorm_1/mul_1"
  op: "Mul"
  input: "ssd300/expanded_conv_1/depthwise/BatchNorm/Reshape_1"
  input: "ssd300/expanded_conv_1/depthwise/BatchNorm/batchnorm_1/Rsqrt"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ssd300/expanded_conv_1/depthwise/BatchNorm/batchnorm_1/sub"
  op: "Sub"
  input: "ssd300/expanded_conv_1/depthwise/BatchNorm/Reshape"
  input: "ssd300/expanded_conv_1/depthwise/BatchNorm/batchnorm_1/mul_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ssd300/expanded_conv_1/depthwise/BatchNorm/batchnorm_1/Add_1"
  op: "Add"
  input: "ssd300/expanded_conv_1/depthwise/BatchNorm/batchnorm_1/mul"
  input: "ssd300/expanded_conv_1/depthwise/BatchNorm/batchnorm_1/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ssd300/expanded_conv_1/depthwise/Relu6"
  op: "Relu6"
  input: "ssd300/expanded_conv_1/depthwise/BatchNorm/batchnorm_1/Add_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ssd300/expanded_conv_1/project/weights/Initializer/random_uniform/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv_1/project/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000`\000\000\000\030\000\000\000"
      }
    }
  }
}
node {
  name: "ssd300/expanded_conv_1/project/weights/Initializer/random_uniform/min"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv_1/project/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: -0.22360679507255554
      }
    }
  }
}
node {
  name: "ssd300/expanded_conv_1/project/weights/Initializer/random_uniform/max"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv_1/project/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.22360679507255554
      }
    }
  }
}
node {
  name: "ssd300/expanded_conv_1/project/weights/Initializer/random_uniform/RandomUniform"
  op: "RandomUniform"
  input: "ssd300/expanded_conv_1/project/weights/Initializer/random_uniform/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv_1/project/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "ssd300/expanded_conv_1/project/weights/Initializer/random_uniform/sub"
  op: "Sub"
  input: "ssd300/expanded_conv_1/project/weights/Initializer/random_uniform/max"
  input: "ssd300/expanded_conv_1/project/weights/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv_1/project/weights"
      }
    }
  }
}
node {
  name: "ssd300/expanded_conv_1/project/weights/Initializer/random_uniform/mul"
  op: "Mul"
  input: "ssd300/expanded_conv_1/project/weights/Initializer/random_uniform/RandomUniform"
  input: "ssd300/expanded_conv_1/project/weights/Initializer/random_uniform/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv_1/project/weights"
      }
    }
  }
}
node {
  name: "ssd300/expanded_conv_1/project/weights/Initializer/random_uniform"
  op: "Add"
  input: "ssd300/expanded_conv_1/project/weights/Initializer/random_uniform/mul"
  input: "ssd300/expanded_conv_1/project/weights/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv_1/project/weights"
      }
    }
  }
}
node {
  name: "ssd300/expanded_conv_1/project/weights"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv_1/project/weights"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
        dim {
          size: 1
        }
        dim {
          size: 96
        }
        dim {
          size: 24
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "ssd300/expanded_conv_1/project/weights/Assign"
  op: "Assign"
  input: "ssd300/expanded_conv_1/project/weights"
  input: "ssd300/expanded_conv_1/project/weights/Initializer/random_uniform"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv_1/project/weights"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "ssd300/expanded_conv_1/project/weights/read"
  op: "Identity"
  input: "ssd300/expanded_conv_1/project/weights"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv_1/project/weights"
      }
    }
  }
}
node {
  name: "ssd300/expanded_conv_1/project/layer_conv2d/Conv2D"
  op: "Conv2D"
  input: "ssd300/expanded_conv_1/depthwise/Relu6"
  input: "ssd300/expanded_conv_1/project/weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NCHW"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "explicit_paddings"
    value {
      list {
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "ssd300/expanded_conv_1/project/BatchNorm/beta/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv_1/project/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 24
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "ssd300/expanded_conv_1/project/BatchNorm/beta"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv_1/project/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 24
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "ssd300/expanded_conv_1/project/BatchNorm/beta/Assign"
  op: "Assign"
  input: "ssd300/expanded_conv_1/project/BatchNorm/beta"
  input: "ssd300/expanded_conv_1/project/BatchNorm/beta/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv_1/project/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "ssd300/expanded_conv_1/project/BatchNorm/beta/read"
  op: "Identity"
  input: "ssd300/expanded_conv_1/project/BatchNorm/beta"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv_1/project/BatchNorm/beta"
      }
    }
  }
}
node {
  name: "ssd300/expanded_conv_1/project/BatchNorm/moving_mean/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv_1/project/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 24
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "ssd300/expanded_conv_1/project/BatchNorm/moving_mean"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv_1/project/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 24
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "ssd300/expanded_conv_1/project/BatchNorm/moving_mean/Assign"
  op: "Assign"
  input: "ssd300/expanded_conv_1/project/BatchNorm/moving_mean"
  input: "ssd300/expanded_conv_1/project/BatchNorm/moving_mean/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv_1/project/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "ssd300/expanded_conv_1/project/BatchNorm/moving_mean/read"
  op: "Identity"
  input: "ssd300/expanded_conv_1/project/BatchNorm/moving_mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv_1/project/BatchNorm/moving_mean"
      }
    }
  }
}
node {
  name: "ssd300/expanded_conv_1/project/BatchNorm/moving_variance/Initializer/ones"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv_1/project/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 24
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "ssd300/expanded_conv_1/project/BatchNorm/moving_variance"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv_1/project/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 24
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "ssd300/expanded_conv_1/project/BatchNorm/moving_variance/Assign"
  op: "Assign"
  input: "ssd300/expanded_conv_1/project/BatchNorm/moving_variance"
  input: "ssd300/expanded_conv_1/project/BatchNorm/moving_variance/Initializer/ones"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv_1/project/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "ssd300/expanded_conv_1/project/BatchNorm/moving_variance/read"
  op: "Identity"
  input: "ssd300/expanded_conv_1/project/BatchNorm/moving_variance"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv_1/project/BatchNorm/moving_variance"
      }
    }
  }
}
node {
  name: "ssd300/expanded_conv_1/project/BatchNorm/Reshape/shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\030\000\000\000\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "ssd300/expanded_conv_1/project/BatchNorm/Reshape"
  op: "Reshape"
  input: "ssd300/expanded_conv_1/project/BatchNorm/beta/read"
  input: "ssd300/expanded_conv_1/project/BatchNorm/Reshape/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "ssd300/expanded_conv_1/project/BatchNorm/Reshape_1/shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\030\000\000\000\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "ssd300/expanded_conv_1/project/BatchNorm/Reshape_1"
  op: "Reshape"
  input: "ssd300/expanded_conv_1/project/BatchNorm/moving_mean/read"
  input: "ssd300/expanded_conv_1/project/BatchNorm/Reshape_1/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "ssd300/expanded_conv_1/project/BatchNorm/Reshape_2/shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\030\000\000\000\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "ssd300/expanded_conv_1/project/BatchNorm/Reshape_2"
  op: "Reshape"
  input: "ssd300/expanded_conv_1/project/BatchNorm/moving_variance/read"
  input: "ssd300/expanded_conv_1/project/BatchNorm/Reshape_2/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "ssd300/expanded_conv_1/project/BatchNorm/batchnorm_1/Add/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0010000000474974513
      }
    }
  }
}
node {
  name: "ssd300/expanded_conv_1/project/BatchNorm/batchnorm_1/Add"
  op: "Add"
  input: "ssd300/expanded_conv_1/project/BatchNorm/Reshape_2"
  input: "ssd300/expanded_conv_1/project/BatchNorm/batchnorm_1/Add/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ssd300/expanded_conv_1/project/BatchNorm/batchnorm_1/Rsqrt"
  op: "Rsqrt"
  input: "ssd300/expanded_conv_1/project/BatchNorm/batchnorm_1/Add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ssd300/expanded_conv_1/project/BatchNorm/batchnorm_1/mul"
  op: "Mul"
  input: "ssd300/expanded_conv_1/project/layer_conv2d/Conv2D"
  input: "ssd300/expanded_conv_1/project/BatchNorm/batchnorm_1/Rsqrt"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ssd300/expanded_conv_1/project/BatchNorm/batchnorm_1/mul_1"
  op: "Mul"
  input: "ssd300/expanded_conv_1/project/BatchNorm/Reshape_1"
  input: "ssd300/expanded_conv_1/project/BatchNorm/batchnorm_1/Rsqrt"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ssd300/expanded_conv_1/project/BatchNorm/batchnorm_1/sub"
  op: "Sub"
  input: "ssd300/expanded_conv_1/project/BatchNorm/Reshape"
  input: "ssd300/expanded_conv_1/project/BatchNorm/batchnorm_1/mul_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ssd300/expanded_conv_1/project/BatchNorm/batchnorm_1/Add_1"
  op: "Add"
  input: "ssd300/expanded_conv_1/project/BatchNorm/batchnorm_1/mul"
  input: "ssd300/expanded_conv_1/project/BatchNorm/batchnorm_1/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ssd300/expanded_conv_2/expand/weights/Initializer/random_uniform/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv_2/expand/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000\030\000\000\000\220\000\000\000"
      }
    }
  }
}
node {
  name: "ssd300/expanded_conv_2/expand/weights/Initializer/random_uniform/min"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv_2/expand/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: -0.18898223340511322
      }
    }
  }
}
node {
  name: "ssd300/expanded_conv_2/expand/weights/Initializer/random_uniform/max"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv_2/expand/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.18898223340511322
      }
    }
  }
}
node {
  name: "ssd300/expanded_conv_2/expand/weights/Initializer/random_uniform/RandomUniform"
  op: "RandomUniform"
  input: "ssd300/expanded_conv_2/expand/weights/Initializer/random_uniform/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv_2/expand/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "ssd300/expanded_conv_2/expand/weights/Initializer/random_uniform/sub"
  op: "Sub"
  input: "ssd300/expanded_conv_2/expand/weights/Initializer/random_uniform/max"
  input: "ssd300/expanded_conv_2/expand/weights/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv_2/expand/weights"
      }
    }
  }
}
node {
  name: "ssd300/expanded_conv_2/expand/weights/Initializer/random_uniform/mul"
  op: "Mul"
  input: "ssd300/expanded_conv_2/expand/weights/Initializer/random_uniform/RandomUniform"
  input: "ssd300/expanded_conv_2/expand/weights/Initializer/random_uniform/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv_2/expand/weights"
      }
    }
  }
}
node {
  name: "ssd300/expanded_conv_2/expand/weights/Initializer/random_uniform"
  op: "Add"
  input: "ssd300/expanded_conv_2/expand/weights/Initializer/random_uniform/mul"
  input: "ssd300/expanded_conv_2/expand/weights/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv_2/expand/weights"
      }
    }
  }
}
node {
  name: "ssd300/expanded_conv_2/expand/weights"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv_2/expand/weights"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
        dim {
          size: 1
        }
        dim {
          size: 24
        }
        dim {
          size: 144
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "ssd300/expanded_conv_2/expand/weights/Assign"
  op: "Assign"
  input: "ssd300/expanded_conv_2/expand/weights"
  input: "ssd300/expanded_conv_2/expand/weights/Initializer/random_uniform"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv_2/expand/weights"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "ssd300/expanded_conv_2/expand/weights/read"
  op: "Identity"
  input: "ssd300/expanded_conv_2/expand/weights"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv_2/expand/weights"
      }
    }
  }
}
node {
  name: "ssd300/expanded_conv_2/expand/layer_conv2d/Conv2D"
  op: "Conv2D"
  input: "ssd300/expanded_conv_1/project/BatchNorm/batchnorm_1/Add_1"
  input: "ssd300/expanded_conv_2/expand/weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NCHW"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "explicit_paddings"
    value {
      list {
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "ssd300/expanded_conv_2/expand/BatchNorm/beta/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv_2/expand/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 144
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "ssd300/expanded_conv_2/expand/BatchNorm/beta"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv_2/expand/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 144
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "ssd300/expanded_conv_2/expand/BatchNorm/beta/Assign"
  op: "Assign"
  input: "ssd300/expanded_conv_2/expand/BatchNorm/beta"
  input: "ssd300/expanded_conv_2/expand/BatchNorm/beta/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv_2/expand/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "ssd300/expanded_conv_2/expand/BatchNorm/beta/read"
  op: "Identity"
  input: "ssd300/expanded_conv_2/expand/BatchNorm/beta"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv_2/expand/BatchNorm/beta"
      }
    }
  }
}
node {
  name: "ssd300/expanded_conv_2/expand/BatchNorm/moving_mean/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv_2/expand/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 144
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "ssd300/expanded_conv_2/expand/BatchNorm/moving_mean"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv_2/expand/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 144
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "ssd300/expanded_conv_2/expand/BatchNorm/moving_mean/Assign"
  op: "Assign"
  input: "ssd300/expanded_conv_2/expand/BatchNorm/moving_mean"
  input: "ssd300/expanded_conv_2/expand/BatchNorm/moving_mean/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv_2/expand/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "ssd300/expanded_conv_2/expand/BatchNorm/moving_mean/read"
  op: "Identity"
  input: "ssd300/expanded_conv_2/expand/BatchNorm/moving_mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv_2/expand/BatchNorm/moving_mean"
      }
    }
  }
}
node {
  name: "ssd300/expanded_conv_2/expand/BatchNorm/moving_variance/Initializer/ones"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv_2/expand/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 144
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "ssd300/expanded_conv_2/expand/BatchNorm/moving_variance"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv_2/expand/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 144
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "ssd300/expanded_conv_2/expand/BatchNorm/moving_variance/Assign"
  op: "Assign"
  input: "ssd300/expanded_conv_2/expand/BatchNorm/moving_variance"
  input: "ssd300/expanded_conv_2/expand/BatchNorm/moving_variance/Initializer/ones"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv_2/expand/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "ssd300/expanded_conv_2/expand/BatchNorm/moving_variance/read"
  op: "Identity"
  input: "ssd300/expanded_conv_2/expand/BatchNorm/moving_variance"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv_2/expand/BatchNorm/moving_variance"
      }
    }
  }
}
node {
  name: "ssd300/expanded_conv_2/expand/BatchNorm/Reshape/shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\220\000\000\000\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "ssd300/expanded_conv_2/expand/BatchNorm/Reshape"
  op: "Reshape"
  input: "ssd300/expanded_conv_2/expand/BatchNorm/beta/read"
  input: "ssd300/expanded_conv_2/expand/BatchNorm/Reshape/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "ssd300/expanded_conv_2/expand/BatchNorm/Reshape_1/shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\220\000\000\000\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "ssd300/expanded_conv_2/expand/BatchNorm/Reshape_1"
  op: "Reshape"
  input: "ssd300/expanded_conv_2/expand/BatchNorm/moving_mean/read"
  input: "ssd300/expanded_conv_2/expand/BatchNorm/Reshape_1/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "ssd300/expanded_conv_2/expand/BatchNorm/Reshape_2/shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\220\000\000\000\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "ssd300/expanded_conv_2/expand/BatchNorm/Reshape_2"
  op: "Reshape"
  input: "ssd300/expanded_conv_2/expand/BatchNorm/moving_variance/read"
  input: "ssd300/expanded_conv_2/expand/BatchNorm/Reshape_2/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "ssd300/expanded_conv_2/expand/BatchNorm/batchnorm_1/Add/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0010000000474974513
      }
    }
  }
}
node {
  name: "ssd300/expanded_conv_2/expand/BatchNorm/batchnorm_1/Add"
  op: "Add"
  input: "ssd300/expanded_conv_2/expand/BatchNorm/Reshape_2"
  input: "ssd300/expanded_conv_2/expand/BatchNorm/batchnorm_1/Add/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ssd300/expanded_conv_2/expand/BatchNorm/batchnorm_1/Rsqrt"
  op: "Rsqrt"
  input: "ssd300/expanded_conv_2/expand/BatchNorm/batchnorm_1/Add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ssd300/expanded_conv_2/expand/BatchNorm/batchnorm_1/mul"
  op: "Mul"
  input: "ssd300/expanded_conv_2/expand/layer_conv2d/Conv2D"
  input: "ssd300/expanded_conv_2/expand/BatchNorm/batchnorm_1/Rsqrt"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ssd300/expanded_conv_2/expand/BatchNorm/batchnorm_1/mul_1"
  op: "Mul"
  input: "ssd300/expanded_conv_2/expand/BatchNorm/Reshape_1"
  input: "ssd300/expanded_conv_2/expand/BatchNorm/batchnorm_1/Rsqrt"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ssd300/expanded_conv_2/expand/BatchNorm/batchnorm_1/sub"
  op: "Sub"
  input: "ssd300/expanded_conv_2/expand/BatchNorm/Reshape"
  input: "ssd300/expanded_conv_2/expand/BatchNorm/batchnorm_1/mul_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ssd300/expanded_conv_2/expand/BatchNorm/batchnorm_1/Add_1"
  op: "Add"
  input: "ssd300/expanded_conv_2/expand/BatchNorm/batchnorm_1/mul"
  input: "ssd300/expanded_conv_2/expand/BatchNorm/batchnorm_1/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ssd300/expanded_conv_2/expand/Relu6"
  op: "Relu6"
  input: "ssd300/expanded_conv_2/expand/BatchNorm/batchnorm_1/Add_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ssd300/expanded_conv_2/depthwise/depthwise_weights/Initializer/random_uniform/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv_2/depthwise/depthwise_weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\003\000\000\000\003\000\000\000\220\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "ssd300/expanded_conv_2/depthwise/depthwise_weights/Initializer/random_uniform/min"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv_2/depthwise/depthwise_weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: -0.06780634820461273
      }
    }
  }
}
node {
  name: "ssd300/expanded_conv_2/depthwise/depthwise_weights/Initializer/random_uniform/max"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv_2/depthwise/depthwise_weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.06780634820461273
      }
    }
  }
}
node {
  name: "ssd300/expanded_conv_2/depthwise/depthwise_weights/Initializer/random_uniform/RandomUniform"
  op: "RandomUniform"
  input: "ssd300/expanded_conv_2/depthwise/depthwise_weights/Initializer/random_uniform/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv_2/depthwise/depthwise_weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "ssd300/expanded_conv_2/depthwise/depthwise_weights/Initializer/random_uniform/sub"
  op: "Sub"
  input: "ssd300/expanded_conv_2/depthwise/depthwise_weights/Initializer/random_uniform/max"
  input: "ssd300/expanded_conv_2/depthwise/depthwise_weights/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv_2/depthwise/depthwise_weights"
      }
    }
  }
}
node {
  name: "ssd300/expanded_conv_2/depthwise/depthwise_weights/Initializer/random_uniform/mul"
  op: "Mul"
  input: "ssd300/expanded_conv_2/depthwise/depthwise_weights/Initializer/random_uniform/RandomUniform"
  input: "ssd300/expanded_conv_2/depthwise/depthwise_weights/Initializer/random_uniform/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv_2/depthwise/depthwise_weights"
      }
    }
  }
}
node {
  name: "ssd300/expanded_conv_2/depthwise/depthwise_weights/Initializer/random_uniform"
  op: "Add"
  input: "ssd300/expanded_conv_2/depthwise/depthwise_weights/Initializer/random_uniform/mul"
  input: "ssd300/expanded_conv_2/depthwise/depthwise_weights/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv_2/depthwise/depthwise_weights"
      }
    }
  }
}
node {
  name: "ssd300/expanded_conv_2/depthwise/depthwise_weights"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv_2/depthwise/depthwise_weights"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 3
        }
        dim {
          size: 3
        }
        dim {
          size: 144
        }
        dim {
          size: 1
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "ssd300/expanded_conv_2/depthwise/depthwise_weights/Assign"
  op: "Assign"
  input: "ssd300/expanded_conv_2/depthwise/depthwise_weights"
  input: "ssd300/expanded_conv_2/depthwise/depthwise_weights/Initializer/random_uniform"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv_2/depthwise/depthwise_weights"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "ssd300/expanded_conv_2/depthwise/depthwise_weights/read"
  op: "Identity"
  input: "ssd300/expanded_conv_2/depthwise/depthwise_weights"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv_2/depthwise/depthwise_weights"
      }
    }
  }
}
node {
  name: "ssd300/expanded_conv_2/depthwise/layer_conv2d/depthwise/Shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\003\000\000\000\003\000\000\000\220\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "ssd300/expanded_conv_2/depthwise/layer_conv2d/depthwise/dilation_rate"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "ssd300/expanded_conv_2/depthwise/layer_conv2d/depthwise"
  op: "DepthwiseConv2dNative"
  input: "ssd300/expanded_conv_2/expand/Relu6"
  input: "ssd300/expanded_conv_2/depthwise/depthwise_weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NCHW"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
}
node {
  name: "ssd300/expanded_conv_2/depthwise/BatchNorm/beta/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv_2/depthwise/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 144
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "ssd300/expanded_conv_2/depthwise/BatchNorm/beta"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv_2/depthwise/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 144
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "ssd300/expanded_conv_2/depthwise/BatchNorm/beta/Assign"
  op: "Assign"
  input: "ssd300/expanded_conv_2/depthwise/BatchNorm/beta"
  input: "ssd300/expanded_conv_2/depthwise/BatchNorm/beta/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv_2/depthwise/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "ssd300/expanded_conv_2/depthwise/BatchNorm/beta/read"
  op: "Identity"
  input: "ssd300/expanded_conv_2/depthwise/BatchNorm/beta"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv_2/depthwise/BatchNorm/beta"
      }
    }
  }
}
node {
  name: "ssd300/expanded_conv_2/depthwise/BatchNorm/moving_mean/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv_2/depthwise/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 144
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "ssd300/expanded_conv_2/depthwise/BatchNorm/moving_mean"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv_2/depthwise/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 144
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "ssd300/expanded_conv_2/depthwise/BatchNorm/moving_mean/Assign"
  op: "Assign"
  input: "ssd300/expanded_conv_2/depthwise/BatchNorm/moving_mean"
  input: "ssd300/expanded_conv_2/depthwise/BatchNorm/moving_mean/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv_2/depthwise/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "ssd300/expanded_conv_2/depthwise/BatchNorm/moving_mean/read"
  op: "Identity"
  input: "ssd300/expanded_conv_2/depthwise/BatchNorm/moving_mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv_2/depthwise/BatchNorm/moving_mean"
      }
    }
  }
}
node {
  name: "ssd300/expanded_conv_2/depthwise/BatchNorm/moving_variance/Initializer/ones"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv_2/depthwise/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 144
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "ssd300/expanded_conv_2/depthwise/BatchNorm/moving_variance"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv_2/depthwise/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 144
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "ssd300/expanded_conv_2/depthwise/BatchNorm/moving_variance/Assign"
  op: "Assign"
  input: "ssd300/expanded_conv_2/depthwise/BatchNorm/moving_variance"
  input: "ssd300/expanded_conv_2/depthwise/BatchNorm/moving_variance/Initializer/ones"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv_2/depthwise/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "ssd300/expanded_conv_2/depthwise/BatchNorm/moving_variance/read"
  op: "Identity"
  input: "ssd300/expanded_conv_2/depthwise/BatchNorm/moving_variance"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv_2/depthwise/BatchNorm/moving_variance"
      }
    }
  }
}
node {
  name: "ssd300/expanded_conv_2/depthwise/BatchNorm/Reshape/shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\220\000\000\000\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "ssd300/expanded_conv_2/depthwise/BatchNorm/Reshape"
  op: "Reshape"
  input: "ssd300/expanded_conv_2/depthwise/BatchNorm/beta/read"
  input: "ssd300/expanded_conv_2/depthwise/BatchNorm/Reshape/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "ssd300/expanded_conv_2/depthwise/BatchNorm/Reshape_1/shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\220\000\000\000\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "ssd300/expanded_conv_2/depthwise/BatchNorm/Reshape_1"
  op: "Reshape"
  input: "ssd300/expanded_conv_2/depthwise/BatchNorm/moving_mean/read"
  input: "ssd300/expanded_conv_2/depthwise/BatchNorm/Reshape_1/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "ssd300/expanded_conv_2/depthwise/BatchNorm/Reshape_2/shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\220\000\000\000\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "ssd300/expanded_conv_2/depthwise/BatchNorm/Reshape_2"
  op: "Reshape"
  input: "ssd300/expanded_conv_2/depthwise/BatchNorm/moving_variance/read"
  input: "ssd300/expanded_conv_2/depthwise/BatchNorm/Reshape_2/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "ssd300/expanded_conv_2/depthwise/BatchNorm/batchnorm_1/Add/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0010000000474974513
      }
    }
  }
}
node {
  name: "ssd300/expanded_conv_2/depthwise/BatchNorm/batchnorm_1/Add"
  op: "Add"
  input: "ssd300/expanded_conv_2/depthwise/BatchNorm/Reshape_2"
  input: "ssd300/expanded_conv_2/depthwise/BatchNorm/batchnorm_1/Add/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ssd300/expanded_conv_2/depthwise/BatchNorm/batchnorm_1/Rsqrt"
  op: "Rsqrt"
  input: "ssd300/expanded_conv_2/depthwise/BatchNorm/batchnorm_1/Add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ssd300/expanded_conv_2/depthwise/BatchNorm/batchnorm_1/mul"
  op: "Mul"
  input: "ssd300/expanded_conv_2/depthwise/layer_conv2d/depthwise"
  input: "ssd300/expanded_conv_2/depthwise/BatchNorm/batchnorm_1/Rsqrt"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ssd300/expanded_conv_2/depthwise/BatchNorm/batchnorm_1/mul_1"
  op: "Mul"
  input: "ssd300/expanded_conv_2/depthwise/BatchNorm/Reshape_1"
  input: "ssd300/expanded_conv_2/depthwise/BatchNorm/batchnorm_1/Rsqrt"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ssd300/expanded_conv_2/depthwise/BatchNorm/batchnorm_1/sub"
  op: "Sub"
  input: "ssd300/expanded_conv_2/depthwise/BatchNorm/Reshape"
  input: "ssd300/expanded_conv_2/depthwise/BatchNorm/batchnorm_1/mul_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ssd300/expanded_conv_2/depthwise/BatchNorm/batchnorm_1/Add_1"
  op: "Add"
  input: "ssd300/expanded_conv_2/depthwise/BatchNorm/batchnorm_1/mul"
  input: "ssd300/expanded_conv_2/depthwise/BatchNorm/batchnorm_1/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ssd300/expanded_conv_2/depthwise/Relu6"
  op: "Relu6"
  input: "ssd300/expanded_conv_2/depthwise/BatchNorm/batchnorm_1/Add_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ssd300/expanded_conv_2/project/weights/Initializer/random_uniform/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv_2/project/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000\220\000\000\000\030\000\000\000"
      }
    }
  }
}
node {
  name: "ssd300/expanded_conv_2/project/weights/Initializer/random_uniform/min"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv_2/project/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: -0.18898223340511322
      }
    }
  }
}
node {
  name: "ssd300/expanded_conv_2/project/weights/Initializer/random_uniform/max"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv_2/project/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.18898223340511322
      }
    }
  }
}
node {
  name: "ssd300/expanded_conv_2/project/weights/Initializer/random_uniform/RandomUniform"
  op: "RandomUniform"
  input: "ssd300/expanded_conv_2/project/weights/Initializer/random_uniform/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv_2/project/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "ssd300/expanded_conv_2/project/weights/Initializer/random_uniform/sub"
  op: "Sub"
  input: "ssd300/expanded_conv_2/project/weights/Initializer/random_uniform/max"
  input: "ssd300/expanded_conv_2/project/weights/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv_2/project/weights"
      }
    }
  }
}
node {
  name: "ssd300/expanded_conv_2/project/weights/Initializer/random_uniform/mul"
  op: "Mul"
  input: "ssd300/expanded_conv_2/project/weights/Initializer/random_uniform/RandomUniform"
  input: "ssd300/expanded_conv_2/project/weights/Initializer/random_uniform/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv_2/project/weights"
      }
    }
  }
}
node {
  name: "ssd300/expanded_conv_2/project/weights/Initializer/random_uniform"
  op: "Add"
  input: "ssd300/expanded_conv_2/project/weights/Initializer/random_uniform/mul"
  input: "ssd300/expanded_conv_2/project/weights/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv_2/project/weights"
      }
    }
  }
}
node {
  name: "ssd300/expanded_conv_2/project/weights"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv_2/project/weights"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
        dim {
          size: 1
        }
        dim {
          size: 144
        }
        dim {
          size: 24
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "ssd300/expanded_conv_2/project/weights/Assign"
  op: "Assign"
  input: "ssd300/expanded_conv_2/project/weights"
  input: "ssd300/expanded_conv_2/project/weights/Initializer/random_uniform"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv_2/project/weights"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "ssd300/expanded_conv_2/project/weights/read"
  op: "Identity"
  input: "ssd300/expanded_conv_2/project/weights"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv_2/project/weights"
      }
    }
  }
}
node {
  name: "ssd300/expanded_conv_2/project/layer_conv2d/Conv2D"
  op: "Conv2D"
  input: "ssd300/expanded_conv_2/depthwise/Relu6"
  input: "ssd300/expanded_conv_2/project/weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NCHW"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "explicit_paddings"
    value {
      list {
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "ssd300/expanded_conv_2/project/BatchNorm/beta/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv_2/project/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 24
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "ssd300/expanded_conv_2/project/BatchNorm/beta"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv_2/project/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 24
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "ssd300/expanded_conv_2/project/BatchNorm/beta/Assign"
  op: "Assign"
  input: "ssd300/expanded_conv_2/project/BatchNorm/beta"
  input: "ssd300/expanded_conv_2/project/BatchNorm/beta/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv_2/project/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "ssd300/expanded_conv_2/project/BatchNorm/beta/read"
  op: "Identity"
  input: "ssd300/expanded_conv_2/project/BatchNorm/beta"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv_2/project/BatchNorm/beta"
      }
    }
  }
}
node {
  name: "ssd300/expanded_conv_2/project/BatchNorm/moving_mean/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv_2/project/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 24
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "ssd300/expanded_conv_2/project/BatchNorm/moving_mean"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv_2/project/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 24
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "ssd300/expanded_conv_2/project/BatchNorm/moving_mean/Assign"
  op: "Assign"
  input: "ssd300/expanded_conv_2/project/BatchNorm/moving_mean"
  input: "ssd300/expanded_conv_2/project/BatchNorm/moving_mean/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv_2/project/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "ssd300/expanded_conv_2/project/BatchNorm/moving_mean/read"
  op: "Identity"
  input: "ssd300/expanded_conv_2/project/BatchNorm/moving_mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv_2/project/BatchNorm/moving_mean"
      }
    }
  }
}
node {
  name: "ssd300/expanded_conv_2/project/BatchNorm/moving_variance/Initializer/ones"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv_2/project/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 24
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "ssd300/expanded_conv_2/project/BatchNorm/moving_variance"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv_2/project/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 24
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "ssd300/expanded_conv_2/project/BatchNorm/moving_variance/Assign"
  op: "Assign"
  input: "ssd300/expanded_conv_2/project/BatchNorm/moving_variance"
  input: "ssd300/expanded_conv_2/project/BatchNorm/moving_variance/Initializer/ones"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv_2/project/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "ssd300/expanded_conv_2/project/BatchNorm/moving_variance/read"
  op: "Identity"
  input: "ssd300/expanded_conv_2/project/BatchNorm/moving_variance"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv_2/project/BatchNorm/moving_variance"
      }
    }
  }
}
node {
  name: "ssd300/expanded_conv_2/project/BatchNorm/Reshape/shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\030\000\000\000\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "ssd300/expanded_conv_2/project/BatchNorm/Reshape"
  op: "Reshape"
  input: "ssd300/expanded_conv_2/project/BatchNorm/beta/read"
  input: "ssd300/expanded_conv_2/project/BatchNorm/Reshape/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "ssd300/expanded_conv_2/project/BatchNorm/Reshape_1/shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\030\000\000\000\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "ssd300/expanded_conv_2/project/BatchNorm/Reshape_1"
  op: "Reshape"
  input: "ssd300/expanded_conv_2/project/BatchNorm/moving_mean/read"
  input: "ssd300/expanded_conv_2/project/BatchNorm/Reshape_1/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "ssd300/expanded_conv_2/project/BatchNorm/Reshape_2/shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\030\000\000\000\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "ssd300/expanded_conv_2/project/BatchNorm/Reshape_2"
  op: "Reshape"
  input: "ssd300/expanded_conv_2/project/BatchNorm/moving_variance/read"
  input: "ssd300/expanded_conv_2/project/BatchNorm/Reshape_2/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "ssd300/expanded_conv_2/project/BatchNorm/batchnorm_1/Add/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0010000000474974513
      }
    }
  }
}
node {
  name: "ssd300/expanded_conv_2/project/BatchNorm/batchnorm_1/Add"
  op: "Add"
  input: "ssd300/expanded_conv_2/project/BatchNorm/Reshape_2"
  input: "ssd300/expanded_conv_2/project/BatchNorm/batchnorm_1/Add/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ssd300/expanded_conv_2/project/BatchNorm/batchnorm_1/Rsqrt"
  op: "Rsqrt"
  input: "ssd300/expanded_conv_2/project/BatchNorm/batchnorm_1/Add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ssd300/expanded_conv_2/project/BatchNorm/batchnorm_1/mul"
  op: "Mul"
  input: "ssd300/expanded_conv_2/project/layer_conv2d/Conv2D"
  input: "ssd300/expanded_conv_2/project/BatchNorm/batchnorm_1/Rsqrt"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ssd300/expanded_conv_2/project/BatchNorm/batchnorm_1/mul_1"
  op: "Mul"
  input: "ssd300/expanded_conv_2/project/BatchNorm/Reshape_1"
  input: "ssd300/expanded_conv_2/project/BatchNorm/batchnorm_1/Rsqrt"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ssd300/expanded_conv_2/project/BatchNorm/batchnorm_1/sub"
  op: "Sub"
  input: "ssd300/expanded_conv_2/project/BatchNorm/Reshape"
  input: "ssd300/expanded_conv_2/project/BatchNorm/batchnorm_1/mul_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ssd300/expanded_conv_2/project/BatchNorm/batchnorm_1/Add_1"
  op: "Add"
  input: "ssd300/expanded_conv_2/project/BatchNorm/batchnorm_1/mul"
  input: "ssd300/expanded_conv_2/project/BatchNorm/batchnorm_1/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ssd300/expanded_conv_2/Add"
  op: "Add"
  input: "ssd300/expanded_conv_2/project/BatchNorm/batchnorm_1/Add_1"
  input: "ssd300/expanded_conv_1/project/BatchNorm/batchnorm_1/Add_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ssd300/expanded_conv_3/expand/weights/Initializer/random_uniform/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv_3/expand/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000\030\000\000\000\220\000\000\000"
      }
    }
  }
}
node {
  name: "ssd300/expanded_conv_3/expand/weights/Initializer/random_uniform/min"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv_3/expand/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: -0.18898223340511322
      }
    }
  }
}
node {
  name: "ssd300/expanded_conv_3/expand/weights/Initializer/random_uniform/max"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv_3/expand/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.18898223340511322
      }
    }
  }
}
node {
  name: "ssd300/expanded_conv_3/expand/weights/Initializer/random_uniform/RandomUniform"
  op: "RandomUniform"
  input: "ssd300/expanded_conv_3/expand/weights/Initializer/random_uniform/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv_3/expand/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "ssd300/expanded_conv_3/expand/weights/Initializer/random_uniform/sub"
  op: "Sub"
  input: "ssd300/expanded_conv_3/expand/weights/Initializer/random_uniform/max"
  input: "ssd300/expanded_conv_3/expand/weights/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv_3/expand/weights"
      }
    }
  }
}
node {
  name: "ssd300/expanded_conv_3/expand/weights/Initializer/random_uniform/mul"
  op: "Mul"
  input: "ssd300/expanded_conv_3/expand/weights/Initializer/random_uniform/RandomUniform"
  input: "ssd300/expanded_conv_3/expand/weights/Initializer/random_uniform/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv_3/expand/weights"
      }
    }
  }
}
node {
  name: "ssd300/expanded_conv_3/expand/weights/Initializer/random_uniform"
  op: "Add"
  input: "ssd300/expanded_conv_3/expand/weights/Initializer/random_uniform/mul"
  input: "ssd300/expanded_conv_3/expand/weights/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv_3/expand/weights"
      }
    }
  }
}
node {
  name: "ssd300/expanded_conv_3/expand/weights"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv_3/expand/weights"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
        dim {
          size: 1
        }
        dim {
          size: 24
        }
        dim {
          size: 144
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "ssd300/expanded_conv_3/expand/weights/Assign"
  op: "Assign"
  input: "ssd300/expanded_conv_3/expand/weights"
  input: "ssd300/expanded_conv_3/expand/weights/Initializer/random_uniform"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv_3/expand/weights"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "ssd300/expanded_conv_3/expand/weights/read"
  op: "Identity"
  input: "ssd300/expanded_conv_3/expand/weights"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv_3/expand/weights"
      }
    }
  }
}
node {
  name: "ssd300/expanded_conv_3/expand/layer_conv2d/Conv2D"
  op: "Conv2D"
  input: "ssd300/expanded_conv_2/Add"
  input: "ssd300/expanded_conv_3/expand/weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NCHW"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "explicit_paddings"
    value {
      list {
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "ssd300/expanded_conv_3/expand/BatchNorm/beta/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv_3/expand/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 144
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "ssd300/expanded_conv_3/expand/BatchNorm/beta"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv_3/expand/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 144
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "ssd300/expanded_conv_3/expand/BatchNorm/beta/Assign"
  op: "Assign"
  input: "ssd300/expanded_conv_3/expand/BatchNorm/beta"
  input: "ssd300/expanded_conv_3/expand/BatchNorm/beta/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv_3/expand/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "ssd300/expanded_conv_3/expand/BatchNorm/beta/read"
  op: "Identity"
  input: "ssd300/expanded_conv_3/expand/BatchNorm/beta"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv_3/expand/BatchNorm/beta"
      }
    }
  }
}
node {
  name: "ssd300/expanded_conv_3/expand/BatchNorm/moving_mean/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv_3/expand/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 144
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "ssd300/expanded_conv_3/expand/BatchNorm/moving_mean"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv_3/expand/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 144
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "ssd300/expanded_conv_3/expand/BatchNorm/moving_mean/Assign"
  op: "Assign"
  input: "ssd300/expanded_conv_3/expand/BatchNorm/moving_mean"
  input: "ssd300/expanded_conv_3/expand/BatchNorm/moving_mean/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv_3/expand/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "ssd300/expanded_conv_3/expand/BatchNorm/moving_mean/read"
  op: "Identity"
  input: "ssd300/expanded_conv_3/expand/BatchNorm/moving_mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv_3/expand/BatchNorm/moving_mean"
      }
    }
  }
}
node {
  name: "ssd300/expanded_conv_3/expand/BatchNorm/moving_variance/Initializer/ones"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv_3/expand/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 144
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "ssd300/expanded_conv_3/expand/BatchNorm/moving_variance"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv_3/expand/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 144
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "ssd300/expanded_conv_3/expand/BatchNorm/moving_variance/Assign"
  op: "Assign"
  input: "ssd300/expanded_conv_3/expand/BatchNorm/moving_variance"
  input: "ssd300/expanded_conv_3/expand/BatchNorm/moving_variance/Initializer/ones"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv_3/expand/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "ssd300/expanded_conv_3/expand/BatchNorm/moving_variance/read"
  op: "Identity"
  input: "ssd300/expanded_conv_3/expand/BatchNorm/moving_variance"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv_3/expand/BatchNorm/moving_variance"
      }
    }
  }
}
node {
  name: "ssd300/expanded_conv_3/expand/BatchNorm/Reshape/shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\220\000\000\000\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "ssd300/expanded_conv_3/expand/BatchNorm/Reshape"
  op: "Reshape"
  input: "ssd300/expanded_conv_3/expand/BatchNorm/beta/read"
  input: "ssd300/expanded_conv_3/expand/BatchNorm/Reshape/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "ssd300/expanded_conv_3/expand/BatchNorm/Reshape_1/shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\220\000\000\000\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "ssd300/expanded_conv_3/expand/BatchNorm/Reshape_1"
  op: "Reshape"
  input: "ssd300/expanded_conv_3/expand/BatchNorm/moving_mean/read"
  input: "ssd300/expanded_conv_3/expand/BatchNorm/Reshape_1/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "ssd300/expanded_conv_3/expand/BatchNorm/Reshape_2/shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\220\000\000\000\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "ssd300/expanded_conv_3/expand/BatchNorm/Reshape_2"
  op: "Reshape"
  input: "ssd300/expanded_conv_3/expand/BatchNorm/moving_variance/read"
  input: "ssd300/expanded_conv_3/expand/BatchNorm/Reshape_2/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "ssd300/expanded_conv_3/expand/BatchNorm/batchnorm_1/Add/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0010000000474974513
      }
    }
  }
}
node {
  name: "ssd300/expanded_conv_3/expand/BatchNorm/batchnorm_1/Add"
  op: "Add"
  input: "ssd300/expanded_conv_3/expand/BatchNorm/Reshape_2"
  input: "ssd300/expanded_conv_3/expand/BatchNorm/batchnorm_1/Add/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ssd300/expanded_conv_3/expand/BatchNorm/batchnorm_1/Rsqrt"
  op: "Rsqrt"
  input: "ssd300/expanded_conv_3/expand/BatchNorm/batchnorm_1/Add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ssd300/expanded_conv_3/expand/BatchNorm/batchnorm_1/mul"
  op: "Mul"
  input: "ssd300/expanded_conv_3/expand/layer_conv2d/Conv2D"
  input: "ssd300/expanded_conv_3/expand/BatchNorm/batchnorm_1/Rsqrt"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ssd300/expanded_conv_3/expand/BatchNorm/batchnorm_1/mul_1"
  op: "Mul"
  input: "ssd300/expanded_conv_3/expand/BatchNorm/Reshape_1"
  input: "ssd300/expanded_conv_3/expand/BatchNorm/batchnorm_1/Rsqrt"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ssd300/expanded_conv_3/expand/BatchNorm/batchnorm_1/sub"
  op: "Sub"
  input: "ssd300/expanded_conv_3/expand/BatchNorm/Reshape"
  input: "ssd300/expanded_conv_3/expand/BatchNorm/batchnorm_1/mul_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ssd300/expanded_conv_3/expand/BatchNorm/batchnorm_1/Add_1"
  op: "Add"
  input: "ssd300/expanded_conv_3/expand/BatchNorm/batchnorm_1/mul"
  input: "ssd300/expanded_conv_3/expand/BatchNorm/batchnorm_1/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ssd300/expanded_conv_3/expand/Relu6"
  op: "Relu6"
  input: "ssd300/expanded_conv_3/expand/BatchNorm/batchnorm_1/Add_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ssd300/expanded_conv_3/depthwise/depthwise_weights/Initializer/random_uniform/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv_3/depthwise/depthwise_weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\003\000\000\000\003\000\000\000\220\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "ssd300/expanded_conv_3/depthwise/depthwise_weights/Initializer/random_uniform/min"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv_3/depthwise/depthwise_weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: -0.06780634820461273
      }
    }
  }
}
node {
  name: "ssd300/expanded_conv_3/depthwise/depthwise_weights/Initializer/random_uniform/max"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv_3/depthwise/depthwise_weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.06780634820461273
      }
    }
  }
}
node {
  name: "ssd300/expanded_conv_3/depthwise/depthwise_weights/Initializer/random_uniform/RandomUniform"
  op: "RandomUniform"
  input: "ssd300/expanded_conv_3/depthwise/depthwise_weights/Initializer/random_uniform/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv_3/depthwise/depthwise_weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "ssd300/expanded_conv_3/depthwise/depthwise_weights/Initializer/random_uniform/sub"
  op: "Sub"
  input: "ssd300/expanded_conv_3/depthwise/depthwise_weights/Initializer/random_uniform/max"
  input: "ssd300/expanded_conv_3/depthwise/depthwise_weights/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv_3/depthwise/depthwise_weights"
      }
    }
  }
}
node {
  name: "ssd300/expanded_conv_3/depthwise/depthwise_weights/Initializer/random_uniform/mul"
  op: "Mul"
  input: "ssd300/expanded_conv_3/depthwise/depthwise_weights/Initializer/random_uniform/RandomUniform"
  input: "ssd300/expanded_conv_3/depthwise/depthwise_weights/Initializer/random_uniform/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv_3/depthwise/depthwise_weights"
      }
    }
  }
}
node {
  name: "ssd300/expanded_conv_3/depthwise/depthwise_weights/Initializer/random_uniform"
  op: "Add"
  input: "ssd300/expanded_conv_3/depthwise/depthwise_weights/Initializer/random_uniform/mul"
  input: "ssd300/expanded_conv_3/depthwise/depthwise_weights/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv_3/depthwise/depthwise_weights"
      }
    }
  }
}
node {
  name: "ssd300/expanded_conv_3/depthwise/depthwise_weights"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv_3/depthwise/depthwise_weights"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 3
        }
        dim {
          size: 3
        }
        dim {
          size: 144
        }
        dim {
          size: 1
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "ssd300/expanded_conv_3/depthwise/depthwise_weights/Assign"
  op: "Assign"
  input: "ssd300/expanded_conv_3/depthwise/depthwise_weights"
  input: "ssd300/expanded_conv_3/depthwise/depthwise_weights/Initializer/random_uniform"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv_3/depthwise/depthwise_weights"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "ssd300/expanded_conv_3/depthwise/depthwise_weights/read"
  op: "Identity"
  input: "ssd300/expanded_conv_3/depthwise/depthwise_weights"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv_3/depthwise/depthwise_weights"
      }
    }
  }
}
node {
  name: "ssd300/expanded_conv_3/depthwise/layer_conv2d/depthwise/Shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\003\000\000\000\003\000\000\000\220\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "ssd300/expanded_conv_3/depthwise/layer_conv2d/depthwise/dilation_rate"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "ssd300/expanded_conv_3/depthwise/layer_conv2d/depthwise"
  op: "DepthwiseConv2dNative"
  input: "ssd300/expanded_conv_3/expand/Relu6"
  input: "ssd300/expanded_conv_3/depthwise/depthwise_weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NCHW"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 2
        i: 2
      }
    }
  }
}
node {
  name: "ssd300/expanded_conv_3/depthwise/BatchNorm/beta/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv_3/depthwise/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 144
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "ssd300/expanded_conv_3/depthwise/BatchNorm/beta"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv_3/depthwise/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 144
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "ssd300/expanded_conv_3/depthwise/BatchNorm/beta/Assign"
  op: "Assign"
  input: "ssd300/expanded_conv_3/depthwise/BatchNorm/beta"
  input: "ssd300/expanded_conv_3/depthwise/BatchNorm/beta/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv_3/depthwise/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "ssd300/expanded_conv_3/depthwise/BatchNorm/beta/read"
  op: "Identity"
  input: "ssd300/expanded_conv_3/depthwise/BatchNorm/beta"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv_3/depthwise/BatchNorm/beta"
      }
    }
  }
}
node {
  name: "ssd300/expanded_conv_3/depthwise/BatchNorm/moving_mean/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv_3/depthwise/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 144
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "ssd300/expanded_conv_3/depthwise/BatchNorm/moving_mean"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv_3/depthwise/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 144
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "ssd300/expanded_conv_3/depthwise/BatchNorm/moving_mean/Assign"
  op: "Assign"
  input: "ssd300/expanded_conv_3/depthwise/BatchNorm/moving_mean"
  input: "ssd300/expanded_conv_3/depthwise/BatchNorm/moving_mean/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv_3/depthwise/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "ssd300/expanded_conv_3/depthwise/BatchNorm/moving_mean/read"
  op: "Identity"
  input: "ssd300/expanded_conv_3/depthwise/BatchNorm/moving_mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv_3/depthwise/BatchNorm/moving_mean"
      }
    }
  }
}
node {
  name: "ssd300/expanded_conv_3/depthwise/BatchNorm/moving_variance/Initializer/ones"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv_3/depthwise/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 144
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "ssd300/expanded_conv_3/depthwise/BatchNorm/moving_variance"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv_3/depthwise/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 144
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "ssd300/expanded_conv_3/depthwise/BatchNorm/moving_variance/Assign"
  op: "Assign"
  input: "ssd300/expanded_conv_3/depthwise/BatchNorm/moving_variance"
  input: "ssd300/expanded_conv_3/depthwise/BatchNorm/moving_variance/Initializer/ones"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv_3/depthwise/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "ssd300/expanded_conv_3/depthwise/BatchNorm/moving_variance/read"
  op: "Identity"
  input: "ssd300/expanded_conv_3/depthwise/BatchNorm/moving_variance"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv_3/depthwise/BatchNorm/moving_variance"
      }
    }
  }
}
node {
  name: "ssd300/expanded_conv_3/depthwise/BatchNorm/Reshape/shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\220\000\000\000\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "ssd300/expanded_conv_3/depthwise/BatchNorm/Reshape"
  op: "Reshape"
  input: "ssd300/expanded_conv_3/depthwise/BatchNorm/beta/read"
  input: "ssd300/expanded_conv_3/depthwise/BatchNorm/Reshape/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "ssd300/expanded_conv_3/depthwise/BatchNorm/Reshape_1/shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\220\000\000\000\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "ssd300/expanded_conv_3/depthwise/BatchNorm/Reshape_1"
  op: "Reshape"
  input: "ssd300/expanded_conv_3/depthwise/BatchNorm/moving_mean/read"
  input: "ssd300/expanded_conv_3/depthwise/BatchNorm/Reshape_1/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "ssd300/expanded_conv_3/depthwise/BatchNorm/Reshape_2/shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\220\000\000\000\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "ssd300/expanded_conv_3/depthwise/BatchNorm/Reshape_2"
  op: "Reshape"
  input: "ssd300/expanded_conv_3/depthwise/BatchNorm/moving_variance/read"
  input: "ssd300/expanded_conv_3/depthwise/BatchNorm/Reshape_2/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "ssd300/expanded_conv_3/depthwise/BatchNorm/batchnorm_1/Add/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0010000000474974513
      }
    }
  }
}
node {
  name: "ssd300/expanded_conv_3/depthwise/BatchNorm/batchnorm_1/Add"
  op: "Add"
  input: "ssd300/expanded_conv_3/depthwise/BatchNorm/Reshape_2"
  input: "ssd300/expanded_conv_3/depthwise/BatchNorm/batchnorm_1/Add/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ssd300/expanded_conv_3/depthwise/BatchNorm/batchnorm_1/Rsqrt"
  op: "Rsqrt"
  input: "ssd300/expanded_conv_3/depthwise/BatchNorm/batchnorm_1/Add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ssd300/expanded_conv_3/depthwise/BatchNorm/batchnorm_1/mul"
  op: "Mul"
  input: "ssd300/expanded_conv_3/depthwise/layer_conv2d/depthwise"
  input: "ssd300/expanded_conv_3/depthwise/BatchNorm/batchnorm_1/Rsqrt"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ssd300/expanded_conv_3/depthwise/BatchNorm/batchnorm_1/mul_1"
  op: "Mul"
  input: "ssd300/expanded_conv_3/depthwise/BatchNorm/Reshape_1"
  input: "ssd300/expanded_conv_3/depthwise/BatchNorm/batchnorm_1/Rsqrt"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ssd300/expanded_conv_3/depthwise/BatchNorm/batchnorm_1/sub"
  op: "Sub"
  input: "ssd300/expanded_conv_3/depthwise/BatchNorm/Reshape"
  input: "ssd300/expanded_conv_3/depthwise/BatchNorm/batchnorm_1/mul_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ssd300/expanded_conv_3/depthwise/BatchNorm/batchnorm_1/Add_1"
  op: "Add"
  input: "ssd300/expanded_conv_3/depthwise/BatchNorm/batchnorm_1/mul"
  input: "ssd300/expanded_conv_3/depthwise/BatchNorm/batchnorm_1/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ssd300/expanded_conv_3/depthwise/Relu6"
  op: "Relu6"
  input: "ssd300/expanded_conv_3/depthwise/BatchNorm/batchnorm_1/Add_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ssd300/expanded_conv_3/project/weights/Initializer/random_uniform/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv_3/project/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000\220\000\000\000 \000\000\000"
      }
    }
  }
}
node {
  name: "ssd300/expanded_conv_3/project/weights/Initializer/random_uniform/min"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv_3/project/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: -0.18463723361492157
      }
    }
  }
}
node {
  name: "ssd300/expanded_conv_3/project/weights/Initializer/random_uniform/max"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv_3/project/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.18463723361492157
      }
    }
  }
}
node {
  name: "ssd300/expanded_conv_3/project/weights/Initializer/random_uniform/RandomUniform"
  op: "RandomUniform"
  input: "ssd300/expanded_conv_3/project/weights/Initializer/random_uniform/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv_3/project/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "ssd300/expanded_conv_3/project/weights/Initializer/random_uniform/sub"
  op: "Sub"
  input: "ssd300/expanded_conv_3/project/weights/Initializer/random_uniform/max"
  input: "ssd300/expanded_conv_3/project/weights/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv_3/project/weights"
      }
    }
  }
}
node {
  name: "ssd300/expanded_conv_3/project/weights/Initializer/random_uniform/mul"
  op: "Mul"
  input: "ssd300/expanded_conv_3/project/weights/Initializer/random_uniform/RandomUniform"
  input: "ssd300/expanded_conv_3/project/weights/Initializer/random_uniform/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv_3/project/weights"
      }
    }
  }
}
node {
  name: "ssd300/expanded_conv_3/project/weights/Initializer/random_uniform"
  op: "Add"
  input: "ssd300/expanded_conv_3/project/weights/Initializer/random_uniform/mul"
  input: "ssd300/expanded_conv_3/project/weights/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv_3/project/weights"
      }
    }
  }
}
node {
  name: "ssd300/expanded_conv_3/project/weights"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv_3/project/weights"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
        dim {
          size: 1
        }
        dim {
          size: 144
        }
        dim {
          size: 32
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "ssd300/expanded_conv_3/project/weights/Assign"
  op: "Assign"
  input: "ssd300/expanded_conv_3/project/weights"
  input: "ssd300/expanded_conv_3/project/weights/Initializer/random_uniform"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv_3/project/weights"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "ssd300/expanded_conv_3/project/weights/read"
  op: "Identity"
  input: "ssd300/expanded_conv_3/project/weights"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv_3/project/weights"
      }
    }
  }
}
node {
  name: "ssd300/expanded_conv_3/project/layer_conv2d/Conv2D"
  op: "Conv2D"
  input: "ssd300/expanded_conv_3/depthwise/Relu6"
  input: "ssd300/expanded_conv_3/project/weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NCHW"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "explicit_paddings"
    value {
      list {
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "ssd300/expanded_conv_3/project/BatchNorm/beta/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv_3/project/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 32
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "ssd300/expanded_conv_3/project/BatchNorm/beta"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv_3/project/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 32
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "ssd300/expanded_conv_3/project/BatchNorm/beta/Assign"
  op: "Assign"
  input: "ssd300/expanded_conv_3/project/BatchNorm/beta"
  input: "ssd300/expanded_conv_3/project/BatchNorm/beta/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv_3/project/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "ssd300/expanded_conv_3/project/BatchNorm/beta/read"
  op: "Identity"
  input: "ssd300/expanded_conv_3/project/BatchNorm/beta"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv_3/project/BatchNorm/beta"
      }
    }
  }
}
node {
  name: "ssd300/expanded_conv_3/project/BatchNorm/moving_mean/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv_3/project/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 32
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "ssd300/expanded_conv_3/project/BatchNorm/moving_mean"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv_3/project/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 32
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "ssd300/expanded_conv_3/project/BatchNorm/moving_mean/Assign"
  op: "Assign"
  input: "ssd300/expanded_conv_3/project/BatchNorm/moving_mean"
  input: "ssd300/expanded_conv_3/project/BatchNorm/moving_mean/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv_3/project/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "ssd300/expanded_conv_3/project/BatchNorm/moving_mean/read"
  op: "Identity"
  input: "ssd300/expanded_conv_3/project/BatchNorm/moving_mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv_3/project/BatchNorm/moving_mean"
      }
    }
  }
}
node {
  name: "ssd300/expanded_conv_3/project/BatchNorm/moving_variance/Initializer/ones"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv_3/project/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 32
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "ssd300/expanded_conv_3/project/BatchNorm/moving_variance"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv_3/project/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 32
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "ssd300/expanded_conv_3/project/BatchNorm/moving_variance/Assign"
  op: "Assign"
  input: "ssd300/expanded_conv_3/project/BatchNorm/moving_variance"
  input: "ssd300/expanded_conv_3/project/BatchNorm/moving_variance/Initializer/ones"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv_3/project/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "ssd300/expanded_conv_3/project/BatchNorm/moving_variance/read"
  op: "Identity"
  input: "ssd300/expanded_conv_3/project/BatchNorm/moving_variance"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv_3/project/BatchNorm/moving_variance"
      }
    }
  }
}
node {
  name: "ssd300/expanded_conv_3/project/BatchNorm/Reshape/shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000 \000\000\000\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "ssd300/expanded_conv_3/project/BatchNorm/Reshape"
  op: "Reshape"
  input: "ssd300/expanded_conv_3/project/BatchNorm/beta/read"
  input: "ssd300/expanded_conv_3/project/BatchNorm/Reshape/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "ssd300/expanded_conv_3/project/BatchNorm/Reshape_1/shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000 \000\000\000\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "ssd300/expanded_conv_3/project/BatchNorm/Reshape_1"
  op: "Reshape"
  input: "ssd300/expanded_conv_3/project/BatchNorm/moving_mean/read"
  input: "ssd300/expanded_conv_3/project/BatchNorm/Reshape_1/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "ssd300/expanded_conv_3/project/BatchNorm/Reshape_2/shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000 \000\000\000\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "ssd300/expanded_conv_3/project/BatchNorm/Reshape_2"
  op: "Reshape"
  input: "ssd300/expanded_conv_3/project/BatchNorm/moving_variance/read"
  input: "ssd300/expanded_conv_3/project/BatchNorm/Reshape_2/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "ssd300/expanded_conv_3/project/BatchNorm/batchnorm_1/Add/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0010000000474974513
      }
    }
  }
}
node {
  name: "ssd300/expanded_conv_3/project/BatchNorm/batchnorm_1/Add"
  op: "Add"
  input: "ssd300/expanded_conv_3/project/BatchNorm/Reshape_2"
  input: "ssd300/expanded_conv_3/project/BatchNorm/batchnorm_1/Add/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ssd300/expanded_conv_3/project/BatchNorm/batchnorm_1/Rsqrt"
  op: "Rsqrt"
  input: "ssd300/expanded_conv_3/project/BatchNorm/batchnorm_1/Add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ssd300/expanded_conv_3/project/BatchNorm/batchnorm_1/mul"
  op: "Mul"
  input: "ssd300/expanded_conv_3/project/layer_conv2d/Conv2D"
  input: "ssd300/expanded_conv_3/project/BatchNorm/batchnorm_1/Rsqrt"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ssd300/expanded_conv_3/project/BatchNorm/batchnorm_1/mul_1"
  op: "Mul"
  input: "ssd300/expanded_conv_3/project/BatchNorm/Reshape_1"
  input: "ssd300/expanded_conv_3/project/BatchNorm/batchnorm_1/Rsqrt"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ssd300/expanded_conv_3/project/BatchNorm/batchnorm_1/sub"
  op: "Sub"
  input: "ssd300/expanded_conv_3/project/BatchNorm/Reshape"
  input: "ssd300/expanded_conv_3/project/BatchNorm/batchnorm_1/mul_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ssd300/expanded_conv_3/project/BatchNorm/batchnorm_1/Add_1"
  op: "Add"
  input: "ssd300/expanded_conv_3/project/BatchNorm/batchnorm_1/mul"
  input: "ssd300/expanded_conv_3/project/BatchNorm/batchnorm_1/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ssd300/expanded_conv_4/expand/weights/Initializer/random_uniform/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv_4/expand/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000 \000\000\000\300\000\000\000"
      }
    }
  }
}
node {
  name: "ssd300/expanded_conv_4/expand/weights/Initializer/random_uniform/min"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv_4/expand/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: -0.16366341710090637
      }
    }
  }
}
node {
  name: "ssd300/expanded_conv_4/expand/weights/Initializer/random_uniform/max"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv_4/expand/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.16366341710090637
      }
    }
  }
}
node {
  name: "ssd300/expanded_conv_4/expand/weights/Initializer/random_uniform/RandomUniform"
  op: "RandomUniform"
  input: "ssd300/expanded_conv_4/expand/weights/Initializer/random_uniform/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv_4/expand/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "ssd300/expanded_conv_4/expand/weights/Initializer/random_uniform/sub"
  op: "Sub"
  input: "ssd300/expanded_conv_4/expand/weights/Initializer/random_uniform/max"
  input: "ssd300/expanded_conv_4/expand/weights/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv_4/expand/weights"
      }
    }
  }
}
node {
  name: "ssd300/expanded_conv_4/expand/weights/Initializer/random_uniform/mul"
  op: "Mul"
  input: "ssd300/expanded_conv_4/expand/weights/Initializer/random_uniform/RandomUniform"
  input: "ssd300/expanded_conv_4/expand/weights/Initializer/random_uniform/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv_4/expand/weights"
      }
    }
  }
}
node {
  name: "ssd300/expanded_conv_4/expand/weights/Initializer/random_uniform"
  op: "Add"
  input: "ssd300/expanded_conv_4/expand/weights/Initializer/random_uniform/mul"
  input: "ssd300/expanded_conv_4/expand/weights/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv_4/expand/weights"
      }
    }
  }
}
node {
  name: "ssd300/expanded_conv_4/expand/weights"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv_4/expand/weights"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
        dim {
          size: 1
        }
        dim {
          size: 32
        }
        dim {
          size: 192
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "ssd300/expanded_conv_4/expand/weights/Assign"
  op: "Assign"
  input: "ssd300/expanded_conv_4/expand/weights"
  input: "ssd300/expanded_conv_4/expand/weights/Initializer/random_uniform"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv_4/expand/weights"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "ssd300/expanded_conv_4/expand/weights/read"
  op: "Identity"
  input: "ssd300/expanded_conv_4/expand/weights"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv_4/expand/weights"
      }
    }
  }
}
node {
  name: "ssd300/expanded_conv_4/expand/layer_conv2d/Conv2D"
  op: "Conv2D"
  input: "ssd300/expanded_conv_3/project/BatchNorm/batchnorm_1/Add_1"
  input: "ssd300/expanded_conv_4/expand/weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NCHW"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "explicit_paddings"
    value {
      list {
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "ssd300/expanded_conv_4/expand/BatchNorm/beta/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv_4/expand/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 192
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "ssd300/expanded_conv_4/expand/BatchNorm/beta"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv_4/expand/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 192
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "ssd300/expanded_conv_4/expand/BatchNorm/beta/Assign"
  op: "Assign"
  input: "ssd300/expanded_conv_4/expand/BatchNorm/beta"
  input: "ssd300/expanded_conv_4/expand/BatchNorm/beta/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv_4/expand/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "ssd300/expanded_conv_4/expand/BatchNorm/beta/read"
  op: "Identity"
  input: "ssd300/expanded_conv_4/expand/BatchNorm/beta"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv_4/expand/BatchNorm/beta"
      }
    }
  }
}
node {
  name: "ssd300/expanded_conv_4/expand/BatchNorm/moving_mean/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv_4/expand/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 192
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "ssd300/expanded_conv_4/expand/BatchNorm/moving_mean"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv_4/expand/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 192
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "ssd300/expanded_conv_4/expand/BatchNorm/moving_mean/Assign"
  op: "Assign"
  input: "ssd300/expanded_conv_4/expand/BatchNorm/moving_mean"
  input: "ssd300/expanded_conv_4/expand/BatchNorm/moving_mean/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv_4/expand/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "ssd300/expanded_conv_4/expand/BatchNorm/moving_mean/read"
  op: "Identity"
  input: "ssd300/expanded_conv_4/expand/BatchNorm/moving_mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv_4/expand/BatchNorm/moving_mean"
      }
    }
  }
}
node {
  name: "ssd300/expanded_conv_4/expand/BatchNorm/moving_variance/Initializer/ones"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv_4/expand/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 192
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "ssd300/expanded_conv_4/expand/BatchNorm/moving_variance"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv_4/expand/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 192
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "ssd300/expanded_conv_4/expand/BatchNorm/moving_variance/Assign"
  op: "Assign"
  input: "ssd300/expanded_conv_4/expand/BatchNorm/moving_variance"
  input: "ssd300/expanded_conv_4/expand/BatchNorm/moving_variance/Initializer/ones"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv_4/expand/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "ssd300/expanded_conv_4/expand/BatchNorm/moving_variance/read"
  op: "Identity"
  input: "ssd300/expanded_conv_4/expand/BatchNorm/moving_variance"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv_4/expand/BatchNorm/moving_variance"
      }
    }
  }
}
node {
  name: "ssd300/expanded_conv_4/expand/BatchNorm/Reshape/shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\300\000\000\000\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "ssd300/expanded_conv_4/expand/BatchNorm/Reshape"
  op: "Reshape"
  input: "ssd300/expanded_conv_4/expand/BatchNorm/beta/read"
  input: "ssd300/expanded_conv_4/expand/BatchNorm/Reshape/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "ssd300/expanded_conv_4/expand/BatchNorm/Reshape_1/shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\300\000\000\000\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "ssd300/expanded_conv_4/expand/BatchNorm/Reshape_1"
  op: "Reshape"
  input: "ssd300/expanded_conv_4/expand/BatchNorm/moving_mean/read"
  input: "ssd300/expanded_conv_4/expand/BatchNorm/Reshape_1/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "ssd300/expanded_conv_4/expand/BatchNorm/Reshape_2/shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\300\000\000\000\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "ssd300/expanded_conv_4/expand/BatchNorm/Reshape_2"
  op: "Reshape"
  input: "ssd300/expanded_conv_4/expand/BatchNorm/moving_variance/read"
  input: "ssd300/expanded_conv_4/expand/BatchNorm/Reshape_2/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "ssd300/expanded_conv_4/expand/BatchNorm/batchnorm_1/Add/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0010000000474974513
      }
    }
  }
}
node {
  name: "ssd300/expanded_conv_4/expand/BatchNorm/batchnorm_1/Add"
  op: "Add"
  input: "ssd300/expanded_conv_4/expand/BatchNorm/Reshape_2"
  input: "ssd300/expanded_conv_4/expand/BatchNorm/batchnorm_1/Add/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ssd300/expanded_conv_4/expand/BatchNorm/batchnorm_1/Rsqrt"
  op: "Rsqrt"
  input: "ssd300/expanded_conv_4/expand/BatchNorm/batchnorm_1/Add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ssd300/expanded_conv_4/expand/BatchNorm/batchnorm_1/mul"
  op: "Mul"
  input: "ssd300/expanded_conv_4/expand/layer_conv2d/Conv2D"
  input: "ssd300/expanded_conv_4/expand/BatchNorm/batchnorm_1/Rsqrt"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ssd300/expanded_conv_4/expand/BatchNorm/batchnorm_1/mul_1"
  op: "Mul"
  input: "ssd300/expanded_conv_4/expand/BatchNorm/Reshape_1"
  input: "ssd300/expanded_conv_4/expand/BatchNorm/batchnorm_1/Rsqrt"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ssd300/expanded_conv_4/expand/BatchNorm/batchnorm_1/sub"
  op: "Sub"
  input: "ssd300/expanded_conv_4/expand/BatchNorm/Reshape"
  input: "ssd300/expanded_conv_4/expand/BatchNorm/batchnorm_1/mul_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ssd300/expanded_conv_4/expand/BatchNorm/batchnorm_1/Add_1"
  op: "Add"
  input: "ssd300/expanded_conv_4/expand/BatchNorm/batchnorm_1/mul"
  input: "ssd300/expanded_conv_4/expand/BatchNorm/batchnorm_1/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ssd300/expanded_conv_4/expand/Relu6"
  op: "Relu6"
  input: "ssd300/expanded_conv_4/expand/BatchNorm/batchnorm_1/Add_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ssd300/expanded_conv_4/depthwise/depthwise_weights/Initializer/random_uniform/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv_4/depthwise/depthwise_weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\003\000\000\000\003\000\000\000\300\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "ssd300/expanded_conv_4/depthwise/depthwise_weights/Initializer/random_uniform/min"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv_4/depthwise/depthwise_weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: -0.05877270922064781
      }
    }
  }
}
node {
  name: "ssd300/expanded_conv_4/depthwise/depthwise_weights/Initializer/random_uniform/max"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv_4/depthwise/depthwise_weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.05877270922064781
      }
    }
  }
}
node {
  name: "ssd300/expanded_conv_4/depthwise/depthwise_weights/Initializer/random_uniform/RandomUniform"
  op: "RandomUniform"
  input: "ssd300/expanded_conv_4/depthwise/depthwise_weights/Initializer/random_uniform/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv_4/depthwise/depthwise_weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "ssd300/expanded_conv_4/depthwise/depthwise_weights/Initializer/random_uniform/sub"
  op: "Sub"
  input: "ssd300/expanded_conv_4/depthwise/depthwise_weights/Initializer/random_uniform/max"
  input: "ssd300/expanded_conv_4/depthwise/depthwise_weights/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv_4/depthwise/depthwise_weights"
      }
    }
  }
}
node {
  name: "ssd300/expanded_conv_4/depthwise/depthwise_weights/Initializer/random_uniform/mul"
  op: "Mul"
  input: "ssd300/expanded_conv_4/depthwise/depthwise_weights/Initializer/random_uniform/RandomUniform"
  input: "ssd300/expanded_conv_4/depthwise/depthwise_weights/Initializer/random_uniform/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv_4/depthwise/depthwise_weights"
      }
    }
  }
}
node {
  name: "ssd300/expanded_conv_4/depthwise/depthwise_weights/Initializer/random_uniform"
  op: "Add"
  input: "ssd300/expanded_conv_4/depthwise/depthwise_weights/Initializer/random_uniform/mul"
  input: "ssd300/expanded_conv_4/depthwise/depthwise_weights/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv_4/depthwise/depthwise_weights"
      }
    }
  }
}
node {
  name: "ssd300/expanded_conv_4/depthwise/depthwise_weights"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv_4/depthwise/depthwise_weights"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 3
        }
        dim {
          size: 3
        }
        dim {
          size: 192
        }
        dim {
          size: 1
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "ssd300/expanded_conv_4/depthwise/depthwise_weights/Assign"
  op: "Assign"
  input: "ssd300/expanded_conv_4/depthwise/depthwise_weights"
  input: "ssd300/expanded_conv_4/depthwise/depthwise_weights/Initializer/random_uniform"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv_4/depthwise/depthwise_weights"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "ssd300/expanded_conv_4/depthwise/depthwise_weights/read"
  op: "Identity"
  input: "ssd300/expanded_conv_4/depthwise/depthwise_weights"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv_4/depthwise/depthwise_weights"
      }
    }
  }
}
node {
  name: "ssd300/expanded_conv_4/depthwise/layer_conv2d/depthwise/Shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\003\000\000\000\003\000\000\000\300\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "ssd300/expanded_conv_4/depthwise/layer_conv2d/depthwise/dilation_rate"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "ssd300/expanded_conv_4/depthwise/layer_conv2d/depthwise"
  op: "DepthwiseConv2dNative"
  input: "ssd300/expanded_conv_4/expand/Relu6"
  input: "ssd300/expanded_conv_4/depthwise/depthwise_weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NCHW"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
}
node {
  name: "ssd300/expanded_conv_4/depthwise/BatchNorm/beta/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv_4/depthwise/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 192
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "ssd300/expanded_conv_4/depthwise/BatchNorm/beta"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv_4/depthwise/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 192
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "ssd300/expanded_conv_4/depthwise/BatchNorm/beta/Assign"
  op: "Assign"
  input: "ssd300/expanded_conv_4/depthwise/BatchNorm/beta"
  input: "ssd300/expanded_conv_4/depthwise/BatchNorm/beta/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv_4/depthwise/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "ssd300/expanded_conv_4/depthwise/BatchNorm/beta/read"
  op: "Identity"
  input: "ssd300/expanded_conv_4/depthwise/BatchNorm/beta"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv_4/depthwise/BatchNorm/beta"
      }
    }
  }
}
node {
  name: "ssd300/expanded_conv_4/depthwise/BatchNorm/moving_mean/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv_4/depthwise/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 192
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "ssd300/expanded_conv_4/depthwise/BatchNorm/moving_mean"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv_4/depthwise/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 192
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "ssd300/expanded_conv_4/depthwise/BatchNorm/moving_mean/Assign"
  op: "Assign"
  input: "ssd300/expanded_conv_4/depthwise/BatchNorm/moving_mean"
  input: "ssd300/expanded_conv_4/depthwise/BatchNorm/moving_mean/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv_4/depthwise/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "ssd300/expanded_conv_4/depthwise/BatchNorm/moving_mean/read"
  op: "Identity"
  input: "ssd300/expanded_conv_4/depthwise/BatchNorm/moving_mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv_4/depthwise/BatchNorm/moving_mean"
      }
    }
  }
}
node {
  name: "ssd300/expanded_conv_4/depthwise/BatchNorm/moving_variance/Initializer/ones"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv_4/depthwise/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 192
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "ssd300/expanded_conv_4/depthwise/BatchNorm/moving_variance"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv_4/depthwise/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 192
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "ssd300/expanded_conv_4/depthwise/BatchNorm/moving_variance/Assign"
  op: "Assign"
  input: "ssd300/expanded_conv_4/depthwise/BatchNorm/moving_variance"
  input: "ssd300/expanded_conv_4/depthwise/BatchNorm/moving_variance/Initializer/ones"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv_4/depthwise/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "ssd300/expanded_conv_4/depthwise/BatchNorm/moving_variance/read"
  op: "Identity"
  input: "ssd300/expanded_conv_4/depthwise/BatchNorm/moving_variance"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv_4/depthwise/BatchNorm/moving_variance"
      }
    }
  }
}
node {
  name: "ssd300/expanded_conv_4/depthwise/BatchNorm/Reshape/shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\300\000\000\000\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "ssd300/expanded_conv_4/depthwise/BatchNorm/Reshape"
  op: "Reshape"
  input: "ssd300/expanded_conv_4/depthwise/BatchNorm/beta/read"
  input: "ssd300/expanded_conv_4/depthwise/BatchNorm/Reshape/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "ssd300/expanded_conv_4/depthwise/BatchNorm/Reshape_1/shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\300\000\000\000\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "ssd300/expanded_conv_4/depthwise/BatchNorm/Reshape_1"
  op: "Reshape"
  input: "ssd300/expanded_conv_4/depthwise/BatchNorm/moving_mean/read"
  input: "ssd300/expanded_conv_4/depthwise/BatchNorm/Reshape_1/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "ssd300/expanded_conv_4/depthwise/BatchNorm/Reshape_2/shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\300\000\000\000\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "ssd300/expanded_conv_4/depthwise/BatchNorm/Reshape_2"
  op: "Reshape"
  input: "ssd300/expanded_conv_4/depthwise/BatchNorm/moving_variance/read"
  input: "ssd300/expanded_conv_4/depthwise/BatchNorm/Reshape_2/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "ssd300/expanded_conv_4/depthwise/BatchNorm/batchnorm_1/Add/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0010000000474974513
      }
    }
  }
}
node {
  name: "ssd300/expanded_conv_4/depthwise/BatchNorm/batchnorm_1/Add"
  op: "Add"
  input: "ssd300/expanded_conv_4/depthwise/BatchNorm/Reshape_2"
  input: "ssd300/expanded_conv_4/depthwise/BatchNorm/batchnorm_1/Add/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ssd300/expanded_conv_4/depthwise/BatchNorm/batchnorm_1/Rsqrt"
  op: "Rsqrt"
  input: "ssd300/expanded_conv_4/depthwise/BatchNorm/batchnorm_1/Add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ssd300/expanded_conv_4/depthwise/BatchNorm/batchnorm_1/mul"
  op: "Mul"
  input: "ssd300/expanded_conv_4/depthwise/layer_conv2d/depthwise"
  input: "ssd300/expanded_conv_4/depthwise/BatchNorm/batchnorm_1/Rsqrt"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ssd300/expanded_conv_4/depthwise/BatchNorm/batchnorm_1/mul_1"
  op: "Mul"
  input: "ssd300/expanded_conv_4/depthwise/BatchNorm/Reshape_1"
  input: "ssd300/expanded_conv_4/depthwise/BatchNorm/batchnorm_1/Rsqrt"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ssd300/expanded_conv_4/depthwise/BatchNorm/batchnorm_1/sub"
  op: "Sub"
  input: "ssd300/expanded_conv_4/depthwise/BatchNorm/Reshape"
  input: "ssd300/expanded_conv_4/depthwise/BatchNorm/batchnorm_1/mul_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ssd300/expanded_conv_4/depthwise/BatchNorm/batchnorm_1/Add_1"
  op: "Add"
  input: "ssd300/expanded_conv_4/depthwise/BatchNorm/batchnorm_1/mul"
  input: "ssd300/expanded_conv_4/depthwise/BatchNorm/batchnorm_1/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ssd300/expanded_conv_4/depthwise/Relu6"
  op: "Relu6"
  input: "ssd300/expanded_conv_4/depthwise/BatchNorm/batchnorm_1/Add_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ssd300/expanded_conv_4/project/weights/Initializer/random_uniform/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv_4/project/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000\300\000\000\000 \000\000\000"
      }
    }
  }
}
node {
  name: "ssd300/expanded_conv_4/project/weights/Initializer/random_uniform/min"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv_4/project/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: -0.16366341710090637
      }
    }
  }
}
node {
  name: "ssd300/expanded_conv_4/project/weights/Initializer/random_uniform/max"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv_4/project/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.16366341710090637
      }
    }
  }
}
node {
  name: "ssd300/expanded_conv_4/project/weights/Initializer/random_uniform/RandomUniform"
  op: "RandomUniform"
  input: "ssd300/expanded_conv_4/project/weights/Initializer/random_uniform/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv_4/project/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "ssd300/expanded_conv_4/project/weights/Initializer/random_uniform/sub"
  op: "Sub"
  input: "ssd300/expanded_conv_4/project/weights/Initializer/random_uniform/max"
  input: "ssd300/expanded_conv_4/project/weights/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv_4/project/weights"
      }
    }
  }
}
node {
  name: "ssd300/expanded_conv_4/project/weights/Initializer/random_uniform/mul"
  op: "Mul"
  input: "ssd300/expanded_conv_4/project/weights/Initializer/random_uniform/RandomUniform"
  input: "ssd300/expanded_conv_4/project/weights/Initializer/random_uniform/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv_4/project/weights"
      }
    }
  }
}
node {
  name: "ssd300/expanded_conv_4/project/weights/Initializer/random_uniform"
  op: "Add"
  input: "ssd300/expanded_conv_4/project/weights/Initializer/random_uniform/mul"
  input: "ssd300/expanded_conv_4/project/weights/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv_4/project/weights"
      }
    }
  }
}
node {
  name: "ssd300/expanded_conv_4/project/weights"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv_4/project/weights"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
        dim {
          size: 1
        }
        dim {
          size: 192
        }
        dim {
          size: 32
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "ssd300/expanded_conv_4/project/weights/Assign"
  op: "Assign"
  input: "ssd300/expanded_conv_4/project/weights"
  input: "ssd300/expanded_conv_4/project/weights/Initializer/random_uniform"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv_4/project/weights"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "ssd300/expanded_conv_4/project/weights/read"
  op: "Identity"
  input: "ssd300/expanded_conv_4/project/weights"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv_4/project/weights"
      }
    }
  }
}
node {
  name: "ssd300/expanded_conv_4/project/layer_conv2d/Conv2D"
  op: "Conv2D"
  input: "ssd300/expanded_conv_4/depthwise/Relu6"
  input: "ssd300/expanded_conv_4/project/weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NCHW"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "explicit_paddings"
    value {
      list {
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "ssd300/expanded_conv_4/project/BatchNorm/beta/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv_4/project/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 32
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "ssd300/expanded_conv_4/project/BatchNorm/beta"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv_4/project/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 32
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "ssd300/expanded_conv_4/project/BatchNorm/beta/Assign"
  op: "Assign"
  input: "ssd300/expanded_conv_4/project/BatchNorm/beta"
  input: "ssd300/expanded_conv_4/project/BatchNorm/beta/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv_4/project/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "ssd300/expanded_conv_4/project/BatchNorm/beta/read"
  op: "Identity"
  input: "ssd300/expanded_conv_4/project/BatchNorm/beta"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv_4/project/BatchNorm/beta"
      }
    }
  }
}
node {
  name: "ssd300/expanded_conv_4/project/BatchNorm/moving_mean/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv_4/project/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 32
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "ssd300/expanded_conv_4/project/BatchNorm/moving_mean"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv_4/project/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 32
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "ssd300/expanded_conv_4/project/BatchNorm/moving_mean/Assign"
  op: "Assign"
  input: "ssd300/expanded_conv_4/project/BatchNorm/moving_mean"
  input: "ssd300/expanded_conv_4/project/BatchNorm/moving_mean/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv_4/project/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "ssd300/expanded_conv_4/project/BatchNorm/moving_mean/read"
  op: "Identity"
  input: "ssd300/expanded_conv_4/project/BatchNorm/moving_mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv_4/project/BatchNorm/moving_mean"
      }
    }
  }
}
node {
  name: "ssd300/expanded_conv_4/project/BatchNorm/moving_variance/Initializer/ones"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv_4/project/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 32
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "ssd300/expanded_conv_4/project/BatchNorm/moving_variance"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv_4/project/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 32
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "ssd300/expanded_conv_4/project/BatchNorm/moving_variance/Assign"
  op: "Assign"
  input: "ssd300/expanded_conv_4/project/BatchNorm/moving_variance"
  input: "ssd300/expanded_conv_4/project/BatchNorm/moving_variance/Initializer/ones"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv_4/project/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "ssd300/expanded_conv_4/project/BatchNorm/moving_variance/read"
  op: "Identity"
  input: "ssd300/expanded_conv_4/project/BatchNorm/moving_variance"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv_4/project/BatchNorm/moving_variance"
      }
    }
  }
}
node {
  name: "ssd300/expanded_conv_4/project/BatchNorm/Reshape/shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000 \000\000\000\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "ssd300/expanded_conv_4/project/BatchNorm/Reshape"
  op: "Reshape"
  input: "ssd300/expanded_conv_4/project/BatchNorm/beta/read"
  input: "ssd300/expanded_conv_4/project/BatchNorm/Reshape/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "ssd300/expanded_conv_4/project/BatchNorm/Reshape_1/shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000 \000\000\000\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "ssd300/expanded_conv_4/project/BatchNorm/Reshape_1"
  op: "Reshape"
  input: "ssd300/expanded_conv_4/project/BatchNorm/moving_mean/read"
  input: "ssd300/expanded_conv_4/project/BatchNorm/Reshape_1/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "ssd300/expanded_conv_4/project/BatchNorm/Reshape_2/shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000 \000\000\000\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "ssd300/expanded_conv_4/project/BatchNorm/Reshape_2"
  op: "Reshape"
  input: "ssd300/expanded_conv_4/project/BatchNorm/moving_variance/read"
  input: "ssd300/expanded_conv_4/project/BatchNorm/Reshape_2/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "ssd300/expanded_conv_4/project/BatchNorm/batchnorm_1/Add/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0010000000474974513
      }
    }
  }
}
node {
  name: "ssd300/expanded_conv_4/project/BatchNorm/batchnorm_1/Add"
  op: "Add"
  input: "ssd300/expanded_conv_4/project/BatchNorm/Reshape_2"
  input: "ssd300/expanded_conv_4/project/BatchNorm/batchnorm_1/Add/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ssd300/expanded_conv_4/project/BatchNorm/batchnorm_1/Rsqrt"
  op: "Rsqrt"
  input: "ssd300/expanded_conv_4/project/BatchNorm/batchnorm_1/Add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ssd300/expanded_conv_4/project/BatchNorm/batchnorm_1/mul"
  op: "Mul"
  input: "ssd300/expanded_conv_4/project/layer_conv2d/Conv2D"
  input: "ssd300/expanded_conv_4/project/BatchNorm/batchnorm_1/Rsqrt"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ssd300/expanded_conv_4/project/BatchNorm/batchnorm_1/mul_1"
  op: "Mul"
  input: "ssd300/expanded_conv_4/project/BatchNorm/Reshape_1"
  input: "ssd300/expanded_conv_4/project/BatchNorm/batchnorm_1/Rsqrt"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ssd300/expanded_conv_4/project/BatchNorm/batchnorm_1/sub"
  op: "Sub"
  input: "ssd300/expanded_conv_4/project/BatchNorm/Reshape"
  input: "ssd300/expanded_conv_4/project/BatchNorm/batchnorm_1/mul_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ssd300/expanded_conv_4/project/BatchNorm/batchnorm_1/Add_1"
  op: "Add"
  input: "ssd300/expanded_conv_4/project/BatchNorm/batchnorm_1/mul"
  input: "ssd300/expanded_conv_4/project/BatchNorm/batchnorm_1/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ssd300/expanded_conv_4/Add"
  op: "Add"
  input: "ssd300/expanded_conv_4/project/BatchNorm/batchnorm_1/Add_1"
  input: "ssd300/expanded_conv_3/project/BatchNorm/batchnorm_1/Add_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ssd300/expanded_conv_5/expand/weights/Initializer/random_uniform/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv_5/expand/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000 \000\000\000\300\000\000\000"
      }
    }
  }
}
node {
  name: "ssd300/expanded_conv_5/expand/weights/Initializer/random_uniform/min"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv_5/expand/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: -0.16366341710090637
      }
    }
  }
}
node {
  name: "ssd300/expanded_conv_5/expand/weights/Initializer/random_uniform/max"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv_5/expand/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.16366341710090637
      }
    }
  }
}
node {
  name: "ssd300/expanded_conv_5/expand/weights/Initializer/random_uniform/RandomUniform"
  op: "RandomUniform"
  input: "ssd300/expanded_conv_5/expand/weights/Initializer/random_uniform/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv_5/expand/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "ssd300/expanded_conv_5/expand/weights/Initializer/random_uniform/sub"
  op: "Sub"
  input: "ssd300/expanded_conv_5/expand/weights/Initializer/random_uniform/max"
  input: "ssd300/expanded_conv_5/expand/weights/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv_5/expand/weights"
      }
    }
  }
}
node {
  name: "ssd300/expanded_conv_5/expand/weights/Initializer/random_uniform/mul"
  op: "Mul"
  input: "ssd300/expanded_conv_5/expand/weights/Initializer/random_uniform/RandomUniform"
  input: "ssd300/expanded_conv_5/expand/weights/Initializer/random_uniform/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv_5/expand/weights"
      }
    }
  }
}
node {
  name: "ssd300/expanded_conv_5/expand/weights/Initializer/random_uniform"
  op: "Add"
  input: "ssd300/expanded_conv_5/expand/weights/Initializer/random_uniform/mul"
  input: "ssd300/expanded_conv_5/expand/weights/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv_5/expand/weights"
      }
    }
  }
}
node {
  name: "ssd300/expanded_conv_5/expand/weights"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv_5/expand/weights"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
        dim {
          size: 1
        }
        dim {
          size: 32
        }
        dim {
          size: 192
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "ssd300/expanded_conv_5/expand/weights/Assign"
  op: "Assign"
  input: "ssd300/expanded_conv_5/expand/weights"
  input: "ssd300/expanded_conv_5/expand/weights/Initializer/random_uniform"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv_5/expand/weights"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "ssd300/expanded_conv_5/expand/weights/read"
  op: "Identity"
  input: "ssd300/expanded_conv_5/expand/weights"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv_5/expand/weights"
      }
    }
  }
}
node {
  name: "ssd300/expanded_conv_5/expand/layer_conv2d/Conv2D"
  op: "Conv2D"
  input: "ssd300/expanded_conv_4/Add"
  input: "ssd300/expanded_conv_5/expand/weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NCHW"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "explicit_paddings"
    value {
      list {
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "ssd300/expanded_conv_5/expand/BatchNorm/beta/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv_5/expand/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 192
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "ssd300/expanded_conv_5/expand/BatchNorm/beta"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv_5/expand/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 192
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "ssd300/expanded_conv_5/expand/BatchNorm/beta/Assign"
  op: "Assign"
  input: "ssd300/expanded_conv_5/expand/BatchNorm/beta"
  input: "ssd300/expanded_conv_5/expand/BatchNorm/beta/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv_5/expand/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "ssd300/expanded_conv_5/expand/BatchNorm/beta/read"
  op: "Identity"
  input: "ssd300/expanded_conv_5/expand/BatchNorm/beta"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv_5/expand/BatchNorm/beta"
      }
    }
  }
}
node {
  name: "ssd300/expanded_conv_5/expand/BatchNorm/moving_mean/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv_5/expand/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 192
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "ssd300/expanded_conv_5/expand/BatchNorm/moving_mean"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv_5/expand/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 192
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "ssd300/expanded_conv_5/expand/BatchNorm/moving_mean/Assign"
  op: "Assign"
  input: "ssd300/expanded_conv_5/expand/BatchNorm/moving_mean"
  input: "ssd300/expanded_conv_5/expand/BatchNorm/moving_mean/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv_5/expand/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "ssd300/expanded_conv_5/expand/BatchNorm/moving_mean/read"
  op: "Identity"
  input: "ssd300/expanded_conv_5/expand/BatchNorm/moving_mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv_5/expand/BatchNorm/moving_mean"
      }
    }
  }
}
node {
  name: "ssd300/expanded_conv_5/expand/BatchNorm/moving_variance/Initializer/ones"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv_5/expand/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 192
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "ssd300/expanded_conv_5/expand/BatchNorm/moving_variance"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv_5/expand/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 192
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "ssd300/expanded_conv_5/expand/BatchNorm/moving_variance/Assign"
  op: "Assign"
  input: "ssd300/expanded_conv_5/expand/BatchNorm/moving_variance"
  input: "ssd300/expanded_conv_5/expand/BatchNorm/moving_variance/Initializer/ones"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv_5/expand/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "ssd300/expanded_conv_5/expand/BatchNorm/moving_variance/read"
  op: "Identity"
  input: "ssd300/expanded_conv_5/expand/BatchNorm/moving_variance"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv_5/expand/BatchNorm/moving_variance"
      }
    }
  }
}
node {
  name: "ssd300/expanded_conv_5/expand/BatchNorm/Reshape/shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\300\000\000\000\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "ssd300/expanded_conv_5/expand/BatchNorm/Reshape"
  op: "Reshape"
  input: "ssd300/expanded_conv_5/expand/BatchNorm/beta/read"
  input: "ssd300/expanded_conv_5/expand/BatchNorm/Reshape/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "ssd300/expanded_conv_5/expand/BatchNorm/Reshape_1/shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\300\000\000\000\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "ssd300/expanded_conv_5/expand/BatchNorm/Reshape_1"
  op: "Reshape"
  input: "ssd300/expanded_conv_5/expand/BatchNorm/moving_mean/read"
  input: "ssd300/expanded_conv_5/expand/BatchNorm/Reshape_1/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "ssd300/expanded_conv_5/expand/BatchNorm/Reshape_2/shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\300\000\000\000\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "ssd300/expanded_conv_5/expand/BatchNorm/Reshape_2"
  op: "Reshape"
  input: "ssd300/expanded_conv_5/expand/BatchNorm/moving_variance/read"
  input: "ssd300/expanded_conv_5/expand/BatchNorm/Reshape_2/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "ssd300/expanded_conv_5/expand/BatchNorm/batchnorm_1/Add/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0010000000474974513
      }
    }
  }
}
node {
  name: "ssd300/expanded_conv_5/expand/BatchNorm/batchnorm_1/Add"
  op: "Add"
  input: "ssd300/expanded_conv_5/expand/BatchNorm/Reshape_2"
  input: "ssd300/expanded_conv_5/expand/BatchNorm/batchnorm_1/Add/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ssd300/expanded_conv_5/expand/BatchNorm/batchnorm_1/Rsqrt"
  op: "Rsqrt"
  input: "ssd300/expanded_conv_5/expand/BatchNorm/batchnorm_1/Add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ssd300/expanded_conv_5/expand/BatchNorm/batchnorm_1/mul"
  op: "Mul"
  input: "ssd300/expanded_conv_5/expand/layer_conv2d/Conv2D"
  input: "ssd300/expanded_conv_5/expand/BatchNorm/batchnorm_1/Rsqrt"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ssd300/expanded_conv_5/expand/BatchNorm/batchnorm_1/mul_1"
  op: "Mul"
  input: "ssd300/expanded_conv_5/expand/BatchNorm/Reshape_1"
  input: "ssd300/expanded_conv_5/expand/BatchNorm/batchnorm_1/Rsqrt"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ssd300/expanded_conv_5/expand/BatchNorm/batchnorm_1/sub"
  op: "Sub"
  input: "ssd300/expanded_conv_5/expand/BatchNorm/Reshape"
  input: "ssd300/expanded_conv_5/expand/BatchNorm/batchnorm_1/mul_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ssd300/expanded_conv_5/expand/BatchNorm/batchnorm_1/Add_1"
  op: "Add"
  input: "ssd300/expanded_conv_5/expand/BatchNorm/batchnorm_1/mul"
  input: "ssd300/expanded_conv_5/expand/BatchNorm/batchnorm_1/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ssd300/expanded_conv_5/expand/Relu6"
  op: "Relu6"
  input: "ssd300/expanded_conv_5/expand/BatchNorm/batchnorm_1/Add_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ssd300/expanded_conv_5/depthwise/depthwise_weights/Initializer/random_uniform/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv_5/depthwise/depthwise_weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\003\000\000\000\003\000\000\000\300\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "ssd300/expanded_conv_5/depthwise/depthwise_weights/Initializer/random_uniform/min"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv_5/depthwise/depthwise_weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: -0.05877270922064781
      }
    }
  }
}
node {
  name: "ssd300/expanded_conv_5/depthwise/depthwise_weights/Initializer/random_uniform/max"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv_5/depthwise/depthwise_weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.05877270922064781
      }
    }
  }
}
node {
  name: "ssd300/expanded_conv_5/depthwise/depthwise_weights/Initializer/random_uniform/RandomUniform"
  op: "RandomUniform"
  input: "ssd300/expanded_conv_5/depthwise/depthwise_weights/Initializer/random_uniform/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv_5/depthwise/depthwise_weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "ssd300/expanded_conv_5/depthwise/depthwise_weights/Initializer/random_uniform/sub"
  op: "Sub"
  input: "ssd300/expanded_conv_5/depthwise/depthwise_weights/Initializer/random_uniform/max"
  input: "ssd300/expanded_conv_5/depthwise/depthwise_weights/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv_5/depthwise/depthwise_weights"
      }
    }
  }
}
node {
  name: "ssd300/expanded_conv_5/depthwise/depthwise_weights/Initializer/random_uniform/mul"
  op: "Mul"
  input: "ssd300/expanded_conv_5/depthwise/depthwise_weights/Initializer/random_uniform/RandomUniform"
  input: "ssd300/expanded_conv_5/depthwise/depthwise_weights/Initializer/random_uniform/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv_5/depthwise/depthwise_weights"
      }
    }
  }
}
node {
  name: "ssd300/expanded_conv_5/depthwise/depthwise_weights/Initializer/random_uniform"
  op: "Add"
  input: "ssd300/expanded_conv_5/depthwise/depthwise_weights/Initializer/random_uniform/mul"
  input: "ssd300/expanded_conv_5/depthwise/depthwise_weights/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv_5/depthwise/depthwise_weights"
      }
    }
  }
}
node {
  name: "ssd300/expanded_conv_5/depthwise/depthwise_weights"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv_5/depthwise/depthwise_weights"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 3
        }
        dim {
          size: 3
        }
        dim {
          size: 192
        }
        dim {
          size: 1
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "ssd300/expanded_conv_5/depthwise/depthwise_weights/Assign"
  op: "Assign"
  input: "ssd300/expanded_conv_5/depthwise/depthwise_weights"
  input: "ssd300/expanded_conv_5/depthwise/depthwise_weights/Initializer/random_uniform"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv_5/depthwise/depthwise_weights"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "ssd300/expanded_conv_5/depthwise/depthwise_weights/read"
  op: "Identity"
  input: "ssd300/expanded_conv_5/depthwise/depthwise_weights"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv_5/depthwise/depthwise_weights"
      }
    }
  }
}
node {
  name: "ssd300/expanded_conv_5/depthwise/layer_conv2d/depthwise/Shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\003\000\000\000\003\000\000\000\300\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "ssd300/expanded_conv_5/depthwise/layer_conv2d/depthwise/dilation_rate"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "ssd300/expanded_conv_5/depthwise/layer_conv2d/depthwise"
  op: "DepthwiseConv2dNative"
  input: "ssd300/expanded_conv_5/expand/Relu6"
  input: "ssd300/expanded_conv_5/depthwise/depthwise_weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NCHW"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
}
node {
  name: "ssd300/expanded_conv_5/depthwise/BatchNorm/beta/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv_5/depthwise/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 192
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "ssd300/expanded_conv_5/depthwise/BatchNorm/beta"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv_5/depthwise/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 192
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "ssd300/expanded_conv_5/depthwise/BatchNorm/beta/Assign"
  op: "Assign"
  input: "ssd300/expanded_conv_5/depthwise/BatchNorm/beta"
  input: "ssd300/expanded_conv_5/depthwise/BatchNorm/beta/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv_5/depthwise/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "ssd300/expanded_conv_5/depthwise/BatchNorm/beta/read"
  op: "Identity"
  input: "ssd300/expanded_conv_5/depthwise/BatchNorm/beta"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv_5/depthwise/BatchNorm/beta"
      }
    }
  }
}
node {
  name: "ssd300/expanded_conv_5/depthwise/BatchNorm/moving_mean/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv_5/depthwise/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 192
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "ssd300/expanded_conv_5/depthwise/BatchNorm/moving_mean"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv_5/depthwise/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 192
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "ssd300/expanded_conv_5/depthwise/BatchNorm/moving_mean/Assign"
  op: "Assign"
  input: "ssd300/expanded_conv_5/depthwise/BatchNorm/moving_mean"
  input: "ssd300/expanded_conv_5/depthwise/BatchNorm/moving_mean/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv_5/depthwise/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "ssd300/expanded_conv_5/depthwise/BatchNorm/moving_mean/read"
  op: "Identity"
  input: "ssd300/expanded_conv_5/depthwise/BatchNorm/moving_mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv_5/depthwise/BatchNorm/moving_mean"
      }
    }
  }
}
node {
  name: "ssd300/expanded_conv_5/depthwise/BatchNorm/moving_variance/Initializer/ones"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv_5/depthwise/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 192
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "ssd300/expanded_conv_5/depthwise/BatchNorm/moving_variance"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv_5/depthwise/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 192
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "ssd300/expanded_conv_5/depthwise/BatchNorm/moving_variance/Assign"
  op: "Assign"
  input: "ssd300/expanded_conv_5/depthwise/BatchNorm/moving_variance"
  input: "ssd300/expanded_conv_5/depthwise/BatchNorm/moving_variance/Initializer/ones"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv_5/depthwise/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "ssd300/expanded_conv_5/depthwise/BatchNorm/moving_variance/read"
  op: "Identity"
  input: "ssd300/expanded_conv_5/depthwise/BatchNorm/moving_variance"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv_5/depthwise/BatchNorm/moving_variance"
      }
    }
  }
}
node {
  name: "ssd300/expanded_conv_5/depthwise/BatchNorm/Reshape/shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\300\000\000\000\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "ssd300/expanded_conv_5/depthwise/BatchNorm/Reshape"
  op: "Reshape"
  input: "ssd300/expanded_conv_5/depthwise/BatchNorm/beta/read"
  input: "ssd300/expanded_conv_5/depthwise/BatchNorm/Reshape/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "ssd300/expanded_conv_5/depthwise/BatchNorm/Reshape_1/shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\300\000\000\000\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "ssd300/expanded_conv_5/depthwise/BatchNorm/Reshape_1"
  op: "Reshape"
  input: "ssd300/expanded_conv_5/depthwise/BatchNorm/moving_mean/read"
  input: "ssd300/expanded_conv_5/depthwise/BatchNorm/Reshape_1/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "ssd300/expanded_conv_5/depthwise/BatchNorm/Reshape_2/shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\300\000\000\000\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "ssd300/expanded_conv_5/depthwise/BatchNorm/Reshape_2"
  op: "Reshape"
  input: "ssd300/expanded_conv_5/depthwise/BatchNorm/moving_variance/read"
  input: "ssd300/expanded_conv_5/depthwise/BatchNorm/Reshape_2/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "ssd300/expanded_conv_5/depthwise/BatchNorm/batchnorm_1/Add/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0010000000474974513
      }
    }
  }
}
node {
  name: "ssd300/expanded_conv_5/depthwise/BatchNorm/batchnorm_1/Add"
  op: "Add"
  input: "ssd300/expanded_conv_5/depthwise/BatchNorm/Reshape_2"
  input: "ssd300/expanded_conv_5/depthwise/BatchNorm/batchnorm_1/Add/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ssd300/expanded_conv_5/depthwise/BatchNorm/batchnorm_1/Rsqrt"
  op: "Rsqrt"
  input: "ssd300/expanded_conv_5/depthwise/BatchNorm/batchnorm_1/Add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ssd300/expanded_conv_5/depthwise/BatchNorm/batchnorm_1/mul"
  op: "Mul"
  input: "ssd300/expanded_conv_5/depthwise/layer_conv2d/depthwise"
  input: "ssd300/expanded_conv_5/depthwise/BatchNorm/batchnorm_1/Rsqrt"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ssd300/expanded_conv_5/depthwise/BatchNorm/batchnorm_1/mul_1"
  op: "Mul"
  input: "ssd300/expanded_conv_5/depthwise/BatchNorm/Reshape_1"
  input: "ssd300/expanded_conv_5/depthwise/BatchNorm/batchnorm_1/Rsqrt"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ssd300/expanded_conv_5/depthwise/BatchNorm/batchnorm_1/sub"
  op: "Sub"
  input: "ssd300/expanded_conv_5/depthwise/BatchNorm/Reshape"
  input: "ssd300/expanded_conv_5/depthwise/BatchNorm/batchnorm_1/mul_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ssd300/expanded_conv_5/depthwise/BatchNorm/batchnorm_1/Add_1"
  op: "Add"
  input: "ssd300/expanded_conv_5/depthwise/BatchNorm/batchnorm_1/mul"
  input: "ssd300/expanded_conv_5/depthwise/BatchNorm/batchnorm_1/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ssd300/expanded_conv_5/depthwise/Relu6"
  op: "Relu6"
  input: "ssd300/expanded_conv_5/depthwise/BatchNorm/batchnorm_1/Add_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ssd300/expanded_conv_5/project/weights/Initializer/random_uniform/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv_5/project/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000\300\000\000\000 \000\000\000"
      }
    }
  }
}
node {
  name: "ssd300/expanded_conv_5/project/weights/Initializer/random_uniform/min"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv_5/project/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: -0.16366341710090637
      }
    }
  }
}
node {
  name: "ssd300/expanded_conv_5/project/weights/Initializer/random_uniform/max"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv_5/project/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.16366341710090637
      }
    }
  }
}
node {
  name: "ssd300/expanded_conv_5/project/weights/Initializer/random_uniform/RandomUniform"
  op: "RandomUniform"
  input: "ssd300/expanded_conv_5/project/weights/Initializer/random_uniform/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv_5/project/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "ssd300/expanded_conv_5/project/weights/Initializer/random_uniform/sub"
  op: "Sub"
  input: "ssd300/expanded_conv_5/project/weights/Initializer/random_uniform/max"
  input: "ssd300/expanded_conv_5/project/weights/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv_5/project/weights"
      }
    }
  }
}
node {
  name: "ssd300/expanded_conv_5/project/weights/Initializer/random_uniform/mul"
  op: "Mul"
  input: "ssd300/expanded_conv_5/project/weights/Initializer/random_uniform/RandomUniform"
  input: "ssd300/expanded_conv_5/project/weights/Initializer/random_uniform/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv_5/project/weights"
      }
    }
  }
}
node {
  name: "ssd300/expanded_conv_5/project/weights/Initializer/random_uniform"
  op: "Add"
  input: "ssd300/expanded_conv_5/project/weights/Initializer/random_uniform/mul"
  input: "ssd300/expanded_conv_5/project/weights/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv_5/project/weights"
      }
    }
  }
}
node {
  name: "ssd300/expanded_conv_5/project/weights"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv_5/project/weights"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
        dim {
          size: 1
        }
        dim {
          size: 192
        }
        dim {
          size: 32
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "ssd300/expanded_conv_5/project/weights/Assign"
  op: "Assign"
  input: "ssd300/expanded_conv_5/project/weights"
  input: "ssd300/expanded_conv_5/project/weights/Initializer/random_uniform"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv_5/project/weights"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "ssd300/expanded_conv_5/project/weights/read"
  op: "Identity"
  input: "ssd300/expanded_conv_5/project/weights"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv_5/project/weights"
      }
    }
  }
}
node {
  name: "ssd300/expanded_conv_5/project/layer_conv2d/Conv2D"
  op: "Conv2D"
  input: "ssd300/expanded_conv_5/depthwise/Relu6"
  input: "ssd300/expanded_conv_5/project/weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NCHW"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "explicit_paddings"
    value {
      list {
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "ssd300/expanded_conv_5/project/BatchNorm/beta/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv_5/project/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 32
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "ssd300/expanded_conv_5/project/BatchNorm/beta"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv_5/project/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 32
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "ssd300/expanded_conv_5/project/BatchNorm/beta/Assign"
  op: "Assign"
  input: "ssd300/expanded_conv_5/project/BatchNorm/beta"
  input: "ssd300/expanded_conv_5/project/BatchNorm/beta/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv_5/project/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "ssd300/expanded_conv_5/project/BatchNorm/beta/read"
  op: "Identity"
  input: "ssd300/expanded_conv_5/project/BatchNorm/beta"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv_5/project/BatchNorm/beta"
      }
    }
  }
}
node {
  name: "ssd300/expanded_conv_5/project/BatchNorm/moving_mean/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv_5/project/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 32
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "ssd300/expanded_conv_5/project/BatchNorm/moving_mean"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv_5/project/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 32
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "ssd300/expanded_conv_5/project/BatchNorm/moving_mean/Assign"
  op: "Assign"
  input: "ssd300/expanded_conv_5/project/BatchNorm/moving_mean"
  input: "ssd300/expanded_conv_5/project/BatchNorm/moving_mean/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv_5/project/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "ssd300/expanded_conv_5/project/BatchNorm/moving_mean/read"
  op: "Identity"
  input: "ssd300/expanded_conv_5/project/BatchNorm/moving_mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv_5/project/BatchNorm/moving_mean"
      }
    }
  }
}
node {
  name: "ssd300/expanded_conv_5/project/BatchNorm/moving_variance/Initializer/ones"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv_5/project/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 32
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "ssd300/expanded_conv_5/project/BatchNorm/moving_variance"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv_5/project/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 32
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "ssd300/expanded_conv_5/project/BatchNorm/moving_variance/Assign"
  op: "Assign"
  input: "ssd300/expanded_conv_5/project/BatchNorm/moving_variance"
  input: "ssd300/expanded_conv_5/project/BatchNorm/moving_variance/Initializer/ones"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv_5/project/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "ssd300/expanded_conv_5/project/BatchNorm/moving_variance/read"
  op: "Identity"
  input: "ssd300/expanded_conv_5/project/BatchNorm/moving_variance"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv_5/project/BatchNorm/moving_variance"
      }
    }
  }
}
node {
  name: "ssd300/expanded_conv_5/project/BatchNorm/Reshape/shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000 \000\000\000\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "ssd300/expanded_conv_5/project/BatchNorm/Reshape"
  op: "Reshape"
  input: "ssd300/expanded_conv_5/project/BatchNorm/beta/read"
  input: "ssd300/expanded_conv_5/project/BatchNorm/Reshape/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "ssd300/expanded_conv_5/project/BatchNorm/Reshape_1/shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000 \000\000\000\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "ssd300/expanded_conv_5/project/BatchNorm/Reshape_1"
  op: "Reshape"
  input: "ssd300/expanded_conv_5/project/BatchNorm/moving_mean/read"
  input: "ssd300/expanded_conv_5/project/BatchNorm/Reshape_1/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "ssd300/expanded_conv_5/project/BatchNorm/Reshape_2/shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000 \000\000\000\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "ssd300/expanded_conv_5/project/BatchNorm/Reshape_2"
  op: "Reshape"
  input: "ssd300/expanded_conv_5/project/BatchNorm/moving_variance/read"
  input: "ssd300/expanded_conv_5/project/BatchNorm/Reshape_2/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "ssd300/expanded_conv_5/project/BatchNorm/batchnorm_1/Add/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0010000000474974513
      }
    }
  }
}
node {
  name: "ssd300/expanded_conv_5/project/BatchNorm/batchnorm_1/Add"
  op: "Add"
  input: "ssd300/expanded_conv_5/project/BatchNorm/Reshape_2"
  input: "ssd300/expanded_conv_5/project/BatchNorm/batchnorm_1/Add/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ssd300/expanded_conv_5/project/BatchNorm/batchnorm_1/Rsqrt"
  op: "Rsqrt"
  input: "ssd300/expanded_conv_5/project/BatchNorm/batchnorm_1/Add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ssd300/expanded_conv_5/project/BatchNorm/batchnorm_1/mul"
  op: "Mul"
  input: "ssd300/expanded_conv_5/project/layer_conv2d/Conv2D"
  input: "ssd300/expanded_conv_5/project/BatchNorm/batchnorm_1/Rsqrt"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ssd300/expanded_conv_5/project/BatchNorm/batchnorm_1/mul_1"
  op: "Mul"
  input: "ssd300/expanded_conv_5/project/BatchNorm/Reshape_1"
  input: "ssd300/expanded_conv_5/project/BatchNorm/batchnorm_1/Rsqrt"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ssd300/expanded_conv_5/project/BatchNorm/batchnorm_1/sub"
  op: "Sub"
  input: "ssd300/expanded_conv_5/project/BatchNorm/Reshape"
  input: "ssd300/expanded_conv_5/project/BatchNorm/batchnorm_1/mul_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ssd300/expanded_conv_5/project/BatchNorm/batchnorm_1/Add_1"
  op: "Add"
  input: "ssd300/expanded_conv_5/project/BatchNorm/batchnorm_1/mul"
  input: "ssd300/expanded_conv_5/project/BatchNorm/batchnorm_1/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ssd300/expanded_conv_5/Add"
  op: "Add"
  input: "ssd300/expanded_conv_5/project/BatchNorm/batchnorm_1/Add_1"
  input: "ssd300/expanded_conv_4/Add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ssd300/expanded_conv_6/expand/weights/Initializer/random_uniform/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv_6/expand/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000 \000\000\000\300\000\000\000"
      }
    }
  }
}
node {
  name: "ssd300/expanded_conv_6/expand/weights/Initializer/random_uniform/min"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv_6/expand/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: -0.16366341710090637
      }
    }
  }
}
node {
  name: "ssd300/expanded_conv_6/expand/weights/Initializer/random_uniform/max"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv_6/expand/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.16366341710090637
      }
    }
  }
}
node {
  name: "ssd300/expanded_conv_6/expand/weights/Initializer/random_uniform/RandomUniform"
  op: "RandomUniform"
  input: "ssd300/expanded_conv_6/expand/weights/Initializer/random_uniform/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv_6/expand/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "ssd300/expanded_conv_6/expand/weights/Initializer/random_uniform/sub"
  op: "Sub"
  input: "ssd300/expanded_conv_6/expand/weights/Initializer/random_uniform/max"
  input: "ssd300/expanded_conv_6/expand/weights/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv_6/expand/weights"
      }
    }
  }
}
node {
  name: "ssd300/expanded_conv_6/expand/weights/Initializer/random_uniform/mul"
  op: "Mul"
  input: "ssd300/expanded_conv_6/expand/weights/Initializer/random_uniform/RandomUniform"
  input: "ssd300/expanded_conv_6/expand/weights/Initializer/random_uniform/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv_6/expand/weights"
      }
    }
  }
}
node {
  name: "ssd300/expanded_conv_6/expand/weights/Initializer/random_uniform"
  op: "Add"
  input: "ssd300/expanded_conv_6/expand/weights/Initializer/random_uniform/mul"
  input: "ssd300/expanded_conv_6/expand/weights/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv_6/expand/weights"
      }
    }
  }
}
node {
  name: "ssd300/expanded_conv_6/expand/weights"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv_6/expand/weights"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
        dim {
          size: 1
        }
        dim {
          size: 32
        }
        dim {
          size: 192
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "ssd300/expanded_conv_6/expand/weights/Assign"
  op: "Assign"
  input: "ssd300/expanded_conv_6/expand/weights"
  input: "ssd300/expanded_conv_6/expand/weights/Initializer/random_uniform"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv_6/expand/weights"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "ssd300/expanded_conv_6/expand/weights/read"
  op: "Identity"
  input: "ssd300/expanded_conv_6/expand/weights"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv_6/expand/weights"
      }
    }
  }
}
node {
  name: "ssd300/expanded_conv_6/expand/layer_conv2d/Conv2D"
  op: "Conv2D"
  input: "ssd300/expanded_conv_5/Add"
  input: "ssd300/expanded_conv_6/expand/weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NCHW"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "explicit_paddings"
    value {
      list {
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "ssd300/expanded_conv_6/expand/BatchNorm/beta/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv_6/expand/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 192
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "ssd300/expanded_conv_6/expand/BatchNorm/beta"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv_6/expand/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 192
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "ssd300/expanded_conv_6/expand/BatchNorm/beta/Assign"
  op: "Assign"
  input: "ssd300/expanded_conv_6/expand/BatchNorm/beta"
  input: "ssd300/expanded_conv_6/expand/BatchNorm/beta/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv_6/expand/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "ssd300/expanded_conv_6/expand/BatchNorm/beta/read"
  op: "Identity"
  input: "ssd300/expanded_conv_6/expand/BatchNorm/beta"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv_6/expand/BatchNorm/beta"
      }
    }
  }
}
node {
  name: "ssd300/expanded_conv_6/expand/BatchNorm/moving_mean/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv_6/expand/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 192
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "ssd300/expanded_conv_6/expand/BatchNorm/moving_mean"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv_6/expand/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 192
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "ssd300/expanded_conv_6/expand/BatchNorm/moving_mean/Assign"
  op: "Assign"
  input: "ssd300/expanded_conv_6/expand/BatchNorm/moving_mean"
  input: "ssd300/expanded_conv_6/expand/BatchNorm/moving_mean/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv_6/expand/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "ssd300/expanded_conv_6/expand/BatchNorm/moving_mean/read"
  op: "Identity"
  input: "ssd300/expanded_conv_6/expand/BatchNorm/moving_mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv_6/expand/BatchNorm/moving_mean"
      }
    }
  }
}
node {
  name: "ssd300/expanded_conv_6/expand/BatchNorm/moving_variance/Initializer/ones"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv_6/expand/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 192
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "ssd300/expanded_conv_6/expand/BatchNorm/moving_variance"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv_6/expand/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 192
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "ssd300/expanded_conv_6/expand/BatchNorm/moving_variance/Assign"
  op: "Assign"
  input: "ssd300/expanded_conv_6/expand/BatchNorm/moving_variance"
  input: "ssd300/expanded_conv_6/expand/BatchNorm/moving_variance/Initializer/ones"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv_6/expand/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "ssd300/expanded_conv_6/expand/BatchNorm/moving_variance/read"
  op: "Identity"
  input: "ssd300/expanded_conv_6/expand/BatchNorm/moving_variance"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv_6/expand/BatchNorm/moving_variance"
      }
    }
  }
}
node {
  name: "ssd300/expanded_conv_6/expand/BatchNorm/Reshape/shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\300\000\000\000\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "ssd300/expanded_conv_6/expand/BatchNorm/Reshape"
  op: "Reshape"
  input: "ssd300/expanded_conv_6/expand/BatchNorm/beta/read"
  input: "ssd300/expanded_conv_6/expand/BatchNorm/Reshape/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "ssd300/expanded_conv_6/expand/BatchNorm/Reshape_1/shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\300\000\000\000\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "ssd300/expanded_conv_6/expand/BatchNorm/Reshape_1"
  op: "Reshape"
  input: "ssd300/expanded_conv_6/expand/BatchNorm/moving_mean/read"
  input: "ssd300/expanded_conv_6/expand/BatchNorm/Reshape_1/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "ssd300/expanded_conv_6/expand/BatchNorm/Reshape_2/shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\300\000\000\000\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "ssd300/expanded_conv_6/expand/BatchNorm/Reshape_2"
  op: "Reshape"
  input: "ssd300/expanded_conv_6/expand/BatchNorm/moving_variance/read"
  input: "ssd300/expanded_conv_6/expand/BatchNorm/Reshape_2/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "ssd300/expanded_conv_6/expand/BatchNorm/batchnorm_1/Add/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0010000000474974513
      }
    }
  }
}
node {
  name: "ssd300/expanded_conv_6/expand/BatchNorm/batchnorm_1/Add"
  op: "Add"
  input: "ssd300/expanded_conv_6/expand/BatchNorm/Reshape_2"
  input: "ssd300/expanded_conv_6/expand/BatchNorm/batchnorm_1/Add/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ssd300/expanded_conv_6/expand/BatchNorm/batchnorm_1/Rsqrt"
  op: "Rsqrt"
  input: "ssd300/expanded_conv_6/expand/BatchNorm/batchnorm_1/Add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ssd300/expanded_conv_6/expand/BatchNorm/batchnorm_1/mul"
  op: "Mul"
  input: "ssd300/expanded_conv_6/expand/layer_conv2d/Conv2D"
  input: "ssd300/expanded_conv_6/expand/BatchNorm/batchnorm_1/Rsqrt"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ssd300/expanded_conv_6/expand/BatchNorm/batchnorm_1/mul_1"
  op: "Mul"
  input: "ssd300/expanded_conv_6/expand/BatchNorm/Reshape_1"
  input: "ssd300/expanded_conv_6/expand/BatchNorm/batchnorm_1/Rsqrt"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ssd300/expanded_conv_6/expand/BatchNorm/batchnorm_1/sub"
  op: "Sub"
  input: "ssd300/expanded_conv_6/expand/BatchNorm/Reshape"
  input: "ssd300/expanded_conv_6/expand/BatchNorm/batchnorm_1/mul_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ssd300/expanded_conv_6/expand/BatchNorm/batchnorm_1/Add_1"
  op: "Add"
  input: "ssd300/expanded_conv_6/expand/BatchNorm/batchnorm_1/mul"
  input: "ssd300/expanded_conv_6/expand/BatchNorm/batchnorm_1/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ssd300/expanded_conv_6/expand/Relu6"
  op: "Relu6"
  input: "ssd300/expanded_conv_6/expand/BatchNorm/batchnorm_1/Add_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ssd300/expanded_conv_6/depthwise/depthwise_weights/Initializer/random_uniform/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv_6/depthwise/depthwise_weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\003\000\000\000\003\000\000\000\300\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "ssd300/expanded_conv_6/depthwise/depthwise_weights/Initializer/random_uniform/min"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv_6/depthwise/depthwise_weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: -0.05877270922064781
      }
    }
  }
}
node {
  name: "ssd300/expanded_conv_6/depthwise/depthwise_weights/Initializer/random_uniform/max"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv_6/depthwise/depthwise_weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.05877270922064781
      }
    }
  }
}
node {
  name: "ssd300/expanded_conv_6/depthwise/depthwise_weights/Initializer/random_uniform/RandomUniform"
  op: "RandomUniform"
  input: "ssd300/expanded_conv_6/depthwise/depthwise_weights/Initializer/random_uniform/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv_6/depthwise/depthwise_weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "ssd300/expanded_conv_6/depthwise/depthwise_weights/Initializer/random_uniform/sub"
  op: "Sub"
  input: "ssd300/expanded_conv_6/depthwise/depthwise_weights/Initializer/random_uniform/max"
  input: "ssd300/expanded_conv_6/depthwise/depthwise_weights/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv_6/depthwise/depthwise_weights"
      }
    }
  }
}
node {
  name: "ssd300/expanded_conv_6/depthwise/depthwise_weights/Initializer/random_uniform/mul"
  op: "Mul"
  input: "ssd300/expanded_conv_6/depthwise/depthwise_weights/Initializer/random_uniform/RandomUniform"
  input: "ssd300/expanded_conv_6/depthwise/depthwise_weights/Initializer/random_uniform/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv_6/depthwise/depthwise_weights"
      }
    }
  }
}
node {
  name: "ssd300/expanded_conv_6/depthwise/depthwise_weights/Initializer/random_uniform"
  op: "Add"
  input: "ssd300/expanded_conv_6/depthwise/depthwise_weights/Initializer/random_uniform/mul"
  input: "ssd300/expanded_conv_6/depthwise/depthwise_weights/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv_6/depthwise/depthwise_weights"
      }
    }
  }
}
node {
  name: "ssd300/expanded_conv_6/depthwise/depthwise_weights"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv_6/depthwise/depthwise_weights"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 3
        }
        dim {
          size: 3
        }
        dim {
          size: 192
        }
        dim {
          size: 1
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "ssd300/expanded_conv_6/depthwise/depthwise_weights/Assign"
  op: "Assign"
  input: "ssd300/expanded_conv_6/depthwise/depthwise_weights"
  input: "ssd300/expanded_conv_6/depthwise/depthwise_weights/Initializer/random_uniform"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv_6/depthwise/depthwise_weights"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "ssd300/expanded_conv_6/depthwise/depthwise_weights/read"
  op: "Identity"
  input: "ssd300/expanded_conv_6/depthwise/depthwise_weights"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv_6/depthwise/depthwise_weights"
      }
    }
  }
}
node {
  name: "ssd300/expanded_conv_6/depthwise/layer_conv2d/depthwise/Shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\003\000\000\000\003\000\000\000\300\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "ssd300/expanded_conv_6/depthwise/layer_conv2d/depthwise/dilation_rate"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "ssd300/expanded_conv_6/depthwise/layer_conv2d/depthwise"
  op: "DepthwiseConv2dNative"
  input: "ssd300/expanded_conv_6/expand/Relu6"
  input: "ssd300/expanded_conv_6/depthwise/depthwise_weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NCHW"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 2
        i: 2
      }
    }
  }
}
node {
  name: "ssd300/expanded_conv_6/depthwise/BatchNorm/beta/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv_6/depthwise/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 192
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "ssd300/expanded_conv_6/depthwise/BatchNorm/beta"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv_6/depthwise/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 192
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "ssd300/expanded_conv_6/depthwise/BatchNorm/beta/Assign"
  op: "Assign"
  input: "ssd300/expanded_conv_6/depthwise/BatchNorm/beta"
  input: "ssd300/expanded_conv_6/depthwise/BatchNorm/beta/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv_6/depthwise/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "ssd300/expanded_conv_6/depthwise/BatchNorm/beta/read"
  op: "Identity"
  input: "ssd300/expanded_conv_6/depthwise/BatchNorm/beta"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv_6/depthwise/BatchNorm/beta"
      }
    }
  }
}
node {
  name: "ssd300/expanded_conv_6/depthwise/BatchNorm/moving_mean/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv_6/depthwise/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 192
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "ssd300/expanded_conv_6/depthwise/BatchNorm/moving_mean"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv_6/depthwise/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 192
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "ssd300/expanded_conv_6/depthwise/BatchNorm/moving_mean/Assign"
  op: "Assign"
  input: "ssd300/expanded_conv_6/depthwise/BatchNorm/moving_mean"
  input: "ssd300/expanded_conv_6/depthwise/BatchNorm/moving_mean/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv_6/depthwise/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "ssd300/expanded_conv_6/depthwise/BatchNorm/moving_mean/read"
  op: "Identity"
  input: "ssd300/expanded_conv_6/depthwise/BatchNorm/moving_mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv_6/depthwise/BatchNorm/moving_mean"
      }
    }
  }
}
node {
  name: "ssd300/expanded_conv_6/depthwise/BatchNorm/moving_variance/Initializer/ones"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv_6/depthwise/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 192
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "ssd300/expanded_conv_6/depthwise/BatchNorm/moving_variance"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv_6/depthwise/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 192
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "ssd300/expanded_conv_6/depthwise/BatchNorm/moving_variance/Assign"
  op: "Assign"
  input: "ssd300/expanded_conv_6/depthwise/BatchNorm/moving_variance"
  input: "ssd300/expanded_conv_6/depthwise/BatchNorm/moving_variance/Initializer/ones"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv_6/depthwise/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "ssd300/expanded_conv_6/depthwise/BatchNorm/moving_variance/read"
  op: "Identity"
  input: "ssd300/expanded_conv_6/depthwise/BatchNorm/moving_variance"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv_6/depthwise/BatchNorm/moving_variance"
      }
    }
  }
}
node {
  name: "ssd300/expanded_conv_6/depthwise/BatchNorm/Reshape/shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\300\000\000\000\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "ssd300/expanded_conv_6/depthwise/BatchNorm/Reshape"
  op: "Reshape"
  input: "ssd300/expanded_conv_6/depthwise/BatchNorm/beta/read"
  input: "ssd300/expanded_conv_6/depthwise/BatchNorm/Reshape/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "ssd300/expanded_conv_6/depthwise/BatchNorm/Reshape_1/shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\300\000\000\000\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "ssd300/expanded_conv_6/depthwise/BatchNorm/Reshape_1"
  op: "Reshape"
  input: "ssd300/expanded_conv_6/depthwise/BatchNorm/moving_mean/read"
  input: "ssd300/expanded_conv_6/depthwise/BatchNorm/Reshape_1/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "ssd300/expanded_conv_6/depthwise/BatchNorm/Reshape_2/shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\300\000\000\000\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "ssd300/expanded_conv_6/depthwise/BatchNorm/Reshape_2"
  op: "Reshape"
  input: "ssd300/expanded_conv_6/depthwise/BatchNorm/moving_variance/read"
  input: "ssd300/expanded_conv_6/depthwise/BatchNorm/Reshape_2/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "ssd300/expanded_conv_6/depthwise/BatchNorm/batchnorm_1/Add/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0010000000474974513
      }
    }
  }
}
node {
  name: "ssd300/expanded_conv_6/depthwise/BatchNorm/batchnorm_1/Add"
  op: "Add"
  input: "ssd300/expanded_conv_6/depthwise/BatchNorm/Reshape_2"
  input: "ssd300/expanded_conv_6/depthwise/BatchNorm/batchnorm_1/Add/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ssd300/expanded_conv_6/depthwise/BatchNorm/batchnorm_1/Rsqrt"
  op: "Rsqrt"
  input: "ssd300/expanded_conv_6/depthwise/BatchNorm/batchnorm_1/Add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ssd300/expanded_conv_6/depthwise/BatchNorm/batchnorm_1/mul"
  op: "Mul"
  input: "ssd300/expanded_conv_6/depthwise/layer_conv2d/depthwise"
  input: "ssd300/expanded_conv_6/depthwise/BatchNorm/batchnorm_1/Rsqrt"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ssd300/expanded_conv_6/depthwise/BatchNorm/batchnorm_1/mul_1"
  op: "Mul"
  input: "ssd300/expanded_conv_6/depthwise/BatchNorm/Reshape_1"
  input: "ssd300/expanded_conv_6/depthwise/BatchNorm/batchnorm_1/Rsqrt"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ssd300/expanded_conv_6/depthwise/BatchNorm/batchnorm_1/sub"
  op: "Sub"
  input: "ssd300/expanded_conv_6/depthwise/BatchNorm/Reshape"
  input: "ssd300/expanded_conv_6/depthwise/BatchNorm/batchnorm_1/mul_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ssd300/expanded_conv_6/depthwise/BatchNorm/batchnorm_1/Add_1"
  op: "Add"
  input: "ssd300/expanded_conv_6/depthwise/BatchNorm/batchnorm_1/mul"
  input: "ssd300/expanded_conv_6/depthwise/BatchNorm/batchnorm_1/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ssd300/expanded_conv_6/depthwise/Relu6"
  op: "Relu6"
  input: "ssd300/expanded_conv_6/depthwise/BatchNorm/batchnorm_1/Add_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ssd300/expanded_conv_6/project/weights/Initializer/random_uniform/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv_6/project/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000\300\000\000\000@\000\000\000"
      }
    }
  }
}
node {
  name: "ssd300/expanded_conv_6/project/weights/Initializer/random_uniform/min"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv_6/project/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: -0.1530931144952774
      }
    }
  }
}
node {
  name: "ssd300/expanded_conv_6/project/weights/Initializer/random_uniform/max"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv_6/project/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.1530931144952774
      }
    }
  }
}
node {
  name: "ssd300/expanded_conv_6/project/weights/Initializer/random_uniform/RandomUniform"
  op: "RandomUniform"
  input: "ssd300/expanded_conv_6/project/weights/Initializer/random_uniform/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv_6/project/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "ssd300/expanded_conv_6/project/weights/Initializer/random_uniform/sub"
  op: "Sub"
  input: "ssd300/expanded_conv_6/project/weights/Initializer/random_uniform/max"
  input: "ssd300/expanded_conv_6/project/weights/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv_6/project/weights"
      }
    }
  }
}
node {
  name: "ssd300/expanded_conv_6/project/weights/Initializer/random_uniform/mul"
  op: "Mul"
  input: "ssd300/expanded_conv_6/project/weights/Initializer/random_uniform/RandomUniform"
  input: "ssd300/expanded_conv_6/project/weights/Initializer/random_uniform/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv_6/project/weights"
      }
    }
  }
}
node {
  name: "ssd300/expanded_conv_6/project/weights/Initializer/random_uniform"
  op: "Add"
  input: "ssd300/expanded_conv_6/project/weights/Initializer/random_uniform/mul"
  input: "ssd300/expanded_conv_6/project/weights/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv_6/project/weights"
      }
    }
  }
}
node {
  name: "ssd300/expanded_conv_6/project/weights"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv_6/project/weights"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
        dim {
          size: 1
        }
        dim {
          size: 192
        }
        dim {
          size: 64
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "ssd300/expanded_conv_6/project/weights/Assign"
  op: "Assign"
  input: "ssd300/expanded_conv_6/project/weights"
  input: "ssd300/expanded_conv_6/project/weights/Initializer/random_uniform"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv_6/project/weights"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "ssd300/expanded_conv_6/project/weights/read"
  op: "Identity"
  input: "ssd300/expanded_conv_6/project/weights"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv_6/project/weights"
      }
    }
  }
}
node {
  name: "ssd300/expanded_conv_6/project/layer_conv2d/Conv2D"
  op: "Conv2D"
  input: "ssd300/expanded_conv_6/depthwise/Relu6"
  input: "ssd300/expanded_conv_6/project/weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NCHW"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "explicit_paddings"
    value {
      list {
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "ssd300/expanded_conv_6/project/BatchNorm/beta/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv_6/project/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 64
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "ssd300/expanded_conv_6/project/BatchNorm/beta"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv_6/project/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 64
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "ssd300/expanded_conv_6/project/BatchNorm/beta/Assign"
  op: "Assign"
  input: "ssd300/expanded_conv_6/project/BatchNorm/beta"
  input: "ssd300/expanded_conv_6/project/BatchNorm/beta/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv_6/project/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "ssd300/expanded_conv_6/project/BatchNorm/beta/read"
  op: "Identity"
  input: "ssd300/expanded_conv_6/project/BatchNorm/beta"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv_6/project/BatchNorm/beta"
      }
    }
  }
}
node {
  name: "ssd300/expanded_conv_6/project/BatchNorm/moving_mean/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv_6/project/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 64
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "ssd300/expanded_conv_6/project/BatchNorm/moving_mean"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv_6/project/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 64
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "ssd300/expanded_conv_6/project/BatchNorm/moving_mean/Assign"
  op: "Assign"
  input: "ssd300/expanded_conv_6/project/BatchNorm/moving_mean"
  input: "ssd300/expanded_conv_6/project/BatchNorm/moving_mean/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv_6/project/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "ssd300/expanded_conv_6/project/BatchNorm/moving_mean/read"
  op: "Identity"
  input: "ssd300/expanded_conv_6/project/BatchNorm/moving_mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv_6/project/BatchNorm/moving_mean"
      }
    }
  }
}
node {
  name: "ssd300/expanded_conv_6/project/BatchNorm/moving_variance/Initializer/ones"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv_6/project/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 64
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "ssd300/expanded_conv_6/project/BatchNorm/moving_variance"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv_6/project/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 64
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "ssd300/expanded_conv_6/project/BatchNorm/moving_variance/Assign"
  op: "Assign"
  input: "ssd300/expanded_conv_6/project/BatchNorm/moving_variance"
  input: "ssd300/expanded_conv_6/project/BatchNorm/moving_variance/Initializer/ones"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv_6/project/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "ssd300/expanded_conv_6/project/BatchNorm/moving_variance/read"
  op: "Identity"
  input: "ssd300/expanded_conv_6/project/BatchNorm/moving_variance"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv_6/project/BatchNorm/moving_variance"
      }
    }
  }
}
node {
  name: "ssd300/expanded_conv_6/project/BatchNorm/Reshape/shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000@\000\000\000\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "ssd300/expanded_conv_6/project/BatchNorm/Reshape"
  op: "Reshape"
  input: "ssd300/expanded_conv_6/project/BatchNorm/beta/read"
  input: "ssd300/expanded_conv_6/project/BatchNorm/Reshape/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "ssd300/expanded_conv_6/project/BatchNorm/Reshape_1/shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000@\000\000\000\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "ssd300/expanded_conv_6/project/BatchNorm/Reshape_1"
  op: "Reshape"
  input: "ssd300/expanded_conv_6/project/BatchNorm/moving_mean/read"
  input: "ssd300/expanded_conv_6/project/BatchNorm/Reshape_1/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "ssd300/expanded_conv_6/project/BatchNorm/Reshape_2/shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000@\000\000\000\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "ssd300/expanded_conv_6/project/BatchNorm/Reshape_2"
  op: "Reshape"
  input: "ssd300/expanded_conv_6/project/BatchNorm/moving_variance/read"
  input: "ssd300/expanded_conv_6/project/BatchNorm/Reshape_2/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "ssd300/expanded_conv_6/project/BatchNorm/batchnorm_1/Add/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0010000000474974513
      }
    }
  }
}
node {
  name: "ssd300/expanded_conv_6/project/BatchNorm/batchnorm_1/Add"
  op: "Add"
  input: "ssd300/expanded_conv_6/project/BatchNorm/Reshape_2"
  input: "ssd300/expanded_conv_6/project/BatchNorm/batchnorm_1/Add/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ssd300/expanded_conv_6/project/BatchNorm/batchnorm_1/Rsqrt"
  op: "Rsqrt"
  input: "ssd300/expanded_conv_6/project/BatchNorm/batchnorm_1/Add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ssd300/expanded_conv_6/project/BatchNorm/batchnorm_1/mul"
  op: "Mul"
  input: "ssd300/expanded_conv_6/project/layer_conv2d/Conv2D"
  input: "ssd300/expanded_conv_6/project/BatchNorm/batchnorm_1/Rsqrt"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ssd300/expanded_conv_6/project/BatchNorm/batchnorm_1/mul_1"
  op: "Mul"
  input: "ssd300/expanded_conv_6/project/BatchNorm/Reshape_1"
  input: "ssd300/expanded_conv_6/project/BatchNorm/batchnorm_1/Rsqrt"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ssd300/expanded_conv_6/project/BatchNorm/batchnorm_1/sub"
  op: "Sub"
  input: "ssd300/expanded_conv_6/project/BatchNorm/Reshape"
  input: "ssd300/expanded_conv_6/project/BatchNorm/batchnorm_1/mul_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ssd300/expanded_conv_6/project/BatchNorm/batchnorm_1/Add_1"
  op: "Add"
  input: "ssd300/expanded_conv_6/project/BatchNorm/batchnorm_1/mul"
  input: "ssd300/expanded_conv_6/project/BatchNorm/batchnorm_1/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ssd300/expanded_conv_7/expand/weights/Initializer/random_uniform/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv_7/expand/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000@\000\000\000\200\001\000\000"
      }
    }
  }
}
node {
  name: "ssd300/expanded_conv_7/expand/weights/Initializer/random_uniform/min"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv_7/expand/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: -0.1157275140285492
      }
    }
  }
}
node {
  name: "ssd300/expanded_conv_7/expand/weights/Initializer/random_uniform/max"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv_7/expand/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.1157275140285492
      }
    }
  }
}
node {
  name: "ssd300/expanded_conv_7/expand/weights/Initializer/random_uniform/RandomUniform"
  op: "RandomUniform"
  input: "ssd300/expanded_conv_7/expand/weights/Initializer/random_uniform/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv_7/expand/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "ssd300/expanded_conv_7/expand/weights/Initializer/random_uniform/sub"
  op: "Sub"
  input: "ssd300/expanded_conv_7/expand/weights/Initializer/random_uniform/max"
  input: "ssd300/expanded_conv_7/expand/weights/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv_7/expand/weights"
      }
    }
  }
}
node {
  name: "ssd300/expanded_conv_7/expand/weights/Initializer/random_uniform/mul"
  op: "Mul"
  input: "ssd300/expanded_conv_7/expand/weights/Initializer/random_uniform/RandomUniform"
  input: "ssd300/expanded_conv_7/expand/weights/Initializer/random_uniform/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv_7/expand/weights"
      }
    }
  }
}
node {
  name: "ssd300/expanded_conv_7/expand/weights/Initializer/random_uniform"
  op: "Add"
  input: "ssd300/expanded_conv_7/expand/weights/Initializer/random_uniform/mul"
  input: "ssd300/expanded_conv_7/expand/weights/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv_7/expand/weights"
      }
    }
  }
}
node {
  name: "ssd300/expanded_conv_7/expand/weights"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv_7/expand/weights"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
        dim {
          size: 1
        }
        dim {
          size: 64
        }
        dim {
          size: 384
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "ssd300/expanded_conv_7/expand/weights/Assign"
  op: "Assign"
  input: "ssd300/expanded_conv_7/expand/weights"
  input: "ssd300/expanded_conv_7/expand/weights/Initializer/random_uniform"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv_7/expand/weights"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "ssd300/expanded_conv_7/expand/weights/read"
  op: "Identity"
  input: "ssd300/expanded_conv_7/expand/weights"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv_7/expand/weights"
      }
    }
  }
}
node {
  name: "ssd300/expanded_conv_7/expand/layer_conv2d/Conv2D"
  op: "Conv2D"
  input: "ssd300/expanded_conv_6/project/BatchNorm/batchnorm_1/Add_1"
  input: "ssd300/expanded_conv_7/expand/weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NCHW"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "explicit_paddings"
    value {
      list {
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "ssd300/expanded_conv_7/expand/BatchNorm/beta/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv_7/expand/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 384
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "ssd300/expanded_conv_7/expand/BatchNorm/beta"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv_7/expand/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 384
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "ssd300/expanded_conv_7/expand/BatchNorm/beta/Assign"
  op: "Assign"
  input: "ssd300/expanded_conv_7/expand/BatchNorm/beta"
  input: "ssd300/expanded_conv_7/expand/BatchNorm/beta/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv_7/expand/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "ssd300/expanded_conv_7/expand/BatchNorm/beta/read"
  op: "Identity"
  input: "ssd300/expanded_conv_7/expand/BatchNorm/beta"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv_7/expand/BatchNorm/beta"
      }
    }
  }
}
node {
  name: "ssd300/expanded_conv_7/expand/BatchNorm/moving_mean/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv_7/expand/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 384
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "ssd300/expanded_conv_7/expand/BatchNorm/moving_mean"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv_7/expand/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 384
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "ssd300/expanded_conv_7/expand/BatchNorm/moving_mean/Assign"
  op: "Assign"
  input: "ssd300/expanded_conv_7/expand/BatchNorm/moving_mean"
  input: "ssd300/expanded_conv_7/expand/BatchNorm/moving_mean/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv_7/expand/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "ssd300/expanded_conv_7/expand/BatchNorm/moving_mean/read"
  op: "Identity"
  input: "ssd300/expanded_conv_7/expand/BatchNorm/moving_mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv_7/expand/BatchNorm/moving_mean"
      }
    }
  }
}
node {
  name: "ssd300/expanded_conv_7/expand/BatchNorm/moving_variance/Initializer/ones"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv_7/expand/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 384
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "ssd300/expanded_conv_7/expand/BatchNorm/moving_variance"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv_7/expand/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 384
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "ssd300/expanded_conv_7/expand/BatchNorm/moving_variance/Assign"
  op: "Assign"
  input: "ssd300/expanded_conv_7/expand/BatchNorm/moving_variance"
  input: "ssd300/expanded_conv_7/expand/BatchNorm/moving_variance/Initializer/ones"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv_7/expand/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "ssd300/expanded_conv_7/expand/BatchNorm/moving_variance/read"
  op: "Identity"
  input: "ssd300/expanded_conv_7/expand/BatchNorm/moving_variance"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv_7/expand/BatchNorm/moving_variance"
      }
    }
  }
}
node {
  name: "ssd300/expanded_conv_7/expand/BatchNorm/Reshape/shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\200\001\000\000\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "ssd300/expanded_conv_7/expand/BatchNorm/Reshape"
  op: "Reshape"
  input: "ssd300/expanded_conv_7/expand/BatchNorm/beta/read"
  input: "ssd300/expanded_conv_7/expand/BatchNorm/Reshape/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "ssd300/expanded_conv_7/expand/BatchNorm/Reshape_1/shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\200\001\000\000\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "ssd300/expanded_conv_7/expand/BatchNorm/Reshape_1"
  op: "Reshape"
  input: "ssd300/expanded_conv_7/expand/BatchNorm/moving_mean/read"
  input: "ssd300/expanded_conv_7/expand/BatchNorm/Reshape_1/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "ssd300/expanded_conv_7/expand/BatchNorm/Reshape_2/shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\200\001\000\000\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "ssd300/expanded_conv_7/expand/BatchNorm/Reshape_2"
  op: "Reshape"
  input: "ssd300/expanded_conv_7/expand/BatchNorm/moving_variance/read"
  input: "ssd300/expanded_conv_7/expand/BatchNorm/Reshape_2/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "ssd300/expanded_conv_7/expand/BatchNorm/batchnorm_1/Add/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0010000000474974513
      }
    }
  }
}
node {
  name: "ssd300/expanded_conv_7/expand/BatchNorm/batchnorm_1/Add"
  op: "Add"
  input: "ssd300/expanded_conv_7/expand/BatchNorm/Reshape_2"
  input: "ssd300/expanded_conv_7/expand/BatchNorm/batchnorm_1/Add/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ssd300/expanded_conv_7/expand/BatchNorm/batchnorm_1/Rsqrt"
  op: "Rsqrt"
  input: "ssd300/expanded_conv_7/expand/BatchNorm/batchnorm_1/Add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ssd300/expanded_conv_7/expand/BatchNorm/batchnorm_1/mul"
  op: "Mul"
  input: "ssd300/expanded_conv_7/expand/layer_conv2d/Conv2D"
  input: "ssd300/expanded_conv_7/expand/BatchNorm/batchnorm_1/Rsqrt"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ssd300/expanded_conv_7/expand/BatchNorm/batchnorm_1/mul_1"
  op: "Mul"
  input: "ssd300/expanded_conv_7/expand/BatchNorm/Reshape_1"
  input: "ssd300/expanded_conv_7/expand/BatchNorm/batchnorm_1/Rsqrt"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ssd300/expanded_conv_7/expand/BatchNorm/batchnorm_1/sub"
  op: "Sub"
  input: "ssd300/expanded_conv_7/expand/BatchNorm/Reshape"
  input: "ssd300/expanded_conv_7/expand/BatchNorm/batchnorm_1/mul_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ssd300/expanded_conv_7/expand/BatchNorm/batchnorm_1/Add_1"
  op: "Add"
  input: "ssd300/expanded_conv_7/expand/BatchNorm/batchnorm_1/mul"
  input: "ssd300/expanded_conv_7/expand/BatchNorm/batchnorm_1/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ssd300/expanded_conv_7/expand/Relu6"
  op: "Relu6"
  input: "ssd300/expanded_conv_7/expand/BatchNorm/batchnorm_1/Add_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ssd300/expanded_conv_7/depthwise/depthwise_weights/Initializer/random_uniform/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv_7/depthwise/depthwise_weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\003\000\000\000\003\000\000\000\200\001\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "ssd300/expanded_conv_7/depthwise/depthwise_weights/Initializer/random_uniform/min"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv_7/depthwise/depthwise_weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: -0.04161251708865166
      }
    }
  }
}
node {
  name: "ssd300/expanded_conv_7/depthwise/depthwise_weights/Initializer/random_uniform/max"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv_7/depthwise/depthwise_weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.04161251708865166
      }
    }
  }
}
node {
  name: "ssd300/expanded_conv_7/depthwise/depthwise_weights/Initializer/random_uniform/RandomUniform"
  op: "RandomUniform"
  input: "ssd300/expanded_conv_7/depthwise/depthwise_weights/Initializer/random_uniform/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv_7/depthwise/depthwise_weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "ssd300/expanded_conv_7/depthwise/depthwise_weights/Initializer/random_uniform/sub"
  op: "Sub"
  input: "ssd300/expanded_conv_7/depthwise/depthwise_weights/Initializer/random_uniform/max"
  input: "ssd300/expanded_conv_7/depthwise/depthwise_weights/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv_7/depthwise/depthwise_weights"
      }
    }
  }
}
node {
  name: "ssd300/expanded_conv_7/depthwise/depthwise_weights/Initializer/random_uniform/mul"
  op: "Mul"
  input: "ssd300/expanded_conv_7/depthwise/depthwise_weights/Initializer/random_uniform/RandomUniform"
  input: "ssd300/expanded_conv_7/depthwise/depthwise_weights/Initializer/random_uniform/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv_7/depthwise/depthwise_weights"
      }
    }
  }
}
node {
  name: "ssd300/expanded_conv_7/depthwise/depthwise_weights/Initializer/random_uniform"
  op: "Add"
  input: "ssd300/expanded_conv_7/depthwise/depthwise_weights/Initializer/random_uniform/mul"
  input: "ssd300/expanded_conv_7/depthwise/depthwise_weights/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv_7/depthwise/depthwise_weights"
      }
    }
  }
}
node {
  name: "ssd300/expanded_conv_7/depthwise/depthwise_weights"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv_7/depthwise/depthwise_weights"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 3
        }
        dim {
          size: 3
        }
        dim {
          size: 384
        }
        dim {
          size: 1
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "ssd300/expanded_conv_7/depthwise/depthwise_weights/Assign"
  op: "Assign"
  input: "ssd300/expanded_conv_7/depthwise/depthwise_weights"
  input: "ssd300/expanded_conv_7/depthwise/depthwise_weights/Initializer/random_uniform"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv_7/depthwise/depthwise_weights"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "ssd300/expanded_conv_7/depthwise/depthwise_weights/read"
  op: "Identity"
  input: "ssd300/expanded_conv_7/depthwise/depthwise_weights"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv_7/depthwise/depthwise_weights"
      }
    }
  }
}
node {
  name: "ssd300/expanded_conv_7/depthwise/layer_conv2d/depthwise/Shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\003\000\000\000\003\000\000\000\200\001\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "ssd300/expanded_conv_7/depthwise/layer_conv2d/depthwise/dilation_rate"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "ssd300/expanded_conv_7/depthwise/layer_conv2d/depthwise"
  op: "DepthwiseConv2dNative"
  input: "ssd300/expanded_conv_7/expand/Relu6"
  input: "ssd300/expanded_conv_7/depthwise/depthwise_weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NCHW"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
}
node {
  name: "ssd300/expanded_conv_7/depthwise/BatchNorm/beta/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv_7/depthwise/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 384
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "ssd300/expanded_conv_7/depthwise/BatchNorm/beta"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv_7/depthwise/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 384
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "ssd300/expanded_conv_7/depthwise/BatchNorm/beta/Assign"
  op: "Assign"
  input: "ssd300/expanded_conv_7/depthwise/BatchNorm/beta"
  input: "ssd300/expanded_conv_7/depthwise/BatchNorm/beta/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv_7/depthwise/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "ssd300/expanded_conv_7/depthwise/BatchNorm/beta/read"
  op: "Identity"
  input: "ssd300/expanded_conv_7/depthwise/BatchNorm/beta"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv_7/depthwise/BatchNorm/beta"
      }
    }
  }
}
node {
  name: "ssd300/expanded_conv_7/depthwise/BatchNorm/moving_mean/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv_7/depthwise/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 384
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "ssd300/expanded_conv_7/depthwise/BatchNorm/moving_mean"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv_7/depthwise/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 384
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "ssd300/expanded_conv_7/depthwise/BatchNorm/moving_mean/Assign"
  op: "Assign"
  input: "ssd300/expanded_conv_7/depthwise/BatchNorm/moving_mean"
  input: "ssd300/expanded_conv_7/depthwise/BatchNorm/moving_mean/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv_7/depthwise/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "ssd300/expanded_conv_7/depthwise/BatchNorm/moving_mean/read"
  op: "Identity"
  input: "ssd300/expanded_conv_7/depthwise/BatchNorm/moving_mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv_7/depthwise/BatchNorm/moving_mean"
      }
    }
  }
}
node {
  name: "ssd300/expanded_conv_7/depthwise/BatchNorm/moving_variance/Initializer/ones"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv_7/depthwise/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 384
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "ssd300/expanded_conv_7/depthwise/BatchNorm/moving_variance"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv_7/depthwise/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 384
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "ssd300/expanded_conv_7/depthwise/BatchNorm/moving_variance/Assign"
  op: "Assign"
  input: "ssd300/expanded_conv_7/depthwise/BatchNorm/moving_variance"
  input: "ssd300/expanded_conv_7/depthwise/BatchNorm/moving_variance/Initializer/ones"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv_7/depthwise/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "ssd300/expanded_conv_7/depthwise/BatchNorm/moving_variance/read"
  op: "Identity"
  input: "ssd300/expanded_conv_7/depthwise/BatchNorm/moving_variance"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv_7/depthwise/BatchNorm/moving_variance"
      }
    }
  }
}
node {
  name: "ssd300/expanded_conv_7/depthwise/BatchNorm/Reshape/shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\200\001\000\000\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "ssd300/expanded_conv_7/depthwise/BatchNorm/Reshape"
  op: "Reshape"
  input: "ssd300/expanded_conv_7/depthwise/BatchNorm/beta/read"
  input: "ssd300/expanded_conv_7/depthwise/BatchNorm/Reshape/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "ssd300/expanded_conv_7/depthwise/BatchNorm/Reshape_1/shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\200\001\000\000\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "ssd300/expanded_conv_7/depthwise/BatchNorm/Reshape_1"
  op: "Reshape"
  input: "ssd300/expanded_conv_7/depthwise/BatchNorm/moving_mean/read"
  input: "ssd300/expanded_conv_7/depthwise/BatchNorm/Reshape_1/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "ssd300/expanded_conv_7/depthwise/BatchNorm/Reshape_2/shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\200\001\000\000\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "ssd300/expanded_conv_7/depthwise/BatchNorm/Reshape_2"
  op: "Reshape"
  input: "ssd300/expanded_conv_7/depthwise/BatchNorm/moving_variance/read"
  input: "ssd300/expanded_conv_7/depthwise/BatchNorm/Reshape_2/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "ssd300/expanded_conv_7/depthwise/BatchNorm/batchnorm_1/Add/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0010000000474974513
      }
    }
  }
}
node {
  name: "ssd300/expanded_conv_7/depthwise/BatchNorm/batchnorm_1/Add"
  op: "Add"
  input: "ssd300/expanded_conv_7/depthwise/BatchNorm/Reshape_2"
  input: "ssd300/expanded_conv_7/depthwise/BatchNorm/batchnorm_1/Add/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ssd300/expanded_conv_7/depthwise/BatchNorm/batchnorm_1/Rsqrt"
  op: "Rsqrt"
  input: "ssd300/expanded_conv_7/depthwise/BatchNorm/batchnorm_1/Add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ssd300/expanded_conv_7/depthwise/BatchNorm/batchnorm_1/mul"
  op: "Mul"
  input: "ssd300/expanded_conv_7/depthwise/layer_conv2d/depthwise"
  input: "ssd300/expanded_conv_7/depthwise/BatchNorm/batchnorm_1/Rsqrt"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ssd300/expanded_conv_7/depthwise/BatchNorm/batchnorm_1/mul_1"
  op: "Mul"
  input: "ssd300/expanded_conv_7/depthwise/BatchNorm/Reshape_1"
  input: "ssd300/expanded_conv_7/depthwise/BatchNorm/batchnorm_1/Rsqrt"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ssd300/expanded_conv_7/depthwise/BatchNorm/batchnorm_1/sub"
  op: "Sub"
  input: "ssd300/expanded_conv_7/depthwise/BatchNorm/Reshape"
  input: "ssd300/expanded_conv_7/depthwise/BatchNorm/batchnorm_1/mul_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ssd300/expanded_conv_7/depthwise/BatchNorm/batchnorm_1/Add_1"
  op: "Add"
  input: "ssd300/expanded_conv_7/depthwise/BatchNorm/batchnorm_1/mul"
  input: "ssd300/expanded_conv_7/depthwise/BatchNorm/batchnorm_1/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ssd300/expanded_conv_7/depthwise/Relu6"
  op: "Relu6"
  input: "ssd300/expanded_conv_7/depthwise/BatchNorm/batchnorm_1/Add_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ssd300/expanded_conv_7/project/weights/Initializer/random_uniform/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv_7/project/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000\200\001\000\000@\000\000\000"
      }
    }
  }
}
node {
  name: "ssd300/expanded_conv_7/project/weights/Initializer/random_uniform/min"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv_7/project/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: -0.1157275140285492
      }
    }
  }
}
node {
  name: "ssd300/expanded_conv_7/project/weights/Initializer/random_uniform/max"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv_7/project/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.1157275140285492
      }
    }
  }
}
node {
  name: "ssd300/expanded_conv_7/project/weights/Initializer/random_uniform/RandomUniform"
  op: "RandomUniform"
  input: "ssd300/expanded_conv_7/project/weights/Initializer/random_uniform/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv_7/project/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "ssd300/expanded_conv_7/project/weights/Initializer/random_uniform/sub"
  op: "Sub"
  input: "ssd300/expanded_conv_7/project/weights/Initializer/random_uniform/max"
  input: "ssd300/expanded_conv_7/project/weights/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv_7/project/weights"
      }
    }
  }
}
node {
  name: "ssd300/expanded_conv_7/project/weights/Initializer/random_uniform/mul"
  op: "Mul"
  input: "ssd300/expanded_conv_7/project/weights/Initializer/random_uniform/RandomUniform"
  input: "ssd300/expanded_conv_7/project/weights/Initializer/random_uniform/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv_7/project/weights"
      }
    }
  }
}
node {
  name: "ssd300/expanded_conv_7/project/weights/Initializer/random_uniform"
  op: "Add"
  input: "ssd300/expanded_conv_7/project/weights/Initializer/random_uniform/mul"
  input: "ssd300/expanded_conv_7/project/weights/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv_7/project/weights"
      }
    }
  }
}
node {
  name: "ssd300/expanded_conv_7/project/weights"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv_7/project/weights"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
        dim {
          size: 1
        }
        dim {
          size: 384
        }
        dim {
          size: 64
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "ssd300/expanded_conv_7/project/weights/Assign"
  op: "Assign"
  input: "ssd300/expanded_conv_7/project/weights"
  input: "ssd300/expanded_conv_7/project/weights/Initializer/random_uniform"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv_7/project/weights"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "ssd300/expanded_conv_7/project/weights/read"
  op: "Identity"
  input: "ssd300/expanded_conv_7/project/weights"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv_7/project/weights"
      }
    }
  }
}
node {
  name: "ssd300/expanded_conv_7/project/layer_conv2d/Conv2D"
  op: "Conv2D"
  input: "ssd300/expanded_conv_7/depthwise/Relu6"
  input: "ssd300/expanded_conv_7/project/weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NCHW"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "explicit_paddings"
    value {
      list {
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "ssd300/expanded_conv_7/project/BatchNorm/beta/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv_7/project/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 64
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "ssd300/expanded_conv_7/project/BatchNorm/beta"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv_7/project/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 64
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "ssd300/expanded_conv_7/project/BatchNorm/beta/Assign"
  op: "Assign"
  input: "ssd300/expanded_conv_7/project/BatchNorm/beta"
  input: "ssd300/expanded_conv_7/project/BatchNorm/beta/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv_7/project/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "ssd300/expanded_conv_7/project/BatchNorm/beta/read"
  op: "Identity"
  input: "ssd300/expanded_conv_7/project/BatchNorm/beta"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv_7/project/BatchNorm/beta"
      }
    }
  }
}
node {
  name: "ssd300/expanded_conv_7/project/BatchNorm/moving_mean/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv_7/project/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 64
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "ssd300/expanded_conv_7/project/BatchNorm/moving_mean"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv_7/project/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 64
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "ssd300/expanded_conv_7/project/BatchNorm/moving_mean/Assign"
  op: "Assign"
  input: "ssd300/expanded_conv_7/project/BatchNorm/moving_mean"
  input: "ssd300/expanded_conv_7/project/BatchNorm/moving_mean/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv_7/project/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "ssd300/expanded_conv_7/project/BatchNorm/moving_mean/read"
  op: "Identity"
  input: "ssd300/expanded_conv_7/project/BatchNorm/moving_mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv_7/project/BatchNorm/moving_mean"
      }
    }
  }
}
node {
  name: "ssd300/expanded_conv_7/project/BatchNorm/moving_variance/Initializer/ones"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv_7/project/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 64
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "ssd300/expanded_conv_7/project/BatchNorm/moving_variance"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv_7/project/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 64
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "ssd300/expanded_conv_7/project/BatchNorm/moving_variance/Assign"
  op: "Assign"
  input: "ssd300/expanded_conv_7/project/BatchNorm/moving_variance"
  input: "ssd300/expanded_conv_7/project/BatchNorm/moving_variance/Initializer/ones"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv_7/project/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "ssd300/expanded_conv_7/project/BatchNorm/moving_variance/read"
  op: "Identity"
  input: "ssd300/expanded_conv_7/project/BatchNorm/moving_variance"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv_7/project/BatchNorm/moving_variance"
      }
    }
  }
}
node {
  name: "ssd300/expanded_conv_7/project/BatchNorm/Reshape/shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000@\000\000\000\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "ssd300/expanded_conv_7/project/BatchNorm/Reshape"
  op: "Reshape"
  input: "ssd300/expanded_conv_7/project/BatchNorm/beta/read"
  input: "ssd300/expanded_conv_7/project/BatchNorm/Reshape/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "ssd300/expanded_conv_7/project/BatchNorm/Reshape_1/shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000@\000\000\000\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "ssd300/expanded_conv_7/project/BatchNorm/Reshape_1"
  op: "Reshape"
  input: "ssd300/expanded_conv_7/project/BatchNorm/moving_mean/read"
  input: "ssd300/expanded_conv_7/project/BatchNorm/Reshape_1/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "ssd300/expanded_conv_7/project/BatchNorm/Reshape_2/shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000@\000\000\000\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "ssd300/expanded_conv_7/project/BatchNorm/Reshape_2"
  op: "Reshape"
  input: "ssd300/expanded_conv_7/project/BatchNorm/moving_variance/read"
  input: "ssd300/expanded_conv_7/project/BatchNorm/Reshape_2/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "ssd300/expanded_conv_7/project/BatchNorm/batchnorm_1/Add/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0010000000474974513
      }
    }
  }
}
node {
  name: "ssd300/expanded_conv_7/project/BatchNorm/batchnorm_1/Add"
  op: "Add"
  input: "ssd300/expanded_conv_7/project/BatchNorm/Reshape_2"
  input: "ssd300/expanded_conv_7/project/BatchNorm/batchnorm_1/Add/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ssd300/expanded_conv_7/project/BatchNorm/batchnorm_1/Rsqrt"
  op: "Rsqrt"
  input: "ssd300/expanded_conv_7/project/BatchNorm/batchnorm_1/Add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ssd300/expanded_conv_7/project/BatchNorm/batchnorm_1/mul"
  op: "Mul"
  input: "ssd300/expanded_conv_7/project/layer_conv2d/Conv2D"
  input: "ssd300/expanded_conv_7/project/BatchNorm/batchnorm_1/Rsqrt"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ssd300/expanded_conv_7/project/BatchNorm/batchnorm_1/mul_1"
  op: "Mul"
  input: "ssd300/expanded_conv_7/project/BatchNorm/Reshape_1"
  input: "ssd300/expanded_conv_7/project/BatchNorm/batchnorm_1/Rsqrt"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ssd300/expanded_conv_7/project/BatchNorm/batchnorm_1/sub"
  op: "Sub"
  input: "ssd300/expanded_conv_7/project/BatchNorm/Reshape"
  input: "ssd300/expanded_conv_7/project/BatchNorm/batchnorm_1/mul_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ssd300/expanded_conv_7/project/BatchNorm/batchnorm_1/Add_1"
  op: "Add"
  input: "ssd300/expanded_conv_7/project/BatchNorm/batchnorm_1/mul"
  input: "ssd300/expanded_conv_7/project/BatchNorm/batchnorm_1/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ssd300/expanded_conv_7/Add"
  op: "Add"
  input: "ssd300/expanded_conv_7/project/BatchNorm/batchnorm_1/Add_1"
  input: "ssd300/expanded_conv_6/project/BatchNorm/batchnorm_1/Add_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ssd300/expanded_conv_8/expand/weights/Initializer/random_uniform/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv_8/expand/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000@\000\000\000\200\001\000\000"
      }
    }
  }
}
node {
  name: "ssd300/expanded_conv_8/expand/weights/Initializer/random_uniform/min"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv_8/expand/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: -0.1157275140285492
      }
    }
  }
}
node {
  name: "ssd300/expanded_conv_8/expand/weights/Initializer/random_uniform/max"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv_8/expand/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.1157275140285492
      }
    }
  }
}
node {
  name: "ssd300/expanded_conv_8/expand/weights/Initializer/random_uniform/RandomUniform"
  op: "RandomUniform"
  input: "ssd300/expanded_conv_8/expand/weights/Initializer/random_uniform/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv_8/expand/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "ssd300/expanded_conv_8/expand/weights/Initializer/random_uniform/sub"
  op: "Sub"
  input: "ssd300/expanded_conv_8/expand/weights/Initializer/random_uniform/max"
  input: "ssd300/expanded_conv_8/expand/weights/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv_8/expand/weights"
      }
    }
  }
}
node {
  name: "ssd300/expanded_conv_8/expand/weights/Initializer/random_uniform/mul"
  op: "Mul"
  input: "ssd300/expanded_conv_8/expand/weights/Initializer/random_uniform/RandomUniform"
  input: "ssd300/expanded_conv_8/expand/weights/Initializer/random_uniform/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv_8/expand/weights"
      }
    }
  }
}
node {
  name: "ssd300/expanded_conv_8/expand/weights/Initializer/random_uniform"
  op: "Add"
  input: "ssd300/expanded_conv_8/expand/weights/Initializer/random_uniform/mul"
  input: "ssd300/expanded_conv_8/expand/weights/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv_8/expand/weights"
      }
    }
  }
}
node {
  name: "ssd300/expanded_conv_8/expand/weights"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv_8/expand/weights"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
        dim {
          size: 1
        }
        dim {
          size: 64
        }
        dim {
          size: 384
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "ssd300/expanded_conv_8/expand/weights/Assign"
  op: "Assign"
  input: "ssd300/expanded_conv_8/expand/weights"
  input: "ssd300/expanded_conv_8/expand/weights/Initializer/random_uniform"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv_8/expand/weights"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "ssd300/expanded_conv_8/expand/weights/read"
  op: "Identity"
  input: "ssd300/expanded_conv_8/expand/weights"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv_8/expand/weights"
      }
    }
  }
}
node {
  name: "ssd300/expanded_conv_8/expand/layer_conv2d/Conv2D"
  op: "Conv2D"
  input: "ssd300/expanded_conv_7/Add"
  input: "ssd300/expanded_conv_8/expand/weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NCHW"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "explicit_paddings"
    value {
      list {
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "ssd300/expanded_conv_8/expand/BatchNorm/beta/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv_8/expand/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 384
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "ssd300/expanded_conv_8/expand/BatchNorm/beta"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv_8/expand/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 384
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "ssd300/expanded_conv_8/expand/BatchNorm/beta/Assign"
  op: "Assign"
  input: "ssd300/expanded_conv_8/expand/BatchNorm/beta"
  input: "ssd300/expanded_conv_8/expand/BatchNorm/beta/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv_8/expand/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "ssd300/expanded_conv_8/expand/BatchNorm/beta/read"
  op: "Identity"
  input: "ssd300/expanded_conv_8/expand/BatchNorm/beta"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv_8/expand/BatchNorm/beta"
      }
    }
  }
}
node {
  name: "ssd300/expanded_conv_8/expand/BatchNorm/moving_mean/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv_8/expand/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 384
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "ssd300/expanded_conv_8/expand/BatchNorm/moving_mean"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv_8/expand/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 384
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "ssd300/expanded_conv_8/expand/BatchNorm/moving_mean/Assign"
  op: "Assign"
  input: "ssd300/expanded_conv_8/expand/BatchNorm/moving_mean"
  input: "ssd300/expanded_conv_8/expand/BatchNorm/moving_mean/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv_8/expand/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "ssd300/expanded_conv_8/expand/BatchNorm/moving_mean/read"
  op: "Identity"
  input: "ssd300/expanded_conv_8/expand/BatchNorm/moving_mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv_8/expand/BatchNorm/moving_mean"
      }
    }
  }
}
node {
  name: "ssd300/expanded_conv_8/expand/BatchNorm/moving_variance/Initializer/ones"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv_8/expand/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 384
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "ssd300/expanded_conv_8/expand/BatchNorm/moving_variance"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv_8/expand/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 384
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "ssd300/expanded_conv_8/expand/BatchNorm/moving_variance/Assign"
  op: "Assign"
  input: "ssd300/expanded_conv_8/expand/BatchNorm/moving_variance"
  input: "ssd300/expanded_conv_8/expand/BatchNorm/moving_variance/Initializer/ones"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv_8/expand/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "ssd300/expanded_conv_8/expand/BatchNorm/moving_variance/read"
  op: "Identity"
  input: "ssd300/expanded_conv_8/expand/BatchNorm/moving_variance"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv_8/expand/BatchNorm/moving_variance"
      }
    }
  }
}
node {
  name: "ssd300/expanded_conv_8/expand/BatchNorm/Reshape/shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\200\001\000\000\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "ssd300/expanded_conv_8/expand/BatchNorm/Reshape"
  op: "Reshape"
  input: "ssd300/expanded_conv_8/expand/BatchNorm/beta/read"
  input: "ssd300/expanded_conv_8/expand/BatchNorm/Reshape/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "ssd300/expanded_conv_8/expand/BatchNorm/Reshape_1/shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\200\001\000\000\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "ssd300/expanded_conv_8/expand/BatchNorm/Reshape_1"
  op: "Reshape"
  input: "ssd300/expanded_conv_8/expand/BatchNorm/moving_mean/read"
  input: "ssd300/expanded_conv_8/expand/BatchNorm/Reshape_1/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "ssd300/expanded_conv_8/expand/BatchNorm/Reshape_2/shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\200\001\000\000\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "ssd300/expanded_conv_8/expand/BatchNorm/Reshape_2"
  op: "Reshape"
  input: "ssd300/expanded_conv_8/expand/BatchNorm/moving_variance/read"
  input: "ssd300/expanded_conv_8/expand/BatchNorm/Reshape_2/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "ssd300/expanded_conv_8/expand/BatchNorm/batchnorm_1/Add/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0010000000474974513
      }
    }
  }
}
node {
  name: "ssd300/expanded_conv_8/expand/BatchNorm/batchnorm_1/Add"
  op: "Add"
  input: "ssd300/expanded_conv_8/expand/BatchNorm/Reshape_2"
  input: "ssd300/expanded_conv_8/expand/BatchNorm/batchnorm_1/Add/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ssd300/expanded_conv_8/expand/BatchNorm/batchnorm_1/Rsqrt"
  op: "Rsqrt"
  input: "ssd300/expanded_conv_8/expand/BatchNorm/batchnorm_1/Add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ssd300/expanded_conv_8/expand/BatchNorm/batchnorm_1/mul"
  op: "Mul"
  input: "ssd300/expanded_conv_8/expand/layer_conv2d/Conv2D"
  input: "ssd300/expanded_conv_8/expand/BatchNorm/batchnorm_1/Rsqrt"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ssd300/expanded_conv_8/expand/BatchNorm/batchnorm_1/mul_1"
  op: "Mul"
  input: "ssd300/expanded_conv_8/expand/BatchNorm/Reshape_1"
  input: "ssd300/expanded_conv_8/expand/BatchNorm/batchnorm_1/Rsqrt"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ssd300/expanded_conv_8/expand/BatchNorm/batchnorm_1/sub"
  op: "Sub"
  input: "ssd300/expanded_conv_8/expand/BatchNorm/Reshape"
  input: "ssd300/expanded_conv_8/expand/BatchNorm/batchnorm_1/mul_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ssd300/expanded_conv_8/expand/BatchNorm/batchnorm_1/Add_1"
  op: "Add"
  input: "ssd300/expanded_conv_8/expand/BatchNorm/batchnorm_1/mul"
  input: "ssd300/expanded_conv_8/expand/BatchNorm/batchnorm_1/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ssd300/expanded_conv_8/expand/Relu6"
  op: "Relu6"
  input: "ssd300/expanded_conv_8/expand/BatchNorm/batchnorm_1/Add_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ssd300/expanded_conv_8/depthwise/depthwise_weights/Initializer/random_uniform/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv_8/depthwise/depthwise_weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\003\000\000\000\003\000\000\000\200\001\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "ssd300/expanded_conv_8/depthwise/depthwise_weights/Initializer/random_uniform/min"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv_8/depthwise/depthwise_weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: -0.04161251708865166
      }
    }
  }
}
node {
  name: "ssd300/expanded_conv_8/depthwise/depthwise_weights/Initializer/random_uniform/max"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv_8/depthwise/depthwise_weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.04161251708865166
      }
    }
  }
}
node {
  name: "ssd300/expanded_conv_8/depthwise/depthwise_weights/Initializer/random_uniform/RandomUniform"
  op: "RandomUniform"
  input: "ssd300/expanded_conv_8/depthwise/depthwise_weights/Initializer/random_uniform/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv_8/depthwise/depthwise_weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "ssd300/expanded_conv_8/depthwise/depthwise_weights/Initializer/random_uniform/sub"
  op: "Sub"
  input: "ssd300/expanded_conv_8/depthwise/depthwise_weights/Initializer/random_uniform/max"
  input: "ssd300/expanded_conv_8/depthwise/depthwise_weights/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv_8/depthwise/depthwise_weights"
      }
    }
  }
}
node {
  name: "ssd300/expanded_conv_8/depthwise/depthwise_weights/Initializer/random_uniform/mul"
  op: "Mul"
  input: "ssd300/expanded_conv_8/depthwise/depthwise_weights/Initializer/random_uniform/RandomUniform"
  input: "ssd300/expanded_conv_8/depthwise/depthwise_weights/Initializer/random_uniform/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv_8/depthwise/depthwise_weights"
      }
    }
  }
}
node {
  name: "ssd300/expanded_conv_8/depthwise/depthwise_weights/Initializer/random_uniform"
  op: "Add"
  input: "ssd300/expanded_conv_8/depthwise/depthwise_weights/Initializer/random_uniform/mul"
  input: "ssd300/expanded_conv_8/depthwise/depthwise_weights/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv_8/depthwise/depthwise_weights"
      }
    }
  }
}
node {
  name: "ssd300/expanded_conv_8/depthwise/depthwise_weights"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv_8/depthwise/depthwise_weights"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 3
        }
        dim {
          size: 3
        }
        dim {
          size: 384
        }
        dim {
          size: 1
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "ssd300/expanded_conv_8/depthwise/depthwise_weights/Assign"
  op: "Assign"
  input: "ssd300/expanded_conv_8/depthwise/depthwise_weights"
  input: "ssd300/expanded_conv_8/depthwise/depthwise_weights/Initializer/random_uniform"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv_8/depthwise/depthwise_weights"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "ssd300/expanded_conv_8/depthwise/depthwise_weights/read"
  op: "Identity"
  input: "ssd300/expanded_conv_8/depthwise/depthwise_weights"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv_8/depthwise/depthwise_weights"
      }
    }
  }
}
node {
  name: "ssd300/expanded_conv_8/depthwise/layer_conv2d/depthwise/Shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\003\000\000\000\003\000\000\000\200\001\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "ssd300/expanded_conv_8/depthwise/layer_conv2d/depthwise/dilation_rate"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "ssd300/expanded_conv_8/depthwise/layer_conv2d/depthwise"
  op: "DepthwiseConv2dNative"
  input: "ssd300/expanded_conv_8/expand/Relu6"
  input: "ssd300/expanded_conv_8/depthwise/depthwise_weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NCHW"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
}
node {
  name: "ssd300/expanded_conv_8/depthwise/BatchNorm/beta/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv_8/depthwise/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 384
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "ssd300/expanded_conv_8/depthwise/BatchNorm/beta"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv_8/depthwise/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 384
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "ssd300/expanded_conv_8/depthwise/BatchNorm/beta/Assign"
  op: "Assign"
  input: "ssd300/expanded_conv_8/depthwise/BatchNorm/beta"
  input: "ssd300/expanded_conv_8/depthwise/BatchNorm/beta/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv_8/depthwise/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "ssd300/expanded_conv_8/depthwise/BatchNorm/beta/read"
  op: "Identity"
  input: "ssd300/expanded_conv_8/depthwise/BatchNorm/beta"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv_8/depthwise/BatchNorm/beta"
      }
    }
  }
}
node {
  name: "ssd300/expanded_conv_8/depthwise/BatchNorm/moving_mean/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv_8/depthwise/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 384
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "ssd300/expanded_conv_8/depthwise/BatchNorm/moving_mean"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv_8/depthwise/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 384
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "ssd300/expanded_conv_8/depthwise/BatchNorm/moving_mean/Assign"
  op: "Assign"
  input: "ssd300/expanded_conv_8/depthwise/BatchNorm/moving_mean"
  input: "ssd300/expanded_conv_8/depthwise/BatchNorm/moving_mean/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv_8/depthwise/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "ssd300/expanded_conv_8/depthwise/BatchNorm/moving_mean/read"
  op: "Identity"
  input: "ssd300/expanded_conv_8/depthwise/BatchNorm/moving_mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv_8/depthwise/BatchNorm/moving_mean"
      }
    }
  }
}
node {
  name: "ssd300/expanded_conv_8/depthwise/BatchNorm/moving_variance/Initializer/ones"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv_8/depthwise/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 384
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "ssd300/expanded_conv_8/depthwise/BatchNorm/moving_variance"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv_8/depthwise/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 384
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "ssd300/expanded_conv_8/depthwise/BatchNorm/moving_variance/Assign"
  op: "Assign"
  input: "ssd300/expanded_conv_8/depthwise/BatchNorm/moving_variance"
  input: "ssd300/expanded_conv_8/depthwise/BatchNorm/moving_variance/Initializer/ones"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv_8/depthwise/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "ssd300/expanded_conv_8/depthwise/BatchNorm/moving_variance/read"
  op: "Identity"
  input: "ssd300/expanded_conv_8/depthwise/BatchNorm/moving_variance"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv_8/depthwise/BatchNorm/moving_variance"
      }
    }
  }
}
node {
  name: "ssd300/expanded_conv_8/depthwise/BatchNorm/Reshape/shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\200\001\000\000\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "ssd300/expanded_conv_8/depthwise/BatchNorm/Reshape"
  op: "Reshape"
  input: "ssd300/expanded_conv_8/depthwise/BatchNorm/beta/read"
  input: "ssd300/expanded_conv_8/depthwise/BatchNorm/Reshape/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "ssd300/expanded_conv_8/depthwise/BatchNorm/Reshape_1/shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\200\001\000\000\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "ssd300/expanded_conv_8/depthwise/BatchNorm/Reshape_1"
  op: "Reshape"
  input: "ssd300/expanded_conv_8/depthwise/BatchNorm/moving_mean/read"
  input: "ssd300/expanded_conv_8/depthwise/BatchNorm/Reshape_1/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "ssd300/expanded_conv_8/depthwise/BatchNorm/Reshape_2/shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\200\001\000\000\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "ssd300/expanded_conv_8/depthwise/BatchNorm/Reshape_2"
  op: "Reshape"
  input: "ssd300/expanded_conv_8/depthwise/BatchNorm/moving_variance/read"
  input: "ssd300/expanded_conv_8/depthwise/BatchNorm/Reshape_2/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "ssd300/expanded_conv_8/depthwise/BatchNorm/batchnorm_1/Add/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0010000000474974513
      }
    }
  }
}
node {
  name: "ssd300/expanded_conv_8/depthwise/BatchNorm/batchnorm_1/Add"
  op: "Add"
  input: "ssd300/expanded_conv_8/depthwise/BatchNorm/Reshape_2"
  input: "ssd300/expanded_conv_8/depthwise/BatchNorm/batchnorm_1/Add/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ssd300/expanded_conv_8/depthwise/BatchNorm/batchnorm_1/Rsqrt"
  op: "Rsqrt"
  input: "ssd300/expanded_conv_8/depthwise/BatchNorm/batchnorm_1/Add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ssd300/expanded_conv_8/depthwise/BatchNorm/batchnorm_1/mul"
  op: "Mul"
  input: "ssd300/expanded_conv_8/depthwise/layer_conv2d/depthwise"
  input: "ssd300/expanded_conv_8/depthwise/BatchNorm/batchnorm_1/Rsqrt"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ssd300/expanded_conv_8/depthwise/BatchNorm/batchnorm_1/mul_1"
  op: "Mul"
  input: "ssd300/expanded_conv_8/depthwise/BatchNorm/Reshape_1"
  input: "ssd300/expanded_conv_8/depthwise/BatchNorm/batchnorm_1/Rsqrt"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ssd300/expanded_conv_8/depthwise/BatchNorm/batchnorm_1/sub"
  op: "Sub"
  input: "ssd300/expanded_conv_8/depthwise/BatchNorm/Reshape"
  input: "ssd300/expanded_conv_8/depthwise/BatchNorm/batchnorm_1/mul_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ssd300/expanded_conv_8/depthwise/BatchNorm/batchnorm_1/Add_1"
  op: "Add"
  input: "ssd300/expanded_conv_8/depthwise/BatchNorm/batchnorm_1/mul"
  input: "ssd300/expanded_conv_8/depthwise/BatchNorm/batchnorm_1/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ssd300/expanded_conv_8/depthwise/Relu6"
  op: "Relu6"
  input: "ssd300/expanded_conv_8/depthwise/BatchNorm/batchnorm_1/Add_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ssd300/expanded_conv_8/project/weights/Initializer/random_uniform/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv_8/project/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000\200\001\000\000@\000\000\000"
      }
    }
  }
}
node {
  name: "ssd300/expanded_conv_8/project/weights/Initializer/random_uniform/min"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv_8/project/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: -0.1157275140285492
      }
    }
  }
}
node {
  name: "ssd300/expanded_conv_8/project/weights/Initializer/random_uniform/max"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv_8/project/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.1157275140285492
      }
    }
  }
}
node {
  name: "ssd300/expanded_conv_8/project/weights/Initializer/random_uniform/RandomUniform"
  op: "RandomUniform"
  input: "ssd300/expanded_conv_8/project/weights/Initializer/random_uniform/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv_8/project/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "ssd300/expanded_conv_8/project/weights/Initializer/random_uniform/sub"
  op: "Sub"
  input: "ssd300/expanded_conv_8/project/weights/Initializer/random_uniform/max"
  input: "ssd300/expanded_conv_8/project/weights/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv_8/project/weights"
      }
    }
  }
}
node {
  name: "ssd300/expanded_conv_8/project/weights/Initializer/random_uniform/mul"
  op: "Mul"
  input: "ssd300/expanded_conv_8/project/weights/Initializer/random_uniform/RandomUniform"
  input: "ssd300/expanded_conv_8/project/weights/Initializer/random_uniform/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv_8/project/weights"
      }
    }
  }
}
node {
  name: "ssd300/expanded_conv_8/project/weights/Initializer/random_uniform"
  op: "Add"
  input: "ssd300/expanded_conv_8/project/weights/Initializer/random_uniform/mul"
  input: "ssd300/expanded_conv_8/project/weights/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv_8/project/weights"
      }
    }
  }
}
node {
  name: "ssd300/expanded_conv_8/project/weights"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv_8/project/weights"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
        dim {
          size: 1
        }
        dim {
          size: 384
        }
        dim {
          size: 64
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "ssd300/expanded_conv_8/project/weights/Assign"
  op: "Assign"
  input: "ssd300/expanded_conv_8/project/weights"
  input: "ssd300/expanded_conv_8/project/weights/Initializer/random_uniform"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv_8/project/weights"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "ssd300/expanded_conv_8/project/weights/read"
  op: "Identity"
  input: "ssd300/expanded_conv_8/project/weights"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv_8/project/weights"
      }
    }
  }
}
node {
  name: "ssd300/expanded_conv_8/project/layer_conv2d/Conv2D"
  op: "Conv2D"
  input: "ssd300/expanded_conv_8/depthwise/Relu6"
  input: "ssd300/expanded_conv_8/project/weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NCHW"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "explicit_paddings"
    value {
      list {
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "ssd300/expanded_conv_8/project/BatchNorm/beta/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv_8/project/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 64
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "ssd300/expanded_conv_8/project/BatchNorm/beta"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv_8/project/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 64
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "ssd300/expanded_conv_8/project/BatchNorm/beta/Assign"
  op: "Assign"
  input: "ssd300/expanded_conv_8/project/BatchNorm/beta"
  input: "ssd300/expanded_conv_8/project/BatchNorm/beta/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv_8/project/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "ssd300/expanded_conv_8/project/BatchNorm/beta/read"
  op: "Identity"
  input: "ssd300/expanded_conv_8/project/BatchNorm/beta"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv_8/project/BatchNorm/beta"
      }
    }
  }
}
node {
  name: "ssd300/expanded_conv_8/project/BatchNorm/moving_mean/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv_8/project/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 64
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "ssd300/expanded_conv_8/project/BatchNorm/moving_mean"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv_8/project/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 64
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "ssd300/expanded_conv_8/project/BatchNorm/moving_mean/Assign"
  op: "Assign"
  input: "ssd300/expanded_conv_8/project/BatchNorm/moving_mean"
  input: "ssd300/expanded_conv_8/project/BatchNorm/moving_mean/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv_8/project/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "ssd300/expanded_conv_8/project/BatchNorm/moving_mean/read"
  op: "Identity"
  input: "ssd300/expanded_conv_8/project/BatchNorm/moving_mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv_8/project/BatchNorm/moving_mean"
      }
    }
  }
}
node {
  name: "ssd300/expanded_conv_8/project/BatchNorm/moving_variance/Initializer/ones"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv_8/project/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 64
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "ssd300/expanded_conv_8/project/BatchNorm/moving_variance"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv_8/project/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 64
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "ssd300/expanded_conv_8/project/BatchNorm/moving_variance/Assign"
  op: "Assign"
  input: "ssd300/expanded_conv_8/project/BatchNorm/moving_variance"
  input: "ssd300/expanded_conv_8/project/BatchNorm/moving_variance/Initializer/ones"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv_8/project/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "ssd300/expanded_conv_8/project/BatchNorm/moving_variance/read"
  op: "Identity"
  input: "ssd300/expanded_conv_8/project/BatchNorm/moving_variance"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv_8/project/BatchNorm/moving_variance"
      }
    }
  }
}
node {
  name: "ssd300/expanded_conv_8/project/BatchNorm/Reshape/shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000@\000\000\000\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "ssd300/expanded_conv_8/project/BatchNorm/Reshape"
  op: "Reshape"
  input: "ssd300/expanded_conv_8/project/BatchNorm/beta/read"
  input: "ssd300/expanded_conv_8/project/BatchNorm/Reshape/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "ssd300/expanded_conv_8/project/BatchNorm/Reshape_1/shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000@\000\000\000\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "ssd300/expanded_conv_8/project/BatchNorm/Reshape_1"
  op: "Reshape"
  input: "ssd300/expanded_conv_8/project/BatchNorm/moving_mean/read"
  input: "ssd300/expanded_conv_8/project/BatchNorm/Reshape_1/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "ssd300/expanded_conv_8/project/BatchNorm/Reshape_2/shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000@\000\000\000\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "ssd300/expanded_conv_8/project/BatchNorm/Reshape_2"
  op: "Reshape"
  input: "ssd300/expanded_conv_8/project/BatchNorm/moving_variance/read"
  input: "ssd300/expanded_conv_8/project/BatchNorm/Reshape_2/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "ssd300/expanded_conv_8/project/BatchNorm/batchnorm_1/Add/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0010000000474974513
      }
    }
  }
}
node {
  name: "ssd300/expanded_conv_8/project/BatchNorm/batchnorm_1/Add"
  op: "Add"
  input: "ssd300/expanded_conv_8/project/BatchNorm/Reshape_2"
  input: "ssd300/expanded_conv_8/project/BatchNorm/batchnorm_1/Add/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ssd300/expanded_conv_8/project/BatchNorm/batchnorm_1/Rsqrt"
  op: "Rsqrt"
  input: "ssd300/expanded_conv_8/project/BatchNorm/batchnorm_1/Add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ssd300/expanded_conv_8/project/BatchNorm/batchnorm_1/mul"
  op: "Mul"
  input: "ssd300/expanded_conv_8/project/layer_conv2d/Conv2D"
  input: "ssd300/expanded_conv_8/project/BatchNorm/batchnorm_1/Rsqrt"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ssd300/expanded_conv_8/project/BatchNorm/batchnorm_1/mul_1"
  op: "Mul"
  input: "ssd300/expanded_conv_8/project/BatchNorm/Reshape_1"
  input: "ssd300/expanded_conv_8/project/BatchNorm/batchnorm_1/Rsqrt"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ssd300/expanded_conv_8/project/BatchNorm/batchnorm_1/sub"
  op: "Sub"
  input: "ssd300/expanded_conv_8/project/BatchNorm/Reshape"
  input: "ssd300/expanded_conv_8/project/BatchNorm/batchnorm_1/mul_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ssd300/expanded_conv_8/project/BatchNorm/batchnorm_1/Add_1"
  op: "Add"
  input: "ssd300/expanded_conv_8/project/BatchNorm/batchnorm_1/mul"
  input: "ssd300/expanded_conv_8/project/BatchNorm/batchnorm_1/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ssd300/expanded_conv_8/Add"
  op: "Add"
  input: "ssd300/expanded_conv_8/project/BatchNorm/batchnorm_1/Add_1"
  input: "ssd300/expanded_conv_7/Add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ssd300/expanded_conv_9/expand/weights/Initializer/random_uniform/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv_9/expand/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000@\000\000\000\200\001\000\000"
      }
    }
  }
}
node {
  name: "ssd300/expanded_conv_9/expand/weights/Initializer/random_uniform/min"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv_9/expand/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: -0.1157275140285492
      }
    }
  }
}
node {
  name: "ssd300/expanded_conv_9/expand/weights/Initializer/random_uniform/max"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv_9/expand/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.1157275140285492
      }
    }
  }
}
node {
  name: "ssd300/expanded_conv_9/expand/weights/Initializer/random_uniform/RandomUniform"
  op: "RandomUniform"
  input: "ssd300/expanded_conv_9/expand/weights/Initializer/random_uniform/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv_9/expand/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "ssd300/expanded_conv_9/expand/weights/Initializer/random_uniform/sub"
  op: "Sub"
  input: "ssd300/expanded_conv_9/expand/weights/Initializer/random_uniform/max"
  input: "ssd300/expanded_conv_9/expand/weights/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv_9/expand/weights"
      }
    }
  }
}
node {
  name: "ssd300/expanded_conv_9/expand/weights/Initializer/random_uniform/mul"
  op: "Mul"
  input: "ssd300/expanded_conv_9/expand/weights/Initializer/random_uniform/RandomUniform"
  input: "ssd300/expanded_conv_9/expand/weights/Initializer/random_uniform/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv_9/expand/weights"
      }
    }
  }
}
node {
  name: "ssd300/expanded_conv_9/expand/weights/Initializer/random_uniform"
  op: "Add"
  input: "ssd300/expanded_conv_9/expand/weights/Initializer/random_uniform/mul"
  input: "ssd300/expanded_conv_9/expand/weights/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv_9/expand/weights"
      }
    }
  }
}
node {
  name: "ssd300/expanded_conv_9/expand/weights"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv_9/expand/weights"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
        dim {
          size: 1
        }
        dim {
          size: 64
        }
        dim {
          size: 384
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "ssd300/expanded_conv_9/expand/weights/Assign"
  op: "Assign"
  input: "ssd300/expanded_conv_9/expand/weights"
  input: "ssd300/expanded_conv_9/expand/weights/Initializer/random_uniform"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv_9/expand/weights"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "ssd300/expanded_conv_9/expand/weights/read"
  op: "Identity"
  input: "ssd300/expanded_conv_9/expand/weights"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv_9/expand/weights"
      }
    }
  }
}
node {
  name: "ssd300/expanded_conv_9/expand/layer_conv2d/Conv2D"
  op: "Conv2D"
  input: "ssd300/expanded_conv_8/Add"
  input: "ssd300/expanded_conv_9/expand/weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NCHW"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "explicit_paddings"
    value {
      list {
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "ssd300/expanded_conv_9/expand/BatchNorm/beta/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv_9/expand/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 384
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "ssd300/expanded_conv_9/expand/BatchNorm/beta"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv_9/expand/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 384
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "ssd300/expanded_conv_9/expand/BatchNorm/beta/Assign"
  op: "Assign"
  input: "ssd300/expanded_conv_9/expand/BatchNorm/beta"
  input: "ssd300/expanded_conv_9/expand/BatchNorm/beta/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv_9/expand/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "ssd300/expanded_conv_9/expand/BatchNorm/beta/read"
  op: "Identity"
  input: "ssd300/expanded_conv_9/expand/BatchNorm/beta"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv_9/expand/BatchNorm/beta"
      }
    }
  }
}
node {
  name: "ssd300/expanded_conv_9/expand/BatchNorm/moving_mean/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv_9/expand/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 384
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "ssd300/expanded_conv_9/expand/BatchNorm/moving_mean"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv_9/expand/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 384
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "ssd300/expanded_conv_9/expand/BatchNorm/moving_mean/Assign"
  op: "Assign"
  input: "ssd300/expanded_conv_9/expand/BatchNorm/moving_mean"
  input: "ssd300/expanded_conv_9/expand/BatchNorm/moving_mean/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv_9/expand/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "ssd300/expanded_conv_9/expand/BatchNorm/moving_mean/read"
  op: "Identity"
  input: "ssd300/expanded_conv_9/expand/BatchNorm/moving_mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv_9/expand/BatchNorm/moving_mean"
      }
    }
  }
}
node {
  name: "ssd300/expanded_conv_9/expand/BatchNorm/moving_variance/Initializer/ones"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv_9/expand/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 384
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "ssd300/expanded_conv_9/expand/BatchNorm/moving_variance"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv_9/expand/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 384
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "ssd300/expanded_conv_9/expand/BatchNorm/moving_variance/Assign"
  op: "Assign"
  input: "ssd300/expanded_conv_9/expand/BatchNorm/moving_variance"
  input: "ssd300/expanded_conv_9/expand/BatchNorm/moving_variance/Initializer/ones"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv_9/expand/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "ssd300/expanded_conv_9/expand/BatchNorm/moving_variance/read"
  op: "Identity"
  input: "ssd300/expanded_conv_9/expand/BatchNorm/moving_variance"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv_9/expand/BatchNorm/moving_variance"
      }
    }
  }
}
node {
  name: "ssd300/expanded_conv_9/expand/BatchNorm/Reshape/shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\200\001\000\000\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "ssd300/expanded_conv_9/expand/BatchNorm/Reshape"
  op: "Reshape"
  input: "ssd300/expanded_conv_9/expand/BatchNorm/beta/read"
  input: "ssd300/expanded_conv_9/expand/BatchNorm/Reshape/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "ssd300/expanded_conv_9/expand/BatchNorm/Reshape_1/shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\200\001\000\000\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "ssd300/expanded_conv_9/expand/BatchNorm/Reshape_1"
  op: "Reshape"
  input: "ssd300/expanded_conv_9/expand/BatchNorm/moving_mean/read"
  input: "ssd300/expanded_conv_9/expand/BatchNorm/Reshape_1/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "ssd300/expanded_conv_9/expand/BatchNorm/Reshape_2/shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\200\001\000\000\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "ssd300/expanded_conv_9/expand/BatchNorm/Reshape_2"
  op: "Reshape"
  input: "ssd300/expanded_conv_9/expand/BatchNorm/moving_variance/read"
  input: "ssd300/expanded_conv_9/expand/BatchNorm/Reshape_2/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "ssd300/expanded_conv_9/expand/BatchNorm/batchnorm_1/Add/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0010000000474974513
      }
    }
  }
}
node {
  name: "ssd300/expanded_conv_9/expand/BatchNorm/batchnorm_1/Add"
  op: "Add"
  input: "ssd300/expanded_conv_9/expand/BatchNorm/Reshape_2"
  input: "ssd300/expanded_conv_9/expand/BatchNorm/batchnorm_1/Add/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ssd300/expanded_conv_9/expand/BatchNorm/batchnorm_1/Rsqrt"
  op: "Rsqrt"
  input: "ssd300/expanded_conv_9/expand/BatchNorm/batchnorm_1/Add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ssd300/expanded_conv_9/expand/BatchNorm/batchnorm_1/mul"
  op: "Mul"
  input: "ssd300/expanded_conv_9/expand/layer_conv2d/Conv2D"
  input: "ssd300/expanded_conv_9/expand/BatchNorm/batchnorm_1/Rsqrt"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ssd300/expanded_conv_9/expand/BatchNorm/batchnorm_1/mul_1"
  op: "Mul"
  input: "ssd300/expanded_conv_9/expand/BatchNorm/Reshape_1"
  input: "ssd300/expanded_conv_9/expand/BatchNorm/batchnorm_1/Rsqrt"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ssd300/expanded_conv_9/expand/BatchNorm/batchnorm_1/sub"
  op: "Sub"
  input: "ssd300/expanded_conv_9/expand/BatchNorm/Reshape"
  input: "ssd300/expanded_conv_9/expand/BatchNorm/batchnorm_1/mul_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ssd300/expanded_conv_9/expand/BatchNorm/batchnorm_1/Add_1"
  op: "Add"
  input: "ssd300/expanded_conv_9/expand/BatchNorm/batchnorm_1/mul"
  input: "ssd300/expanded_conv_9/expand/BatchNorm/batchnorm_1/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ssd300/expanded_conv_9/expand/Relu6"
  op: "Relu6"
  input: "ssd300/expanded_conv_9/expand/BatchNorm/batchnorm_1/Add_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ssd300/expanded_conv_9/depthwise/depthwise_weights/Initializer/random_uniform/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv_9/depthwise/depthwise_weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\003\000\000\000\003\000\000\000\200\001\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "ssd300/expanded_conv_9/depthwise/depthwise_weights/Initializer/random_uniform/min"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv_9/depthwise/depthwise_weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: -0.04161251708865166
      }
    }
  }
}
node {
  name: "ssd300/expanded_conv_9/depthwise/depthwise_weights/Initializer/random_uniform/max"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv_9/depthwise/depthwise_weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.04161251708865166
      }
    }
  }
}
node {
  name: "ssd300/expanded_conv_9/depthwise/depthwise_weights/Initializer/random_uniform/RandomUniform"
  op: "RandomUniform"
  input: "ssd300/expanded_conv_9/depthwise/depthwise_weights/Initializer/random_uniform/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv_9/depthwise/depthwise_weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "ssd300/expanded_conv_9/depthwise/depthwise_weights/Initializer/random_uniform/sub"
  op: "Sub"
  input: "ssd300/expanded_conv_9/depthwise/depthwise_weights/Initializer/random_uniform/max"
  input: "ssd300/expanded_conv_9/depthwise/depthwise_weights/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv_9/depthwise/depthwise_weights"
      }
    }
  }
}
node {
  name: "ssd300/expanded_conv_9/depthwise/depthwise_weights/Initializer/random_uniform/mul"
  op: "Mul"
  input: "ssd300/expanded_conv_9/depthwise/depthwise_weights/Initializer/random_uniform/RandomUniform"
  input: "ssd300/expanded_conv_9/depthwise/depthwise_weights/Initializer/random_uniform/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv_9/depthwise/depthwise_weights"
      }
    }
  }
}
node {
  name: "ssd300/expanded_conv_9/depthwise/depthwise_weights/Initializer/random_uniform"
  op: "Add"
  input: "ssd300/expanded_conv_9/depthwise/depthwise_weights/Initializer/random_uniform/mul"
  input: "ssd300/expanded_conv_9/depthwise/depthwise_weights/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv_9/depthwise/depthwise_weights"
      }
    }
  }
}
node {
  name: "ssd300/expanded_conv_9/depthwise/depthwise_weights"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv_9/depthwise/depthwise_weights"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 3
        }
        dim {
          size: 3
        }
        dim {
          size: 384
        }
        dim {
          size: 1
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "ssd300/expanded_conv_9/depthwise/depthwise_weights/Assign"
  op: "Assign"
  input: "ssd300/expanded_conv_9/depthwise/depthwise_weights"
  input: "ssd300/expanded_conv_9/depthwise/depthwise_weights/Initializer/random_uniform"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv_9/depthwise/depthwise_weights"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "ssd300/expanded_conv_9/depthwise/depthwise_weights/read"
  op: "Identity"
  input: "ssd300/expanded_conv_9/depthwise/depthwise_weights"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv_9/depthwise/depthwise_weights"
      }
    }
  }
}
node {
  name: "ssd300/expanded_conv_9/depthwise/layer_conv2d/depthwise/Shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\003\000\000\000\003\000\000\000\200\001\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "ssd300/expanded_conv_9/depthwise/layer_conv2d/depthwise/dilation_rate"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "ssd300/expanded_conv_9/depthwise/layer_conv2d/depthwise"
  op: "DepthwiseConv2dNative"
  input: "ssd300/expanded_conv_9/expand/Relu6"
  input: "ssd300/expanded_conv_9/depthwise/depthwise_weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NCHW"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
}
node {
  name: "ssd300/expanded_conv_9/depthwise/BatchNorm/beta/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv_9/depthwise/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 384
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "ssd300/expanded_conv_9/depthwise/BatchNorm/beta"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv_9/depthwise/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 384
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "ssd300/expanded_conv_9/depthwise/BatchNorm/beta/Assign"
  op: "Assign"
  input: "ssd300/expanded_conv_9/depthwise/BatchNorm/beta"
  input: "ssd300/expanded_conv_9/depthwise/BatchNorm/beta/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv_9/depthwise/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "ssd300/expanded_conv_9/depthwise/BatchNorm/beta/read"
  op: "Identity"
  input: "ssd300/expanded_conv_9/depthwise/BatchNorm/beta"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv_9/depthwise/BatchNorm/beta"
      }
    }
  }
}
node {
  name: "ssd300/expanded_conv_9/depthwise/BatchNorm/moving_mean/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv_9/depthwise/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 384
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "ssd300/expanded_conv_9/depthwise/BatchNorm/moving_mean"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv_9/depthwise/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 384
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "ssd300/expanded_conv_9/depthwise/BatchNorm/moving_mean/Assign"
  op: "Assign"
  input: "ssd300/expanded_conv_9/depthwise/BatchNorm/moving_mean"
  input: "ssd300/expanded_conv_9/depthwise/BatchNorm/moving_mean/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv_9/depthwise/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "ssd300/expanded_conv_9/depthwise/BatchNorm/moving_mean/read"
  op: "Identity"
  input: "ssd300/expanded_conv_9/depthwise/BatchNorm/moving_mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv_9/depthwise/BatchNorm/moving_mean"
      }
    }
  }
}
node {
  name: "ssd300/expanded_conv_9/depthwise/BatchNorm/moving_variance/Initializer/ones"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv_9/depthwise/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 384
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "ssd300/expanded_conv_9/depthwise/BatchNorm/moving_variance"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv_9/depthwise/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 384
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "ssd300/expanded_conv_9/depthwise/BatchNorm/moving_variance/Assign"
  op: "Assign"
  input: "ssd300/expanded_conv_9/depthwise/BatchNorm/moving_variance"
  input: "ssd300/expanded_conv_9/depthwise/BatchNorm/moving_variance/Initializer/ones"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv_9/depthwise/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "ssd300/expanded_conv_9/depthwise/BatchNorm/moving_variance/read"
  op: "Identity"
  input: "ssd300/expanded_conv_9/depthwise/BatchNorm/moving_variance"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv_9/depthwise/BatchNorm/moving_variance"
      }
    }
  }
}
node {
  name: "ssd300/expanded_conv_9/depthwise/BatchNorm/Reshape/shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\200\001\000\000\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "ssd300/expanded_conv_9/depthwise/BatchNorm/Reshape"
  op: "Reshape"
  input: "ssd300/expanded_conv_9/depthwise/BatchNorm/beta/read"
  input: "ssd300/expanded_conv_9/depthwise/BatchNorm/Reshape/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "ssd300/expanded_conv_9/depthwise/BatchNorm/Reshape_1/shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\200\001\000\000\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "ssd300/expanded_conv_9/depthwise/BatchNorm/Reshape_1"
  op: "Reshape"
  input: "ssd300/expanded_conv_9/depthwise/BatchNorm/moving_mean/read"
  input: "ssd300/expanded_conv_9/depthwise/BatchNorm/Reshape_1/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "ssd300/expanded_conv_9/depthwise/BatchNorm/Reshape_2/shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\200\001\000\000\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "ssd300/expanded_conv_9/depthwise/BatchNorm/Reshape_2"
  op: "Reshape"
  input: "ssd300/expanded_conv_9/depthwise/BatchNorm/moving_variance/read"
  input: "ssd300/expanded_conv_9/depthwise/BatchNorm/Reshape_2/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "ssd300/expanded_conv_9/depthwise/BatchNorm/batchnorm_1/Add/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0010000000474974513
      }
    }
  }
}
node {
  name: "ssd300/expanded_conv_9/depthwise/BatchNorm/batchnorm_1/Add"
  op: "Add"
  input: "ssd300/expanded_conv_9/depthwise/BatchNorm/Reshape_2"
  input: "ssd300/expanded_conv_9/depthwise/BatchNorm/batchnorm_1/Add/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ssd300/expanded_conv_9/depthwise/BatchNorm/batchnorm_1/Rsqrt"
  op: "Rsqrt"
  input: "ssd300/expanded_conv_9/depthwise/BatchNorm/batchnorm_1/Add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ssd300/expanded_conv_9/depthwise/BatchNorm/batchnorm_1/mul"
  op: "Mul"
  input: "ssd300/expanded_conv_9/depthwise/layer_conv2d/depthwise"
  input: "ssd300/expanded_conv_9/depthwise/BatchNorm/batchnorm_1/Rsqrt"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ssd300/expanded_conv_9/depthwise/BatchNorm/batchnorm_1/mul_1"
  op: "Mul"
  input: "ssd300/expanded_conv_9/depthwise/BatchNorm/Reshape_1"
  input: "ssd300/expanded_conv_9/depthwise/BatchNorm/batchnorm_1/Rsqrt"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ssd300/expanded_conv_9/depthwise/BatchNorm/batchnorm_1/sub"
  op: "Sub"
  input: "ssd300/expanded_conv_9/depthwise/BatchNorm/Reshape"
  input: "ssd300/expanded_conv_9/depthwise/BatchNorm/batchnorm_1/mul_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ssd300/expanded_conv_9/depthwise/BatchNorm/batchnorm_1/Add_1"
  op: "Add"
  input: "ssd300/expanded_conv_9/depthwise/BatchNorm/batchnorm_1/mul"
  input: "ssd300/expanded_conv_9/depthwise/BatchNorm/batchnorm_1/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ssd300/expanded_conv_9/depthwise/Relu6"
  op: "Relu6"
  input: "ssd300/expanded_conv_9/depthwise/BatchNorm/batchnorm_1/Add_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ssd300/expanded_conv_9/project/weights/Initializer/random_uniform/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv_9/project/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000\200\001\000\000@\000\000\000"
      }
    }
  }
}
node {
  name: "ssd300/expanded_conv_9/project/weights/Initializer/random_uniform/min"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv_9/project/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: -0.1157275140285492
      }
    }
  }
}
node {
  name: "ssd300/expanded_conv_9/project/weights/Initializer/random_uniform/max"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv_9/project/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.1157275140285492
      }
    }
  }
}
node {
  name: "ssd300/expanded_conv_9/project/weights/Initializer/random_uniform/RandomUniform"
  op: "RandomUniform"
  input: "ssd300/expanded_conv_9/project/weights/Initializer/random_uniform/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv_9/project/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "ssd300/expanded_conv_9/project/weights/Initializer/random_uniform/sub"
  op: "Sub"
  input: "ssd300/expanded_conv_9/project/weights/Initializer/random_uniform/max"
  input: "ssd300/expanded_conv_9/project/weights/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv_9/project/weights"
      }
    }
  }
}
node {
  name: "ssd300/expanded_conv_9/project/weights/Initializer/random_uniform/mul"
  op: "Mul"
  input: "ssd300/expanded_conv_9/project/weights/Initializer/random_uniform/RandomUniform"
  input: "ssd300/expanded_conv_9/project/weights/Initializer/random_uniform/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv_9/project/weights"
      }
    }
  }
}
node {
  name: "ssd300/expanded_conv_9/project/weights/Initializer/random_uniform"
  op: "Add"
  input: "ssd300/expanded_conv_9/project/weights/Initializer/random_uniform/mul"
  input: "ssd300/expanded_conv_9/project/weights/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv_9/project/weights"
      }
    }
  }
}
node {
  name: "ssd300/expanded_conv_9/project/weights"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv_9/project/weights"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
        dim {
          size: 1
        }
        dim {
          size: 384
        }
        dim {
          size: 64
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "ssd300/expanded_conv_9/project/weights/Assign"
  op: "Assign"
  input: "ssd300/expanded_conv_9/project/weights"
  input: "ssd300/expanded_conv_9/project/weights/Initializer/random_uniform"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv_9/project/weights"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "ssd300/expanded_conv_9/project/weights/read"
  op: "Identity"
  input: "ssd300/expanded_conv_9/project/weights"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv_9/project/weights"
      }
    }
  }
}
node {
  name: "ssd300/expanded_conv_9/project/layer_conv2d/Conv2D"
  op: "Conv2D"
  input: "ssd300/expanded_conv_9/depthwise/Relu6"
  input: "ssd300/expanded_conv_9/project/weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NCHW"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "explicit_paddings"
    value {
      list {
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "ssd300/expanded_conv_9/project/BatchNorm/beta/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv_9/project/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 64
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "ssd300/expanded_conv_9/project/BatchNorm/beta"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv_9/project/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 64
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "ssd300/expanded_conv_9/project/BatchNorm/beta/Assign"
  op: "Assign"
  input: "ssd300/expanded_conv_9/project/BatchNorm/beta"
  input: "ssd300/expanded_conv_9/project/BatchNorm/beta/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv_9/project/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "ssd300/expanded_conv_9/project/BatchNorm/beta/read"
  op: "Identity"
  input: "ssd300/expanded_conv_9/project/BatchNorm/beta"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv_9/project/BatchNorm/beta"
      }
    }
  }
}
node {
  name: "ssd300/expanded_conv_9/project/BatchNorm/moving_mean/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv_9/project/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 64
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "ssd300/expanded_conv_9/project/BatchNorm/moving_mean"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv_9/project/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 64
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "ssd300/expanded_conv_9/project/BatchNorm/moving_mean/Assign"
  op: "Assign"
  input: "ssd300/expanded_conv_9/project/BatchNorm/moving_mean"
  input: "ssd300/expanded_conv_9/project/BatchNorm/moving_mean/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv_9/project/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "ssd300/expanded_conv_9/project/BatchNorm/moving_mean/read"
  op: "Identity"
  input: "ssd300/expanded_conv_9/project/BatchNorm/moving_mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv_9/project/BatchNorm/moving_mean"
      }
    }
  }
}
node {
  name: "ssd300/expanded_conv_9/project/BatchNorm/moving_variance/Initializer/ones"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv_9/project/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 64
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "ssd300/expanded_conv_9/project/BatchNorm/moving_variance"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv_9/project/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 64
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "ssd300/expanded_conv_9/project/BatchNorm/moving_variance/Assign"
  op: "Assign"
  input: "ssd300/expanded_conv_9/project/BatchNorm/moving_variance"
  input: "ssd300/expanded_conv_9/project/BatchNorm/moving_variance/Initializer/ones"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv_9/project/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "ssd300/expanded_conv_9/project/BatchNorm/moving_variance/read"
  op: "Identity"
  input: "ssd300/expanded_conv_9/project/BatchNorm/moving_variance"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv_9/project/BatchNorm/moving_variance"
      }
    }
  }
}
node {
  name: "ssd300/expanded_conv_9/project/BatchNorm/Reshape/shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000@\000\000\000\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "ssd300/expanded_conv_9/project/BatchNorm/Reshape"
  op: "Reshape"
  input: "ssd300/expanded_conv_9/project/BatchNorm/beta/read"
  input: "ssd300/expanded_conv_9/project/BatchNorm/Reshape/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "ssd300/expanded_conv_9/project/BatchNorm/Reshape_1/shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000@\000\000\000\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "ssd300/expanded_conv_9/project/BatchNorm/Reshape_1"
  op: "Reshape"
  input: "ssd300/expanded_conv_9/project/BatchNorm/moving_mean/read"
  input: "ssd300/expanded_conv_9/project/BatchNorm/Reshape_1/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "ssd300/expanded_conv_9/project/BatchNorm/Reshape_2/shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000@\000\000\000\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "ssd300/expanded_conv_9/project/BatchNorm/Reshape_2"
  op: "Reshape"
  input: "ssd300/expanded_conv_9/project/BatchNorm/moving_variance/read"
  input: "ssd300/expanded_conv_9/project/BatchNorm/Reshape_2/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "ssd300/expanded_conv_9/project/BatchNorm/batchnorm_1/Add/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0010000000474974513
      }
    }
  }
}
node {
  name: "ssd300/expanded_conv_9/project/BatchNorm/batchnorm_1/Add"
  op: "Add"
  input: "ssd300/expanded_conv_9/project/BatchNorm/Reshape_2"
  input: "ssd300/expanded_conv_9/project/BatchNorm/batchnorm_1/Add/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ssd300/expanded_conv_9/project/BatchNorm/batchnorm_1/Rsqrt"
  op: "Rsqrt"
  input: "ssd300/expanded_conv_9/project/BatchNorm/batchnorm_1/Add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ssd300/expanded_conv_9/project/BatchNorm/batchnorm_1/mul"
  op: "Mul"
  input: "ssd300/expanded_conv_9/project/layer_conv2d/Conv2D"
  input: "ssd300/expanded_conv_9/project/BatchNorm/batchnorm_1/Rsqrt"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ssd300/expanded_conv_9/project/BatchNorm/batchnorm_1/mul_1"
  op: "Mul"
  input: "ssd300/expanded_conv_9/project/BatchNorm/Reshape_1"
  input: "ssd300/expanded_conv_9/project/BatchNorm/batchnorm_1/Rsqrt"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ssd300/expanded_conv_9/project/BatchNorm/batchnorm_1/sub"
  op: "Sub"
  input: "ssd300/expanded_conv_9/project/BatchNorm/Reshape"
  input: "ssd300/expanded_conv_9/project/BatchNorm/batchnorm_1/mul_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ssd300/expanded_conv_9/project/BatchNorm/batchnorm_1/Add_1"
  op: "Add"
  input: "ssd300/expanded_conv_9/project/BatchNorm/batchnorm_1/mul"
  input: "ssd300/expanded_conv_9/project/BatchNorm/batchnorm_1/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ssd300/expanded_conv_9/Add"
  op: "Add"
  input: "ssd300/expanded_conv_9/project/BatchNorm/batchnorm_1/Add_1"
  input: "ssd300/expanded_conv_8/Add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ssd300/expanded_conv_10/expand/weights/Initializer/random_uniform/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv_10/expand/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000@\000\000\000\200\001\000\000"
      }
    }
  }
}
node {
  name: "ssd300/expanded_conv_10/expand/weights/Initializer/random_uniform/min"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv_10/expand/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: -0.1157275140285492
      }
    }
  }
}
node {
  name: "ssd300/expanded_conv_10/expand/weights/Initializer/random_uniform/max"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv_10/expand/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.1157275140285492
      }
    }
  }
}
node {
  name: "ssd300/expanded_conv_10/expand/weights/Initializer/random_uniform/RandomUniform"
  op: "RandomUniform"
  input: "ssd300/expanded_conv_10/expand/weights/Initializer/random_uniform/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv_10/expand/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "ssd300/expanded_conv_10/expand/weights/Initializer/random_uniform/sub"
  op: "Sub"
  input: "ssd300/expanded_conv_10/expand/weights/Initializer/random_uniform/max"
  input: "ssd300/expanded_conv_10/expand/weights/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv_10/expand/weights"
      }
    }
  }
}
node {
  name: "ssd300/expanded_conv_10/expand/weights/Initializer/random_uniform/mul"
  op: "Mul"
  input: "ssd300/expanded_conv_10/expand/weights/Initializer/random_uniform/RandomUniform"
  input: "ssd300/expanded_conv_10/expand/weights/Initializer/random_uniform/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv_10/expand/weights"
      }
    }
  }
}
node {
  name: "ssd300/expanded_conv_10/expand/weights/Initializer/random_uniform"
  op: "Add"
  input: "ssd300/expanded_conv_10/expand/weights/Initializer/random_uniform/mul"
  input: "ssd300/expanded_conv_10/expand/weights/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv_10/expand/weights"
      }
    }
  }
}
node {
  name: "ssd300/expanded_conv_10/expand/weights"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv_10/expand/weights"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
        dim {
          size: 1
        }
        dim {
          size: 64
        }
        dim {
          size: 384
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "ssd300/expanded_conv_10/expand/weights/Assign"
  op: "Assign"
  input: "ssd300/expanded_conv_10/expand/weights"
  input: "ssd300/expanded_conv_10/expand/weights/Initializer/random_uniform"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv_10/expand/weights"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "ssd300/expanded_conv_10/expand/weights/read"
  op: "Identity"
  input: "ssd300/expanded_conv_10/expand/weights"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv_10/expand/weights"
      }
    }
  }
}
node {
  name: "ssd300/expanded_conv_10/expand/layer_conv2d/Conv2D"
  op: "Conv2D"
  input: "ssd300/expanded_conv_9/Add"
  input: "ssd300/expanded_conv_10/expand/weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NCHW"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "explicit_paddings"
    value {
      list {
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "ssd300/expanded_conv_10/expand/BatchNorm/beta/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv_10/expand/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 384
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "ssd300/expanded_conv_10/expand/BatchNorm/beta"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv_10/expand/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 384
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "ssd300/expanded_conv_10/expand/BatchNorm/beta/Assign"
  op: "Assign"
  input: "ssd300/expanded_conv_10/expand/BatchNorm/beta"
  input: "ssd300/expanded_conv_10/expand/BatchNorm/beta/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv_10/expand/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "ssd300/expanded_conv_10/expand/BatchNorm/beta/read"
  op: "Identity"
  input: "ssd300/expanded_conv_10/expand/BatchNorm/beta"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv_10/expand/BatchNorm/beta"
      }
    }
  }
}
node {
  name: "ssd300/expanded_conv_10/expand/BatchNorm/moving_mean/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv_10/expand/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 384
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "ssd300/expanded_conv_10/expand/BatchNorm/moving_mean"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv_10/expand/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 384
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "ssd300/expanded_conv_10/expand/BatchNorm/moving_mean/Assign"
  op: "Assign"
  input: "ssd300/expanded_conv_10/expand/BatchNorm/moving_mean"
  input: "ssd300/expanded_conv_10/expand/BatchNorm/moving_mean/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv_10/expand/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "ssd300/expanded_conv_10/expand/BatchNorm/moving_mean/read"
  op: "Identity"
  input: "ssd300/expanded_conv_10/expand/BatchNorm/moving_mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv_10/expand/BatchNorm/moving_mean"
      }
    }
  }
}
node {
  name: "ssd300/expanded_conv_10/expand/BatchNorm/moving_variance/Initializer/ones"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv_10/expand/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 384
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "ssd300/expanded_conv_10/expand/BatchNorm/moving_variance"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv_10/expand/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 384
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "ssd300/expanded_conv_10/expand/BatchNorm/moving_variance/Assign"
  op: "Assign"
  input: "ssd300/expanded_conv_10/expand/BatchNorm/moving_variance"
  input: "ssd300/expanded_conv_10/expand/BatchNorm/moving_variance/Initializer/ones"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv_10/expand/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "ssd300/expanded_conv_10/expand/BatchNorm/moving_variance/read"
  op: "Identity"
  input: "ssd300/expanded_conv_10/expand/BatchNorm/moving_variance"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv_10/expand/BatchNorm/moving_variance"
      }
    }
  }
}
node {
  name: "ssd300/expanded_conv_10/expand/BatchNorm/Reshape/shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\200\001\000\000\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "ssd300/expanded_conv_10/expand/BatchNorm/Reshape"
  op: "Reshape"
  input: "ssd300/expanded_conv_10/expand/BatchNorm/beta/read"
  input: "ssd300/expanded_conv_10/expand/BatchNorm/Reshape/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "ssd300/expanded_conv_10/expand/BatchNorm/Reshape_1/shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\200\001\000\000\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "ssd300/expanded_conv_10/expand/BatchNorm/Reshape_1"
  op: "Reshape"
  input: "ssd300/expanded_conv_10/expand/BatchNorm/moving_mean/read"
  input: "ssd300/expanded_conv_10/expand/BatchNorm/Reshape_1/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "ssd300/expanded_conv_10/expand/BatchNorm/Reshape_2/shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\200\001\000\000\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "ssd300/expanded_conv_10/expand/BatchNorm/Reshape_2"
  op: "Reshape"
  input: "ssd300/expanded_conv_10/expand/BatchNorm/moving_variance/read"
  input: "ssd300/expanded_conv_10/expand/BatchNorm/Reshape_2/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "ssd300/expanded_conv_10/expand/BatchNorm/batchnorm_1/Add/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0010000000474974513
      }
    }
  }
}
node {
  name: "ssd300/expanded_conv_10/expand/BatchNorm/batchnorm_1/Add"
  op: "Add"
  input: "ssd300/expanded_conv_10/expand/BatchNorm/Reshape_2"
  input: "ssd300/expanded_conv_10/expand/BatchNorm/batchnorm_1/Add/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ssd300/expanded_conv_10/expand/BatchNorm/batchnorm_1/Rsqrt"
  op: "Rsqrt"
  input: "ssd300/expanded_conv_10/expand/BatchNorm/batchnorm_1/Add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ssd300/expanded_conv_10/expand/BatchNorm/batchnorm_1/mul"
  op: "Mul"
  input: "ssd300/expanded_conv_10/expand/layer_conv2d/Conv2D"
  input: "ssd300/expanded_conv_10/expand/BatchNorm/batchnorm_1/Rsqrt"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ssd300/expanded_conv_10/expand/BatchNorm/batchnorm_1/mul_1"
  op: "Mul"
  input: "ssd300/expanded_conv_10/expand/BatchNorm/Reshape_1"
  input: "ssd300/expanded_conv_10/expand/BatchNorm/batchnorm_1/Rsqrt"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ssd300/expanded_conv_10/expand/BatchNorm/batchnorm_1/sub"
  op: "Sub"
  input: "ssd300/expanded_conv_10/expand/BatchNorm/Reshape"
  input: "ssd300/expanded_conv_10/expand/BatchNorm/batchnorm_1/mul_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ssd300/expanded_conv_10/expand/BatchNorm/batchnorm_1/Add_1"
  op: "Add"
  input: "ssd300/expanded_conv_10/expand/BatchNorm/batchnorm_1/mul"
  input: "ssd300/expanded_conv_10/expand/BatchNorm/batchnorm_1/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ssd300/expanded_conv_10/expand/Relu6"
  op: "Relu6"
  input: "ssd300/expanded_conv_10/expand/BatchNorm/batchnorm_1/Add_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ssd300/expanded_conv_10/depthwise/depthwise_weights/Initializer/random_uniform/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv_10/depthwise/depthwise_weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\003\000\000\000\003\000\000\000\200\001\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "ssd300/expanded_conv_10/depthwise/depthwise_weights/Initializer/random_uniform/min"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv_10/depthwise/depthwise_weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: -0.04161251708865166
      }
    }
  }
}
node {
  name: "ssd300/expanded_conv_10/depthwise/depthwise_weights/Initializer/random_uniform/max"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv_10/depthwise/depthwise_weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.04161251708865166
      }
    }
  }
}
node {
  name: "ssd300/expanded_conv_10/depthwise/depthwise_weights/Initializer/random_uniform/RandomUniform"
  op: "RandomUniform"
  input: "ssd300/expanded_conv_10/depthwise/depthwise_weights/Initializer/random_uniform/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv_10/depthwise/depthwise_weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "ssd300/expanded_conv_10/depthwise/depthwise_weights/Initializer/random_uniform/sub"
  op: "Sub"
  input: "ssd300/expanded_conv_10/depthwise/depthwise_weights/Initializer/random_uniform/max"
  input: "ssd300/expanded_conv_10/depthwise/depthwise_weights/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv_10/depthwise/depthwise_weights"
      }
    }
  }
}
node {
  name: "ssd300/expanded_conv_10/depthwise/depthwise_weights/Initializer/random_uniform/mul"
  op: "Mul"
  input: "ssd300/expanded_conv_10/depthwise/depthwise_weights/Initializer/random_uniform/RandomUniform"
  input: "ssd300/expanded_conv_10/depthwise/depthwise_weights/Initializer/random_uniform/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv_10/depthwise/depthwise_weights"
      }
    }
  }
}
node {
  name: "ssd300/expanded_conv_10/depthwise/depthwise_weights/Initializer/random_uniform"
  op: "Add"
  input: "ssd300/expanded_conv_10/depthwise/depthwise_weights/Initializer/random_uniform/mul"
  input: "ssd300/expanded_conv_10/depthwise/depthwise_weights/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv_10/depthwise/depthwise_weights"
      }
    }
  }
}
node {
  name: "ssd300/expanded_conv_10/depthwise/depthwise_weights"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv_10/depthwise/depthwise_weights"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 3
        }
        dim {
          size: 3
        }
        dim {
          size: 384
        }
        dim {
          size: 1
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "ssd300/expanded_conv_10/depthwise/depthwise_weights/Assign"
  op: "Assign"
  input: "ssd300/expanded_conv_10/depthwise/depthwise_weights"
  input: "ssd300/expanded_conv_10/depthwise/depthwise_weights/Initializer/random_uniform"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv_10/depthwise/depthwise_weights"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "ssd300/expanded_conv_10/depthwise/depthwise_weights/read"
  op: "Identity"
  input: "ssd300/expanded_conv_10/depthwise/depthwise_weights"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv_10/depthwise/depthwise_weights"
      }
    }
  }
}
node {
  name: "ssd300/expanded_conv_10/depthwise/layer_conv2d/depthwise/Shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\003\000\000\000\003\000\000\000\200\001\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "ssd300/expanded_conv_10/depthwise/layer_conv2d/depthwise/dilation_rate"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "ssd300/expanded_conv_10/depthwise/layer_conv2d/depthwise"
  op: "DepthwiseConv2dNative"
  input: "ssd300/expanded_conv_10/expand/Relu6"
  input: "ssd300/expanded_conv_10/depthwise/depthwise_weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NCHW"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
}
node {
  name: "ssd300/expanded_conv_10/depthwise/BatchNorm/beta/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv_10/depthwise/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 384
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "ssd300/expanded_conv_10/depthwise/BatchNorm/beta"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv_10/depthwise/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 384
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "ssd300/expanded_conv_10/depthwise/BatchNorm/beta/Assign"
  op: "Assign"
  input: "ssd300/expanded_conv_10/depthwise/BatchNorm/beta"
  input: "ssd300/expanded_conv_10/depthwise/BatchNorm/beta/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv_10/depthwise/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "ssd300/expanded_conv_10/depthwise/BatchNorm/beta/read"
  op: "Identity"
  input: "ssd300/expanded_conv_10/depthwise/BatchNorm/beta"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv_10/depthwise/BatchNorm/beta"
      }
    }
  }
}
node {
  name: "ssd300/expanded_conv_10/depthwise/BatchNorm/moving_mean/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv_10/depthwise/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 384
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "ssd300/expanded_conv_10/depthwise/BatchNorm/moving_mean"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv_10/depthwise/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 384
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "ssd300/expanded_conv_10/depthwise/BatchNorm/moving_mean/Assign"
  op: "Assign"
  input: "ssd300/expanded_conv_10/depthwise/BatchNorm/moving_mean"
  input: "ssd300/expanded_conv_10/depthwise/BatchNorm/moving_mean/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv_10/depthwise/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "ssd300/expanded_conv_10/depthwise/BatchNorm/moving_mean/read"
  op: "Identity"
  input: "ssd300/expanded_conv_10/depthwise/BatchNorm/moving_mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv_10/depthwise/BatchNorm/moving_mean"
      }
    }
  }
}
node {
  name: "ssd300/expanded_conv_10/depthwise/BatchNorm/moving_variance/Initializer/ones"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv_10/depthwise/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 384
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "ssd300/expanded_conv_10/depthwise/BatchNorm/moving_variance"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv_10/depthwise/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 384
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "ssd300/expanded_conv_10/depthwise/BatchNorm/moving_variance/Assign"
  op: "Assign"
  input: "ssd300/expanded_conv_10/depthwise/BatchNorm/moving_variance"
  input: "ssd300/expanded_conv_10/depthwise/BatchNorm/moving_variance/Initializer/ones"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv_10/depthwise/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "ssd300/expanded_conv_10/depthwise/BatchNorm/moving_variance/read"
  op: "Identity"
  input: "ssd300/expanded_conv_10/depthwise/BatchNorm/moving_variance"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv_10/depthwise/BatchNorm/moving_variance"
      }
    }
  }
}
node {
  name: "ssd300/expanded_conv_10/depthwise/BatchNorm/Reshape/shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\200\001\000\000\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "ssd300/expanded_conv_10/depthwise/BatchNorm/Reshape"
  op: "Reshape"
  input: "ssd300/expanded_conv_10/depthwise/BatchNorm/beta/read"
  input: "ssd300/expanded_conv_10/depthwise/BatchNorm/Reshape/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "ssd300/expanded_conv_10/depthwise/BatchNorm/Reshape_1/shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\200\001\000\000\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "ssd300/expanded_conv_10/depthwise/BatchNorm/Reshape_1"
  op: "Reshape"
  input: "ssd300/expanded_conv_10/depthwise/BatchNorm/moving_mean/read"
  input: "ssd300/expanded_conv_10/depthwise/BatchNorm/Reshape_1/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "ssd300/expanded_conv_10/depthwise/BatchNorm/Reshape_2/shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\200\001\000\000\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "ssd300/expanded_conv_10/depthwise/BatchNorm/Reshape_2"
  op: "Reshape"
  input: "ssd300/expanded_conv_10/depthwise/BatchNorm/moving_variance/read"
  input: "ssd300/expanded_conv_10/depthwise/BatchNorm/Reshape_2/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "ssd300/expanded_conv_10/depthwise/BatchNorm/batchnorm_1/Add/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0010000000474974513
      }
    }
  }
}
node {
  name: "ssd300/expanded_conv_10/depthwise/BatchNorm/batchnorm_1/Add"
  op: "Add"
  input: "ssd300/expanded_conv_10/depthwise/BatchNorm/Reshape_2"
  input: "ssd300/expanded_conv_10/depthwise/BatchNorm/batchnorm_1/Add/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ssd300/expanded_conv_10/depthwise/BatchNorm/batchnorm_1/Rsqrt"
  op: "Rsqrt"
  input: "ssd300/expanded_conv_10/depthwise/BatchNorm/batchnorm_1/Add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ssd300/expanded_conv_10/depthwise/BatchNorm/batchnorm_1/mul"
  op: "Mul"
  input: "ssd300/expanded_conv_10/depthwise/layer_conv2d/depthwise"
  input: "ssd300/expanded_conv_10/depthwise/BatchNorm/batchnorm_1/Rsqrt"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ssd300/expanded_conv_10/depthwise/BatchNorm/batchnorm_1/mul_1"
  op: "Mul"
  input: "ssd300/expanded_conv_10/depthwise/BatchNorm/Reshape_1"
  input: "ssd300/expanded_conv_10/depthwise/BatchNorm/batchnorm_1/Rsqrt"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ssd300/expanded_conv_10/depthwise/BatchNorm/batchnorm_1/sub"
  op: "Sub"
  input: "ssd300/expanded_conv_10/depthwise/BatchNorm/Reshape"
  input: "ssd300/expanded_conv_10/depthwise/BatchNorm/batchnorm_1/mul_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ssd300/expanded_conv_10/depthwise/BatchNorm/batchnorm_1/Add_1"
  op: "Add"
  input: "ssd300/expanded_conv_10/depthwise/BatchNorm/batchnorm_1/mul"
  input: "ssd300/expanded_conv_10/depthwise/BatchNorm/batchnorm_1/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ssd300/expanded_conv_10/depthwise/Relu6"
  op: "Relu6"
  input: "ssd300/expanded_conv_10/depthwise/BatchNorm/batchnorm_1/Add_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ssd300/expanded_conv_10/project/weights/Initializer/random_uniform/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv_10/project/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000\200\001\000\000`\000\000\000"
      }
    }
  }
}
node {
  name: "ssd300/expanded_conv_10/project/weights/Initializer/random_uniform/min"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv_10/project/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: -0.11180339753627777
      }
    }
  }
}
node {
  name: "ssd300/expanded_conv_10/project/weights/Initializer/random_uniform/max"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv_10/project/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.11180339753627777
      }
    }
  }
}
node {
  name: "ssd300/expanded_conv_10/project/weights/Initializer/random_uniform/RandomUniform"
  op: "RandomUniform"
  input: "ssd300/expanded_conv_10/project/weights/Initializer/random_uniform/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv_10/project/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "ssd300/expanded_conv_10/project/weights/Initializer/random_uniform/sub"
  op: "Sub"
  input: "ssd300/expanded_conv_10/project/weights/Initializer/random_uniform/max"
  input: "ssd300/expanded_conv_10/project/weights/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv_10/project/weights"
      }
    }
  }
}
node {
  name: "ssd300/expanded_conv_10/project/weights/Initializer/random_uniform/mul"
  op: "Mul"
  input: "ssd300/expanded_conv_10/project/weights/Initializer/random_uniform/RandomUniform"
  input: "ssd300/expanded_conv_10/project/weights/Initializer/random_uniform/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv_10/project/weights"
      }
    }
  }
}
node {
  name: "ssd300/expanded_conv_10/project/weights/Initializer/random_uniform"
  op: "Add"
  input: "ssd300/expanded_conv_10/project/weights/Initializer/random_uniform/mul"
  input: "ssd300/expanded_conv_10/project/weights/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv_10/project/weights"
      }
    }
  }
}
node {
  name: "ssd300/expanded_conv_10/project/weights"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv_10/project/weights"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
        dim {
          size: 1
        }
        dim {
          size: 384
        }
        dim {
          size: 96
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "ssd300/expanded_conv_10/project/weights/Assign"
  op: "Assign"
  input: "ssd300/expanded_conv_10/project/weights"
  input: "ssd300/expanded_conv_10/project/weights/Initializer/random_uniform"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv_10/project/weights"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "ssd300/expanded_conv_10/project/weights/read"
  op: "Identity"
  input: "ssd300/expanded_conv_10/project/weights"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv_10/project/weights"
      }
    }
  }
}
node {
  name: "ssd300/expanded_conv_10/project/layer_conv2d/Conv2D"
  op: "Conv2D"
  input: "ssd300/expanded_conv_10/depthwise/Relu6"
  input: "ssd300/expanded_conv_10/project/weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NCHW"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "explicit_paddings"
    value {
      list {
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "ssd300/expanded_conv_10/project/BatchNorm/beta/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv_10/project/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 96
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "ssd300/expanded_conv_10/project/BatchNorm/beta"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv_10/project/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 96
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "ssd300/expanded_conv_10/project/BatchNorm/beta/Assign"
  op: "Assign"
  input: "ssd300/expanded_conv_10/project/BatchNorm/beta"
  input: "ssd300/expanded_conv_10/project/BatchNorm/beta/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv_10/project/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "ssd300/expanded_conv_10/project/BatchNorm/beta/read"
  op: "Identity"
  input: "ssd300/expanded_conv_10/project/BatchNorm/beta"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv_10/project/BatchNorm/beta"
      }
    }
  }
}
node {
  name: "ssd300/expanded_conv_10/project/BatchNorm/moving_mean/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv_10/project/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 96
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "ssd300/expanded_conv_10/project/BatchNorm/moving_mean"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv_10/project/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 96
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "ssd300/expanded_conv_10/project/BatchNorm/moving_mean/Assign"
  op: "Assign"
  input: "ssd300/expanded_conv_10/project/BatchNorm/moving_mean"
  input: "ssd300/expanded_conv_10/project/BatchNorm/moving_mean/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv_10/project/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "ssd300/expanded_conv_10/project/BatchNorm/moving_mean/read"
  op: "Identity"
  input: "ssd300/expanded_conv_10/project/BatchNorm/moving_mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv_10/project/BatchNorm/moving_mean"
      }
    }
  }
}
node {
  name: "ssd300/expanded_conv_10/project/BatchNorm/moving_variance/Initializer/ones"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv_10/project/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 96
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "ssd300/expanded_conv_10/project/BatchNorm/moving_variance"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv_10/project/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 96
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "ssd300/expanded_conv_10/project/BatchNorm/moving_variance/Assign"
  op: "Assign"
  input: "ssd300/expanded_conv_10/project/BatchNorm/moving_variance"
  input: "ssd300/expanded_conv_10/project/BatchNorm/moving_variance/Initializer/ones"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv_10/project/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "ssd300/expanded_conv_10/project/BatchNorm/moving_variance/read"
  op: "Identity"
  input: "ssd300/expanded_conv_10/project/BatchNorm/moving_variance"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv_10/project/BatchNorm/moving_variance"
      }
    }
  }
}
node {
  name: "ssd300/expanded_conv_10/project/BatchNorm/Reshape/shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000`\000\000\000\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "ssd300/expanded_conv_10/project/BatchNorm/Reshape"
  op: "Reshape"
  input: "ssd300/expanded_conv_10/project/BatchNorm/beta/read"
  input: "ssd300/expanded_conv_10/project/BatchNorm/Reshape/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "ssd300/expanded_conv_10/project/BatchNorm/Reshape_1/shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000`\000\000\000\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "ssd300/expanded_conv_10/project/BatchNorm/Reshape_1"
  op: "Reshape"
  input: "ssd300/expanded_conv_10/project/BatchNorm/moving_mean/read"
  input: "ssd300/expanded_conv_10/project/BatchNorm/Reshape_1/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "ssd300/expanded_conv_10/project/BatchNorm/Reshape_2/shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000`\000\000\000\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "ssd300/expanded_conv_10/project/BatchNorm/Reshape_2"
  op: "Reshape"
  input: "ssd300/expanded_conv_10/project/BatchNorm/moving_variance/read"
  input: "ssd300/expanded_conv_10/project/BatchNorm/Reshape_2/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "ssd300/expanded_conv_10/project/BatchNorm/batchnorm_1/Add/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0010000000474974513
      }
    }
  }
}
node {
  name: "ssd300/expanded_conv_10/project/BatchNorm/batchnorm_1/Add"
  op: "Add"
  input: "ssd300/expanded_conv_10/project/BatchNorm/Reshape_2"
  input: "ssd300/expanded_conv_10/project/BatchNorm/batchnorm_1/Add/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ssd300/expanded_conv_10/project/BatchNorm/batchnorm_1/Rsqrt"
  op: "Rsqrt"
  input: "ssd300/expanded_conv_10/project/BatchNorm/batchnorm_1/Add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ssd300/expanded_conv_10/project/BatchNorm/batchnorm_1/mul"
  op: "Mul"
  input: "ssd300/expanded_conv_10/project/layer_conv2d/Conv2D"
  input: "ssd300/expanded_conv_10/project/BatchNorm/batchnorm_1/Rsqrt"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ssd300/expanded_conv_10/project/BatchNorm/batchnorm_1/mul_1"
  op: "Mul"
  input: "ssd300/expanded_conv_10/project/BatchNorm/Reshape_1"
  input: "ssd300/expanded_conv_10/project/BatchNorm/batchnorm_1/Rsqrt"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ssd300/expanded_conv_10/project/BatchNorm/batchnorm_1/sub"
  op: "Sub"
  input: "ssd300/expanded_conv_10/project/BatchNorm/Reshape"
  input: "ssd300/expanded_conv_10/project/BatchNorm/batchnorm_1/mul_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ssd300/expanded_conv_10/project/BatchNorm/batchnorm_1/Add_1"
  op: "Add"
  input: "ssd300/expanded_conv_10/project/BatchNorm/batchnorm_1/mul"
  input: "ssd300/expanded_conv_10/project/BatchNorm/batchnorm_1/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ssd300/expanded_conv_11/expand/weights/Initializer/random_uniform/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv_11/expand/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000`\000\000\000@\002\000\000"
      }
    }
  }
}
node {
  name: "ssd300/expanded_conv_11/expand/weights/Initializer/random_uniform/min"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv_11/expand/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: -0.09449111670255661
      }
    }
  }
}
node {
  name: "ssd300/expanded_conv_11/expand/weights/Initializer/random_uniform/max"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv_11/expand/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.09449111670255661
      }
    }
  }
}
node {
  name: "ssd300/expanded_conv_11/expand/weights/Initializer/random_uniform/RandomUniform"
  op: "RandomUniform"
  input: "ssd300/expanded_conv_11/expand/weights/Initializer/random_uniform/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv_11/expand/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "ssd300/expanded_conv_11/expand/weights/Initializer/random_uniform/sub"
  op: "Sub"
  input: "ssd300/expanded_conv_11/expand/weights/Initializer/random_uniform/max"
  input: "ssd300/expanded_conv_11/expand/weights/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv_11/expand/weights"
      }
    }
  }
}
node {
  name: "ssd300/expanded_conv_11/expand/weights/Initializer/random_uniform/mul"
  op: "Mul"
  input: "ssd300/expanded_conv_11/expand/weights/Initializer/random_uniform/RandomUniform"
  input: "ssd300/expanded_conv_11/expand/weights/Initializer/random_uniform/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv_11/expand/weights"
      }
    }
  }
}
node {
  name: "ssd300/expanded_conv_11/expand/weights/Initializer/random_uniform"
  op: "Add"
  input: "ssd300/expanded_conv_11/expand/weights/Initializer/random_uniform/mul"
  input: "ssd300/expanded_conv_11/expand/weights/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv_11/expand/weights"
      }
    }
  }
}
node {
  name: "ssd300/expanded_conv_11/expand/weights"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv_11/expand/weights"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
        dim {
          size: 1
        }
        dim {
          size: 96
        }
        dim {
          size: 576
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "ssd300/expanded_conv_11/expand/weights/Assign"
  op: "Assign"
  input: "ssd300/expanded_conv_11/expand/weights"
  input: "ssd300/expanded_conv_11/expand/weights/Initializer/random_uniform"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv_11/expand/weights"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "ssd300/expanded_conv_11/expand/weights/read"
  op: "Identity"
  input: "ssd300/expanded_conv_11/expand/weights"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv_11/expand/weights"
      }
    }
  }
}
node {
  name: "ssd300/expanded_conv_11/expand/layer_conv2d/Conv2D"
  op: "Conv2D"
  input: "ssd300/expanded_conv_10/project/BatchNorm/batchnorm_1/Add_1"
  input: "ssd300/expanded_conv_11/expand/weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NCHW"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "explicit_paddings"
    value {
      list {
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "ssd300/expanded_conv_11/expand/BatchNorm/beta/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv_11/expand/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 576
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "ssd300/expanded_conv_11/expand/BatchNorm/beta"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv_11/expand/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 576
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "ssd300/expanded_conv_11/expand/BatchNorm/beta/Assign"
  op: "Assign"
  input: "ssd300/expanded_conv_11/expand/BatchNorm/beta"
  input: "ssd300/expanded_conv_11/expand/BatchNorm/beta/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv_11/expand/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "ssd300/expanded_conv_11/expand/BatchNorm/beta/read"
  op: "Identity"
  input: "ssd300/expanded_conv_11/expand/BatchNorm/beta"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv_11/expand/BatchNorm/beta"
      }
    }
  }
}
node {
  name: "ssd300/expanded_conv_11/expand/BatchNorm/moving_mean/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv_11/expand/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 576
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "ssd300/expanded_conv_11/expand/BatchNorm/moving_mean"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv_11/expand/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 576
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "ssd300/expanded_conv_11/expand/BatchNorm/moving_mean/Assign"
  op: "Assign"
  input: "ssd300/expanded_conv_11/expand/BatchNorm/moving_mean"
  input: "ssd300/expanded_conv_11/expand/BatchNorm/moving_mean/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv_11/expand/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "ssd300/expanded_conv_11/expand/BatchNorm/moving_mean/read"
  op: "Identity"
  input: "ssd300/expanded_conv_11/expand/BatchNorm/moving_mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv_11/expand/BatchNorm/moving_mean"
      }
    }
  }
}
node {
  name: "ssd300/expanded_conv_11/expand/BatchNorm/moving_variance/Initializer/ones"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv_11/expand/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 576
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "ssd300/expanded_conv_11/expand/BatchNorm/moving_variance"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv_11/expand/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 576
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "ssd300/expanded_conv_11/expand/BatchNorm/moving_variance/Assign"
  op: "Assign"
  input: "ssd300/expanded_conv_11/expand/BatchNorm/moving_variance"
  input: "ssd300/expanded_conv_11/expand/BatchNorm/moving_variance/Initializer/ones"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv_11/expand/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "ssd300/expanded_conv_11/expand/BatchNorm/moving_variance/read"
  op: "Identity"
  input: "ssd300/expanded_conv_11/expand/BatchNorm/moving_variance"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv_11/expand/BatchNorm/moving_variance"
      }
    }
  }
}
node {
  name: "ssd300/expanded_conv_11/expand/BatchNorm/Reshape/shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000@\002\000\000\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "ssd300/expanded_conv_11/expand/BatchNorm/Reshape"
  op: "Reshape"
  input: "ssd300/expanded_conv_11/expand/BatchNorm/beta/read"
  input: "ssd300/expanded_conv_11/expand/BatchNorm/Reshape/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "ssd300/expanded_conv_11/expand/BatchNorm/Reshape_1/shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000@\002\000\000\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "ssd300/expanded_conv_11/expand/BatchNorm/Reshape_1"
  op: "Reshape"
  input: "ssd300/expanded_conv_11/expand/BatchNorm/moving_mean/read"
  input: "ssd300/expanded_conv_11/expand/BatchNorm/Reshape_1/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "ssd300/expanded_conv_11/expand/BatchNorm/Reshape_2/shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000@\002\000\000\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "ssd300/expanded_conv_11/expand/BatchNorm/Reshape_2"
  op: "Reshape"
  input: "ssd300/expanded_conv_11/expand/BatchNorm/moving_variance/read"
  input: "ssd300/expanded_conv_11/expand/BatchNorm/Reshape_2/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "ssd300/expanded_conv_11/expand/BatchNorm/batchnorm_1/Add/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0010000000474974513
      }
    }
  }
}
node {
  name: "ssd300/expanded_conv_11/expand/BatchNorm/batchnorm_1/Add"
  op: "Add"
  input: "ssd300/expanded_conv_11/expand/BatchNorm/Reshape_2"
  input: "ssd300/expanded_conv_11/expand/BatchNorm/batchnorm_1/Add/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ssd300/expanded_conv_11/expand/BatchNorm/batchnorm_1/Rsqrt"
  op: "Rsqrt"
  input: "ssd300/expanded_conv_11/expand/BatchNorm/batchnorm_1/Add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ssd300/expanded_conv_11/expand/BatchNorm/batchnorm_1/mul"
  op: "Mul"
  input: "ssd300/expanded_conv_11/expand/layer_conv2d/Conv2D"
  input: "ssd300/expanded_conv_11/expand/BatchNorm/batchnorm_1/Rsqrt"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ssd300/expanded_conv_11/expand/BatchNorm/batchnorm_1/mul_1"
  op: "Mul"
  input: "ssd300/expanded_conv_11/expand/BatchNorm/Reshape_1"
  input: "ssd300/expanded_conv_11/expand/BatchNorm/batchnorm_1/Rsqrt"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ssd300/expanded_conv_11/expand/BatchNorm/batchnorm_1/sub"
  op: "Sub"
  input: "ssd300/expanded_conv_11/expand/BatchNorm/Reshape"
  input: "ssd300/expanded_conv_11/expand/BatchNorm/batchnorm_1/mul_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ssd300/expanded_conv_11/expand/BatchNorm/batchnorm_1/Add_1"
  op: "Add"
  input: "ssd300/expanded_conv_11/expand/BatchNorm/batchnorm_1/mul"
  input: "ssd300/expanded_conv_11/expand/BatchNorm/batchnorm_1/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ssd300/expanded_conv_11/expand/Relu6"
  op: "Relu6"
  input: "ssd300/expanded_conv_11/expand/BatchNorm/batchnorm_1/Add_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ssd300/expanded_conv_11/depthwise/depthwise_weights/Initializer/random_uniform/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv_11/depthwise/depthwise_weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\003\000\000\000\003\000\000\000@\002\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "ssd300/expanded_conv_11/depthwise/depthwise_weights/Initializer/random_uniform/min"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv_11/depthwise/depthwise_weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: -0.03399119898676872
      }
    }
  }
}
node {
  name: "ssd300/expanded_conv_11/depthwise/depthwise_weights/Initializer/random_uniform/max"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv_11/depthwise/depthwise_weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.03399119898676872
      }
    }
  }
}
node {
  name: "ssd300/expanded_conv_11/depthwise/depthwise_weights/Initializer/random_uniform/RandomUniform"
  op: "RandomUniform"
  input: "ssd300/expanded_conv_11/depthwise/depthwise_weights/Initializer/random_uniform/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv_11/depthwise/depthwise_weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "ssd300/expanded_conv_11/depthwise/depthwise_weights/Initializer/random_uniform/sub"
  op: "Sub"
  input: "ssd300/expanded_conv_11/depthwise/depthwise_weights/Initializer/random_uniform/max"
  input: "ssd300/expanded_conv_11/depthwise/depthwise_weights/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv_11/depthwise/depthwise_weights"
      }
    }
  }
}
node {
  name: "ssd300/expanded_conv_11/depthwise/depthwise_weights/Initializer/random_uniform/mul"
  op: "Mul"
  input: "ssd300/expanded_conv_11/depthwise/depthwise_weights/Initializer/random_uniform/RandomUniform"
  input: "ssd300/expanded_conv_11/depthwise/depthwise_weights/Initializer/random_uniform/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv_11/depthwise/depthwise_weights"
      }
    }
  }
}
node {
  name: "ssd300/expanded_conv_11/depthwise/depthwise_weights/Initializer/random_uniform"
  op: "Add"
  input: "ssd300/expanded_conv_11/depthwise/depthwise_weights/Initializer/random_uniform/mul"
  input: "ssd300/expanded_conv_11/depthwise/depthwise_weights/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv_11/depthwise/depthwise_weights"
      }
    }
  }
}
node {
  name: "ssd300/expanded_conv_11/depthwise/depthwise_weights"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv_11/depthwise/depthwise_weights"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 3
        }
        dim {
          size: 3
        }
        dim {
          size: 576
        }
        dim {
          size: 1
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "ssd300/expanded_conv_11/depthwise/depthwise_weights/Assign"
  op: "Assign"
  input: "ssd300/expanded_conv_11/depthwise/depthwise_weights"
  input: "ssd300/expanded_conv_11/depthwise/depthwise_weights/Initializer/random_uniform"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv_11/depthwise/depthwise_weights"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "ssd300/expanded_conv_11/depthwise/depthwise_weights/read"
  op: "Identity"
  input: "ssd300/expanded_conv_11/depthwise/depthwise_weights"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv_11/depthwise/depthwise_weights"
      }
    }
  }
}
node {
  name: "ssd300/expanded_conv_11/depthwise/layer_conv2d/depthwise/Shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\003\000\000\000\003\000\000\000@\002\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "ssd300/expanded_conv_11/depthwise/layer_conv2d/depthwise/dilation_rate"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "ssd300/expanded_conv_11/depthwise/layer_conv2d/depthwise"
  op: "DepthwiseConv2dNative"
  input: "ssd300/expanded_conv_11/expand/Relu6"
  input: "ssd300/expanded_conv_11/depthwise/depthwise_weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NCHW"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
}
node {
  name: "ssd300/expanded_conv_11/depthwise/BatchNorm/beta/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv_11/depthwise/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 576
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "ssd300/expanded_conv_11/depthwise/BatchNorm/beta"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv_11/depthwise/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 576
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "ssd300/expanded_conv_11/depthwise/BatchNorm/beta/Assign"
  op: "Assign"
  input: "ssd300/expanded_conv_11/depthwise/BatchNorm/beta"
  input: "ssd300/expanded_conv_11/depthwise/BatchNorm/beta/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv_11/depthwise/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "ssd300/expanded_conv_11/depthwise/BatchNorm/beta/read"
  op: "Identity"
  input: "ssd300/expanded_conv_11/depthwise/BatchNorm/beta"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv_11/depthwise/BatchNorm/beta"
      }
    }
  }
}
node {
  name: "ssd300/expanded_conv_11/depthwise/BatchNorm/moving_mean/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv_11/depthwise/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 576
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "ssd300/expanded_conv_11/depthwise/BatchNorm/moving_mean"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv_11/depthwise/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 576
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "ssd300/expanded_conv_11/depthwise/BatchNorm/moving_mean/Assign"
  op: "Assign"
  input: "ssd300/expanded_conv_11/depthwise/BatchNorm/moving_mean"
  input: "ssd300/expanded_conv_11/depthwise/BatchNorm/moving_mean/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv_11/depthwise/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "ssd300/expanded_conv_11/depthwise/BatchNorm/moving_mean/read"
  op: "Identity"
  input: "ssd300/expanded_conv_11/depthwise/BatchNorm/moving_mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv_11/depthwise/BatchNorm/moving_mean"
      }
    }
  }
}
node {
  name: "ssd300/expanded_conv_11/depthwise/BatchNorm/moving_variance/Initializer/ones"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv_11/depthwise/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 576
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "ssd300/expanded_conv_11/depthwise/BatchNorm/moving_variance"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv_11/depthwise/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 576
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "ssd300/expanded_conv_11/depthwise/BatchNorm/moving_variance/Assign"
  op: "Assign"
  input: "ssd300/expanded_conv_11/depthwise/BatchNorm/moving_variance"
  input: "ssd300/expanded_conv_11/depthwise/BatchNorm/moving_variance/Initializer/ones"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv_11/depthwise/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "ssd300/expanded_conv_11/depthwise/BatchNorm/moving_variance/read"
  op: "Identity"
  input: "ssd300/expanded_conv_11/depthwise/BatchNorm/moving_variance"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv_11/depthwise/BatchNorm/moving_variance"
      }
    }
  }
}
node {
  name: "ssd300/expanded_conv_11/depthwise/BatchNorm/Reshape/shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000@\002\000\000\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "ssd300/expanded_conv_11/depthwise/BatchNorm/Reshape"
  op: "Reshape"
  input: "ssd300/expanded_conv_11/depthwise/BatchNorm/beta/read"
  input: "ssd300/expanded_conv_11/depthwise/BatchNorm/Reshape/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "ssd300/expanded_conv_11/depthwise/BatchNorm/Reshape_1/shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000@\002\000\000\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "ssd300/expanded_conv_11/depthwise/BatchNorm/Reshape_1"
  op: "Reshape"
  input: "ssd300/expanded_conv_11/depthwise/BatchNorm/moving_mean/read"
  input: "ssd300/expanded_conv_11/depthwise/BatchNorm/Reshape_1/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "ssd300/expanded_conv_11/depthwise/BatchNorm/Reshape_2/shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000@\002\000\000\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "ssd300/expanded_conv_11/depthwise/BatchNorm/Reshape_2"
  op: "Reshape"
  input: "ssd300/expanded_conv_11/depthwise/BatchNorm/moving_variance/read"
  input: "ssd300/expanded_conv_11/depthwise/BatchNorm/Reshape_2/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "ssd300/expanded_conv_11/depthwise/BatchNorm/batchnorm_1/Add/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0010000000474974513
      }
    }
  }
}
node {
  name: "ssd300/expanded_conv_11/depthwise/BatchNorm/batchnorm_1/Add"
  op: "Add"
  input: "ssd300/expanded_conv_11/depthwise/BatchNorm/Reshape_2"
  input: "ssd300/expanded_conv_11/depthwise/BatchNorm/batchnorm_1/Add/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ssd300/expanded_conv_11/depthwise/BatchNorm/batchnorm_1/Rsqrt"
  op: "Rsqrt"
  input: "ssd300/expanded_conv_11/depthwise/BatchNorm/batchnorm_1/Add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ssd300/expanded_conv_11/depthwise/BatchNorm/batchnorm_1/mul"
  op: "Mul"
  input: "ssd300/expanded_conv_11/depthwise/layer_conv2d/depthwise"
  input: "ssd300/expanded_conv_11/depthwise/BatchNorm/batchnorm_1/Rsqrt"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ssd300/expanded_conv_11/depthwise/BatchNorm/batchnorm_1/mul_1"
  op: "Mul"
  input: "ssd300/expanded_conv_11/depthwise/BatchNorm/Reshape_1"
  input: "ssd300/expanded_conv_11/depthwise/BatchNorm/batchnorm_1/Rsqrt"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ssd300/expanded_conv_11/depthwise/BatchNorm/batchnorm_1/sub"
  op: "Sub"
  input: "ssd300/expanded_conv_11/depthwise/BatchNorm/Reshape"
  input: "ssd300/expanded_conv_11/depthwise/BatchNorm/batchnorm_1/mul_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ssd300/expanded_conv_11/depthwise/BatchNorm/batchnorm_1/Add_1"
  op: "Add"
  input: "ssd300/expanded_conv_11/depthwise/BatchNorm/batchnorm_1/mul"
  input: "ssd300/expanded_conv_11/depthwise/BatchNorm/batchnorm_1/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ssd300/expanded_conv_11/depthwise/Relu6"
  op: "Relu6"
  input: "ssd300/expanded_conv_11/depthwise/BatchNorm/batchnorm_1/Add_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ssd300/expanded_conv_11/project/weights/Initializer/random_uniform/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv_11/project/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000@\002\000\000`\000\000\000"
      }
    }
  }
}
node {
  name: "ssd300/expanded_conv_11/project/weights/Initializer/random_uniform/min"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv_11/project/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: -0.09449111670255661
      }
    }
  }
}
node {
  name: "ssd300/expanded_conv_11/project/weights/Initializer/random_uniform/max"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv_11/project/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.09449111670255661
      }
    }
  }
}
node {
  name: "ssd300/expanded_conv_11/project/weights/Initializer/random_uniform/RandomUniform"
  op: "RandomUniform"
  input: "ssd300/expanded_conv_11/project/weights/Initializer/random_uniform/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv_11/project/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "ssd300/expanded_conv_11/project/weights/Initializer/random_uniform/sub"
  op: "Sub"
  input: "ssd300/expanded_conv_11/project/weights/Initializer/random_uniform/max"
  input: "ssd300/expanded_conv_11/project/weights/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv_11/project/weights"
      }
    }
  }
}
node {
  name: "ssd300/expanded_conv_11/project/weights/Initializer/random_uniform/mul"
  op: "Mul"
  input: "ssd300/expanded_conv_11/project/weights/Initializer/random_uniform/RandomUniform"
  input: "ssd300/expanded_conv_11/project/weights/Initializer/random_uniform/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv_11/project/weights"
      }
    }
  }
}
node {
  name: "ssd300/expanded_conv_11/project/weights/Initializer/random_uniform"
  op: "Add"
  input: "ssd300/expanded_conv_11/project/weights/Initializer/random_uniform/mul"
  input: "ssd300/expanded_conv_11/project/weights/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv_11/project/weights"
      }
    }
  }
}
node {
  name: "ssd300/expanded_conv_11/project/weights"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv_11/project/weights"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
        dim {
          size: 1
        }
        dim {
          size: 576
        }
        dim {
          size: 96
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "ssd300/expanded_conv_11/project/weights/Assign"
  op: "Assign"
  input: "ssd300/expanded_conv_11/project/weights"
  input: "ssd300/expanded_conv_11/project/weights/Initializer/random_uniform"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv_11/project/weights"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "ssd300/expanded_conv_11/project/weights/read"
  op: "Identity"
  input: "ssd300/expanded_conv_11/project/weights"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv_11/project/weights"
      }
    }
  }
}
node {
  name: "ssd300/expanded_conv_11/project/layer_conv2d/Conv2D"
  op: "Conv2D"
  input: "ssd300/expanded_conv_11/depthwise/Relu6"
  input: "ssd300/expanded_conv_11/project/weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NCHW"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "explicit_paddings"
    value {
      list {
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "ssd300/expanded_conv_11/project/BatchNorm/beta/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv_11/project/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 96
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "ssd300/expanded_conv_11/project/BatchNorm/beta"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv_11/project/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 96
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "ssd300/expanded_conv_11/project/BatchNorm/beta/Assign"
  op: "Assign"
  input: "ssd300/expanded_conv_11/project/BatchNorm/beta"
  input: "ssd300/expanded_conv_11/project/BatchNorm/beta/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv_11/project/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "ssd300/expanded_conv_11/project/BatchNorm/beta/read"
  op: "Identity"
  input: "ssd300/expanded_conv_11/project/BatchNorm/beta"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv_11/project/BatchNorm/beta"
      }
    }
  }
}
node {
  name: "ssd300/expanded_conv_11/project/BatchNorm/moving_mean/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv_11/project/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 96
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "ssd300/expanded_conv_11/project/BatchNorm/moving_mean"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv_11/project/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 96
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "ssd300/expanded_conv_11/project/BatchNorm/moving_mean/Assign"
  op: "Assign"
  input: "ssd300/expanded_conv_11/project/BatchNorm/moving_mean"
  input: "ssd300/expanded_conv_11/project/BatchNorm/moving_mean/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv_11/project/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "ssd300/expanded_conv_11/project/BatchNorm/moving_mean/read"
  op: "Identity"
  input: "ssd300/expanded_conv_11/project/BatchNorm/moving_mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv_11/project/BatchNorm/moving_mean"
      }
    }
  }
}
node {
  name: "ssd300/expanded_conv_11/project/BatchNorm/moving_variance/Initializer/ones"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv_11/project/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 96
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "ssd300/expanded_conv_11/project/BatchNorm/moving_variance"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv_11/project/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 96
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "ssd300/expanded_conv_11/project/BatchNorm/moving_variance/Assign"
  op: "Assign"
  input: "ssd300/expanded_conv_11/project/BatchNorm/moving_variance"
  input: "ssd300/expanded_conv_11/project/BatchNorm/moving_variance/Initializer/ones"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv_11/project/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "ssd300/expanded_conv_11/project/BatchNorm/moving_variance/read"
  op: "Identity"
  input: "ssd300/expanded_conv_11/project/BatchNorm/moving_variance"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv_11/project/BatchNorm/moving_variance"
      }
    }
  }
}
node {
  name: "ssd300/expanded_conv_11/project/BatchNorm/Reshape/shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000`\000\000\000\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "ssd300/expanded_conv_11/project/BatchNorm/Reshape"
  op: "Reshape"
  input: "ssd300/expanded_conv_11/project/BatchNorm/beta/read"
  input: "ssd300/expanded_conv_11/project/BatchNorm/Reshape/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "ssd300/expanded_conv_11/project/BatchNorm/Reshape_1/shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000`\000\000\000\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "ssd300/expanded_conv_11/project/BatchNorm/Reshape_1"
  op: "Reshape"
  input: "ssd300/expanded_conv_11/project/BatchNorm/moving_mean/read"
  input: "ssd300/expanded_conv_11/project/BatchNorm/Reshape_1/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "ssd300/expanded_conv_11/project/BatchNorm/Reshape_2/shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000`\000\000\000\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "ssd300/expanded_conv_11/project/BatchNorm/Reshape_2"
  op: "Reshape"
  input: "ssd300/expanded_conv_11/project/BatchNorm/moving_variance/read"
  input: "ssd300/expanded_conv_11/project/BatchNorm/Reshape_2/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "ssd300/expanded_conv_11/project/BatchNorm/batchnorm_1/Add/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0010000000474974513
      }
    }
  }
}
node {
  name: "ssd300/expanded_conv_11/project/BatchNorm/batchnorm_1/Add"
  op: "Add"
  input: "ssd300/expanded_conv_11/project/BatchNorm/Reshape_2"
  input: "ssd300/expanded_conv_11/project/BatchNorm/batchnorm_1/Add/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ssd300/expanded_conv_11/project/BatchNorm/batchnorm_1/Rsqrt"
  op: "Rsqrt"
  input: "ssd300/expanded_conv_11/project/BatchNorm/batchnorm_1/Add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ssd300/expanded_conv_11/project/BatchNorm/batchnorm_1/mul"
  op: "Mul"
  input: "ssd300/expanded_conv_11/project/layer_conv2d/Conv2D"
  input: "ssd300/expanded_conv_11/project/BatchNorm/batchnorm_1/Rsqrt"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ssd300/expanded_conv_11/project/BatchNorm/batchnorm_1/mul_1"
  op: "Mul"
  input: "ssd300/expanded_conv_11/project/BatchNorm/Reshape_1"
  input: "ssd300/expanded_conv_11/project/BatchNorm/batchnorm_1/Rsqrt"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ssd300/expanded_conv_11/project/BatchNorm/batchnorm_1/sub"
  op: "Sub"
  input: "ssd300/expanded_conv_11/project/BatchNorm/Reshape"
  input: "ssd300/expanded_conv_11/project/BatchNorm/batchnorm_1/mul_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ssd300/expanded_conv_11/project/BatchNorm/batchnorm_1/Add_1"
  op: "Add"
  input: "ssd300/expanded_conv_11/project/BatchNorm/batchnorm_1/mul"
  input: "ssd300/expanded_conv_11/project/BatchNorm/batchnorm_1/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ssd300/expanded_conv_11/Add"
  op: "Add"
  input: "ssd300/expanded_conv_11/project/BatchNorm/batchnorm_1/Add_1"
  input: "ssd300/expanded_conv_10/project/BatchNorm/batchnorm_1/Add_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ssd300/expanded_conv_12/expand/weights/Initializer/random_uniform/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv_12/expand/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000`\000\000\000@\002\000\000"
      }
    }
  }
}
node {
  name: "ssd300/expanded_conv_12/expand/weights/Initializer/random_uniform/min"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv_12/expand/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: -0.09449111670255661
      }
    }
  }
}
node {
  name: "ssd300/expanded_conv_12/expand/weights/Initializer/random_uniform/max"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv_12/expand/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.09449111670255661
      }
    }
  }
}
node {
  name: "ssd300/expanded_conv_12/expand/weights/Initializer/random_uniform/RandomUniform"
  op: "RandomUniform"
  input: "ssd300/expanded_conv_12/expand/weights/Initializer/random_uniform/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv_12/expand/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "ssd300/expanded_conv_12/expand/weights/Initializer/random_uniform/sub"
  op: "Sub"
  input: "ssd300/expanded_conv_12/expand/weights/Initializer/random_uniform/max"
  input: "ssd300/expanded_conv_12/expand/weights/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv_12/expand/weights"
      }
    }
  }
}
node {
  name: "ssd300/expanded_conv_12/expand/weights/Initializer/random_uniform/mul"
  op: "Mul"
  input: "ssd300/expanded_conv_12/expand/weights/Initializer/random_uniform/RandomUniform"
  input: "ssd300/expanded_conv_12/expand/weights/Initializer/random_uniform/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv_12/expand/weights"
      }
    }
  }
}
node {
  name: "ssd300/expanded_conv_12/expand/weights/Initializer/random_uniform"
  op: "Add"
  input: "ssd300/expanded_conv_12/expand/weights/Initializer/random_uniform/mul"
  input: "ssd300/expanded_conv_12/expand/weights/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv_12/expand/weights"
      }
    }
  }
}
node {
  name: "ssd300/expanded_conv_12/expand/weights"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv_12/expand/weights"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
        dim {
          size: 1
        }
        dim {
          size: 96
        }
        dim {
          size: 576
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "ssd300/expanded_conv_12/expand/weights/Assign"
  op: "Assign"
  input: "ssd300/expanded_conv_12/expand/weights"
  input: "ssd300/expanded_conv_12/expand/weights/Initializer/random_uniform"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv_12/expand/weights"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "ssd300/expanded_conv_12/expand/weights/read"
  op: "Identity"
  input: "ssd300/expanded_conv_12/expand/weights"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv_12/expand/weights"
      }
    }
  }
}
node {
  name: "ssd300/expanded_conv_12/expand/layer_conv2d/Conv2D"
  op: "Conv2D"
  input: "ssd300/expanded_conv_11/Add"
  input: "ssd300/expanded_conv_12/expand/weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NCHW"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "explicit_paddings"
    value {
      list {
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "ssd300/expanded_conv_12/expand/BatchNorm/beta/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv_12/expand/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 576
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "ssd300/expanded_conv_12/expand/BatchNorm/beta"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv_12/expand/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 576
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "ssd300/expanded_conv_12/expand/BatchNorm/beta/Assign"
  op: "Assign"
  input: "ssd300/expanded_conv_12/expand/BatchNorm/beta"
  input: "ssd300/expanded_conv_12/expand/BatchNorm/beta/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv_12/expand/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "ssd300/expanded_conv_12/expand/BatchNorm/beta/read"
  op: "Identity"
  input: "ssd300/expanded_conv_12/expand/BatchNorm/beta"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv_12/expand/BatchNorm/beta"
      }
    }
  }
}
node {
  name: "ssd300/expanded_conv_12/expand/BatchNorm/moving_mean/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv_12/expand/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 576
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "ssd300/expanded_conv_12/expand/BatchNorm/moving_mean"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv_12/expand/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 576
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "ssd300/expanded_conv_12/expand/BatchNorm/moving_mean/Assign"
  op: "Assign"
  input: "ssd300/expanded_conv_12/expand/BatchNorm/moving_mean"
  input: "ssd300/expanded_conv_12/expand/BatchNorm/moving_mean/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv_12/expand/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "ssd300/expanded_conv_12/expand/BatchNorm/moving_mean/read"
  op: "Identity"
  input: "ssd300/expanded_conv_12/expand/BatchNorm/moving_mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv_12/expand/BatchNorm/moving_mean"
      }
    }
  }
}
node {
  name: "ssd300/expanded_conv_12/expand/BatchNorm/moving_variance/Initializer/ones"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv_12/expand/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 576
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "ssd300/expanded_conv_12/expand/BatchNorm/moving_variance"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv_12/expand/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 576
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "ssd300/expanded_conv_12/expand/BatchNorm/moving_variance/Assign"
  op: "Assign"
  input: "ssd300/expanded_conv_12/expand/BatchNorm/moving_variance"
  input: "ssd300/expanded_conv_12/expand/BatchNorm/moving_variance/Initializer/ones"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv_12/expand/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "ssd300/expanded_conv_12/expand/BatchNorm/moving_variance/read"
  op: "Identity"
  input: "ssd300/expanded_conv_12/expand/BatchNorm/moving_variance"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv_12/expand/BatchNorm/moving_variance"
      }
    }
  }
}
node {
  name: "ssd300/expanded_conv_12/expand/BatchNorm/Reshape/shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000@\002\000\000\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "ssd300/expanded_conv_12/expand/BatchNorm/Reshape"
  op: "Reshape"
  input: "ssd300/expanded_conv_12/expand/BatchNorm/beta/read"
  input: "ssd300/expanded_conv_12/expand/BatchNorm/Reshape/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "ssd300/expanded_conv_12/expand/BatchNorm/Reshape_1/shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000@\002\000\000\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "ssd300/expanded_conv_12/expand/BatchNorm/Reshape_1"
  op: "Reshape"
  input: "ssd300/expanded_conv_12/expand/BatchNorm/moving_mean/read"
  input: "ssd300/expanded_conv_12/expand/BatchNorm/Reshape_1/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "ssd300/expanded_conv_12/expand/BatchNorm/Reshape_2/shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000@\002\000\000\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "ssd300/expanded_conv_12/expand/BatchNorm/Reshape_2"
  op: "Reshape"
  input: "ssd300/expanded_conv_12/expand/BatchNorm/moving_variance/read"
  input: "ssd300/expanded_conv_12/expand/BatchNorm/Reshape_2/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "ssd300/expanded_conv_12/expand/BatchNorm/batchnorm_1/Add/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0010000000474974513
      }
    }
  }
}
node {
  name: "ssd300/expanded_conv_12/expand/BatchNorm/batchnorm_1/Add"
  op: "Add"
  input: "ssd300/expanded_conv_12/expand/BatchNorm/Reshape_2"
  input: "ssd300/expanded_conv_12/expand/BatchNorm/batchnorm_1/Add/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ssd300/expanded_conv_12/expand/BatchNorm/batchnorm_1/Rsqrt"
  op: "Rsqrt"
  input: "ssd300/expanded_conv_12/expand/BatchNorm/batchnorm_1/Add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ssd300/expanded_conv_12/expand/BatchNorm/batchnorm_1/mul"
  op: "Mul"
  input: "ssd300/expanded_conv_12/expand/layer_conv2d/Conv2D"
  input: "ssd300/expanded_conv_12/expand/BatchNorm/batchnorm_1/Rsqrt"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ssd300/expanded_conv_12/expand/BatchNorm/batchnorm_1/mul_1"
  op: "Mul"
  input: "ssd300/expanded_conv_12/expand/BatchNorm/Reshape_1"
  input: "ssd300/expanded_conv_12/expand/BatchNorm/batchnorm_1/Rsqrt"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ssd300/expanded_conv_12/expand/BatchNorm/batchnorm_1/sub"
  op: "Sub"
  input: "ssd300/expanded_conv_12/expand/BatchNorm/Reshape"
  input: "ssd300/expanded_conv_12/expand/BatchNorm/batchnorm_1/mul_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ssd300/expanded_conv_12/expand/BatchNorm/batchnorm_1/Add_1"
  op: "Add"
  input: "ssd300/expanded_conv_12/expand/BatchNorm/batchnorm_1/mul"
  input: "ssd300/expanded_conv_12/expand/BatchNorm/batchnorm_1/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ssd300/expanded_conv_12/expand/Relu6"
  op: "Relu6"
  input: "ssd300/expanded_conv_12/expand/BatchNorm/batchnorm_1/Add_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ssd300/expanded_conv_12/depthwise/depthwise_weights/Initializer/random_uniform/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv_12/depthwise/depthwise_weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\003\000\000\000\003\000\000\000@\002\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "ssd300/expanded_conv_12/depthwise/depthwise_weights/Initializer/random_uniform/min"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv_12/depthwise/depthwise_weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: -0.03399119898676872
      }
    }
  }
}
node {
  name: "ssd300/expanded_conv_12/depthwise/depthwise_weights/Initializer/random_uniform/max"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv_12/depthwise/depthwise_weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.03399119898676872
      }
    }
  }
}
node {
  name: "ssd300/expanded_conv_12/depthwise/depthwise_weights/Initializer/random_uniform/RandomUniform"
  op: "RandomUniform"
  input: "ssd300/expanded_conv_12/depthwise/depthwise_weights/Initializer/random_uniform/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv_12/depthwise/depthwise_weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "ssd300/expanded_conv_12/depthwise/depthwise_weights/Initializer/random_uniform/sub"
  op: "Sub"
  input: "ssd300/expanded_conv_12/depthwise/depthwise_weights/Initializer/random_uniform/max"
  input: "ssd300/expanded_conv_12/depthwise/depthwise_weights/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv_12/depthwise/depthwise_weights"
      }
    }
  }
}
node {
  name: "ssd300/expanded_conv_12/depthwise/depthwise_weights/Initializer/random_uniform/mul"
  op: "Mul"
  input: "ssd300/expanded_conv_12/depthwise/depthwise_weights/Initializer/random_uniform/RandomUniform"
  input: "ssd300/expanded_conv_12/depthwise/depthwise_weights/Initializer/random_uniform/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv_12/depthwise/depthwise_weights"
      }
    }
  }
}
node {
  name: "ssd300/expanded_conv_12/depthwise/depthwise_weights/Initializer/random_uniform"
  op: "Add"
  input: "ssd300/expanded_conv_12/depthwise/depthwise_weights/Initializer/random_uniform/mul"
  input: "ssd300/expanded_conv_12/depthwise/depthwise_weights/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv_12/depthwise/depthwise_weights"
      }
    }
  }
}
node {
  name: "ssd300/expanded_conv_12/depthwise/depthwise_weights"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv_12/depthwise/depthwise_weights"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 3
        }
        dim {
          size: 3
        }
        dim {
          size: 576
        }
        dim {
          size: 1
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "ssd300/expanded_conv_12/depthwise/depthwise_weights/Assign"
  op: "Assign"
  input: "ssd300/expanded_conv_12/depthwise/depthwise_weights"
  input: "ssd300/expanded_conv_12/depthwise/depthwise_weights/Initializer/random_uniform"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv_12/depthwise/depthwise_weights"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "ssd300/expanded_conv_12/depthwise/depthwise_weights/read"
  op: "Identity"
  input: "ssd300/expanded_conv_12/depthwise/depthwise_weights"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv_12/depthwise/depthwise_weights"
      }
    }
  }
}
node {
  name: "ssd300/expanded_conv_12/depthwise/layer_conv2d/depthwise/Shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\003\000\000\000\003\000\000\000@\002\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "ssd300/expanded_conv_12/depthwise/layer_conv2d/depthwise/dilation_rate"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "ssd300/expanded_conv_12/depthwise/layer_conv2d/depthwise"
  op: "DepthwiseConv2dNative"
  input: "ssd300/expanded_conv_12/expand/Relu6"
  input: "ssd300/expanded_conv_12/depthwise/depthwise_weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NCHW"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
}
node {
  name: "ssd300/expanded_conv_12/depthwise/BatchNorm/beta/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv_12/depthwise/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 576
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "ssd300/expanded_conv_12/depthwise/BatchNorm/beta"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv_12/depthwise/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 576
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "ssd300/expanded_conv_12/depthwise/BatchNorm/beta/Assign"
  op: "Assign"
  input: "ssd300/expanded_conv_12/depthwise/BatchNorm/beta"
  input: "ssd300/expanded_conv_12/depthwise/BatchNorm/beta/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv_12/depthwise/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "ssd300/expanded_conv_12/depthwise/BatchNorm/beta/read"
  op: "Identity"
  input: "ssd300/expanded_conv_12/depthwise/BatchNorm/beta"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv_12/depthwise/BatchNorm/beta"
      }
    }
  }
}
node {
  name: "ssd300/expanded_conv_12/depthwise/BatchNorm/moving_mean/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv_12/depthwise/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 576
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "ssd300/expanded_conv_12/depthwise/BatchNorm/moving_mean"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv_12/depthwise/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 576
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "ssd300/expanded_conv_12/depthwise/BatchNorm/moving_mean/Assign"
  op: "Assign"
  input: "ssd300/expanded_conv_12/depthwise/BatchNorm/moving_mean"
  input: "ssd300/expanded_conv_12/depthwise/BatchNorm/moving_mean/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv_12/depthwise/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "ssd300/expanded_conv_12/depthwise/BatchNorm/moving_mean/read"
  op: "Identity"
  input: "ssd300/expanded_conv_12/depthwise/BatchNorm/moving_mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv_12/depthwise/BatchNorm/moving_mean"
      }
    }
  }
}
node {
  name: "ssd300/expanded_conv_12/depthwise/BatchNorm/moving_variance/Initializer/ones"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv_12/depthwise/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 576
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "ssd300/expanded_conv_12/depthwise/BatchNorm/moving_variance"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv_12/depthwise/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 576
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "ssd300/expanded_conv_12/depthwise/BatchNorm/moving_variance/Assign"
  op: "Assign"
  input: "ssd300/expanded_conv_12/depthwise/BatchNorm/moving_variance"
  input: "ssd300/expanded_conv_12/depthwise/BatchNorm/moving_variance/Initializer/ones"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv_12/depthwise/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "ssd300/expanded_conv_12/depthwise/BatchNorm/moving_variance/read"
  op: "Identity"
  input: "ssd300/expanded_conv_12/depthwise/BatchNorm/moving_variance"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv_12/depthwise/BatchNorm/moving_variance"
      }
    }
  }
}
node {
  name: "ssd300/expanded_conv_12/depthwise/BatchNorm/Reshape/shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000@\002\000\000\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "ssd300/expanded_conv_12/depthwise/BatchNorm/Reshape"
  op: "Reshape"
  input: "ssd300/expanded_conv_12/depthwise/BatchNorm/beta/read"
  input: "ssd300/expanded_conv_12/depthwise/BatchNorm/Reshape/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "ssd300/expanded_conv_12/depthwise/BatchNorm/Reshape_1/shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000@\002\000\000\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "ssd300/expanded_conv_12/depthwise/BatchNorm/Reshape_1"
  op: "Reshape"
  input: "ssd300/expanded_conv_12/depthwise/BatchNorm/moving_mean/read"
  input: "ssd300/expanded_conv_12/depthwise/BatchNorm/Reshape_1/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "ssd300/expanded_conv_12/depthwise/BatchNorm/Reshape_2/shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000@\002\000\000\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "ssd300/expanded_conv_12/depthwise/BatchNorm/Reshape_2"
  op: "Reshape"
  input: "ssd300/expanded_conv_12/depthwise/BatchNorm/moving_variance/read"
  input: "ssd300/expanded_conv_12/depthwise/BatchNorm/Reshape_2/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "ssd300/expanded_conv_12/depthwise/BatchNorm/batchnorm_1/Add/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0010000000474974513
      }
    }
  }
}
node {
  name: "ssd300/expanded_conv_12/depthwise/BatchNorm/batchnorm_1/Add"
  op: "Add"
  input: "ssd300/expanded_conv_12/depthwise/BatchNorm/Reshape_2"
  input: "ssd300/expanded_conv_12/depthwise/BatchNorm/batchnorm_1/Add/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ssd300/expanded_conv_12/depthwise/BatchNorm/batchnorm_1/Rsqrt"
  op: "Rsqrt"
  input: "ssd300/expanded_conv_12/depthwise/BatchNorm/batchnorm_1/Add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ssd300/expanded_conv_12/depthwise/BatchNorm/batchnorm_1/mul"
  op: "Mul"
  input: "ssd300/expanded_conv_12/depthwise/layer_conv2d/depthwise"
  input: "ssd300/expanded_conv_12/depthwise/BatchNorm/batchnorm_1/Rsqrt"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ssd300/expanded_conv_12/depthwise/BatchNorm/batchnorm_1/mul_1"
  op: "Mul"
  input: "ssd300/expanded_conv_12/depthwise/BatchNorm/Reshape_1"
  input: "ssd300/expanded_conv_12/depthwise/BatchNorm/batchnorm_1/Rsqrt"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ssd300/expanded_conv_12/depthwise/BatchNorm/batchnorm_1/sub"
  op: "Sub"
  input: "ssd300/expanded_conv_12/depthwise/BatchNorm/Reshape"
  input: "ssd300/expanded_conv_12/depthwise/BatchNorm/batchnorm_1/mul_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ssd300/expanded_conv_12/depthwise/BatchNorm/batchnorm_1/Add_1"
  op: "Add"
  input: "ssd300/expanded_conv_12/depthwise/BatchNorm/batchnorm_1/mul"
  input: "ssd300/expanded_conv_12/depthwise/BatchNorm/batchnorm_1/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ssd300/expanded_conv_12/depthwise/Relu6"
  op: "Relu6"
  input: "ssd300/expanded_conv_12/depthwise/BatchNorm/batchnorm_1/Add_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ssd300/expanded_conv_12/project/weights/Initializer/random_uniform/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv_12/project/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000@\002\000\000`\000\000\000"
      }
    }
  }
}
node {
  name: "ssd300/expanded_conv_12/project/weights/Initializer/random_uniform/min"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv_12/project/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: -0.09449111670255661
      }
    }
  }
}
node {
  name: "ssd300/expanded_conv_12/project/weights/Initializer/random_uniform/max"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv_12/project/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.09449111670255661
      }
    }
  }
}
node {
  name: "ssd300/expanded_conv_12/project/weights/Initializer/random_uniform/RandomUniform"
  op: "RandomUniform"
  input: "ssd300/expanded_conv_12/project/weights/Initializer/random_uniform/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv_12/project/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "ssd300/expanded_conv_12/project/weights/Initializer/random_uniform/sub"
  op: "Sub"
  input: "ssd300/expanded_conv_12/project/weights/Initializer/random_uniform/max"
  input: "ssd300/expanded_conv_12/project/weights/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv_12/project/weights"
      }
    }
  }
}
node {
  name: "ssd300/expanded_conv_12/project/weights/Initializer/random_uniform/mul"
  op: "Mul"
  input: "ssd300/expanded_conv_12/project/weights/Initializer/random_uniform/RandomUniform"
  input: "ssd300/expanded_conv_12/project/weights/Initializer/random_uniform/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv_12/project/weights"
      }
    }
  }
}
node {
  name: "ssd300/expanded_conv_12/project/weights/Initializer/random_uniform"
  op: "Add"
  input: "ssd300/expanded_conv_12/project/weights/Initializer/random_uniform/mul"
  input: "ssd300/expanded_conv_12/project/weights/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv_12/project/weights"
      }
    }
  }
}
node {
  name: "ssd300/expanded_conv_12/project/weights"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv_12/project/weights"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
        dim {
          size: 1
        }
        dim {
          size: 576
        }
        dim {
          size: 96
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "ssd300/expanded_conv_12/project/weights/Assign"
  op: "Assign"
  input: "ssd300/expanded_conv_12/project/weights"
  input: "ssd300/expanded_conv_12/project/weights/Initializer/random_uniform"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv_12/project/weights"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "ssd300/expanded_conv_12/project/weights/read"
  op: "Identity"
  input: "ssd300/expanded_conv_12/project/weights"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv_12/project/weights"
      }
    }
  }
}
node {
  name: "ssd300/expanded_conv_12/project/layer_conv2d/Conv2D"
  op: "Conv2D"
  input: "ssd300/expanded_conv_12/depthwise/Relu6"
  input: "ssd300/expanded_conv_12/project/weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NCHW"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "explicit_paddings"
    value {
      list {
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "ssd300/expanded_conv_12/project/BatchNorm/beta/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv_12/project/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 96
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "ssd300/expanded_conv_12/project/BatchNorm/beta"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv_12/project/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 96
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "ssd300/expanded_conv_12/project/BatchNorm/beta/Assign"
  op: "Assign"
  input: "ssd300/expanded_conv_12/project/BatchNorm/beta"
  input: "ssd300/expanded_conv_12/project/BatchNorm/beta/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv_12/project/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "ssd300/expanded_conv_12/project/BatchNorm/beta/read"
  op: "Identity"
  input: "ssd300/expanded_conv_12/project/BatchNorm/beta"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv_12/project/BatchNorm/beta"
      }
    }
  }
}
node {
  name: "ssd300/expanded_conv_12/project/BatchNorm/moving_mean/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv_12/project/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 96
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "ssd300/expanded_conv_12/project/BatchNorm/moving_mean"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv_12/project/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 96
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "ssd300/expanded_conv_12/project/BatchNorm/moving_mean/Assign"
  op: "Assign"
  input: "ssd300/expanded_conv_12/project/BatchNorm/moving_mean"
  input: "ssd300/expanded_conv_12/project/BatchNorm/moving_mean/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv_12/project/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "ssd300/expanded_conv_12/project/BatchNorm/moving_mean/read"
  op: "Identity"
  input: "ssd300/expanded_conv_12/project/BatchNorm/moving_mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv_12/project/BatchNorm/moving_mean"
      }
    }
  }
}
node {
  name: "ssd300/expanded_conv_12/project/BatchNorm/moving_variance/Initializer/ones"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv_12/project/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 96
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "ssd300/expanded_conv_12/project/BatchNorm/moving_variance"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv_12/project/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 96
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "ssd300/expanded_conv_12/project/BatchNorm/moving_variance/Assign"
  op: "Assign"
  input: "ssd300/expanded_conv_12/project/BatchNorm/moving_variance"
  input: "ssd300/expanded_conv_12/project/BatchNorm/moving_variance/Initializer/ones"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv_12/project/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "ssd300/expanded_conv_12/project/BatchNorm/moving_variance/read"
  op: "Identity"
  input: "ssd300/expanded_conv_12/project/BatchNorm/moving_variance"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv_12/project/BatchNorm/moving_variance"
      }
    }
  }
}
node {
  name: "ssd300/expanded_conv_12/project/BatchNorm/Reshape/shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000`\000\000\000\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "ssd300/expanded_conv_12/project/BatchNorm/Reshape"
  op: "Reshape"
  input: "ssd300/expanded_conv_12/project/BatchNorm/beta/read"
  input: "ssd300/expanded_conv_12/project/BatchNorm/Reshape/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "ssd300/expanded_conv_12/project/BatchNorm/Reshape_1/shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000`\000\000\000\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "ssd300/expanded_conv_12/project/BatchNorm/Reshape_1"
  op: "Reshape"
  input: "ssd300/expanded_conv_12/project/BatchNorm/moving_mean/read"
  input: "ssd300/expanded_conv_12/project/BatchNorm/Reshape_1/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "ssd300/expanded_conv_12/project/BatchNorm/Reshape_2/shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000`\000\000\000\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "ssd300/expanded_conv_12/project/BatchNorm/Reshape_2"
  op: "Reshape"
  input: "ssd300/expanded_conv_12/project/BatchNorm/moving_variance/read"
  input: "ssd300/expanded_conv_12/project/BatchNorm/Reshape_2/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "ssd300/expanded_conv_12/project/BatchNorm/batchnorm_1/Add/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0010000000474974513
      }
    }
  }
}
node {
  name: "ssd300/expanded_conv_12/project/BatchNorm/batchnorm_1/Add"
  op: "Add"
  input: "ssd300/expanded_conv_12/project/BatchNorm/Reshape_2"
  input: "ssd300/expanded_conv_12/project/BatchNorm/batchnorm_1/Add/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ssd300/expanded_conv_12/project/BatchNorm/batchnorm_1/Rsqrt"
  op: "Rsqrt"
  input: "ssd300/expanded_conv_12/project/BatchNorm/batchnorm_1/Add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ssd300/expanded_conv_12/project/BatchNorm/batchnorm_1/mul"
  op: "Mul"
  input: "ssd300/expanded_conv_12/project/layer_conv2d/Conv2D"
  input: "ssd300/expanded_conv_12/project/BatchNorm/batchnorm_1/Rsqrt"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ssd300/expanded_conv_12/project/BatchNorm/batchnorm_1/mul_1"
  op: "Mul"
  input: "ssd300/expanded_conv_12/project/BatchNorm/Reshape_1"
  input: "ssd300/expanded_conv_12/project/BatchNorm/batchnorm_1/Rsqrt"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ssd300/expanded_conv_12/project/BatchNorm/batchnorm_1/sub"
  op: "Sub"
  input: "ssd300/expanded_conv_12/project/BatchNorm/Reshape"
  input: "ssd300/expanded_conv_12/project/BatchNorm/batchnorm_1/mul_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ssd300/expanded_conv_12/project/BatchNorm/batchnorm_1/Add_1"
  op: "Add"
  input: "ssd300/expanded_conv_12/project/BatchNorm/batchnorm_1/mul"
  input: "ssd300/expanded_conv_12/project/BatchNorm/batchnorm_1/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ssd300/expanded_conv_12/Add"
  op: "Add"
  input: "ssd300/expanded_conv_12/project/BatchNorm/batchnorm_1/Add_1"
  input: "ssd300/expanded_conv_11/Add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ssd300/expanded_conv_13/expand/weights/Initializer/random_uniform/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv_13/expand/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000`\000\000\000@\002\000\000"
      }
    }
  }
}
node {
  name: "ssd300/expanded_conv_13/expand/weights/Initializer/random_uniform/min"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv_13/expand/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: -0.09449111670255661
      }
    }
  }
}
node {
  name: "ssd300/expanded_conv_13/expand/weights/Initializer/random_uniform/max"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv_13/expand/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.09449111670255661
      }
    }
  }
}
node {
  name: "ssd300/expanded_conv_13/expand/weights/Initializer/random_uniform/RandomUniform"
  op: "RandomUniform"
  input: "ssd300/expanded_conv_13/expand/weights/Initializer/random_uniform/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv_13/expand/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "ssd300/expanded_conv_13/expand/weights/Initializer/random_uniform/sub"
  op: "Sub"
  input: "ssd300/expanded_conv_13/expand/weights/Initializer/random_uniform/max"
  input: "ssd300/expanded_conv_13/expand/weights/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv_13/expand/weights"
      }
    }
  }
}
node {
  name: "ssd300/expanded_conv_13/expand/weights/Initializer/random_uniform/mul"
  op: "Mul"
  input: "ssd300/expanded_conv_13/expand/weights/Initializer/random_uniform/RandomUniform"
  input: "ssd300/expanded_conv_13/expand/weights/Initializer/random_uniform/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv_13/expand/weights"
      }
    }
  }
}
node {
  name: "ssd300/expanded_conv_13/expand/weights/Initializer/random_uniform"
  op: "Add"
  input: "ssd300/expanded_conv_13/expand/weights/Initializer/random_uniform/mul"
  input: "ssd300/expanded_conv_13/expand/weights/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv_13/expand/weights"
      }
    }
  }
}
node {
  name: "ssd300/expanded_conv_13/expand/weights"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv_13/expand/weights"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
        dim {
          size: 1
        }
        dim {
          size: 96
        }
        dim {
          size: 576
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "ssd300/expanded_conv_13/expand/weights/Assign"
  op: "Assign"
  input: "ssd300/expanded_conv_13/expand/weights"
  input: "ssd300/expanded_conv_13/expand/weights/Initializer/random_uniform"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv_13/expand/weights"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "ssd300/expanded_conv_13/expand/weights/read"
  op: "Identity"
  input: "ssd300/expanded_conv_13/expand/weights"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv_13/expand/weights"
      }
    }
  }
}
node {
  name: "ssd300/expanded_conv_13/expand/layer_conv2d/Conv2D"
  op: "Conv2D"
  input: "ssd300/expanded_conv_12/Add"
  input: "ssd300/expanded_conv_13/expand/weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NCHW"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "explicit_paddings"
    value {
      list {
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "ssd300/expanded_conv_13/expand/BatchNorm/beta/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv_13/expand/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 576
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "ssd300/expanded_conv_13/expand/BatchNorm/beta"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv_13/expand/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 576
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "ssd300/expanded_conv_13/expand/BatchNorm/beta/Assign"
  op: "Assign"
  input: "ssd300/expanded_conv_13/expand/BatchNorm/beta"
  input: "ssd300/expanded_conv_13/expand/BatchNorm/beta/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv_13/expand/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "ssd300/expanded_conv_13/expand/BatchNorm/beta/read"
  op: "Identity"
  input: "ssd300/expanded_conv_13/expand/BatchNorm/beta"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv_13/expand/BatchNorm/beta"
      }
    }
  }
}
node {
  name: "ssd300/expanded_conv_13/expand/BatchNorm/moving_mean/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv_13/expand/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 576
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "ssd300/expanded_conv_13/expand/BatchNorm/moving_mean"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv_13/expand/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 576
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "ssd300/expanded_conv_13/expand/BatchNorm/moving_mean/Assign"
  op: "Assign"
  input: "ssd300/expanded_conv_13/expand/BatchNorm/moving_mean"
  input: "ssd300/expanded_conv_13/expand/BatchNorm/moving_mean/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv_13/expand/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "ssd300/expanded_conv_13/expand/BatchNorm/moving_mean/read"
  op: "Identity"
  input: "ssd300/expanded_conv_13/expand/BatchNorm/moving_mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv_13/expand/BatchNorm/moving_mean"
      }
    }
  }
}
node {
  name: "ssd300/expanded_conv_13/expand/BatchNorm/moving_variance/Initializer/ones"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv_13/expand/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 576
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "ssd300/expanded_conv_13/expand/BatchNorm/moving_variance"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv_13/expand/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 576
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "ssd300/expanded_conv_13/expand/BatchNorm/moving_variance/Assign"
  op: "Assign"
  input: "ssd300/expanded_conv_13/expand/BatchNorm/moving_variance"
  input: "ssd300/expanded_conv_13/expand/BatchNorm/moving_variance/Initializer/ones"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv_13/expand/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "ssd300/expanded_conv_13/expand/BatchNorm/moving_variance/read"
  op: "Identity"
  input: "ssd300/expanded_conv_13/expand/BatchNorm/moving_variance"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv_13/expand/BatchNorm/moving_variance"
      }
    }
  }
}
node {
  name: "ssd300/expanded_conv_13/expand/BatchNorm/Reshape/shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000@\002\000\000\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "ssd300/expanded_conv_13/expand/BatchNorm/Reshape"
  op: "Reshape"
  input: "ssd300/expanded_conv_13/expand/BatchNorm/beta/read"
  input: "ssd300/expanded_conv_13/expand/BatchNorm/Reshape/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "ssd300/expanded_conv_13/expand/BatchNorm/Reshape_1/shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000@\002\000\000\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "ssd300/expanded_conv_13/expand/BatchNorm/Reshape_1"
  op: "Reshape"
  input: "ssd300/expanded_conv_13/expand/BatchNorm/moving_mean/read"
  input: "ssd300/expanded_conv_13/expand/BatchNorm/Reshape_1/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "ssd300/expanded_conv_13/expand/BatchNorm/Reshape_2/shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000@\002\000\000\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "ssd300/expanded_conv_13/expand/BatchNorm/Reshape_2"
  op: "Reshape"
  input: "ssd300/expanded_conv_13/expand/BatchNorm/moving_variance/read"
  input: "ssd300/expanded_conv_13/expand/BatchNorm/Reshape_2/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "ssd300/expanded_conv_13/expand/BatchNorm/batchnorm_1/Add/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0010000000474974513
      }
    }
  }
}
node {
  name: "ssd300/expanded_conv_13/expand/BatchNorm/batchnorm_1/Add"
  op: "Add"
  input: "ssd300/expanded_conv_13/expand/BatchNorm/Reshape_2"
  input: "ssd300/expanded_conv_13/expand/BatchNorm/batchnorm_1/Add/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ssd300/expanded_conv_13/expand/BatchNorm/batchnorm_1/Rsqrt"
  op: "Rsqrt"
  input: "ssd300/expanded_conv_13/expand/BatchNorm/batchnorm_1/Add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ssd300/expanded_conv_13/expand/BatchNorm/batchnorm_1/mul"
  op: "Mul"
  input: "ssd300/expanded_conv_13/expand/layer_conv2d/Conv2D"
  input: "ssd300/expanded_conv_13/expand/BatchNorm/batchnorm_1/Rsqrt"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ssd300/expanded_conv_13/expand/BatchNorm/batchnorm_1/mul_1"
  op: "Mul"
  input: "ssd300/expanded_conv_13/expand/BatchNorm/Reshape_1"
  input: "ssd300/expanded_conv_13/expand/BatchNorm/batchnorm_1/Rsqrt"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ssd300/expanded_conv_13/expand/BatchNorm/batchnorm_1/sub"
  op: "Sub"
  input: "ssd300/expanded_conv_13/expand/BatchNorm/Reshape"
  input: "ssd300/expanded_conv_13/expand/BatchNorm/batchnorm_1/mul_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ssd300/expanded_conv_13/expand/BatchNorm/batchnorm_1/Add_1"
  op: "Add"
  input: "ssd300/expanded_conv_13/expand/BatchNorm/batchnorm_1/mul"
  input: "ssd300/expanded_conv_13/expand/BatchNorm/batchnorm_1/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ssd300/expanded_conv_13/expand/Relu6"
  op: "Relu6"
  input: "ssd300/expanded_conv_13/expand/BatchNorm/batchnorm_1/Add_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ssd300/expanded_conv_13/depthwise/depthwise_weights/Initializer/random_uniform/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv_13/depthwise/depthwise_weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\003\000\000\000\003\000\000\000@\002\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "ssd300/expanded_conv_13/depthwise/depthwise_weights/Initializer/random_uniform/min"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv_13/depthwise/depthwise_weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: -0.03399119898676872
      }
    }
  }
}
node {
  name: "ssd300/expanded_conv_13/depthwise/depthwise_weights/Initializer/random_uniform/max"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv_13/depthwise/depthwise_weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.03399119898676872
      }
    }
  }
}
node {
  name: "ssd300/expanded_conv_13/depthwise/depthwise_weights/Initializer/random_uniform/RandomUniform"
  op: "RandomUniform"
  input: "ssd300/expanded_conv_13/depthwise/depthwise_weights/Initializer/random_uniform/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv_13/depthwise/depthwise_weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "ssd300/expanded_conv_13/depthwise/depthwise_weights/Initializer/random_uniform/sub"
  op: "Sub"
  input: "ssd300/expanded_conv_13/depthwise/depthwise_weights/Initializer/random_uniform/max"
  input: "ssd300/expanded_conv_13/depthwise/depthwise_weights/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv_13/depthwise/depthwise_weights"
      }
    }
  }
}
node {
  name: "ssd300/expanded_conv_13/depthwise/depthwise_weights/Initializer/random_uniform/mul"
  op: "Mul"
  input: "ssd300/expanded_conv_13/depthwise/depthwise_weights/Initializer/random_uniform/RandomUniform"
  input: "ssd300/expanded_conv_13/depthwise/depthwise_weights/Initializer/random_uniform/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv_13/depthwise/depthwise_weights"
      }
    }
  }
}
node {
  name: "ssd300/expanded_conv_13/depthwise/depthwise_weights/Initializer/random_uniform"
  op: "Add"
  input: "ssd300/expanded_conv_13/depthwise/depthwise_weights/Initializer/random_uniform/mul"
  input: "ssd300/expanded_conv_13/depthwise/depthwise_weights/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv_13/depthwise/depthwise_weights"
      }
    }
  }
}
node {
  name: "ssd300/expanded_conv_13/depthwise/depthwise_weights"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv_13/depthwise/depthwise_weights"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 3
        }
        dim {
          size: 3
        }
        dim {
          size: 576
        }
        dim {
          size: 1
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "ssd300/expanded_conv_13/depthwise/depthwise_weights/Assign"
  op: "Assign"
  input: "ssd300/expanded_conv_13/depthwise/depthwise_weights"
  input: "ssd300/expanded_conv_13/depthwise/depthwise_weights/Initializer/random_uniform"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv_13/depthwise/depthwise_weights"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "ssd300/expanded_conv_13/depthwise/depthwise_weights/read"
  op: "Identity"
  input: "ssd300/expanded_conv_13/depthwise/depthwise_weights"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv_13/depthwise/depthwise_weights"
      }
    }
  }
}
node {
  name: "ssd300/expanded_conv_13/depthwise/layer_conv2d/depthwise/Shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\003\000\000\000\003\000\000\000@\002\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "ssd300/expanded_conv_13/depthwise/layer_conv2d/depthwise/dilation_rate"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "ssd300/expanded_conv_13/depthwise/layer_conv2d/depthwise"
  op: "DepthwiseConv2dNative"
  input: "ssd300/expanded_conv_13/expand/Relu6"
  input: "ssd300/expanded_conv_13/depthwise/depthwise_weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NCHW"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 2
        i: 2
      }
    }
  }
}
node {
  name: "ssd300/expanded_conv_13/depthwise/BatchNorm/beta/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv_13/depthwise/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 576
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "ssd300/expanded_conv_13/depthwise/BatchNorm/beta"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv_13/depthwise/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 576
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "ssd300/expanded_conv_13/depthwise/BatchNorm/beta/Assign"
  op: "Assign"
  input: "ssd300/expanded_conv_13/depthwise/BatchNorm/beta"
  input: "ssd300/expanded_conv_13/depthwise/BatchNorm/beta/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv_13/depthwise/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "ssd300/expanded_conv_13/depthwise/BatchNorm/beta/read"
  op: "Identity"
  input: "ssd300/expanded_conv_13/depthwise/BatchNorm/beta"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv_13/depthwise/BatchNorm/beta"
      }
    }
  }
}
node {
  name: "ssd300/expanded_conv_13/depthwise/BatchNorm/moving_mean/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv_13/depthwise/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 576
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "ssd300/expanded_conv_13/depthwise/BatchNorm/moving_mean"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv_13/depthwise/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 576
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "ssd300/expanded_conv_13/depthwise/BatchNorm/moving_mean/Assign"
  op: "Assign"
  input: "ssd300/expanded_conv_13/depthwise/BatchNorm/moving_mean"
  input: "ssd300/expanded_conv_13/depthwise/BatchNorm/moving_mean/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv_13/depthwise/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "ssd300/expanded_conv_13/depthwise/BatchNorm/moving_mean/read"
  op: "Identity"
  input: "ssd300/expanded_conv_13/depthwise/BatchNorm/moving_mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv_13/depthwise/BatchNorm/moving_mean"
      }
    }
  }
}
node {
  name: "ssd300/expanded_conv_13/depthwise/BatchNorm/moving_variance/Initializer/ones"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv_13/depthwise/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 576
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "ssd300/expanded_conv_13/depthwise/BatchNorm/moving_variance"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv_13/depthwise/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 576
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "ssd300/expanded_conv_13/depthwise/BatchNorm/moving_variance/Assign"
  op: "Assign"
  input: "ssd300/expanded_conv_13/depthwise/BatchNorm/moving_variance"
  input: "ssd300/expanded_conv_13/depthwise/BatchNorm/moving_variance/Initializer/ones"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv_13/depthwise/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "ssd300/expanded_conv_13/depthwise/BatchNorm/moving_variance/read"
  op: "Identity"
  input: "ssd300/expanded_conv_13/depthwise/BatchNorm/moving_variance"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv_13/depthwise/BatchNorm/moving_variance"
      }
    }
  }
}
node {
  name: "ssd300/expanded_conv_13/depthwise/BatchNorm/Reshape/shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000@\002\000\000\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "ssd300/expanded_conv_13/depthwise/BatchNorm/Reshape"
  op: "Reshape"
  input: "ssd300/expanded_conv_13/depthwise/BatchNorm/beta/read"
  input: "ssd300/expanded_conv_13/depthwise/BatchNorm/Reshape/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "ssd300/expanded_conv_13/depthwise/BatchNorm/Reshape_1/shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000@\002\000\000\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "ssd300/expanded_conv_13/depthwise/BatchNorm/Reshape_1"
  op: "Reshape"
  input: "ssd300/expanded_conv_13/depthwise/BatchNorm/moving_mean/read"
  input: "ssd300/expanded_conv_13/depthwise/BatchNorm/Reshape_1/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "ssd300/expanded_conv_13/depthwise/BatchNorm/Reshape_2/shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000@\002\000\000\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "ssd300/expanded_conv_13/depthwise/BatchNorm/Reshape_2"
  op: "Reshape"
  input: "ssd300/expanded_conv_13/depthwise/BatchNorm/moving_variance/read"
  input: "ssd300/expanded_conv_13/depthwise/BatchNorm/Reshape_2/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "ssd300/expanded_conv_13/depthwise/BatchNorm/batchnorm_1/Add/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0010000000474974513
      }
    }
  }
}
node {
  name: "ssd300/expanded_conv_13/depthwise/BatchNorm/batchnorm_1/Add"
  op: "Add"
  input: "ssd300/expanded_conv_13/depthwise/BatchNorm/Reshape_2"
  input: "ssd300/expanded_conv_13/depthwise/BatchNorm/batchnorm_1/Add/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ssd300/expanded_conv_13/depthwise/BatchNorm/batchnorm_1/Rsqrt"
  op: "Rsqrt"
  input: "ssd300/expanded_conv_13/depthwise/BatchNorm/batchnorm_1/Add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ssd300/expanded_conv_13/depthwise/BatchNorm/batchnorm_1/mul"
  op: "Mul"
  input: "ssd300/expanded_conv_13/depthwise/layer_conv2d/depthwise"
  input: "ssd300/expanded_conv_13/depthwise/BatchNorm/batchnorm_1/Rsqrt"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ssd300/expanded_conv_13/depthwise/BatchNorm/batchnorm_1/mul_1"
  op: "Mul"
  input: "ssd300/expanded_conv_13/depthwise/BatchNorm/Reshape_1"
  input: "ssd300/expanded_conv_13/depthwise/BatchNorm/batchnorm_1/Rsqrt"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ssd300/expanded_conv_13/depthwise/BatchNorm/batchnorm_1/sub"
  op: "Sub"
  input: "ssd300/expanded_conv_13/depthwise/BatchNorm/Reshape"
  input: "ssd300/expanded_conv_13/depthwise/BatchNorm/batchnorm_1/mul_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ssd300/expanded_conv_13/depthwise/BatchNorm/batchnorm_1/Add_1"
  op: "Add"
  input: "ssd300/expanded_conv_13/depthwise/BatchNorm/batchnorm_1/mul"
  input: "ssd300/expanded_conv_13/depthwise/BatchNorm/batchnorm_1/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ssd300/expanded_conv_13/depthwise/Relu6"
  op: "Relu6"
  input: "ssd300/expanded_conv_13/depthwise/BatchNorm/batchnorm_1/Add_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ssd300/expanded_conv_13/project/weights/Initializer/random_uniform/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv_13/project/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000@\002\000\000\240\000\000\000"
      }
    }
  }
}
node {
  name: "ssd300/expanded_conv_13/project/weights/Initializer/random_uniform/min"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv_13/project/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: -0.0902893915772438
      }
    }
  }
}
node {
  name: "ssd300/expanded_conv_13/project/weights/Initializer/random_uniform/max"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv_13/project/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0902893915772438
      }
    }
  }
}
node {
  name: "ssd300/expanded_conv_13/project/weights/Initializer/random_uniform/RandomUniform"
  op: "RandomUniform"
  input: "ssd300/expanded_conv_13/project/weights/Initializer/random_uniform/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv_13/project/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "ssd300/expanded_conv_13/project/weights/Initializer/random_uniform/sub"
  op: "Sub"
  input: "ssd300/expanded_conv_13/project/weights/Initializer/random_uniform/max"
  input: "ssd300/expanded_conv_13/project/weights/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv_13/project/weights"
      }
    }
  }
}
node {
  name: "ssd300/expanded_conv_13/project/weights/Initializer/random_uniform/mul"
  op: "Mul"
  input: "ssd300/expanded_conv_13/project/weights/Initializer/random_uniform/RandomUniform"
  input: "ssd300/expanded_conv_13/project/weights/Initializer/random_uniform/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv_13/project/weights"
      }
    }
  }
}
node {
  name: "ssd300/expanded_conv_13/project/weights/Initializer/random_uniform"
  op: "Add"
  input: "ssd300/expanded_conv_13/project/weights/Initializer/random_uniform/mul"
  input: "ssd300/expanded_conv_13/project/weights/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv_13/project/weights"
      }
    }
  }
}
node {
  name: "ssd300/expanded_conv_13/project/weights"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv_13/project/weights"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
        dim {
          size: 1
        }
        dim {
          size: 576
        }
        dim {
          size: 160
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "ssd300/expanded_conv_13/project/weights/Assign"
  op: "Assign"
  input: "ssd300/expanded_conv_13/project/weights"
  input: "ssd300/expanded_conv_13/project/weights/Initializer/random_uniform"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv_13/project/weights"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "ssd300/expanded_conv_13/project/weights/read"
  op: "Identity"
  input: "ssd300/expanded_conv_13/project/weights"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv_13/project/weights"
      }
    }
  }
}
node {
  name: "ssd300/expanded_conv_13/project/layer_conv2d/Conv2D"
  op: "Conv2D"
  input: "ssd300/expanded_conv_13/depthwise/Relu6"
  input: "ssd300/expanded_conv_13/project/weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NCHW"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "explicit_paddings"
    value {
      list {
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "ssd300/expanded_conv_13/project/BatchNorm/beta/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv_13/project/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 160
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "ssd300/expanded_conv_13/project/BatchNorm/beta"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv_13/project/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 160
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "ssd300/expanded_conv_13/project/BatchNorm/beta/Assign"
  op: "Assign"
  input: "ssd300/expanded_conv_13/project/BatchNorm/beta"
  input: "ssd300/expanded_conv_13/project/BatchNorm/beta/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv_13/project/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "ssd300/expanded_conv_13/project/BatchNorm/beta/read"
  op: "Identity"
  input: "ssd300/expanded_conv_13/project/BatchNorm/beta"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv_13/project/BatchNorm/beta"
      }
    }
  }
}
node {
  name: "ssd300/expanded_conv_13/project/BatchNorm/moving_mean/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv_13/project/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 160
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "ssd300/expanded_conv_13/project/BatchNorm/moving_mean"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv_13/project/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 160
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "ssd300/expanded_conv_13/project/BatchNorm/moving_mean/Assign"
  op: "Assign"
  input: "ssd300/expanded_conv_13/project/BatchNorm/moving_mean"
  input: "ssd300/expanded_conv_13/project/BatchNorm/moving_mean/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv_13/project/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "ssd300/expanded_conv_13/project/BatchNorm/moving_mean/read"
  op: "Identity"
  input: "ssd300/expanded_conv_13/project/BatchNorm/moving_mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv_13/project/BatchNorm/moving_mean"
      }
    }
  }
}
node {
  name: "ssd300/expanded_conv_13/project/BatchNorm/moving_variance/Initializer/ones"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv_13/project/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 160
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "ssd300/expanded_conv_13/project/BatchNorm/moving_variance"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv_13/project/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 160
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "ssd300/expanded_conv_13/project/BatchNorm/moving_variance/Assign"
  op: "Assign"
  input: "ssd300/expanded_conv_13/project/BatchNorm/moving_variance"
  input: "ssd300/expanded_conv_13/project/BatchNorm/moving_variance/Initializer/ones"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv_13/project/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "ssd300/expanded_conv_13/project/BatchNorm/moving_variance/read"
  op: "Identity"
  input: "ssd300/expanded_conv_13/project/BatchNorm/moving_variance"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv_13/project/BatchNorm/moving_variance"
      }
    }
  }
}
node {
  name: "ssd300/expanded_conv_13/project/BatchNorm/Reshape/shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\240\000\000\000\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "ssd300/expanded_conv_13/project/BatchNorm/Reshape"
  op: "Reshape"
  input: "ssd300/expanded_conv_13/project/BatchNorm/beta/read"
  input: "ssd300/expanded_conv_13/project/BatchNorm/Reshape/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "ssd300/expanded_conv_13/project/BatchNorm/Reshape_1/shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\240\000\000\000\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "ssd300/expanded_conv_13/project/BatchNorm/Reshape_1"
  op: "Reshape"
  input: "ssd300/expanded_conv_13/project/BatchNorm/moving_mean/read"
  input: "ssd300/expanded_conv_13/project/BatchNorm/Reshape_1/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "ssd300/expanded_conv_13/project/BatchNorm/Reshape_2/shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\240\000\000\000\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "ssd300/expanded_conv_13/project/BatchNorm/Reshape_2"
  op: "Reshape"
  input: "ssd300/expanded_conv_13/project/BatchNorm/moving_variance/read"
  input: "ssd300/expanded_conv_13/project/BatchNorm/Reshape_2/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "ssd300/expanded_conv_13/project/BatchNorm/batchnorm_1/Add/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0010000000474974513
      }
    }
  }
}
node {
  name: "ssd300/expanded_conv_13/project/BatchNorm/batchnorm_1/Add"
  op: "Add"
  input: "ssd300/expanded_conv_13/project/BatchNorm/Reshape_2"
  input: "ssd300/expanded_conv_13/project/BatchNorm/batchnorm_1/Add/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ssd300/expanded_conv_13/project/BatchNorm/batchnorm_1/Rsqrt"
  op: "Rsqrt"
  input: "ssd300/expanded_conv_13/project/BatchNorm/batchnorm_1/Add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ssd300/expanded_conv_13/project/BatchNorm/batchnorm_1/mul"
  op: "Mul"
  input: "ssd300/expanded_conv_13/project/layer_conv2d/Conv2D"
  input: "ssd300/expanded_conv_13/project/BatchNorm/batchnorm_1/Rsqrt"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ssd300/expanded_conv_13/project/BatchNorm/batchnorm_1/mul_1"
  op: "Mul"
  input: "ssd300/expanded_conv_13/project/BatchNorm/Reshape_1"
  input: "ssd300/expanded_conv_13/project/BatchNorm/batchnorm_1/Rsqrt"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ssd300/expanded_conv_13/project/BatchNorm/batchnorm_1/sub"
  op: "Sub"
  input: "ssd300/expanded_conv_13/project/BatchNorm/Reshape"
  input: "ssd300/expanded_conv_13/project/BatchNorm/batchnorm_1/mul_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ssd300/expanded_conv_13/project/BatchNorm/batchnorm_1/Add_1"
  op: "Add"
  input: "ssd300/expanded_conv_13/project/BatchNorm/batchnorm_1/mul"
  input: "ssd300/expanded_conv_13/project/BatchNorm/batchnorm_1/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ssd300/expanded_conv_14/expand/weights/Initializer/random_uniform/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv_14/expand/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000\240\000\000\000\300\003\000\000"
      }
    }
  }
}
node {
  name: "ssd300/expanded_conv_14/expand/weights/Initializer/random_uniform/min"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv_14/expand/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: -0.07319250702857971
      }
    }
  }
}
node {
  name: "ssd300/expanded_conv_14/expand/weights/Initializer/random_uniform/max"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv_14/expand/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.07319250702857971
      }
    }
  }
}
node {
  name: "ssd300/expanded_conv_14/expand/weights/Initializer/random_uniform/RandomUniform"
  op: "RandomUniform"
  input: "ssd300/expanded_conv_14/expand/weights/Initializer/random_uniform/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv_14/expand/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "ssd300/expanded_conv_14/expand/weights/Initializer/random_uniform/sub"
  op: "Sub"
  input: "ssd300/expanded_conv_14/expand/weights/Initializer/random_uniform/max"
  input: "ssd300/expanded_conv_14/expand/weights/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv_14/expand/weights"
      }
    }
  }
}
node {
  name: "ssd300/expanded_conv_14/expand/weights/Initializer/random_uniform/mul"
  op: "Mul"
  input: "ssd300/expanded_conv_14/expand/weights/Initializer/random_uniform/RandomUniform"
  input: "ssd300/expanded_conv_14/expand/weights/Initializer/random_uniform/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv_14/expand/weights"
      }
    }
  }
}
node {
  name: "ssd300/expanded_conv_14/expand/weights/Initializer/random_uniform"
  op: "Add"
  input: "ssd300/expanded_conv_14/expand/weights/Initializer/random_uniform/mul"
  input: "ssd300/expanded_conv_14/expand/weights/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv_14/expand/weights"
      }
    }
  }
}
node {
  name: "ssd300/expanded_conv_14/expand/weights"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv_14/expand/weights"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
        dim {
          size: 1
        }
        dim {
          size: 160
        }
        dim {
          size: 960
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "ssd300/expanded_conv_14/expand/weights/Assign"
  op: "Assign"
  input: "ssd300/expanded_conv_14/expand/weights"
  input: "ssd300/expanded_conv_14/expand/weights/Initializer/random_uniform"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv_14/expand/weights"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "ssd300/expanded_conv_14/expand/weights/read"
  op: "Identity"
  input: "ssd300/expanded_conv_14/expand/weights"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv_14/expand/weights"
      }
    }
  }
}
node {
  name: "ssd300/expanded_conv_14/expand/layer_conv2d/Conv2D"
  op: "Conv2D"
  input: "ssd300/expanded_conv_13/project/BatchNorm/batchnorm_1/Add_1"
  input: "ssd300/expanded_conv_14/expand/weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NCHW"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "explicit_paddings"
    value {
      list {
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "ssd300/expanded_conv_14/expand/BatchNorm/beta/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv_14/expand/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 960
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "ssd300/expanded_conv_14/expand/BatchNorm/beta"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv_14/expand/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 960
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "ssd300/expanded_conv_14/expand/BatchNorm/beta/Assign"
  op: "Assign"
  input: "ssd300/expanded_conv_14/expand/BatchNorm/beta"
  input: "ssd300/expanded_conv_14/expand/BatchNorm/beta/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv_14/expand/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "ssd300/expanded_conv_14/expand/BatchNorm/beta/read"
  op: "Identity"
  input: "ssd300/expanded_conv_14/expand/BatchNorm/beta"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv_14/expand/BatchNorm/beta"
      }
    }
  }
}
node {
  name: "ssd300/expanded_conv_14/expand/BatchNorm/moving_mean/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv_14/expand/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 960
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "ssd300/expanded_conv_14/expand/BatchNorm/moving_mean"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv_14/expand/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 960
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "ssd300/expanded_conv_14/expand/BatchNorm/moving_mean/Assign"
  op: "Assign"
  input: "ssd300/expanded_conv_14/expand/BatchNorm/moving_mean"
  input: "ssd300/expanded_conv_14/expand/BatchNorm/moving_mean/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv_14/expand/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "ssd300/expanded_conv_14/expand/BatchNorm/moving_mean/read"
  op: "Identity"
  input: "ssd300/expanded_conv_14/expand/BatchNorm/moving_mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv_14/expand/BatchNorm/moving_mean"
      }
    }
  }
}
node {
  name: "ssd300/expanded_conv_14/expand/BatchNorm/moving_variance/Initializer/ones"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv_14/expand/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 960
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "ssd300/expanded_conv_14/expand/BatchNorm/moving_variance"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv_14/expand/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 960
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "ssd300/expanded_conv_14/expand/BatchNorm/moving_variance/Assign"
  op: "Assign"
  input: "ssd300/expanded_conv_14/expand/BatchNorm/moving_variance"
  input: "ssd300/expanded_conv_14/expand/BatchNorm/moving_variance/Initializer/ones"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv_14/expand/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "ssd300/expanded_conv_14/expand/BatchNorm/moving_variance/read"
  op: "Identity"
  input: "ssd300/expanded_conv_14/expand/BatchNorm/moving_variance"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv_14/expand/BatchNorm/moving_variance"
      }
    }
  }
}
node {
  name: "ssd300/expanded_conv_14/expand/BatchNorm/Reshape/shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\300\003\000\000\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "ssd300/expanded_conv_14/expand/BatchNorm/Reshape"
  op: "Reshape"
  input: "ssd300/expanded_conv_14/expand/BatchNorm/beta/read"
  input: "ssd300/expanded_conv_14/expand/BatchNorm/Reshape/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "ssd300/expanded_conv_14/expand/BatchNorm/Reshape_1/shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\300\003\000\000\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "ssd300/expanded_conv_14/expand/BatchNorm/Reshape_1"
  op: "Reshape"
  input: "ssd300/expanded_conv_14/expand/BatchNorm/moving_mean/read"
  input: "ssd300/expanded_conv_14/expand/BatchNorm/Reshape_1/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "ssd300/expanded_conv_14/expand/BatchNorm/Reshape_2/shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\300\003\000\000\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "ssd300/expanded_conv_14/expand/BatchNorm/Reshape_2"
  op: "Reshape"
  input: "ssd300/expanded_conv_14/expand/BatchNorm/moving_variance/read"
  input: "ssd300/expanded_conv_14/expand/BatchNorm/Reshape_2/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "ssd300/expanded_conv_14/expand/BatchNorm/batchnorm_1/Add/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0010000000474974513
      }
    }
  }
}
node {
  name: "ssd300/expanded_conv_14/expand/BatchNorm/batchnorm_1/Add"
  op: "Add"
  input: "ssd300/expanded_conv_14/expand/BatchNorm/Reshape_2"
  input: "ssd300/expanded_conv_14/expand/BatchNorm/batchnorm_1/Add/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ssd300/expanded_conv_14/expand/BatchNorm/batchnorm_1/Rsqrt"
  op: "Rsqrt"
  input: "ssd300/expanded_conv_14/expand/BatchNorm/batchnorm_1/Add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ssd300/expanded_conv_14/expand/BatchNorm/batchnorm_1/mul"
  op: "Mul"
  input: "ssd300/expanded_conv_14/expand/layer_conv2d/Conv2D"
  input: "ssd300/expanded_conv_14/expand/BatchNorm/batchnorm_1/Rsqrt"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ssd300/expanded_conv_14/expand/BatchNorm/batchnorm_1/mul_1"
  op: "Mul"
  input: "ssd300/expanded_conv_14/expand/BatchNorm/Reshape_1"
  input: "ssd300/expanded_conv_14/expand/BatchNorm/batchnorm_1/Rsqrt"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ssd300/expanded_conv_14/expand/BatchNorm/batchnorm_1/sub"
  op: "Sub"
  input: "ssd300/expanded_conv_14/expand/BatchNorm/Reshape"
  input: "ssd300/expanded_conv_14/expand/BatchNorm/batchnorm_1/mul_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ssd300/expanded_conv_14/expand/BatchNorm/batchnorm_1/Add_1"
  op: "Add"
  input: "ssd300/expanded_conv_14/expand/BatchNorm/batchnorm_1/mul"
  input: "ssd300/expanded_conv_14/expand/BatchNorm/batchnorm_1/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ssd300/expanded_conv_14/expand/Relu6"
  op: "Relu6"
  input: "ssd300/expanded_conv_14/expand/BatchNorm/batchnorm_1/Add_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ssd300/expanded_conv_14/depthwise/depthwise_weights/Initializer/random_uniform/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv_14/depthwise/depthwise_weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\003\000\000\000\003\000\000\000\300\003\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "ssd300/expanded_conv_14/depthwise/depthwise_weights/Initializer/random_uniform/min"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv_14/depthwise/depthwise_weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: -0.026338599622249603
      }
    }
  }
}
node {
  name: "ssd300/expanded_conv_14/depthwise/depthwise_weights/Initializer/random_uniform/max"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv_14/depthwise/depthwise_weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.026338599622249603
      }
    }
  }
}
node {
  name: "ssd300/expanded_conv_14/depthwise/depthwise_weights/Initializer/random_uniform/RandomUniform"
  op: "RandomUniform"
  input: "ssd300/expanded_conv_14/depthwise/depthwise_weights/Initializer/random_uniform/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv_14/depthwise/depthwise_weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "ssd300/expanded_conv_14/depthwise/depthwise_weights/Initializer/random_uniform/sub"
  op: "Sub"
  input: "ssd300/expanded_conv_14/depthwise/depthwise_weights/Initializer/random_uniform/max"
  input: "ssd300/expanded_conv_14/depthwise/depthwise_weights/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv_14/depthwise/depthwise_weights"
      }
    }
  }
}
node {
  name: "ssd300/expanded_conv_14/depthwise/depthwise_weights/Initializer/random_uniform/mul"
  op: "Mul"
  input: "ssd300/expanded_conv_14/depthwise/depthwise_weights/Initializer/random_uniform/RandomUniform"
  input: "ssd300/expanded_conv_14/depthwise/depthwise_weights/Initializer/random_uniform/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv_14/depthwise/depthwise_weights"
      }
    }
  }
}
node {
  name: "ssd300/expanded_conv_14/depthwise/depthwise_weights/Initializer/random_uniform"
  op: "Add"
  input: "ssd300/expanded_conv_14/depthwise/depthwise_weights/Initializer/random_uniform/mul"
  input: "ssd300/expanded_conv_14/depthwise/depthwise_weights/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv_14/depthwise/depthwise_weights"
      }
    }
  }
}
node {
  name: "ssd300/expanded_conv_14/depthwise/depthwise_weights"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv_14/depthwise/depthwise_weights"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 3
        }
        dim {
          size: 3
        }
        dim {
          size: 960
        }
        dim {
          size: 1
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "ssd300/expanded_conv_14/depthwise/depthwise_weights/Assign"
  op: "Assign"
  input: "ssd300/expanded_conv_14/depthwise/depthwise_weights"
  input: "ssd300/expanded_conv_14/depthwise/depthwise_weights/Initializer/random_uniform"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv_14/depthwise/depthwise_weights"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "ssd300/expanded_conv_14/depthwise/depthwise_weights/read"
  op: "Identity"
  input: "ssd300/expanded_conv_14/depthwise/depthwise_weights"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv_14/depthwise/depthwise_weights"
      }
    }
  }
}
node {
  name: "ssd300/expanded_conv_14/depthwise/layer_conv2d/depthwise/Shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\003\000\000\000\003\000\000\000\300\003\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "ssd300/expanded_conv_14/depthwise/layer_conv2d/depthwise/dilation_rate"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "ssd300/expanded_conv_14/depthwise/layer_conv2d/depthwise"
  op: "DepthwiseConv2dNative"
  input: "ssd300/expanded_conv_14/expand/Relu6"
  input: "ssd300/expanded_conv_14/depthwise/depthwise_weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NCHW"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
}
node {
  name: "ssd300/expanded_conv_14/depthwise/BatchNorm/beta/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv_14/depthwise/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 960
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "ssd300/expanded_conv_14/depthwise/BatchNorm/beta"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv_14/depthwise/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 960
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "ssd300/expanded_conv_14/depthwise/BatchNorm/beta/Assign"
  op: "Assign"
  input: "ssd300/expanded_conv_14/depthwise/BatchNorm/beta"
  input: "ssd300/expanded_conv_14/depthwise/BatchNorm/beta/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv_14/depthwise/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "ssd300/expanded_conv_14/depthwise/BatchNorm/beta/read"
  op: "Identity"
  input: "ssd300/expanded_conv_14/depthwise/BatchNorm/beta"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv_14/depthwise/BatchNorm/beta"
      }
    }
  }
}
node {
  name: "ssd300/expanded_conv_14/depthwise/BatchNorm/moving_mean/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv_14/depthwise/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 960
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "ssd300/expanded_conv_14/depthwise/BatchNorm/moving_mean"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv_14/depthwise/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 960
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "ssd300/expanded_conv_14/depthwise/BatchNorm/moving_mean/Assign"
  op: "Assign"
  input: "ssd300/expanded_conv_14/depthwise/BatchNorm/moving_mean"
  input: "ssd300/expanded_conv_14/depthwise/BatchNorm/moving_mean/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv_14/depthwise/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "ssd300/expanded_conv_14/depthwise/BatchNorm/moving_mean/read"
  op: "Identity"
  input: "ssd300/expanded_conv_14/depthwise/BatchNorm/moving_mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv_14/depthwise/BatchNorm/moving_mean"
      }
    }
  }
}
node {
  name: "ssd300/expanded_conv_14/depthwise/BatchNorm/moving_variance/Initializer/ones"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv_14/depthwise/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 960
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "ssd300/expanded_conv_14/depthwise/BatchNorm/moving_variance"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv_14/depthwise/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 960
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "ssd300/expanded_conv_14/depthwise/BatchNorm/moving_variance/Assign"
  op: "Assign"
  input: "ssd300/expanded_conv_14/depthwise/BatchNorm/moving_variance"
  input: "ssd300/expanded_conv_14/depthwise/BatchNorm/moving_variance/Initializer/ones"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv_14/depthwise/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "ssd300/expanded_conv_14/depthwise/BatchNorm/moving_variance/read"
  op: "Identity"
  input: "ssd300/expanded_conv_14/depthwise/BatchNorm/moving_variance"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv_14/depthwise/BatchNorm/moving_variance"
      }
    }
  }
}
node {
  name: "ssd300/expanded_conv_14/depthwise/BatchNorm/Reshape/shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\300\003\000\000\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "ssd300/expanded_conv_14/depthwise/BatchNorm/Reshape"
  op: "Reshape"
  input: "ssd300/expanded_conv_14/depthwise/BatchNorm/beta/read"
  input: "ssd300/expanded_conv_14/depthwise/BatchNorm/Reshape/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "ssd300/expanded_conv_14/depthwise/BatchNorm/Reshape_1/shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\300\003\000\000\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "ssd300/expanded_conv_14/depthwise/BatchNorm/Reshape_1"
  op: "Reshape"
  input: "ssd300/expanded_conv_14/depthwise/BatchNorm/moving_mean/read"
  input: "ssd300/expanded_conv_14/depthwise/BatchNorm/Reshape_1/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "ssd300/expanded_conv_14/depthwise/BatchNorm/Reshape_2/shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\300\003\000\000\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "ssd300/expanded_conv_14/depthwise/BatchNorm/Reshape_2"
  op: "Reshape"
  input: "ssd300/expanded_conv_14/depthwise/BatchNorm/moving_variance/read"
  input: "ssd300/expanded_conv_14/depthwise/BatchNorm/Reshape_2/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "ssd300/expanded_conv_14/depthwise/BatchNorm/batchnorm_1/Add/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0010000000474974513
      }
    }
  }
}
node {
  name: "ssd300/expanded_conv_14/depthwise/BatchNorm/batchnorm_1/Add"
  op: "Add"
  input: "ssd300/expanded_conv_14/depthwise/BatchNorm/Reshape_2"
  input: "ssd300/expanded_conv_14/depthwise/BatchNorm/batchnorm_1/Add/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ssd300/expanded_conv_14/depthwise/BatchNorm/batchnorm_1/Rsqrt"
  op: "Rsqrt"
  input: "ssd300/expanded_conv_14/depthwise/BatchNorm/batchnorm_1/Add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ssd300/expanded_conv_14/depthwise/BatchNorm/batchnorm_1/mul"
  op: "Mul"
  input: "ssd300/expanded_conv_14/depthwise/layer_conv2d/depthwise"
  input: "ssd300/expanded_conv_14/depthwise/BatchNorm/batchnorm_1/Rsqrt"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ssd300/expanded_conv_14/depthwise/BatchNorm/batchnorm_1/mul_1"
  op: "Mul"
  input: "ssd300/expanded_conv_14/depthwise/BatchNorm/Reshape_1"
  input: "ssd300/expanded_conv_14/depthwise/BatchNorm/batchnorm_1/Rsqrt"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ssd300/expanded_conv_14/depthwise/BatchNorm/batchnorm_1/sub"
  op: "Sub"
  input: "ssd300/expanded_conv_14/depthwise/BatchNorm/Reshape"
  input: "ssd300/expanded_conv_14/depthwise/BatchNorm/batchnorm_1/mul_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ssd300/expanded_conv_14/depthwise/BatchNorm/batchnorm_1/Add_1"
  op: "Add"
  input: "ssd300/expanded_conv_14/depthwise/BatchNorm/batchnorm_1/mul"
  input: "ssd300/expanded_conv_14/depthwise/BatchNorm/batchnorm_1/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ssd300/expanded_conv_14/depthwise/Relu6"
  op: "Relu6"
  input: "ssd300/expanded_conv_14/depthwise/BatchNorm/batchnorm_1/Add_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ssd300/expanded_conv_14/project/weights/Initializer/random_uniform/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv_14/project/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000\300\003\000\000\240\000\000\000"
      }
    }
  }
}
node {
  name: "ssd300/expanded_conv_14/project/weights/Initializer/random_uniform/min"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv_14/project/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: -0.07319250702857971
      }
    }
  }
}
node {
  name: "ssd300/expanded_conv_14/project/weights/Initializer/random_uniform/max"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv_14/project/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.07319250702857971
      }
    }
  }
}
node {
  name: "ssd300/expanded_conv_14/project/weights/Initializer/random_uniform/RandomUniform"
  op: "RandomUniform"
  input: "ssd300/expanded_conv_14/project/weights/Initializer/random_uniform/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv_14/project/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "ssd300/expanded_conv_14/project/weights/Initializer/random_uniform/sub"
  op: "Sub"
  input: "ssd300/expanded_conv_14/project/weights/Initializer/random_uniform/max"
  input: "ssd300/expanded_conv_14/project/weights/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv_14/project/weights"
      }
    }
  }
}
node {
  name: "ssd300/expanded_conv_14/project/weights/Initializer/random_uniform/mul"
  op: "Mul"
  input: "ssd300/expanded_conv_14/project/weights/Initializer/random_uniform/RandomUniform"
  input: "ssd300/expanded_conv_14/project/weights/Initializer/random_uniform/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv_14/project/weights"
      }
    }
  }
}
node {
  name: "ssd300/expanded_conv_14/project/weights/Initializer/random_uniform"
  op: "Add"
  input: "ssd300/expanded_conv_14/project/weights/Initializer/random_uniform/mul"
  input: "ssd300/expanded_conv_14/project/weights/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv_14/project/weights"
      }
    }
  }
}
node {
  name: "ssd300/expanded_conv_14/project/weights"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv_14/project/weights"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
        dim {
          size: 1
        }
        dim {
          size: 960
        }
        dim {
          size: 160
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "ssd300/expanded_conv_14/project/weights/Assign"
  op: "Assign"
  input: "ssd300/expanded_conv_14/project/weights"
  input: "ssd300/expanded_conv_14/project/weights/Initializer/random_uniform"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv_14/project/weights"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "ssd300/expanded_conv_14/project/weights/read"
  op: "Identity"
  input: "ssd300/expanded_conv_14/project/weights"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv_14/project/weights"
      }
    }
  }
}
node {
  name: "ssd300/expanded_conv_14/project/layer_conv2d/Conv2D"
  op: "Conv2D"
  input: "ssd300/expanded_conv_14/depthwise/Relu6"
  input: "ssd300/expanded_conv_14/project/weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NCHW"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "explicit_paddings"
    value {
      list {
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "ssd300/expanded_conv_14/project/BatchNorm/beta/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv_14/project/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 160
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "ssd300/expanded_conv_14/project/BatchNorm/beta"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv_14/project/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 160
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "ssd300/expanded_conv_14/project/BatchNorm/beta/Assign"
  op: "Assign"
  input: "ssd300/expanded_conv_14/project/BatchNorm/beta"
  input: "ssd300/expanded_conv_14/project/BatchNorm/beta/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv_14/project/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "ssd300/expanded_conv_14/project/BatchNorm/beta/read"
  op: "Identity"
  input: "ssd300/expanded_conv_14/project/BatchNorm/beta"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv_14/project/BatchNorm/beta"
      }
    }
  }
}
node {
  name: "ssd300/expanded_conv_14/project/BatchNorm/moving_mean/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv_14/project/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 160
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "ssd300/expanded_conv_14/project/BatchNorm/moving_mean"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv_14/project/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 160
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "ssd300/expanded_conv_14/project/BatchNorm/moving_mean/Assign"
  op: "Assign"
  input: "ssd300/expanded_conv_14/project/BatchNorm/moving_mean"
  input: "ssd300/expanded_conv_14/project/BatchNorm/moving_mean/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv_14/project/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "ssd300/expanded_conv_14/project/BatchNorm/moving_mean/read"
  op: "Identity"
  input: "ssd300/expanded_conv_14/project/BatchNorm/moving_mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv_14/project/BatchNorm/moving_mean"
      }
    }
  }
}
node {
  name: "ssd300/expanded_conv_14/project/BatchNorm/moving_variance/Initializer/ones"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv_14/project/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 160
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "ssd300/expanded_conv_14/project/BatchNorm/moving_variance"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv_14/project/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 160
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "ssd300/expanded_conv_14/project/BatchNorm/moving_variance/Assign"
  op: "Assign"
  input: "ssd300/expanded_conv_14/project/BatchNorm/moving_variance"
  input: "ssd300/expanded_conv_14/project/BatchNorm/moving_variance/Initializer/ones"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv_14/project/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "ssd300/expanded_conv_14/project/BatchNorm/moving_variance/read"
  op: "Identity"
  input: "ssd300/expanded_conv_14/project/BatchNorm/moving_variance"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv_14/project/BatchNorm/moving_variance"
      }
    }
  }
}
node {
  name: "ssd300/expanded_conv_14/project/BatchNorm/Reshape/shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\240\000\000\000\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "ssd300/expanded_conv_14/project/BatchNorm/Reshape"
  op: "Reshape"
  input: "ssd300/expanded_conv_14/project/BatchNorm/beta/read"
  input: "ssd300/expanded_conv_14/project/BatchNorm/Reshape/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "ssd300/expanded_conv_14/project/BatchNorm/Reshape_1/shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\240\000\000\000\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "ssd300/expanded_conv_14/project/BatchNorm/Reshape_1"
  op: "Reshape"
  input: "ssd300/expanded_conv_14/project/BatchNorm/moving_mean/read"
  input: "ssd300/expanded_conv_14/project/BatchNorm/Reshape_1/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "ssd300/expanded_conv_14/project/BatchNorm/Reshape_2/shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\240\000\000\000\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "ssd300/expanded_conv_14/project/BatchNorm/Reshape_2"
  op: "Reshape"
  input: "ssd300/expanded_conv_14/project/BatchNorm/moving_variance/read"
  input: "ssd300/expanded_conv_14/project/BatchNorm/Reshape_2/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "ssd300/expanded_conv_14/project/BatchNorm/batchnorm_1/Add/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0010000000474974513
      }
    }
  }
}
node {
  name: "ssd300/expanded_conv_14/project/BatchNorm/batchnorm_1/Add"
  op: "Add"
  input: "ssd300/expanded_conv_14/project/BatchNorm/Reshape_2"
  input: "ssd300/expanded_conv_14/project/BatchNorm/batchnorm_1/Add/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ssd300/expanded_conv_14/project/BatchNorm/batchnorm_1/Rsqrt"
  op: "Rsqrt"
  input: "ssd300/expanded_conv_14/project/BatchNorm/batchnorm_1/Add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ssd300/expanded_conv_14/project/BatchNorm/batchnorm_1/mul"
  op: "Mul"
  input: "ssd300/expanded_conv_14/project/layer_conv2d/Conv2D"
  input: "ssd300/expanded_conv_14/project/BatchNorm/batchnorm_1/Rsqrt"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ssd300/expanded_conv_14/project/BatchNorm/batchnorm_1/mul_1"
  op: "Mul"
  input: "ssd300/expanded_conv_14/project/BatchNorm/Reshape_1"
  input: "ssd300/expanded_conv_14/project/BatchNorm/batchnorm_1/Rsqrt"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ssd300/expanded_conv_14/project/BatchNorm/batchnorm_1/sub"
  op: "Sub"
  input: "ssd300/expanded_conv_14/project/BatchNorm/Reshape"
  input: "ssd300/expanded_conv_14/project/BatchNorm/batchnorm_1/mul_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ssd300/expanded_conv_14/project/BatchNorm/batchnorm_1/Add_1"
  op: "Add"
  input: "ssd300/expanded_conv_14/project/BatchNorm/batchnorm_1/mul"
  input: "ssd300/expanded_conv_14/project/BatchNorm/batchnorm_1/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ssd300/expanded_conv_14/Add"
  op: "Add"
  input: "ssd300/expanded_conv_14/project/BatchNorm/batchnorm_1/Add_1"
  input: "ssd300/expanded_conv_13/project/BatchNorm/batchnorm_1/Add_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ssd300/expanded_conv_15/expand/weights/Initializer/random_uniform/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv_15/expand/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000\240\000\000\000\300\003\000\000"
      }
    }
  }
}
node {
  name: "ssd300/expanded_conv_15/expand/weights/Initializer/random_uniform/min"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv_15/expand/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: -0.07319250702857971
      }
    }
  }
}
node {
  name: "ssd300/expanded_conv_15/expand/weights/Initializer/random_uniform/max"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv_15/expand/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.07319250702857971
      }
    }
  }
}
node {
  name: "ssd300/expanded_conv_15/expand/weights/Initializer/random_uniform/RandomUniform"
  op: "RandomUniform"
  input: "ssd300/expanded_conv_15/expand/weights/Initializer/random_uniform/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv_15/expand/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "ssd300/expanded_conv_15/expand/weights/Initializer/random_uniform/sub"
  op: "Sub"
  input: "ssd300/expanded_conv_15/expand/weights/Initializer/random_uniform/max"
  input: "ssd300/expanded_conv_15/expand/weights/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv_15/expand/weights"
      }
    }
  }
}
node {
  name: "ssd300/expanded_conv_15/expand/weights/Initializer/random_uniform/mul"
  op: "Mul"
  input: "ssd300/expanded_conv_15/expand/weights/Initializer/random_uniform/RandomUniform"
  input: "ssd300/expanded_conv_15/expand/weights/Initializer/random_uniform/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv_15/expand/weights"
      }
    }
  }
}
node {
  name: "ssd300/expanded_conv_15/expand/weights/Initializer/random_uniform"
  op: "Add"
  input: "ssd300/expanded_conv_15/expand/weights/Initializer/random_uniform/mul"
  input: "ssd300/expanded_conv_15/expand/weights/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv_15/expand/weights"
      }
    }
  }
}
node {
  name: "ssd300/expanded_conv_15/expand/weights"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv_15/expand/weights"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
        dim {
          size: 1
        }
        dim {
          size: 160
        }
        dim {
          size: 960
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "ssd300/expanded_conv_15/expand/weights/Assign"
  op: "Assign"
  input: "ssd300/expanded_conv_15/expand/weights"
  input: "ssd300/expanded_conv_15/expand/weights/Initializer/random_uniform"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv_15/expand/weights"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "ssd300/expanded_conv_15/expand/weights/read"
  op: "Identity"
  input: "ssd300/expanded_conv_15/expand/weights"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv_15/expand/weights"
      }
    }
  }
}
node {
  name: "ssd300/expanded_conv_15/expand/layer_conv2d/Conv2D"
  op: "Conv2D"
  input: "ssd300/expanded_conv_14/Add"
  input: "ssd300/expanded_conv_15/expand/weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NCHW"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "explicit_paddings"
    value {
      list {
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "ssd300/expanded_conv_15/expand/BatchNorm/beta/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv_15/expand/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 960
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "ssd300/expanded_conv_15/expand/BatchNorm/beta"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv_15/expand/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 960
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "ssd300/expanded_conv_15/expand/BatchNorm/beta/Assign"
  op: "Assign"
  input: "ssd300/expanded_conv_15/expand/BatchNorm/beta"
  input: "ssd300/expanded_conv_15/expand/BatchNorm/beta/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv_15/expand/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "ssd300/expanded_conv_15/expand/BatchNorm/beta/read"
  op: "Identity"
  input: "ssd300/expanded_conv_15/expand/BatchNorm/beta"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv_15/expand/BatchNorm/beta"
      }
    }
  }
}
node {
  name: "ssd300/expanded_conv_15/expand/BatchNorm/moving_mean/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv_15/expand/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 960
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "ssd300/expanded_conv_15/expand/BatchNorm/moving_mean"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv_15/expand/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 960
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "ssd300/expanded_conv_15/expand/BatchNorm/moving_mean/Assign"
  op: "Assign"
  input: "ssd300/expanded_conv_15/expand/BatchNorm/moving_mean"
  input: "ssd300/expanded_conv_15/expand/BatchNorm/moving_mean/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv_15/expand/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "ssd300/expanded_conv_15/expand/BatchNorm/moving_mean/read"
  op: "Identity"
  input: "ssd300/expanded_conv_15/expand/BatchNorm/moving_mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv_15/expand/BatchNorm/moving_mean"
      }
    }
  }
}
node {
  name: "ssd300/expanded_conv_15/expand/BatchNorm/moving_variance/Initializer/ones"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv_15/expand/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 960
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "ssd300/expanded_conv_15/expand/BatchNorm/moving_variance"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv_15/expand/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 960
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "ssd300/expanded_conv_15/expand/BatchNorm/moving_variance/Assign"
  op: "Assign"
  input: "ssd300/expanded_conv_15/expand/BatchNorm/moving_variance"
  input: "ssd300/expanded_conv_15/expand/BatchNorm/moving_variance/Initializer/ones"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv_15/expand/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "ssd300/expanded_conv_15/expand/BatchNorm/moving_variance/read"
  op: "Identity"
  input: "ssd300/expanded_conv_15/expand/BatchNorm/moving_variance"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv_15/expand/BatchNorm/moving_variance"
      }
    }
  }
}
node {
  name: "ssd300/expanded_conv_15/expand/BatchNorm/Reshape/shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\300\003\000\000\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "ssd300/expanded_conv_15/expand/BatchNorm/Reshape"
  op: "Reshape"
  input: "ssd300/expanded_conv_15/expand/BatchNorm/beta/read"
  input: "ssd300/expanded_conv_15/expand/BatchNorm/Reshape/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "ssd300/expanded_conv_15/expand/BatchNorm/Reshape_1/shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\300\003\000\000\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "ssd300/expanded_conv_15/expand/BatchNorm/Reshape_1"
  op: "Reshape"
  input: "ssd300/expanded_conv_15/expand/BatchNorm/moving_mean/read"
  input: "ssd300/expanded_conv_15/expand/BatchNorm/Reshape_1/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "ssd300/expanded_conv_15/expand/BatchNorm/Reshape_2/shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\300\003\000\000\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "ssd300/expanded_conv_15/expand/BatchNorm/Reshape_2"
  op: "Reshape"
  input: "ssd300/expanded_conv_15/expand/BatchNorm/moving_variance/read"
  input: "ssd300/expanded_conv_15/expand/BatchNorm/Reshape_2/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "ssd300/expanded_conv_15/expand/BatchNorm/batchnorm_1/Add/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0010000000474974513
      }
    }
  }
}
node {
  name: "ssd300/expanded_conv_15/expand/BatchNorm/batchnorm_1/Add"
  op: "Add"
  input: "ssd300/expanded_conv_15/expand/BatchNorm/Reshape_2"
  input: "ssd300/expanded_conv_15/expand/BatchNorm/batchnorm_1/Add/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ssd300/expanded_conv_15/expand/BatchNorm/batchnorm_1/Rsqrt"
  op: "Rsqrt"
  input: "ssd300/expanded_conv_15/expand/BatchNorm/batchnorm_1/Add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ssd300/expanded_conv_15/expand/BatchNorm/batchnorm_1/mul"
  op: "Mul"
  input: "ssd300/expanded_conv_15/expand/layer_conv2d/Conv2D"
  input: "ssd300/expanded_conv_15/expand/BatchNorm/batchnorm_1/Rsqrt"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ssd300/expanded_conv_15/expand/BatchNorm/batchnorm_1/mul_1"
  op: "Mul"
  input: "ssd300/expanded_conv_15/expand/BatchNorm/Reshape_1"
  input: "ssd300/expanded_conv_15/expand/BatchNorm/batchnorm_1/Rsqrt"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ssd300/expanded_conv_15/expand/BatchNorm/batchnorm_1/sub"
  op: "Sub"
  input: "ssd300/expanded_conv_15/expand/BatchNorm/Reshape"
  input: "ssd300/expanded_conv_15/expand/BatchNorm/batchnorm_1/mul_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ssd300/expanded_conv_15/expand/BatchNorm/batchnorm_1/Add_1"
  op: "Add"
  input: "ssd300/expanded_conv_15/expand/BatchNorm/batchnorm_1/mul"
  input: "ssd300/expanded_conv_15/expand/BatchNorm/batchnorm_1/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ssd300/expanded_conv_15/expand/Relu6"
  op: "Relu6"
  input: "ssd300/expanded_conv_15/expand/BatchNorm/batchnorm_1/Add_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ssd300/expanded_conv_15/depthwise/depthwise_weights/Initializer/random_uniform/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv_15/depthwise/depthwise_weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\003\000\000\000\003\000\000\000\300\003\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "ssd300/expanded_conv_15/depthwise/depthwise_weights/Initializer/random_uniform/min"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv_15/depthwise/depthwise_weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: -0.026338599622249603
      }
    }
  }
}
node {
  name: "ssd300/expanded_conv_15/depthwise/depthwise_weights/Initializer/random_uniform/max"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv_15/depthwise/depthwise_weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.026338599622249603
      }
    }
  }
}
node {
  name: "ssd300/expanded_conv_15/depthwise/depthwise_weights/Initializer/random_uniform/RandomUniform"
  op: "RandomUniform"
  input: "ssd300/expanded_conv_15/depthwise/depthwise_weights/Initializer/random_uniform/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv_15/depthwise/depthwise_weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "ssd300/expanded_conv_15/depthwise/depthwise_weights/Initializer/random_uniform/sub"
  op: "Sub"
  input: "ssd300/expanded_conv_15/depthwise/depthwise_weights/Initializer/random_uniform/max"
  input: "ssd300/expanded_conv_15/depthwise/depthwise_weights/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv_15/depthwise/depthwise_weights"
      }
    }
  }
}
node {
  name: "ssd300/expanded_conv_15/depthwise/depthwise_weights/Initializer/random_uniform/mul"
  op: "Mul"
  input: "ssd300/expanded_conv_15/depthwise/depthwise_weights/Initializer/random_uniform/RandomUniform"
  input: "ssd300/expanded_conv_15/depthwise/depthwise_weights/Initializer/random_uniform/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv_15/depthwise/depthwise_weights"
      }
    }
  }
}
node {
  name: "ssd300/expanded_conv_15/depthwise/depthwise_weights/Initializer/random_uniform"
  op: "Add"
  input: "ssd300/expanded_conv_15/depthwise/depthwise_weights/Initializer/random_uniform/mul"
  input: "ssd300/expanded_conv_15/depthwise/depthwise_weights/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv_15/depthwise/depthwise_weights"
      }
    }
  }
}
node {
  name: "ssd300/expanded_conv_15/depthwise/depthwise_weights"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv_15/depthwise/depthwise_weights"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 3
        }
        dim {
          size: 3
        }
        dim {
          size: 960
        }
        dim {
          size: 1
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "ssd300/expanded_conv_15/depthwise/depthwise_weights/Assign"
  op: "Assign"
  input: "ssd300/expanded_conv_15/depthwise/depthwise_weights"
  input: "ssd300/expanded_conv_15/depthwise/depthwise_weights/Initializer/random_uniform"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv_15/depthwise/depthwise_weights"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "ssd300/expanded_conv_15/depthwise/depthwise_weights/read"
  op: "Identity"
  input: "ssd300/expanded_conv_15/depthwise/depthwise_weights"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv_15/depthwise/depthwise_weights"
      }
    }
  }
}
node {
  name: "ssd300/expanded_conv_15/depthwise/layer_conv2d/depthwise/Shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\003\000\000\000\003\000\000\000\300\003\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "ssd300/expanded_conv_15/depthwise/layer_conv2d/depthwise/dilation_rate"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "ssd300/expanded_conv_15/depthwise/layer_conv2d/depthwise"
  op: "DepthwiseConv2dNative"
  input: "ssd300/expanded_conv_15/expand/Relu6"
  input: "ssd300/expanded_conv_15/depthwise/depthwise_weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NCHW"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
}
node {
  name: "ssd300/expanded_conv_15/depthwise/BatchNorm/beta/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv_15/depthwise/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 960
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "ssd300/expanded_conv_15/depthwise/BatchNorm/beta"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv_15/depthwise/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 960
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "ssd300/expanded_conv_15/depthwise/BatchNorm/beta/Assign"
  op: "Assign"
  input: "ssd300/expanded_conv_15/depthwise/BatchNorm/beta"
  input: "ssd300/expanded_conv_15/depthwise/BatchNorm/beta/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv_15/depthwise/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "ssd300/expanded_conv_15/depthwise/BatchNorm/beta/read"
  op: "Identity"
  input: "ssd300/expanded_conv_15/depthwise/BatchNorm/beta"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv_15/depthwise/BatchNorm/beta"
      }
    }
  }
}
node {
  name: "ssd300/expanded_conv_15/depthwise/BatchNorm/moving_mean/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv_15/depthwise/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 960
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "ssd300/expanded_conv_15/depthwise/BatchNorm/moving_mean"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv_15/depthwise/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 960
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "ssd300/expanded_conv_15/depthwise/BatchNorm/moving_mean/Assign"
  op: "Assign"
  input: "ssd300/expanded_conv_15/depthwise/BatchNorm/moving_mean"
  input: "ssd300/expanded_conv_15/depthwise/BatchNorm/moving_mean/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv_15/depthwise/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "ssd300/expanded_conv_15/depthwise/BatchNorm/moving_mean/read"
  op: "Identity"
  input: "ssd300/expanded_conv_15/depthwise/BatchNorm/moving_mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv_15/depthwise/BatchNorm/moving_mean"
      }
    }
  }
}
node {
  name: "ssd300/expanded_conv_15/depthwise/BatchNorm/moving_variance/Initializer/ones"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv_15/depthwise/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 960
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "ssd300/expanded_conv_15/depthwise/BatchNorm/moving_variance"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv_15/depthwise/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 960
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "ssd300/expanded_conv_15/depthwise/BatchNorm/moving_variance/Assign"
  op: "Assign"
  input: "ssd300/expanded_conv_15/depthwise/BatchNorm/moving_variance"
  input: "ssd300/expanded_conv_15/depthwise/BatchNorm/moving_variance/Initializer/ones"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv_15/depthwise/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "ssd300/expanded_conv_15/depthwise/BatchNorm/moving_variance/read"
  op: "Identity"
  input: "ssd300/expanded_conv_15/depthwise/BatchNorm/moving_variance"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv_15/depthwise/BatchNorm/moving_variance"
      }
    }
  }
}
node {
  name: "ssd300/expanded_conv_15/depthwise/BatchNorm/Reshape/shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\300\003\000\000\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "ssd300/expanded_conv_15/depthwise/BatchNorm/Reshape"
  op: "Reshape"
  input: "ssd300/expanded_conv_15/depthwise/BatchNorm/beta/read"
  input: "ssd300/expanded_conv_15/depthwise/BatchNorm/Reshape/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "ssd300/expanded_conv_15/depthwise/BatchNorm/Reshape_1/shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\300\003\000\000\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "ssd300/expanded_conv_15/depthwise/BatchNorm/Reshape_1"
  op: "Reshape"
  input: "ssd300/expanded_conv_15/depthwise/BatchNorm/moving_mean/read"
  input: "ssd300/expanded_conv_15/depthwise/BatchNorm/Reshape_1/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "ssd300/expanded_conv_15/depthwise/BatchNorm/Reshape_2/shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\300\003\000\000\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "ssd300/expanded_conv_15/depthwise/BatchNorm/Reshape_2"
  op: "Reshape"
  input: "ssd300/expanded_conv_15/depthwise/BatchNorm/moving_variance/read"
  input: "ssd300/expanded_conv_15/depthwise/BatchNorm/Reshape_2/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "ssd300/expanded_conv_15/depthwise/BatchNorm/batchnorm_1/Add/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0010000000474974513
      }
    }
  }
}
node {
  name: "ssd300/expanded_conv_15/depthwise/BatchNorm/batchnorm_1/Add"
  op: "Add"
  input: "ssd300/expanded_conv_15/depthwise/BatchNorm/Reshape_2"
  input: "ssd300/expanded_conv_15/depthwise/BatchNorm/batchnorm_1/Add/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ssd300/expanded_conv_15/depthwise/BatchNorm/batchnorm_1/Rsqrt"
  op: "Rsqrt"
  input: "ssd300/expanded_conv_15/depthwise/BatchNorm/batchnorm_1/Add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ssd300/expanded_conv_15/depthwise/BatchNorm/batchnorm_1/mul"
  op: "Mul"
  input: "ssd300/expanded_conv_15/depthwise/layer_conv2d/depthwise"
  input: "ssd300/expanded_conv_15/depthwise/BatchNorm/batchnorm_1/Rsqrt"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ssd300/expanded_conv_15/depthwise/BatchNorm/batchnorm_1/mul_1"
  op: "Mul"
  input: "ssd300/expanded_conv_15/depthwise/BatchNorm/Reshape_1"
  input: "ssd300/expanded_conv_15/depthwise/BatchNorm/batchnorm_1/Rsqrt"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ssd300/expanded_conv_15/depthwise/BatchNorm/batchnorm_1/sub"
  op: "Sub"
  input: "ssd300/expanded_conv_15/depthwise/BatchNorm/Reshape"
  input: "ssd300/expanded_conv_15/depthwise/BatchNorm/batchnorm_1/mul_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ssd300/expanded_conv_15/depthwise/BatchNorm/batchnorm_1/Add_1"
  op: "Add"
  input: "ssd300/expanded_conv_15/depthwise/BatchNorm/batchnorm_1/mul"
  input: "ssd300/expanded_conv_15/depthwise/BatchNorm/batchnorm_1/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ssd300/expanded_conv_15/depthwise/Relu6"
  op: "Relu6"
  input: "ssd300/expanded_conv_15/depthwise/BatchNorm/batchnorm_1/Add_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ssd300/expanded_conv_15/project/weights/Initializer/random_uniform/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv_15/project/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000\300\003\000\000\240\000\000\000"
      }
    }
  }
}
node {
  name: "ssd300/expanded_conv_15/project/weights/Initializer/random_uniform/min"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv_15/project/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: -0.07319250702857971
      }
    }
  }
}
node {
  name: "ssd300/expanded_conv_15/project/weights/Initializer/random_uniform/max"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv_15/project/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.07319250702857971
      }
    }
  }
}
node {
  name: "ssd300/expanded_conv_15/project/weights/Initializer/random_uniform/RandomUniform"
  op: "RandomUniform"
  input: "ssd300/expanded_conv_15/project/weights/Initializer/random_uniform/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv_15/project/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "ssd300/expanded_conv_15/project/weights/Initializer/random_uniform/sub"
  op: "Sub"
  input: "ssd300/expanded_conv_15/project/weights/Initializer/random_uniform/max"
  input: "ssd300/expanded_conv_15/project/weights/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv_15/project/weights"
      }
    }
  }
}
node {
  name: "ssd300/expanded_conv_15/project/weights/Initializer/random_uniform/mul"
  op: "Mul"
  input: "ssd300/expanded_conv_15/project/weights/Initializer/random_uniform/RandomUniform"
  input: "ssd300/expanded_conv_15/project/weights/Initializer/random_uniform/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv_15/project/weights"
      }
    }
  }
}
node {
  name: "ssd300/expanded_conv_15/project/weights/Initializer/random_uniform"
  op: "Add"
  input: "ssd300/expanded_conv_15/project/weights/Initializer/random_uniform/mul"
  input: "ssd300/expanded_conv_15/project/weights/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv_15/project/weights"
      }
    }
  }
}
node {
  name: "ssd300/expanded_conv_15/project/weights"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv_15/project/weights"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
        dim {
          size: 1
        }
        dim {
          size: 960
        }
        dim {
          size: 160
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "ssd300/expanded_conv_15/project/weights/Assign"
  op: "Assign"
  input: "ssd300/expanded_conv_15/project/weights"
  input: "ssd300/expanded_conv_15/project/weights/Initializer/random_uniform"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv_15/project/weights"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "ssd300/expanded_conv_15/project/weights/read"
  op: "Identity"
  input: "ssd300/expanded_conv_15/project/weights"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv_15/project/weights"
      }
    }
  }
}
node {
  name: "ssd300/expanded_conv_15/project/layer_conv2d/Conv2D"
  op: "Conv2D"
  input: "ssd300/expanded_conv_15/depthwise/Relu6"
  input: "ssd300/expanded_conv_15/project/weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NCHW"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "explicit_paddings"
    value {
      list {
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "ssd300/expanded_conv_15/project/BatchNorm/beta/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv_15/project/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 160
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "ssd300/expanded_conv_15/project/BatchNorm/beta"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv_15/project/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 160
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "ssd300/expanded_conv_15/project/BatchNorm/beta/Assign"
  op: "Assign"
  input: "ssd300/expanded_conv_15/project/BatchNorm/beta"
  input: "ssd300/expanded_conv_15/project/BatchNorm/beta/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv_15/project/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "ssd300/expanded_conv_15/project/BatchNorm/beta/read"
  op: "Identity"
  input: "ssd300/expanded_conv_15/project/BatchNorm/beta"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv_15/project/BatchNorm/beta"
      }
    }
  }
}
node {
  name: "ssd300/expanded_conv_15/project/BatchNorm/moving_mean/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv_15/project/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 160
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "ssd300/expanded_conv_15/project/BatchNorm/moving_mean"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv_15/project/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 160
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "ssd300/expanded_conv_15/project/BatchNorm/moving_mean/Assign"
  op: "Assign"
  input: "ssd300/expanded_conv_15/project/BatchNorm/moving_mean"
  input: "ssd300/expanded_conv_15/project/BatchNorm/moving_mean/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv_15/project/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "ssd300/expanded_conv_15/project/BatchNorm/moving_mean/read"
  op: "Identity"
  input: "ssd300/expanded_conv_15/project/BatchNorm/moving_mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv_15/project/BatchNorm/moving_mean"
      }
    }
  }
}
node {
  name: "ssd300/expanded_conv_15/project/BatchNorm/moving_variance/Initializer/ones"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv_15/project/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 160
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "ssd300/expanded_conv_15/project/BatchNorm/moving_variance"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv_15/project/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 160
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "ssd300/expanded_conv_15/project/BatchNorm/moving_variance/Assign"
  op: "Assign"
  input: "ssd300/expanded_conv_15/project/BatchNorm/moving_variance"
  input: "ssd300/expanded_conv_15/project/BatchNorm/moving_variance/Initializer/ones"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv_15/project/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "ssd300/expanded_conv_15/project/BatchNorm/moving_variance/read"
  op: "Identity"
  input: "ssd300/expanded_conv_15/project/BatchNorm/moving_variance"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv_15/project/BatchNorm/moving_variance"
      }
    }
  }
}
node {
  name: "ssd300/expanded_conv_15/project/BatchNorm/Reshape/shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\240\000\000\000\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "ssd300/expanded_conv_15/project/BatchNorm/Reshape"
  op: "Reshape"
  input: "ssd300/expanded_conv_15/project/BatchNorm/beta/read"
  input: "ssd300/expanded_conv_15/project/BatchNorm/Reshape/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "ssd300/expanded_conv_15/project/BatchNorm/Reshape_1/shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\240\000\000\000\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "ssd300/expanded_conv_15/project/BatchNorm/Reshape_1"
  op: "Reshape"
  input: "ssd300/expanded_conv_15/project/BatchNorm/moving_mean/read"
  input: "ssd300/expanded_conv_15/project/BatchNorm/Reshape_1/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "ssd300/expanded_conv_15/project/BatchNorm/Reshape_2/shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\240\000\000\000\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "ssd300/expanded_conv_15/project/BatchNorm/Reshape_2"
  op: "Reshape"
  input: "ssd300/expanded_conv_15/project/BatchNorm/moving_variance/read"
  input: "ssd300/expanded_conv_15/project/BatchNorm/Reshape_2/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "ssd300/expanded_conv_15/project/BatchNorm/batchnorm_1/Add/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0010000000474974513
      }
    }
  }
}
node {
  name: "ssd300/expanded_conv_15/project/BatchNorm/batchnorm_1/Add"
  op: "Add"
  input: "ssd300/expanded_conv_15/project/BatchNorm/Reshape_2"
  input: "ssd300/expanded_conv_15/project/BatchNorm/batchnorm_1/Add/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ssd300/expanded_conv_15/project/BatchNorm/batchnorm_1/Rsqrt"
  op: "Rsqrt"
  input: "ssd300/expanded_conv_15/project/BatchNorm/batchnorm_1/Add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ssd300/expanded_conv_15/project/BatchNorm/batchnorm_1/mul"
  op: "Mul"
  input: "ssd300/expanded_conv_15/project/layer_conv2d/Conv2D"
  input: "ssd300/expanded_conv_15/project/BatchNorm/batchnorm_1/Rsqrt"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ssd300/expanded_conv_15/project/BatchNorm/batchnorm_1/mul_1"
  op: "Mul"
  input: "ssd300/expanded_conv_15/project/BatchNorm/Reshape_1"
  input: "ssd300/expanded_conv_15/project/BatchNorm/batchnorm_1/Rsqrt"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ssd300/expanded_conv_15/project/BatchNorm/batchnorm_1/sub"
  op: "Sub"
  input: "ssd300/expanded_conv_15/project/BatchNorm/Reshape"
  input: "ssd300/expanded_conv_15/project/BatchNorm/batchnorm_1/mul_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ssd300/expanded_conv_15/project/BatchNorm/batchnorm_1/Add_1"
  op: "Add"
  input: "ssd300/expanded_conv_15/project/BatchNorm/batchnorm_1/mul"
  input: "ssd300/expanded_conv_15/project/BatchNorm/batchnorm_1/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ssd300/expanded_conv_15/Add"
  op: "Add"
  input: "ssd300/expanded_conv_15/project/BatchNorm/batchnorm_1/Add_1"
  input: "ssd300/expanded_conv_14/Add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ssd300/expanded_conv_16/expand/weights/Initializer/random_uniform/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv_16/expand/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000\240\000\000\000\300\003\000\000"
      }
    }
  }
}
node {
  name: "ssd300/expanded_conv_16/expand/weights/Initializer/random_uniform/min"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv_16/expand/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: -0.07319250702857971
      }
    }
  }
}
node {
  name: "ssd300/expanded_conv_16/expand/weights/Initializer/random_uniform/max"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv_16/expand/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.07319250702857971
      }
    }
  }
}
node {
  name: "ssd300/expanded_conv_16/expand/weights/Initializer/random_uniform/RandomUniform"
  op: "RandomUniform"
  input: "ssd300/expanded_conv_16/expand/weights/Initializer/random_uniform/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv_16/expand/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "ssd300/expanded_conv_16/expand/weights/Initializer/random_uniform/sub"
  op: "Sub"
  input: "ssd300/expanded_conv_16/expand/weights/Initializer/random_uniform/max"
  input: "ssd300/expanded_conv_16/expand/weights/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv_16/expand/weights"
      }
    }
  }
}
node {
  name: "ssd300/expanded_conv_16/expand/weights/Initializer/random_uniform/mul"
  op: "Mul"
  input: "ssd300/expanded_conv_16/expand/weights/Initializer/random_uniform/RandomUniform"
  input: "ssd300/expanded_conv_16/expand/weights/Initializer/random_uniform/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv_16/expand/weights"
      }
    }
  }
}
node {
  name: "ssd300/expanded_conv_16/expand/weights/Initializer/random_uniform"
  op: "Add"
  input: "ssd300/expanded_conv_16/expand/weights/Initializer/random_uniform/mul"
  input: "ssd300/expanded_conv_16/expand/weights/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv_16/expand/weights"
      }
    }
  }
}
node {
  name: "ssd300/expanded_conv_16/expand/weights"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv_16/expand/weights"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
        dim {
          size: 1
        }
        dim {
          size: 160
        }
        dim {
          size: 960
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "ssd300/expanded_conv_16/expand/weights/Assign"
  op: "Assign"
  input: "ssd300/expanded_conv_16/expand/weights"
  input: "ssd300/expanded_conv_16/expand/weights/Initializer/random_uniform"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv_16/expand/weights"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "ssd300/expanded_conv_16/expand/weights/read"
  op: "Identity"
  input: "ssd300/expanded_conv_16/expand/weights"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv_16/expand/weights"
      }
    }
  }
}
node {
  name: "ssd300/expanded_conv_16/expand/layer_conv2d/Conv2D"
  op: "Conv2D"
  input: "ssd300/expanded_conv_15/Add"
  input: "ssd300/expanded_conv_16/expand/weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NCHW"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "explicit_paddings"
    value {
      list {
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "ssd300/expanded_conv_16/expand/BatchNorm/beta/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv_16/expand/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 960
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "ssd300/expanded_conv_16/expand/BatchNorm/beta"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv_16/expand/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 960
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "ssd300/expanded_conv_16/expand/BatchNorm/beta/Assign"
  op: "Assign"
  input: "ssd300/expanded_conv_16/expand/BatchNorm/beta"
  input: "ssd300/expanded_conv_16/expand/BatchNorm/beta/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv_16/expand/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "ssd300/expanded_conv_16/expand/BatchNorm/beta/read"
  op: "Identity"
  input: "ssd300/expanded_conv_16/expand/BatchNorm/beta"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv_16/expand/BatchNorm/beta"
      }
    }
  }
}
node {
  name: "ssd300/expanded_conv_16/expand/BatchNorm/moving_mean/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv_16/expand/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 960
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "ssd300/expanded_conv_16/expand/BatchNorm/moving_mean"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv_16/expand/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 960
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "ssd300/expanded_conv_16/expand/BatchNorm/moving_mean/Assign"
  op: "Assign"
  input: "ssd300/expanded_conv_16/expand/BatchNorm/moving_mean"
  input: "ssd300/expanded_conv_16/expand/BatchNorm/moving_mean/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv_16/expand/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "ssd300/expanded_conv_16/expand/BatchNorm/moving_mean/read"
  op: "Identity"
  input: "ssd300/expanded_conv_16/expand/BatchNorm/moving_mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv_16/expand/BatchNorm/moving_mean"
      }
    }
  }
}
node {
  name: "ssd300/expanded_conv_16/expand/BatchNorm/moving_variance/Initializer/ones"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv_16/expand/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 960
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "ssd300/expanded_conv_16/expand/BatchNorm/moving_variance"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv_16/expand/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 960
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "ssd300/expanded_conv_16/expand/BatchNorm/moving_variance/Assign"
  op: "Assign"
  input: "ssd300/expanded_conv_16/expand/BatchNorm/moving_variance"
  input: "ssd300/expanded_conv_16/expand/BatchNorm/moving_variance/Initializer/ones"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv_16/expand/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "ssd300/expanded_conv_16/expand/BatchNorm/moving_variance/read"
  op: "Identity"
  input: "ssd300/expanded_conv_16/expand/BatchNorm/moving_variance"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv_16/expand/BatchNorm/moving_variance"
      }
    }
  }
}
node {
  name: "ssd300/expanded_conv_16/expand/BatchNorm/Reshape/shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\300\003\000\000\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "ssd300/expanded_conv_16/expand/BatchNorm/Reshape"
  op: "Reshape"
  input: "ssd300/expanded_conv_16/expand/BatchNorm/beta/read"
  input: "ssd300/expanded_conv_16/expand/BatchNorm/Reshape/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "ssd300/expanded_conv_16/expand/BatchNorm/Reshape_1/shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\300\003\000\000\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "ssd300/expanded_conv_16/expand/BatchNorm/Reshape_1"
  op: "Reshape"
  input: "ssd300/expanded_conv_16/expand/BatchNorm/moving_mean/read"
  input: "ssd300/expanded_conv_16/expand/BatchNorm/Reshape_1/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "ssd300/expanded_conv_16/expand/BatchNorm/Reshape_2/shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\300\003\000\000\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "ssd300/expanded_conv_16/expand/BatchNorm/Reshape_2"
  op: "Reshape"
  input: "ssd300/expanded_conv_16/expand/BatchNorm/moving_variance/read"
  input: "ssd300/expanded_conv_16/expand/BatchNorm/Reshape_2/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "ssd300/expanded_conv_16/expand/BatchNorm/batchnorm_1/Add/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0010000000474974513
      }
    }
  }
}
node {
  name: "ssd300/expanded_conv_16/expand/BatchNorm/batchnorm_1/Add"
  op: "Add"
  input: "ssd300/expanded_conv_16/expand/BatchNorm/Reshape_2"
  input: "ssd300/expanded_conv_16/expand/BatchNorm/batchnorm_1/Add/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ssd300/expanded_conv_16/expand/BatchNorm/batchnorm_1/Rsqrt"
  op: "Rsqrt"
  input: "ssd300/expanded_conv_16/expand/BatchNorm/batchnorm_1/Add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ssd300/expanded_conv_16/expand/BatchNorm/batchnorm_1/mul"
  op: "Mul"
  input: "ssd300/expanded_conv_16/expand/layer_conv2d/Conv2D"
  input: "ssd300/expanded_conv_16/expand/BatchNorm/batchnorm_1/Rsqrt"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ssd300/expanded_conv_16/expand/BatchNorm/batchnorm_1/mul_1"
  op: "Mul"
  input: "ssd300/expanded_conv_16/expand/BatchNorm/Reshape_1"
  input: "ssd300/expanded_conv_16/expand/BatchNorm/batchnorm_1/Rsqrt"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ssd300/expanded_conv_16/expand/BatchNorm/batchnorm_1/sub"
  op: "Sub"
  input: "ssd300/expanded_conv_16/expand/BatchNorm/Reshape"
  input: "ssd300/expanded_conv_16/expand/BatchNorm/batchnorm_1/mul_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ssd300/expanded_conv_16/expand/BatchNorm/batchnorm_1/Add_1"
  op: "Add"
  input: "ssd300/expanded_conv_16/expand/BatchNorm/batchnorm_1/mul"
  input: "ssd300/expanded_conv_16/expand/BatchNorm/batchnorm_1/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ssd300/expanded_conv_16/expand/Relu6"
  op: "Relu6"
  input: "ssd300/expanded_conv_16/expand/BatchNorm/batchnorm_1/Add_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ssd300/expanded_conv_16/depthwise/depthwise_weights/Initializer/random_uniform/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv_16/depthwise/depthwise_weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\003\000\000\000\003\000\000\000\300\003\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "ssd300/expanded_conv_16/depthwise/depthwise_weights/Initializer/random_uniform/min"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv_16/depthwise/depthwise_weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: -0.026338599622249603
      }
    }
  }
}
node {
  name: "ssd300/expanded_conv_16/depthwise/depthwise_weights/Initializer/random_uniform/max"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv_16/depthwise/depthwise_weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.026338599622249603
      }
    }
  }
}
node {
  name: "ssd300/expanded_conv_16/depthwise/depthwise_weights/Initializer/random_uniform/RandomUniform"
  op: "RandomUniform"
  input: "ssd300/expanded_conv_16/depthwise/depthwise_weights/Initializer/random_uniform/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv_16/depthwise/depthwise_weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "ssd300/expanded_conv_16/depthwise/depthwise_weights/Initializer/random_uniform/sub"
  op: "Sub"
  input: "ssd300/expanded_conv_16/depthwise/depthwise_weights/Initializer/random_uniform/max"
  input: "ssd300/expanded_conv_16/depthwise/depthwise_weights/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv_16/depthwise/depthwise_weights"
      }
    }
  }
}
node {
  name: "ssd300/expanded_conv_16/depthwise/depthwise_weights/Initializer/random_uniform/mul"
  op: "Mul"
  input: "ssd300/expanded_conv_16/depthwise/depthwise_weights/Initializer/random_uniform/RandomUniform"
  input: "ssd300/expanded_conv_16/depthwise/depthwise_weights/Initializer/random_uniform/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv_16/depthwise/depthwise_weights"
      }
    }
  }
}
node {
  name: "ssd300/expanded_conv_16/depthwise/depthwise_weights/Initializer/random_uniform"
  op: "Add"
  input: "ssd300/expanded_conv_16/depthwise/depthwise_weights/Initializer/random_uniform/mul"
  input: "ssd300/expanded_conv_16/depthwise/depthwise_weights/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv_16/depthwise/depthwise_weights"
      }
    }
  }
}
node {
  name: "ssd300/expanded_conv_16/depthwise/depthwise_weights"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv_16/depthwise/depthwise_weights"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 3
        }
        dim {
          size: 3
        }
        dim {
          size: 960
        }
        dim {
          size: 1
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "ssd300/expanded_conv_16/depthwise/depthwise_weights/Assign"
  op: "Assign"
  input: "ssd300/expanded_conv_16/depthwise/depthwise_weights"
  input: "ssd300/expanded_conv_16/depthwise/depthwise_weights/Initializer/random_uniform"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv_16/depthwise/depthwise_weights"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "ssd300/expanded_conv_16/depthwise/depthwise_weights/read"
  op: "Identity"
  input: "ssd300/expanded_conv_16/depthwise/depthwise_weights"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv_16/depthwise/depthwise_weights"
      }
    }
  }
}
node {
  name: "ssd300/expanded_conv_16/depthwise/layer_conv2d/depthwise/Shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\003\000\000\000\003\000\000\000\300\003\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "ssd300/expanded_conv_16/depthwise/layer_conv2d/depthwise/dilation_rate"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "ssd300/expanded_conv_16/depthwise/layer_conv2d/depthwise"
  op: "DepthwiseConv2dNative"
  input: "ssd300/expanded_conv_16/expand/Relu6"
  input: "ssd300/expanded_conv_16/depthwise/depthwise_weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NCHW"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
}
node {
  name: "ssd300/expanded_conv_16/depthwise/BatchNorm/beta/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv_16/depthwise/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 960
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "ssd300/expanded_conv_16/depthwise/BatchNorm/beta"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv_16/depthwise/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 960
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "ssd300/expanded_conv_16/depthwise/BatchNorm/beta/Assign"
  op: "Assign"
  input: "ssd300/expanded_conv_16/depthwise/BatchNorm/beta"
  input: "ssd300/expanded_conv_16/depthwise/BatchNorm/beta/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv_16/depthwise/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "ssd300/expanded_conv_16/depthwise/BatchNorm/beta/read"
  op: "Identity"
  input: "ssd300/expanded_conv_16/depthwise/BatchNorm/beta"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv_16/depthwise/BatchNorm/beta"
      }
    }
  }
}
node {
  name: "ssd300/expanded_conv_16/depthwise/BatchNorm/moving_mean/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv_16/depthwise/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 960
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "ssd300/expanded_conv_16/depthwise/BatchNorm/moving_mean"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv_16/depthwise/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 960
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "ssd300/expanded_conv_16/depthwise/BatchNorm/moving_mean/Assign"
  op: "Assign"
  input: "ssd300/expanded_conv_16/depthwise/BatchNorm/moving_mean"
  input: "ssd300/expanded_conv_16/depthwise/BatchNorm/moving_mean/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv_16/depthwise/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "ssd300/expanded_conv_16/depthwise/BatchNorm/moving_mean/read"
  op: "Identity"
  input: "ssd300/expanded_conv_16/depthwise/BatchNorm/moving_mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv_16/depthwise/BatchNorm/moving_mean"
      }
    }
  }
}
node {
  name: "ssd300/expanded_conv_16/depthwise/BatchNorm/moving_variance/Initializer/ones"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv_16/depthwise/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 960
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "ssd300/expanded_conv_16/depthwise/BatchNorm/moving_variance"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv_16/depthwise/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 960
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "ssd300/expanded_conv_16/depthwise/BatchNorm/moving_variance/Assign"
  op: "Assign"
  input: "ssd300/expanded_conv_16/depthwise/BatchNorm/moving_variance"
  input: "ssd300/expanded_conv_16/depthwise/BatchNorm/moving_variance/Initializer/ones"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv_16/depthwise/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "ssd300/expanded_conv_16/depthwise/BatchNorm/moving_variance/read"
  op: "Identity"
  input: "ssd300/expanded_conv_16/depthwise/BatchNorm/moving_variance"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv_16/depthwise/BatchNorm/moving_variance"
      }
    }
  }
}
node {
  name: "ssd300/expanded_conv_16/depthwise/BatchNorm/Reshape/shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\300\003\000\000\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "ssd300/expanded_conv_16/depthwise/BatchNorm/Reshape"
  op: "Reshape"
  input: "ssd300/expanded_conv_16/depthwise/BatchNorm/beta/read"
  input: "ssd300/expanded_conv_16/depthwise/BatchNorm/Reshape/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "ssd300/expanded_conv_16/depthwise/BatchNorm/Reshape_1/shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\300\003\000\000\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "ssd300/expanded_conv_16/depthwise/BatchNorm/Reshape_1"
  op: "Reshape"
  input: "ssd300/expanded_conv_16/depthwise/BatchNorm/moving_mean/read"
  input: "ssd300/expanded_conv_16/depthwise/BatchNorm/Reshape_1/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "ssd300/expanded_conv_16/depthwise/BatchNorm/Reshape_2/shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\300\003\000\000\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "ssd300/expanded_conv_16/depthwise/BatchNorm/Reshape_2"
  op: "Reshape"
  input: "ssd300/expanded_conv_16/depthwise/BatchNorm/moving_variance/read"
  input: "ssd300/expanded_conv_16/depthwise/BatchNorm/Reshape_2/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "ssd300/expanded_conv_16/depthwise/BatchNorm/batchnorm_1/Add/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0010000000474974513
      }
    }
  }
}
node {
  name: "ssd300/expanded_conv_16/depthwise/BatchNorm/batchnorm_1/Add"
  op: "Add"
  input: "ssd300/expanded_conv_16/depthwise/BatchNorm/Reshape_2"
  input: "ssd300/expanded_conv_16/depthwise/BatchNorm/batchnorm_1/Add/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ssd300/expanded_conv_16/depthwise/BatchNorm/batchnorm_1/Rsqrt"
  op: "Rsqrt"
  input: "ssd300/expanded_conv_16/depthwise/BatchNorm/batchnorm_1/Add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ssd300/expanded_conv_16/depthwise/BatchNorm/batchnorm_1/mul"
  op: "Mul"
  input: "ssd300/expanded_conv_16/depthwise/layer_conv2d/depthwise"
  input: "ssd300/expanded_conv_16/depthwise/BatchNorm/batchnorm_1/Rsqrt"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ssd300/expanded_conv_16/depthwise/BatchNorm/batchnorm_1/mul_1"
  op: "Mul"
  input: "ssd300/expanded_conv_16/depthwise/BatchNorm/Reshape_1"
  input: "ssd300/expanded_conv_16/depthwise/BatchNorm/batchnorm_1/Rsqrt"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ssd300/expanded_conv_16/depthwise/BatchNorm/batchnorm_1/sub"
  op: "Sub"
  input: "ssd300/expanded_conv_16/depthwise/BatchNorm/Reshape"
  input: "ssd300/expanded_conv_16/depthwise/BatchNorm/batchnorm_1/mul_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ssd300/expanded_conv_16/depthwise/BatchNorm/batchnorm_1/Add_1"
  op: "Add"
  input: "ssd300/expanded_conv_16/depthwise/BatchNorm/batchnorm_1/mul"
  input: "ssd300/expanded_conv_16/depthwise/BatchNorm/batchnorm_1/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ssd300/expanded_conv_16/depthwise/Relu6"
  op: "Relu6"
  input: "ssd300/expanded_conv_16/depthwise/BatchNorm/batchnorm_1/Add_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ssd300/expanded_conv_16/project/weights/Initializer/random_uniform/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv_16/project/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000\300\003\000\000@\001\000\000"
      }
    }
  }
}
node {
  name: "ssd300/expanded_conv_16/project/weights/Initializer/random_uniform/min"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv_16/project/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: -0.06846532225608826
      }
    }
  }
}
node {
  name: "ssd300/expanded_conv_16/project/weights/Initializer/random_uniform/max"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv_16/project/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.06846532225608826
      }
    }
  }
}
node {
  name: "ssd300/expanded_conv_16/project/weights/Initializer/random_uniform/RandomUniform"
  op: "RandomUniform"
  input: "ssd300/expanded_conv_16/project/weights/Initializer/random_uniform/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv_16/project/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "ssd300/expanded_conv_16/project/weights/Initializer/random_uniform/sub"
  op: "Sub"
  input: "ssd300/expanded_conv_16/project/weights/Initializer/random_uniform/max"
  input: "ssd300/expanded_conv_16/project/weights/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv_16/project/weights"
      }
    }
  }
}
node {
  name: "ssd300/expanded_conv_16/project/weights/Initializer/random_uniform/mul"
  op: "Mul"
  input: "ssd300/expanded_conv_16/project/weights/Initializer/random_uniform/RandomUniform"
  input: "ssd300/expanded_conv_16/project/weights/Initializer/random_uniform/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv_16/project/weights"
      }
    }
  }
}
node {
  name: "ssd300/expanded_conv_16/project/weights/Initializer/random_uniform"
  op: "Add"
  input: "ssd300/expanded_conv_16/project/weights/Initializer/random_uniform/mul"
  input: "ssd300/expanded_conv_16/project/weights/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv_16/project/weights"
      }
    }
  }
}
node {
  name: "ssd300/expanded_conv_16/project/weights"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv_16/project/weights"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
        dim {
          size: 1
        }
        dim {
          size: 960
        }
        dim {
          size: 320
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "ssd300/expanded_conv_16/project/weights/Assign"
  op: "Assign"
  input: "ssd300/expanded_conv_16/project/weights"
  input: "ssd300/expanded_conv_16/project/weights/Initializer/random_uniform"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv_16/project/weights"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "ssd300/expanded_conv_16/project/weights/read"
  op: "Identity"
  input: "ssd300/expanded_conv_16/project/weights"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv_16/project/weights"
      }
    }
  }
}
node {
  name: "ssd300/expanded_conv_16/project/layer_conv2d/Conv2D"
  op: "Conv2D"
  input: "ssd300/expanded_conv_16/depthwise/Relu6"
  input: "ssd300/expanded_conv_16/project/weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NCHW"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "explicit_paddings"
    value {
      list {
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "ssd300/expanded_conv_16/project/BatchNorm/beta/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv_16/project/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 320
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "ssd300/expanded_conv_16/project/BatchNorm/beta"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv_16/project/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 320
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "ssd300/expanded_conv_16/project/BatchNorm/beta/Assign"
  op: "Assign"
  input: "ssd300/expanded_conv_16/project/BatchNorm/beta"
  input: "ssd300/expanded_conv_16/project/BatchNorm/beta/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv_16/project/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "ssd300/expanded_conv_16/project/BatchNorm/beta/read"
  op: "Identity"
  input: "ssd300/expanded_conv_16/project/BatchNorm/beta"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv_16/project/BatchNorm/beta"
      }
    }
  }
}
node {
  name: "ssd300/expanded_conv_16/project/BatchNorm/moving_mean/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv_16/project/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 320
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "ssd300/expanded_conv_16/project/BatchNorm/moving_mean"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv_16/project/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 320
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "ssd300/expanded_conv_16/project/BatchNorm/moving_mean/Assign"
  op: "Assign"
  input: "ssd300/expanded_conv_16/project/BatchNorm/moving_mean"
  input: "ssd300/expanded_conv_16/project/BatchNorm/moving_mean/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv_16/project/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "ssd300/expanded_conv_16/project/BatchNorm/moving_mean/read"
  op: "Identity"
  input: "ssd300/expanded_conv_16/project/BatchNorm/moving_mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv_16/project/BatchNorm/moving_mean"
      }
    }
  }
}
node {
  name: "ssd300/expanded_conv_16/project/BatchNorm/moving_variance/Initializer/ones"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv_16/project/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 320
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "ssd300/expanded_conv_16/project/BatchNorm/moving_variance"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv_16/project/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 320
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "ssd300/expanded_conv_16/project/BatchNorm/moving_variance/Assign"
  op: "Assign"
  input: "ssd300/expanded_conv_16/project/BatchNorm/moving_variance"
  input: "ssd300/expanded_conv_16/project/BatchNorm/moving_variance/Initializer/ones"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv_16/project/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "ssd300/expanded_conv_16/project/BatchNorm/moving_variance/read"
  op: "Identity"
  input: "ssd300/expanded_conv_16/project/BatchNorm/moving_variance"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv_16/project/BatchNorm/moving_variance"
      }
    }
  }
}
node {
  name: "ssd300/expanded_conv_16/project/BatchNorm/Reshape/shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000@\001\000\000\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "ssd300/expanded_conv_16/project/BatchNorm/Reshape"
  op: "Reshape"
  input: "ssd300/expanded_conv_16/project/BatchNorm/beta/read"
  input: "ssd300/expanded_conv_16/project/BatchNorm/Reshape/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "ssd300/expanded_conv_16/project/BatchNorm/Reshape_1/shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000@\001\000\000\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "ssd300/expanded_conv_16/project/BatchNorm/Reshape_1"
  op: "Reshape"
  input: "ssd300/expanded_conv_16/project/BatchNorm/moving_mean/read"
  input: "ssd300/expanded_conv_16/project/BatchNorm/Reshape_1/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "ssd300/expanded_conv_16/project/BatchNorm/Reshape_2/shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000@\001\000\000\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "ssd300/expanded_conv_16/project/BatchNorm/Reshape_2"
  op: "Reshape"
  input: "ssd300/expanded_conv_16/project/BatchNorm/moving_variance/read"
  input: "ssd300/expanded_conv_16/project/BatchNorm/Reshape_2/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "ssd300/expanded_conv_16/project/BatchNorm/batchnorm_1/Add/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0010000000474974513
      }
    }
  }
}
node {
  name: "ssd300/expanded_conv_16/project/BatchNorm/batchnorm_1/Add"
  op: "Add"
  input: "ssd300/expanded_conv_16/project/BatchNorm/Reshape_2"
  input: "ssd300/expanded_conv_16/project/BatchNorm/batchnorm_1/Add/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ssd300/expanded_conv_16/project/BatchNorm/batchnorm_1/Rsqrt"
  op: "Rsqrt"
  input: "ssd300/expanded_conv_16/project/BatchNorm/batchnorm_1/Add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ssd300/expanded_conv_16/project/BatchNorm/batchnorm_1/mul"
  op: "Mul"
  input: "ssd300/expanded_conv_16/project/layer_conv2d/Conv2D"
  input: "ssd300/expanded_conv_16/project/BatchNorm/batchnorm_1/Rsqrt"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ssd300/expanded_conv_16/project/BatchNorm/batchnorm_1/mul_1"
  op: "Mul"
  input: "ssd300/expanded_conv_16/project/BatchNorm/Reshape_1"
  input: "ssd300/expanded_conv_16/project/BatchNorm/batchnorm_1/Rsqrt"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ssd300/expanded_conv_16/project/BatchNorm/batchnorm_1/sub"
  op: "Sub"
  input: "ssd300/expanded_conv_16/project/BatchNorm/Reshape"
  input: "ssd300/expanded_conv_16/project/BatchNorm/batchnorm_1/mul_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ssd300/expanded_conv_16/project/BatchNorm/batchnorm_1/Add_1"
  op: "Add"
  input: "ssd300/expanded_conv_16/project/BatchNorm/batchnorm_1/mul"
  input: "ssd300/expanded_conv_16/project/BatchNorm/batchnorm_1/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ssd300/Conv_1/weights/Initializer/random_uniform/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/Conv_1/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000@\001\000\000\000\005\000\000"
      }
    }
  }
}
node {
  name: "ssd300/Conv_1/weights/Initializer/random_uniform/min"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/Conv_1/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: -0.06123724207282066
      }
    }
  }
}
node {
  name: "ssd300/Conv_1/weights/Initializer/random_uniform/max"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/Conv_1/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.06123724207282066
      }
    }
  }
}
node {
  name: "ssd300/Conv_1/weights/Initializer/random_uniform/RandomUniform"
  op: "RandomUniform"
  input: "ssd300/Conv_1/weights/Initializer/random_uniform/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/Conv_1/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "ssd300/Conv_1/weights/Initializer/random_uniform/sub"
  op: "Sub"
  input: "ssd300/Conv_1/weights/Initializer/random_uniform/max"
  input: "ssd300/Conv_1/weights/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/Conv_1/weights"
      }
    }
  }
}
node {
  name: "ssd300/Conv_1/weights/Initializer/random_uniform/mul"
  op: "Mul"
  input: "ssd300/Conv_1/weights/Initializer/random_uniform/RandomUniform"
  input: "ssd300/Conv_1/weights/Initializer/random_uniform/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/Conv_1/weights"
      }
    }
  }
}
node {
  name: "ssd300/Conv_1/weights/Initializer/random_uniform"
  op: "Add"
  input: "ssd300/Conv_1/weights/Initializer/random_uniform/mul"
  input: "ssd300/Conv_1/weights/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/Conv_1/weights"
      }
    }
  }
}
node {
  name: "ssd300/Conv_1/weights"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/Conv_1/weights"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
        dim {
          size: 1
        }
        dim {
          size: 320
        }
        dim {
          size: 1280
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "ssd300/Conv_1/weights/Assign"
  op: "Assign"
  input: "ssd300/Conv_1/weights"
  input: "ssd300/Conv_1/weights/Initializer/random_uniform"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/Conv_1/weights"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "ssd300/Conv_1/weights/read"
  op: "Identity"
  input: "ssd300/Conv_1/weights"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/Conv_1/weights"
      }
    }
  }
}
node {
  name: "ssd300/Conv_1/layer_conv2d/Conv2D"
  op: "Conv2D"
  input: "ssd300/expanded_conv_16/project/BatchNorm/batchnorm_1/Add_1"
  input: "ssd300/Conv_1/weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NCHW"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "explicit_paddings"
    value {
      list {
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "ssd300/Conv_1/BatchNorm/beta/Initializer/zeros/shape_as_tensor"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/Conv_1/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1280
      }
    }
  }
}
node {
  name: "ssd300/Conv_1/BatchNorm/beta/Initializer/zeros/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/Conv_1/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "ssd300/Conv_1/BatchNorm/beta/Initializer/zeros"
  op: "Fill"
  input: "ssd300/Conv_1/BatchNorm/beta/Initializer/zeros/shape_as_tensor"
  input: "ssd300/Conv_1/BatchNorm/beta/Initializer/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/Conv_1/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "ssd300/Conv_1/BatchNorm/beta"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/Conv_1/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1280
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "ssd300/Conv_1/BatchNorm/beta/Assign"
  op: "Assign"
  input: "ssd300/Conv_1/BatchNorm/beta"
  input: "ssd300/Conv_1/BatchNorm/beta/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/Conv_1/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "ssd300/Conv_1/BatchNorm/beta/read"
  op: "Identity"
  input: "ssd300/Conv_1/BatchNorm/beta"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/Conv_1/BatchNorm/beta"
      }
    }
  }
}
node {
  name: "ssd300/Conv_1/BatchNorm/moving_mean/Initializer/zeros/shape_as_tensor"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/Conv_1/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1280
      }
    }
  }
}
node {
  name: "ssd300/Conv_1/BatchNorm/moving_mean/Initializer/zeros/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/Conv_1/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "ssd300/Conv_1/BatchNorm/moving_mean/Initializer/zeros"
  op: "Fill"
  input: "ssd300/Conv_1/BatchNorm/moving_mean/Initializer/zeros/shape_as_tensor"
  input: "ssd300/Conv_1/BatchNorm/moving_mean/Initializer/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/Conv_1/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "ssd300/Conv_1/BatchNorm/moving_mean"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/Conv_1/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1280
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "ssd300/Conv_1/BatchNorm/moving_mean/Assign"
  op: "Assign"
  input: "ssd300/Conv_1/BatchNorm/moving_mean"
  input: "ssd300/Conv_1/BatchNorm/moving_mean/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/Conv_1/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "ssd300/Conv_1/BatchNorm/moving_mean/read"
  op: "Identity"
  input: "ssd300/Conv_1/BatchNorm/moving_mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/Conv_1/BatchNorm/moving_mean"
      }
    }
  }
}
node {
  name: "ssd300/Conv_1/BatchNorm/moving_variance/Initializer/ones/shape_as_tensor"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/Conv_1/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1280
      }
    }
  }
}
node {
  name: "ssd300/Conv_1/BatchNorm/moving_variance/Initializer/ones/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/Conv_1/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "ssd300/Conv_1/BatchNorm/moving_variance/Initializer/ones"
  op: "Fill"
  input: "ssd300/Conv_1/BatchNorm/moving_variance/Initializer/ones/shape_as_tensor"
  input: "ssd300/Conv_1/BatchNorm/moving_variance/Initializer/ones/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/Conv_1/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "ssd300/Conv_1/BatchNorm/moving_variance"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/Conv_1/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1280
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "ssd300/Conv_1/BatchNorm/moving_variance/Assign"
  op: "Assign"
  input: "ssd300/Conv_1/BatchNorm/moving_variance"
  input: "ssd300/Conv_1/BatchNorm/moving_variance/Initializer/ones"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/Conv_1/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "ssd300/Conv_1/BatchNorm/moving_variance/read"
  op: "Identity"
  input: "ssd300/Conv_1/BatchNorm/moving_variance"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/Conv_1/BatchNorm/moving_variance"
      }
    }
  }
}
node {
  name: "ssd300/Conv_1/BatchNorm/Reshape/shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\000\005\000\000\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "ssd300/Conv_1/BatchNorm/Reshape"
  op: "Reshape"
  input: "ssd300/Conv_1/BatchNorm/beta/read"
  input: "ssd300/Conv_1/BatchNorm/Reshape/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "ssd300/Conv_1/BatchNorm/Reshape_1/shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\000\005\000\000\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "ssd300/Conv_1/BatchNorm/Reshape_1"
  op: "Reshape"
  input: "ssd300/Conv_1/BatchNorm/moving_mean/read"
  input: "ssd300/Conv_1/BatchNorm/Reshape_1/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "ssd300/Conv_1/BatchNorm/Reshape_2/shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\000\005\000\000\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "ssd300/Conv_1/BatchNorm/Reshape_2"
  op: "Reshape"
  input: "ssd300/Conv_1/BatchNorm/moving_variance/read"
  input: "ssd300/Conv_1/BatchNorm/Reshape_2/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "ssd300/Conv_1/BatchNorm/batchnorm_1/Add/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0010000000474974513
      }
    }
  }
}
node {
  name: "ssd300/Conv_1/BatchNorm/batchnorm_1/Add"
  op: "Add"
  input: "ssd300/Conv_1/BatchNorm/Reshape_2"
  input: "ssd300/Conv_1/BatchNorm/batchnorm_1/Add/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ssd300/Conv_1/BatchNorm/batchnorm_1/Rsqrt"
  op: "Rsqrt"
  input: "ssd300/Conv_1/BatchNorm/batchnorm_1/Add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ssd300/Conv_1/BatchNorm/batchnorm_1/mul"
  op: "Mul"
  input: "ssd300/Conv_1/layer_conv2d/Conv2D"
  input: "ssd300/Conv_1/BatchNorm/batchnorm_1/Rsqrt"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ssd300/Conv_1/BatchNorm/batchnorm_1/mul_1"
  op: "Mul"
  input: "ssd300/Conv_1/BatchNorm/Reshape_1"
  input: "ssd300/Conv_1/BatchNorm/batchnorm_1/Rsqrt"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ssd300/Conv_1/BatchNorm/batchnorm_1/sub"
  op: "Sub"
  input: "ssd300/Conv_1/BatchNorm/Reshape"
  input: "ssd300/Conv_1/BatchNorm/batchnorm_1/mul_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ssd300/Conv_1/BatchNorm/batchnorm_1/Add_1"
  op: "Add"
  input: "ssd300/Conv_1/BatchNorm/batchnorm_1/mul"
  input: "ssd300/Conv_1/BatchNorm/batchnorm_1/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ssd300/Conv_1/Relu6"
  op: "Relu6"
  input: "ssd300/Conv_1/BatchNorm/batchnorm_1/Add_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ssd300/layer_19_1_Conv2d_2_1x1_256/weights/Initializer/random_uniform/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/layer_19_1_Conv2d_2_1x1_256/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000\000\005\000\000\000\001\000\000"
      }
    }
  }
}
node {
  name: "ssd300/layer_19_1_Conv2d_2_1x1_256/weights/Initializer/random_uniform/min"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/layer_19_1_Conv2d_2_1x1_256/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: -0.0625
      }
    }
  }
}
node {
  name: "ssd300/layer_19_1_Conv2d_2_1x1_256/weights/Initializer/random_uniform/max"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/layer_19_1_Conv2d_2_1x1_256/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0625
      }
    }
  }
}
node {
  name: "ssd300/layer_19_1_Conv2d_2_1x1_256/weights/Initializer/random_uniform/RandomUniform"
  op: "RandomUniform"
  input: "ssd300/layer_19_1_Conv2d_2_1x1_256/weights/Initializer/random_uniform/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/layer_19_1_Conv2d_2_1x1_256/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "ssd300/layer_19_1_Conv2d_2_1x1_256/weights/Initializer/random_uniform/sub"
  op: "Sub"
  input: "ssd300/layer_19_1_Conv2d_2_1x1_256/weights/Initializer/random_uniform/max"
  input: "ssd300/layer_19_1_Conv2d_2_1x1_256/weights/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/layer_19_1_Conv2d_2_1x1_256/weights"
      }
    }
  }
}
node {
  name: "ssd300/layer_19_1_Conv2d_2_1x1_256/weights/Initializer/random_uniform/mul"
  op: "Mul"
  input: "ssd300/layer_19_1_Conv2d_2_1x1_256/weights/Initializer/random_uniform/RandomUniform"
  input: "ssd300/layer_19_1_Conv2d_2_1x1_256/weights/Initializer/random_uniform/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/layer_19_1_Conv2d_2_1x1_256/weights"
      }
    }
  }
}
node {
  name: "ssd300/layer_19_1_Conv2d_2_1x1_256/weights/Initializer/random_uniform"
  op: "Add"
  input: "ssd300/layer_19_1_Conv2d_2_1x1_256/weights/Initializer/random_uniform/mul"
  input: "ssd300/layer_19_1_Conv2d_2_1x1_256/weights/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/layer_19_1_Conv2d_2_1x1_256/weights"
      }
    }
  }
}
node {
  name: "ssd300/layer_19_1_Conv2d_2_1x1_256/weights"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/layer_19_1_Conv2d_2_1x1_256/weights"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
        dim {
          size: 1
        }
        dim {
          size: 1280
        }
        dim {
          size: 256
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "ssd300/layer_19_1_Conv2d_2_1x1_256/weights/Assign"
  op: "Assign"
  input: "ssd300/layer_19_1_Conv2d_2_1x1_256/weights"
  input: "ssd300/layer_19_1_Conv2d_2_1x1_256/weights/Initializer/random_uniform"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/layer_19_1_Conv2d_2_1x1_256/weights"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "ssd300/layer_19_1_Conv2d_2_1x1_256/weights/read"
  op: "Identity"
  input: "ssd300/layer_19_1_Conv2d_2_1x1_256/weights"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/layer_19_1_Conv2d_2_1x1_256/weights"
      }
    }
  }
}
node {
  name: "ssd300/layer_19_1_Conv2d_2_1x1_256/layer_conv2d/Conv2D"
  op: "Conv2D"
  input: "ssd300/Conv_1/Relu6"
  input: "ssd300/layer_19_1_Conv2d_2_1x1_256/weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NCHW"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "explicit_paddings"
    value {
      list {
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "ssd300/layer_19_1_Conv2d_2_1x1_256/BatchNorm/beta/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/layer_19_1_Conv2d_2_1x1_256/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 256
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "ssd300/layer_19_1_Conv2d_2_1x1_256/BatchNorm/beta"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/layer_19_1_Conv2d_2_1x1_256/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 256
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "ssd300/layer_19_1_Conv2d_2_1x1_256/BatchNorm/beta/Assign"
  op: "Assign"
  input: "ssd300/layer_19_1_Conv2d_2_1x1_256/BatchNorm/beta"
  input: "ssd300/layer_19_1_Conv2d_2_1x1_256/BatchNorm/beta/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/layer_19_1_Conv2d_2_1x1_256/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "ssd300/layer_19_1_Conv2d_2_1x1_256/BatchNorm/beta/read"
  op: "Identity"
  input: "ssd300/layer_19_1_Conv2d_2_1x1_256/BatchNorm/beta"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/layer_19_1_Conv2d_2_1x1_256/BatchNorm/beta"
      }
    }
  }
}
node {
  name: "ssd300/layer_19_1_Conv2d_2_1x1_256/BatchNorm/moving_mean/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/layer_19_1_Conv2d_2_1x1_256/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 256
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "ssd300/layer_19_1_Conv2d_2_1x1_256/BatchNorm/moving_mean"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/layer_19_1_Conv2d_2_1x1_256/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 256
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "ssd300/layer_19_1_Conv2d_2_1x1_256/BatchNorm/moving_mean/Assign"
  op: "Assign"
  input: "ssd300/layer_19_1_Conv2d_2_1x1_256/BatchNorm/moving_mean"
  input: "ssd300/layer_19_1_Conv2d_2_1x1_256/BatchNorm/moving_mean/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/layer_19_1_Conv2d_2_1x1_256/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "ssd300/layer_19_1_Conv2d_2_1x1_256/BatchNorm/moving_mean/read"
  op: "Identity"
  input: "ssd300/layer_19_1_Conv2d_2_1x1_256/BatchNorm/moving_mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/layer_19_1_Conv2d_2_1x1_256/BatchNorm/moving_mean"
      }
    }
  }
}
node {
  name: "ssd300/layer_19_1_Conv2d_2_1x1_256/BatchNorm/moving_variance/Initializer/ones"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/layer_19_1_Conv2d_2_1x1_256/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 256
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "ssd300/layer_19_1_Conv2d_2_1x1_256/BatchNorm/moving_variance"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/layer_19_1_Conv2d_2_1x1_256/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 256
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "ssd300/layer_19_1_Conv2d_2_1x1_256/BatchNorm/moving_variance/Assign"
  op: "Assign"
  input: "ssd300/layer_19_1_Conv2d_2_1x1_256/BatchNorm/moving_variance"
  input: "ssd300/layer_19_1_Conv2d_2_1x1_256/BatchNorm/moving_variance/Initializer/ones"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/layer_19_1_Conv2d_2_1x1_256/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "ssd300/layer_19_1_Conv2d_2_1x1_256/BatchNorm/moving_variance/read"
  op: "Identity"
  input: "ssd300/layer_19_1_Conv2d_2_1x1_256/BatchNorm/moving_variance"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/layer_19_1_Conv2d_2_1x1_256/BatchNorm/moving_variance"
      }
    }
  }
}
node {
  name: "ssd300/layer_19_1_Conv2d_2_1x1_256/BatchNorm/Reshape/shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\000\001\000\000\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "ssd300/layer_19_1_Conv2d_2_1x1_256/BatchNorm/Reshape"
  op: "Reshape"
  input: "ssd300/layer_19_1_Conv2d_2_1x1_256/BatchNorm/beta/read"
  input: "ssd300/layer_19_1_Conv2d_2_1x1_256/BatchNorm/Reshape/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "ssd300/layer_19_1_Conv2d_2_1x1_256/BatchNorm/Reshape_1/shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\000\001\000\000\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "ssd300/layer_19_1_Conv2d_2_1x1_256/BatchNorm/Reshape_1"
  op: "Reshape"
  input: "ssd300/layer_19_1_Conv2d_2_1x1_256/BatchNorm/moving_mean/read"
  input: "ssd300/layer_19_1_Conv2d_2_1x1_256/BatchNorm/Reshape_1/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "ssd300/layer_19_1_Conv2d_2_1x1_256/BatchNorm/Reshape_2/shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\000\001\000\000\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "ssd300/layer_19_1_Conv2d_2_1x1_256/BatchNorm/Reshape_2"
  op: "Reshape"
  input: "ssd300/layer_19_1_Conv2d_2_1x1_256/BatchNorm/moving_variance/read"
  input: "ssd300/layer_19_1_Conv2d_2_1x1_256/BatchNorm/Reshape_2/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "ssd300/layer_19_1_Conv2d_2_1x1_256/BatchNorm/batchnorm_1/Add/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0010000000474974513
      }
    }
  }
}
node {
  name: "ssd300/layer_19_1_Conv2d_2_1x1_256/BatchNorm/batchnorm_1/Add"
  op: "Add"
  input: "ssd300/layer_19_1_Conv2d_2_1x1_256/BatchNorm/Reshape_2"
  input: "ssd300/layer_19_1_Conv2d_2_1x1_256/BatchNorm/batchnorm_1/Add/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ssd300/layer_19_1_Conv2d_2_1x1_256/BatchNorm/batchnorm_1/Rsqrt"
  op: "Rsqrt"
  input: "ssd300/layer_19_1_Conv2d_2_1x1_256/BatchNorm/batchnorm_1/Add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ssd300/layer_19_1_Conv2d_2_1x1_256/BatchNorm/batchnorm_1/mul"
  op: "Mul"
  input: "ssd300/layer_19_1_Conv2d_2_1x1_256/layer_conv2d/Conv2D"
  input: "ssd300/layer_19_1_Conv2d_2_1x1_256/BatchNorm/batchnorm_1/Rsqrt"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ssd300/layer_19_1_Conv2d_2_1x1_256/BatchNorm/batchnorm_1/mul_1"
  op: "Mul"
  input: "ssd300/layer_19_1_Conv2d_2_1x1_256/BatchNorm/Reshape_1"
  input: "ssd300/layer_19_1_Conv2d_2_1x1_256/BatchNorm/batchnorm_1/Rsqrt"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ssd300/layer_19_1_Conv2d_2_1x1_256/BatchNorm/batchnorm_1/sub"
  op: "Sub"
  input: "ssd300/layer_19_1_Conv2d_2_1x1_256/BatchNorm/Reshape"
  input: "ssd300/layer_19_1_Conv2d_2_1x1_256/BatchNorm/batchnorm_1/mul_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ssd300/layer_19_1_Conv2d_2_1x1_256/BatchNorm/batchnorm_1/Add_1"
  op: "Add"
  input: "ssd300/layer_19_1_Conv2d_2_1x1_256/BatchNorm/batchnorm_1/mul"
  input: "ssd300/layer_19_1_Conv2d_2_1x1_256/BatchNorm/batchnorm_1/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ssd300/layer_19_1_Conv2d_2_1x1_256/Relu6"
  op: "Relu6"
  input: "ssd300/layer_19_1_Conv2d_2_1x1_256/BatchNorm/batchnorm_1/Add_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ssd300/layer_19_2_Conv2d_2_3x3_s2_512_depthwise/depthwise_weights/Initializer/random_uniform/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/layer_19_2_Conv2d_2_3x3_s2_512_depthwise/depthwise_weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\003\000\000\000\003\000\000\000\000\001\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "ssd300/layer_19_2_Conv2d_2_3x3_s2_512_depthwise/depthwise_weights/Initializer/random_uniform/min"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/layer_19_2_Conv2d_2_3x3_s2_512_depthwise/depthwise_weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: -0.0509316585958004
      }
    }
  }
}
node {
  name: "ssd300/layer_19_2_Conv2d_2_3x3_s2_512_depthwise/depthwise_weights/Initializer/random_uniform/max"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/layer_19_2_Conv2d_2_3x3_s2_512_depthwise/depthwise_weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0509316585958004
      }
    }
  }
}
node {
  name: "ssd300/layer_19_2_Conv2d_2_3x3_s2_512_depthwise/depthwise_weights/Initializer/random_uniform/RandomUniform"
  op: "RandomUniform"
  input: "ssd300/layer_19_2_Conv2d_2_3x3_s2_512_depthwise/depthwise_weights/Initializer/random_uniform/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/layer_19_2_Conv2d_2_3x3_s2_512_depthwise/depthwise_weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "ssd300/layer_19_2_Conv2d_2_3x3_s2_512_depthwise/depthwise_weights/Initializer/random_uniform/sub"
  op: "Sub"
  input: "ssd300/layer_19_2_Conv2d_2_3x3_s2_512_depthwise/depthwise_weights/Initializer/random_uniform/max"
  input: "ssd300/layer_19_2_Conv2d_2_3x3_s2_512_depthwise/depthwise_weights/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/layer_19_2_Conv2d_2_3x3_s2_512_depthwise/depthwise_weights"
      }
    }
  }
}
node {
  name: "ssd300/layer_19_2_Conv2d_2_3x3_s2_512_depthwise/depthwise_weights/Initializer/random_uniform/mul"
  op: "Mul"
  input: "ssd300/layer_19_2_Conv2d_2_3x3_s2_512_depthwise/depthwise_weights/Initializer/random_uniform/RandomUniform"
  input: "ssd300/layer_19_2_Conv2d_2_3x3_s2_512_depthwise/depthwise_weights/Initializer/random_uniform/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/layer_19_2_Conv2d_2_3x3_s2_512_depthwise/depthwise_weights"
      }
    }
  }
}
node {
  name: "ssd300/layer_19_2_Conv2d_2_3x3_s2_512_depthwise/depthwise_weights/Initializer/random_uniform"
  op: "Add"
  input: "ssd300/layer_19_2_Conv2d_2_3x3_s2_512_depthwise/depthwise_weights/Initializer/random_uniform/mul"
  input: "ssd300/layer_19_2_Conv2d_2_3x3_s2_512_depthwise/depthwise_weights/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/layer_19_2_Conv2d_2_3x3_s2_512_depthwise/depthwise_weights"
      }
    }
  }
}
node {
  name: "ssd300/layer_19_2_Conv2d_2_3x3_s2_512_depthwise/depthwise_weights"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/layer_19_2_Conv2d_2_3x3_s2_512_depthwise/depthwise_weights"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 3
        }
        dim {
          size: 3
        }
        dim {
          size: 256
        }
        dim {
          size: 1
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "ssd300/layer_19_2_Conv2d_2_3x3_s2_512_depthwise/depthwise_weights/Assign"
  op: "Assign"
  input: "ssd300/layer_19_2_Conv2d_2_3x3_s2_512_depthwise/depthwise_weights"
  input: "ssd300/layer_19_2_Conv2d_2_3x3_s2_512_depthwise/depthwise_weights/Initializer/random_uniform"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/layer_19_2_Conv2d_2_3x3_s2_512_depthwise/depthwise_weights"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "ssd300/layer_19_2_Conv2d_2_3x3_s2_512_depthwise/depthwise_weights/read"
  op: "Identity"
  input: "ssd300/layer_19_2_Conv2d_2_3x3_s2_512_depthwise/depthwise_weights"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/layer_19_2_Conv2d_2_3x3_s2_512_depthwise/depthwise_weights"
      }
    }
  }
}
node {
  name: "ssd300/layer_19_2_Conv2d_2_3x3_s2_512_depthwise/layer_conv2d/depthwise/Shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\003\000\000\000\003\000\000\000\000\001\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "ssd300/layer_19_2_Conv2d_2_3x3_s2_512_depthwise/layer_conv2d/depthwise/dilation_rate"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "ssd300/layer_19_2_Conv2d_2_3x3_s2_512_depthwise/layer_conv2d/depthwise"
  op: "DepthwiseConv2dNative"
  input: "ssd300/layer_19_1_Conv2d_2_1x1_256/Relu6"
  input: "ssd300/layer_19_2_Conv2d_2_3x3_s2_512_depthwise/depthwise_weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NCHW"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 2
        i: 2
      }
    }
  }
}
node {
  name: "ssd300/layer_19_2_Conv2d_2_3x3_s2_512_depthwise/BatchNorm/beta/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/layer_19_2_Conv2d_2_3x3_s2_512_depthwise/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 256
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "ssd300/layer_19_2_Conv2d_2_3x3_s2_512_depthwise/BatchNorm/beta"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/layer_19_2_Conv2d_2_3x3_s2_512_depthwise/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 256
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "ssd300/layer_19_2_Conv2d_2_3x3_s2_512_depthwise/BatchNorm/beta/Assign"
  op: "Assign"
  input: "ssd300/layer_19_2_Conv2d_2_3x3_s2_512_depthwise/BatchNorm/beta"
  input: "ssd300/layer_19_2_Conv2d_2_3x3_s2_512_depthwise/BatchNorm/beta/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/layer_19_2_Conv2d_2_3x3_s2_512_depthwise/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "ssd300/layer_19_2_Conv2d_2_3x3_s2_512_depthwise/BatchNorm/beta/read"
  op: "Identity"
  input: "ssd300/layer_19_2_Conv2d_2_3x3_s2_512_depthwise/BatchNorm/beta"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/layer_19_2_Conv2d_2_3x3_s2_512_depthwise/BatchNorm/beta"
      }
    }
  }
}
node {
  name: "ssd300/layer_19_2_Conv2d_2_3x3_s2_512_depthwise/BatchNorm/moving_mean/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/layer_19_2_Conv2d_2_3x3_s2_512_depthwise/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 256
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "ssd300/layer_19_2_Conv2d_2_3x3_s2_512_depthwise/BatchNorm/moving_mean"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/layer_19_2_Conv2d_2_3x3_s2_512_depthwise/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 256
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "ssd300/layer_19_2_Conv2d_2_3x3_s2_512_depthwise/BatchNorm/moving_mean/Assign"
  op: "Assign"
  input: "ssd300/layer_19_2_Conv2d_2_3x3_s2_512_depthwise/BatchNorm/moving_mean"
  input: "ssd300/layer_19_2_Conv2d_2_3x3_s2_512_depthwise/BatchNorm/moving_mean/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/layer_19_2_Conv2d_2_3x3_s2_512_depthwise/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "ssd300/layer_19_2_Conv2d_2_3x3_s2_512_depthwise/BatchNorm/moving_mean/read"
  op: "Identity"
  input: "ssd300/layer_19_2_Conv2d_2_3x3_s2_512_depthwise/BatchNorm/moving_mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/layer_19_2_Conv2d_2_3x3_s2_512_depthwise/BatchNorm/moving_mean"
      }
    }
  }
}
node {
  name: "ssd300/layer_19_2_Conv2d_2_3x3_s2_512_depthwise/BatchNorm/moving_variance/Initializer/ones"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/layer_19_2_Conv2d_2_3x3_s2_512_depthwise/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 256
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "ssd300/layer_19_2_Conv2d_2_3x3_s2_512_depthwise/BatchNorm/moving_variance"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/layer_19_2_Conv2d_2_3x3_s2_512_depthwise/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 256
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "ssd300/layer_19_2_Conv2d_2_3x3_s2_512_depthwise/BatchNorm/moving_variance/Assign"
  op: "Assign"
  input: "ssd300/layer_19_2_Conv2d_2_3x3_s2_512_depthwise/BatchNorm/moving_variance"
  input: "ssd300/layer_19_2_Conv2d_2_3x3_s2_512_depthwise/BatchNorm/moving_variance/Initializer/ones"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/layer_19_2_Conv2d_2_3x3_s2_512_depthwise/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "ssd300/layer_19_2_Conv2d_2_3x3_s2_512_depthwise/BatchNorm/moving_variance/read"
  op: "Identity"
  input: "ssd300/layer_19_2_Conv2d_2_3x3_s2_512_depthwise/BatchNorm/moving_variance"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/layer_19_2_Conv2d_2_3x3_s2_512_depthwise/BatchNorm/moving_variance"
      }
    }
  }
}
node {
  name: "ssd300/layer_19_2_Conv2d_2_3x3_s2_512_depthwise/BatchNorm/Reshape/shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\000\001\000\000\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "ssd300/layer_19_2_Conv2d_2_3x3_s2_512_depthwise/BatchNorm/Reshape"
  op: "Reshape"
  input: "ssd300/layer_19_2_Conv2d_2_3x3_s2_512_depthwise/BatchNorm/beta/read"
  input: "ssd300/layer_19_2_Conv2d_2_3x3_s2_512_depthwise/BatchNorm/Reshape/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "ssd300/layer_19_2_Conv2d_2_3x3_s2_512_depthwise/BatchNorm/Reshape_1/shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\000\001\000\000\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "ssd300/layer_19_2_Conv2d_2_3x3_s2_512_depthwise/BatchNorm/Reshape_1"
  op: "Reshape"
  input: "ssd300/layer_19_2_Conv2d_2_3x3_s2_512_depthwise/BatchNorm/moving_mean/read"
  input: "ssd300/layer_19_2_Conv2d_2_3x3_s2_512_depthwise/BatchNorm/Reshape_1/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "ssd300/layer_19_2_Conv2d_2_3x3_s2_512_depthwise/BatchNorm/Reshape_2/shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\000\001\000\000\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "ssd300/layer_19_2_Conv2d_2_3x3_s2_512_depthwise/BatchNorm/Reshape_2"
  op: "Reshape"
  input: "ssd300/layer_19_2_Conv2d_2_3x3_s2_512_depthwise/BatchNorm/moving_variance/read"
  input: "ssd300/layer_19_2_Conv2d_2_3x3_s2_512_depthwise/BatchNorm/Reshape_2/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "ssd300/layer_19_2_Conv2d_2_3x3_s2_512_depthwise/BatchNorm/batchnorm_1/Add/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0010000000474974513
      }
    }
  }
}
node {
  name: "ssd300/layer_19_2_Conv2d_2_3x3_s2_512_depthwise/BatchNorm/batchnorm_1/Add"
  op: "Add"
  input: "ssd300/layer_19_2_Conv2d_2_3x3_s2_512_depthwise/BatchNorm/Reshape_2"
  input: "ssd300/layer_19_2_Conv2d_2_3x3_s2_512_depthwise/BatchNorm/batchnorm_1/Add/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ssd300/layer_19_2_Conv2d_2_3x3_s2_512_depthwise/BatchNorm/batchnorm_1/Rsqrt"
  op: "Rsqrt"
  input: "ssd300/layer_19_2_Conv2d_2_3x3_s2_512_depthwise/BatchNorm/batchnorm_1/Add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ssd300/layer_19_2_Conv2d_2_3x3_s2_512_depthwise/BatchNorm/batchnorm_1/mul"
  op: "Mul"
  input: "ssd300/layer_19_2_Conv2d_2_3x3_s2_512_depthwise/layer_conv2d/depthwise"
  input: "ssd300/layer_19_2_Conv2d_2_3x3_s2_512_depthwise/BatchNorm/batchnorm_1/Rsqrt"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ssd300/layer_19_2_Conv2d_2_3x3_s2_512_depthwise/BatchNorm/batchnorm_1/mul_1"
  op: "Mul"
  input: "ssd300/layer_19_2_Conv2d_2_3x3_s2_512_depthwise/BatchNorm/Reshape_1"
  input: "ssd300/layer_19_2_Conv2d_2_3x3_s2_512_depthwise/BatchNorm/batchnorm_1/Rsqrt"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ssd300/layer_19_2_Conv2d_2_3x3_s2_512_depthwise/BatchNorm/batchnorm_1/sub"
  op: "Sub"
  input: "ssd300/layer_19_2_Conv2d_2_3x3_s2_512_depthwise/BatchNorm/Reshape"
  input: "ssd300/layer_19_2_Conv2d_2_3x3_s2_512_depthwise/BatchNorm/batchnorm_1/mul_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ssd300/layer_19_2_Conv2d_2_3x3_s2_512_depthwise/BatchNorm/batchnorm_1/Add_1"
  op: "Add"
  input: "ssd300/layer_19_2_Conv2d_2_3x3_s2_512_depthwise/BatchNorm/batchnorm_1/mul"
  input: "ssd300/layer_19_2_Conv2d_2_3x3_s2_512_depthwise/BatchNorm/batchnorm_1/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ssd300/layer_19_2_Conv2d_2_3x3_s2_512_depthwise/Relu6"
  op: "Relu6"
  input: "ssd300/layer_19_2_Conv2d_2_3x3_s2_512_depthwise/BatchNorm/batchnorm_1/Add_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ssd300/layer_19_2_Conv2d_2_3x3_s2_512/weights/Initializer/random_uniform/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/layer_19_2_Conv2d_2_3x3_s2_512/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000\000\001\000\000\000\002\000\000"
      }
    }
  }
}
node {
  name: "ssd300/layer_19_2_Conv2d_2_3x3_s2_512/weights/Initializer/random_uniform/min"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/layer_19_2_Conv2d_2_3x3_s2_512/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: -0.0883883461356163
      }
    }
  }
}
node {
  name: "ssd300/layer_19_2_Conv2d_2_3x3_s2_512/weights/Initializer/random_uniform/max"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/layer_19_2_Conv2d_2_3x3_s2_512/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0883883461356163
      }
    }
  }
}
node {
  name: "ssd300/layer_19_2_Conv2d_2_3x3_s2_512/weights/Initializer/random_uniform/RandomUniform"
  op: "RandomUniform"
  input: "ssd300/layer_19_2_Conv2d_2_3x3_s2_512/weights/Initializer/random_uniform/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/layer_19_2_Conv2d_2_3x3_s2_512/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "ssd300/layer_19_2_Conv2d_2_3x3_s2_512/weights/Initializer/random_uniform/sub"
  op: "Sub"
  input: "ssd300/layer_19_2_Conv2d_2_3x3_s2_512/weights/Initializer/random_uniform/max"
  input: "ssd300/layer_19_2_Conv2d_2_3x3_s2_512/weights/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/layer_19_2_Conv2d_2_3x3_s2_512/weights"
      }
    }
  }
}
node {
  name: "ssd300/layer_19_2_Conv2d_2_3x3_s2_512/weights/Initializer/random_uniform/mul"
  op: "Mul"
  input: "ssd300/layer_19_2_Conv2d_2_3x3_s2_512/weights/Initializer/random_uniform/RandomUniform"
  input: "ssd300/layer_19_2_Conv2d_2_3x3_s2_512/weights/Initializer/random_uniform/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/layer_19_2_Conv2d_2_3x3_s2_512/weights"
      }
    }
  }
}
node {
  name: "ssd300/layer_19_2_Conv2d_2_3x3_s2_512/weights/Initializer/random_uniform"
  op: "Add"
  input: "ssd300/layer_19_2_Conv2d_2_3x3_s2_512/weights/Initializer/random_uniform/mul"
  input: "ssd300/layer_19_2_Conv2d_2_3x3_s2_512/weights/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/layer_19_2_Conv2d_2_3x3_s2_512/weights"
      }
    }
  }
}
node {
  name: "ssd300/layer_19_2_Conv2d_2_3x3_s2_512/weights"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/layer_19_2_Conv2d_2_3x3_s2_512/weights"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
        dim {
          size: 1
        }
        dim {
          size: 256
        }
        dim {
          size: 512
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "ssd300/layer_19_2_Conv2d_2_3x3_s2_512/weights/Assign"
  op: "Assign"
  input: "ssd300/layer_19_2_Conv2d_2_3x3_s2_512/weights"
  input: "ssd300/layer_19_2_Conv2d_2_3x3_s2_512/weights/Initializer/random_uniform"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/layer_19_2_Conv2d_2_3x3_s2_512/weights"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "ssd300/layer_19_2_Conv2d_2_3x3_s2_512/weights/read"
  op: "Identity"
  input: "ssd300/layer_19_2_Conv2d_2_3x3_s2_512/weights"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/layer_19_2_Conv2d_2_3x3_s2_512/weights"
      }
    }
  }
}
node {
  name: "ssd300/layer_19_2_Conv2d_2_3x3_s2_512/layer_conv2d/Conv2D"
  op: "Conv2D"
  input: "ssd300/layer_19_2_Conv2d_2_3x3_s2_512_depthwise/Relu6"
  input: "ssd300/layer_19_2_Conv2d_2_3x3_s2_512/weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NCHW"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "explicit_paddings"
    value {
      list {
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "ssd300/layer_19_2_Conv2d_2_3x3_s2_512/BatchNorm/beta/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/layer_19_2_Conv2d_2_3x3_s2_512/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 512
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "ssd300/layer_19_2_Conv2d_2_3x3_s2_512/BatchNorm/beta"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/layer_19_2_Conv2d_2_3x3_s2_512/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 512
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "ssd300/layer_19_2_Conv2d_2_3x3_s2_512/BatchNorm/beta/Assign"
  op: "Assign"
  input: "ssd300/layer_19_2_Conv2d_2_3x3_s2_512/BatchNorm/beta"
  input: "ssd300/layer_19_2_Conv2d_2_3x3_s2_512/BatchNorm/beta/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/layer_19_2_Conv2d_2_3x3_s2_512/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "ssd300/layer_19_2_Conv2d_2_3x3_s2_512/BatchNorm/beta/read"
  op: "Identity"
  input: "ssd300/layer_19_2_Conv2d_2_3x3_s2_512/BatchNorm/beta"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/layer_19_2_Conv2d_2_3x3_s2_512/BatchNorm/beta"
      }
    }
  }
}
node {
  name: "ssd300/layer_19_2_Conv2d_2_3x3_s2_512/BatchNorm/moving_mean/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/layer_19_2_Conv2d_2_3x3_s2_512/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 512
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "ssd300/layer_19_2_Conv2d_2_3x3_s2_512/BatchNorm/moving_mean"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/layer_19_2_Conv2d_2_3x3_s2_512/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 512
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "ssd300/layer_19_2_Conv2d_2_3x3_s2_512/BatchNorm/moving_mean/Assign"
  op: "Assign"
  input: "ssd300/layer_19_2_Conv2d_2_3x3_s2_512/BatchNorm/moving_mean"
  input: "ssd300/layer_19_2_Conv2d_2_3x3_s2_512/BatchNorm/moving_mean/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/layer_19_2_Conv2d_2_3x3_s2_512/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "ssd300/layer_19_2_Conv2d_2_3x3_s2_512/BatchNorm/moving_mean/read"
  op: "Identity"
  input: "ssd300/layer_19_2_Conv2d_2_3x3_s2_512/BatchNorm/moving_mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/layer_19_2_Conv2d_2_3x3_s2_512/BatchNorm/moving_mean"
      }
    }
  }
}
node {
  name: "ssd300/layer_19_2_Conv2d_2_3x3_s2_512/BatchNorm/moving_variance/Initializer/ones"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/layer_19_2_Conv2d_2_3x3_s2_512/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 512
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "ssd300/layer_19_2_Conv2d_2_3x3_s2_512/BatchNorm/moving_variance"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/layer_19_2_Conv2d_2_3x3_s2_512/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 512
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "ssd300/layer_19_2_Conv2d_2_3x3_s2_512/BatchNorm/moving_variance/Assign"
  op: "Assign"
  input: "ssd300/layer_19_2_Conv2d_2_3x3_s2_512/BatchNorm/moving_variance"
  input: "ssd300/layer_19_2_Conv2d_2_3x3_s2_512/BatchNorm/moving_variance/Initializer/ones"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/layer_19_2_Conv2d_2_3x3_s2_512/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "ssd300/layer_19_2_Conv2d_2_3x3_s2_512/BatchNorm/moving_variance/read"
  op: "Identity"
  input: "ssd300/layer_19_2_Conv2d_2_3x3_s2_512/BatchNorm/moving_variance"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/layer_19_2_Conv2d_2_3x3_s2_512/BatchNorm/moving_variance"
      }
    }
  }
}
node {
  name: "ssd300/layer_19_2_Conv2d_2_3x3_s2_512/BatchNorm/Reshape/shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\000\002\000\000\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "ssd300/layer_19_2_Conv2d_2_3x3_s2_512/BatchNorm/Reshape"
  op: "Reshape"
  input: "ssd300/layer_19_2_Conv2d_2_3x3_s2_512/BatchNorm/beta/read"
  input: "ssd300/layer_19_2_Conv2d_2_3x3_s2_512/BatchNorm/Reshape/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "ssd300/layer_19_2_Conv2d_2_3x3_s2_512/BatchNorm/Reshape_1/shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\000\002\000\000\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "ssd300/layer_19_2_Conv2d_2_3x3_s2_512/BatchNorm/Reshape_1"
  op: "Reshape"
  input: "ssd300/layer_19_2_Conv2d_2_3x3_s2_512/BatchNorm/moving_mean/read"
  input: "ssd300/layer_19_2_Conv2d_2_3x3_s2_512/BatchNorm/Reshape_1/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "ssd300/layer_19_2_Conv2d_2_3x3_s2_512/BatchNorm/Reshape_2/shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\000\002\000\000\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "ssd300/layer_19_2_Conv2d_2_3x3_s2_512/BatchNorm/Reshape_2"
  op: "Reshape"
  input: "ssd300/layer_19_2_Conv2d_2_3x3_s2_512/BatchNorm/moving_variance/read"
  input: "ssd300/layer_19_2_Conv2d_2_3x3_s2_512/BatchNorm/Reshape_2/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "ssd300/layer_19_2_Conv2d_2_3x3_s2_512/BatchNorm/batchnorm_1/Add/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0010000000474974513
      }
    }
  }
}
node {
  name: "ssd300/layer_19_2_Conv2d_2_3x3_s2_512/BatchNorm/batchnorm_1/Add"
  op: "Add"
  input: "ssd300/layer_19_2_Conv2d_2_3x3_s2_512/BatchNorm/Reshape_2"
  input: "ssd300/layer_19_2_Conv2d_2_3x3_s2_512/BatchNorm/batchnorm_1/Add/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ssd300/layer_19_2_Conv2d_2_3x3_s2_512/BatchNorm/batchnorm_1/Rsqrt"
  op: "Rsqrt"
  input: "ssd300/layer_19_2_Conv2d_2_3x3_s2_512/BatchNorm/batchnorm_1/Add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ssd300/layer_19_2_Conv2d_2_3x3_s2_512/BatchNorm/batchnorm_1/mul"
  op: "Mul"
  input: "ssd300/layer_19_2_Conv2d_2_3x3_s2_512/layer_conv2d/Conv2D"
  input: "ssd300/layer_19_2_Conv2d_2_3x3_s2_512/BatchNorm/batchnorm_1/Rsqrt"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ssd300/layer_19_2_Conv2d_2_3x3_s2_512/BatchNorm/batchnorm_1/mul_1"
  op: "Mul"
  input: "ssd300/layer_19_2_Conv2d_2_3x3_s2_512/BatchNorm/Reshape_1"
  input: "ssd300/layer_19_2_Conv2d_2_3x3_s2_512/BatchNorm/batchnorm_1/Rsqrt"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ssd300/layer_19_2_Conv2d_2_3x3_s2_512/BatchNorm/batchnorm_1/sub"
  op: "Sub"
  input: "ssd300/layer_19_2_Conv2d_2_3x3_s2_512/BatchNorm/Reshape"
  input: "ssd300/layer_19_2_Conv2d_2_3x3_s2_512/BatchNorm/batchnorm_1/mul_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ssd300/layer_19_2_Conv2d_2_3x3_s2_512/BatchNorm/batchnorm_1/Add_1"
  op: "Add"
  input: "ssd300/layer_19_2_Conv2d_2_3x3_s2_512/BatchNorm/batchnorm_1/mul"
  input: "ssd300/layer_19_2_Conv2d_2_3x3_s2_512/BatchNorm/batchnorm_1/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ssd300/layer_19_2_Conv2d_2_3x3_s2_512/Relu6"
  op: "Relu6"
  input: "ssd300/layer_19_2_Conv2d_2_3x3_s2_512/BatchNorm/batchnorm_1/Add_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ssd300/layer_19_1_Conv2d_3_1x1_128/weights/Initializer/random_uniform/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/layer_19_1_Conv2d_3_1x1_128/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000\000\002\000\000\200\000\000\000"
      }
    }
  }
}
node {
  name: "ssd300/layer_19_1_Conv2d_3_1x1_128/weights/Initializer/random_uniform/min"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/layer_19_1_Conv2d_3_1x1_128/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: -0.09682458639144897
      }
    }
  }
}
node {
  name: "ssd300/layer_19_1_Conv2d_3_1x1_128/weights/Initializer/random_uniform/max"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/layer_19_1_Conv2d_3_1x1_128/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.09682458639144897
      }
    }
  }
}
node {
  name: "ssd300/layer_19_1_Conv2d_3_1x1_128/weights/Initializer/random_uniform/RandomUniform"
  op: "RandomUniform"
  input: "ssd300/layer_19_1_Conv2d_3_1x1_128/weights/Initializer/random_uniform/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/layer_19_1_Conv2d_3_1x1_128/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "ssd300/layer_19_1_Conv2d_3_1x1_128/weights/Initializer/random_uniform/sub"
  op: "Sub"
  input: "ssd300/layer_19_1_Conv2d_3_1x1_128/weights/Initializer/random_uniform/max"
  input: "ssd300/layer_19_1_Conv2d_3_1x1_128/weights/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/layer_19_1_Conv2d_3_1x1_128/weights"
      }
    }
  }
}
node {
  name: "ssd300/layer_19_1_Conv2d_3_1x1_128/weights/Initializer/random_uniform/mul"
  op: "Mul"
  input: "ssd300/layer_19_1_Conv2d_3_1x1_128/weights/Initializer/random_uniform/RandomUniform"
  input: "ssd300/layer_19_1_Conv2d_3_1x1_128/weights/Initializer/random_uniform/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/layer_19_1_Conv2d_3_1x1_128/weights"
      }
    }
  }
}
node {
  name: "ssd300/layer_19_1_Conv2d_3_1x1_128/weights/Initializer/random_uniform"
  op: "Add"
  input: "ssd300/layer_19_1_Conv2d_3_1x1_128/weights/Initializer/random_uniform/mul"
  input: "ssd300/layer_19_1_Conv2d_3_1x1_128/weights/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/layer_19_1_Conv2d_3_1x1_128/weights"
      }
    }
  }
}
node {
  name: "ssd300/layer_19_1_Conv2d_3_1x1_128/weights"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/layer_19_1_Conv2d_3_1x1_128/weights"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
        dim {
          size: 1
        }
        dim {
          size: 512
        }
        dim {
          size: 128
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "ssd300/layer_19_1_Conv2d_3_1x1_128/weights/Assign"
  op: "Assign"
  input: "ssd300/layer_19_1_Conv2d_3_1x1_128/weights"
  input: "ssd300/layer_19_1_Conv2d_3_1x1_128/weights/Initializer/random_uniform"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/layer_19_1_Conv2d_3_1x1_128/weights"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "ssd300/layer_19_1_Conv2d_3_1x1_128/weights/read"
  op: "Identity"
  input: "ssd300/layer_19_1_Conv2d_3_1x1_128/weights"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/layer_19_1_Conv2d_3_1x1_128/weights"
      }
    }
  }
}
node {
  name: "ssd300/layer_19_1_Conv2d_3_1x1_128/layer_conv2d/Conv2D"
  op: "Conv2D"
  input: "ssd300/layer_19_2_Conv2d_2_3x3_s2_512/Relu6"
  input: "ssd300/layer_19_1_Conv2d_3_1x1_128/weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NCHW"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "explicit_paddings"
    value {
      list {
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "ssd300/layer_19_1_Conv2d_3_1x1_128/BatchNorm/beta/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/layer_19_1_Conv2d_3_1x1_128/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 128
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "ssd300/layer_19_1_Conv2d_3_1x1_128/BatchNorm/beta"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/layer_19_1_Conv2d_3_1x1_128/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 128
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "ssd300/layer_19_1_Conv2d_3_1x1_128/BatchNorm/beta/Assign"
  op: "Assign"
  input: "ssd300/layer_19_1_Conv2d_3_1x1_128/BatchNorm/beta"
  input: "ssd300/layer_19_1_Conv2d_3_1x1_128/BatchNorm/beta/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/layer_19_1_Conv2d_3_1x1_128/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "ssd300/layer_19_1_Conv2d_3_1x1_128/BatchNorm/beta/read"
  op: "Identity"
  input: "ssd300/layer_19_1_Conv2d_3_1x1_128/BatchNorm/beta"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/layer_19_1_Conv2d_3_1x1_128/BatchNorm/beta"
      }
    }
  }
}
node {
  name: "ssd300/layer_19_1_Conv2d_3_1x1_128/BatchNorm/moving_mean/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/layer_19_1_Conv2d_3_1x1_128/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 128
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "ssd300/layer_19_1_Conv2d_3_1x1_128/BatchNorm/moving_mean"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/layer_19_1_Conv2d_3_1x1_128/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 128
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "ssd300/layer_19_1_Conv2d_3_1x1_128/BatchNorm/moving_mean/Assign"
  op: "Assign"
  input: "ssd300/layer_19_1_Conv2d_3_1x1_128/BatchNorm/moving_mean"
  input: "ssd300/layer_19_1_Conv2d_3_1x1_128/BatchNorm/moving_mean/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/layer_19_1_Conv2d_3_1x1_128/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "ssd300/layer_19_1_Conv2d_3_1x1_128/BatchNorm/moving_mean/read"
  op: "Identity"
  input: "ssd300/layer_19_1_Conv2d_3_1x1_128/BatchNorm/moving_mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/layer_19_1_Conv2d_3_1x1_128/BatchNorm/moving_mean"
      }
    }
  }
}
node {
  name: "ssd300/layer_19_1_Conv2d_3_1x1_128/BatchNorm/moving_variance/Initializer/ones"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/layer_19_1_Conv2d_3_1x1_128/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 128
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "ssd300/layer_19_1_Conv2d_3_1x1_128/BatchNorm/moving_variance"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/layer_19_1_Conv2d_3_1x1_128/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 128
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "ssd300/layer_19_1_Conv2d_3_1x1_128/BatchNorm/moving_variance/Assign"
  op: "Assign"
  input: "ssd300/layer_19_1_Conv2d_3_1x1_128/BatchNorm/moving_variance"
  input: "ssd300/layer_19_1_Conv2d_3_1x1_128/BatchNorm/moving_variance/Initializer/ones"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/layer_19_1_Conv2d_3_1x1_128/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "ssd300/layer_19_1_Conv2d_3_1x1_128/BatchNorm/moving_variance/read"
  op: "Identity"
  input: "ssd300/layer_19_1_Conv2d_3_1x1_128/BatchNorm/moving_variance"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/layer_19_1_Conv2d_3_1x1_128/BatchNorm/moving_variance"
      }
    }
  }
}
node {
  name: "ssd300/layer_19_1_Conv2d_3_1x1_128/BatchNorm/Reshape/shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\200\000\000\000\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "ssd300/layer_19_1_Conv2d_3_1x1_128/BatchNorm/Reshape"
  op: "Reshape"
  input: "ssd300/layer_19_1_Conv2d_3_1x1_128/BatchNorm/beta/read"
  input: "ssd300/layer_19_1_Conv2d_3_1x1_128/BatchNorm/Reshape/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "ssd300/layer_19_1_Conv2d_3_1x1_128/BatchNorm/Reshape_1/shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\200\000\000\000\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "ssd300/layer_19_1_Conv2d_3_1x1_128/BatchNorm/Reshape_1"
  op: "Reshape"
  input: "ssd300/layer_19_1_Conv2d_3_1x1_128/BatchNorm/moving_mean/read"
  input: "ssd300/layer_19_1_Conv2d_3_1x1_128/BatchNorm/Reshape_1/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "ssd300/layer_19_1_Conv2d_3_1x1_128/BatchNorm/Reshape_2/shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\200\000\000\000\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "ssd300/layer_19_1_Conv2d_3_1x1_128/BatchNorm/Reshape_2"
  op: "Reshape"
  input: "ssd300/layer_19_1_Conv2d_3_1x1_128/BatchNorm/moving_variance/read"
  input: "ssd300/layer_19_1_Conv2d_3_1x1_128/BatchNorm/Reshape_2/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "ssd300/layer_19_1_Conv2d_3_1x1_128/BatchNorm/batchnorm_1/Add/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0010000000474974513
      }
    }
  }
}
node {
  name: "ssd300/layer_19_1_Conv2d_3_1x1_128/BatchNorm/batchnorm_1/Add"
  op: "Add"
  input: "ssd300/layer_19_1_Conv2d_3_1x1_128/BatchNorm/Reshape_2"
  input: "ssd300/layer_19_1_Conv2d_3_1x1_128/BatchNorm/batchnorm_1/Add/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ssd300/layer_19_1_Conv2d_3_1x1_128/BatchNorm/batchnorm_1/Rsqrt"
  op: "Rsqrt"
  input: "ssd300/layer_19_1_Conv2d_3_1x1_128/BatchNorm/batchnorm_1/Add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ssd300/layer_19_1_Conv2d_3_1x1_128/BatchNorm/batchnorm_1/mul"
  op: "Mul"
  input: "ssd300/layer_19_1_Conv2d_3_1x1_128/layer_conv2d/Conv2D"
  input: "ssd300/layer_19_1_Conv2d_3_1x1_128/BatchNorm/batchnorm_1/Rsqrt"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ssd300/layer_19_1_Conv2d_3_1x1_128/BatchNorm/batchnorm_1/mul_1"
  op: "Mul"
  input: "ssd300/layer_19_1_Conv2d_3_1x1_128/BatchNorm/Reshape_1"
  input: "ssd300/layer_19_1_Conv2d_3_1x1_128/BatchNorm/batchnorm_1/Rsqrt"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ssd300/layer_19_1_Conv2d_3_1x1_128/BatchNorm/batchnorm_1/sub"
  op: "Sub"
  input: "ssd300/layer_19_1_Conv2d_3_1x1_128/BatchNorm/Reshape"
  input: "ssd300/layer_19_1_Conv2d_3_1x1_128/BatchNorm/batchnorm_1/mul_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ssd300/layer_19_1_Conv2d_3_1x1_128/BatchNorm/batchnorm_1/Add_1"
  op: "Add"
  input: "ssd300/layer_19_1_Conv2d_3_1x1_128/BatchNorm/batchnorm_1/mul"
  input: "ssd300/layer_19_1_Conv2d_3_1x1_128/BatchNorm/batchnorm_1/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ssd300/layer_19_1_Conv2d_3_1x1_128/Relu6"
  op: "Relu6"
  input: "ssd300/layer_19_1_Conv2d_3_1x1_128/BatchNorm/batchnorm_1/Add_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ssd300/layer_19_2_Conv2d_3_3x3_s2_256_depthwise/depthwise_weights/Initializer/random_uniform/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/layer_19_2_Conv2d_3_3x3_s2_256_depthwise/depthwise_weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\003\000\000\000\003\000\000\000\200\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "ssd300/layer_19_2_Conv2d_3_3x3_s2_256_depthwise/depthwise_weights/Initializer/random_uniform/min"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/layer_19_2_Conv2d_3_3x3_s2_256_depthwise/depthwise_weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: -0.0718885138630867
      }
    }
  }
}
node {
  name: "ssd300/layer_19_2_Conv2d_3_3x3_s2_256_depthwise/depthwise_weights/Initializer/random_uniform/max"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/layer_19_2_Conv2d_3_3x3_s2_256_depthwise/depthwise_weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0718885138630867
      }
    }
  }
}
node {
  name: "ssd300/layer_19_2_Conv2d_3_3x3_s2_256_depthwise/depthwise_weights/Initializer/random_uniform/RandomUniform"
  op: "RandomUniform"
  input: "ssd300/layer_19_2_Conv2d_3_3x3_s2_256_depthwise/depthwise_weights/Initializer/random_uniform/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/layer_19_2_Conv2d_3_3x3_s2_256_depthwise/depthwise_weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "ssd300/layer_19_2_Conv2d_3_3x3_s2_256_depthwise/depthwise_weights/Initializer/random_uniform/sub"
  op: "Sub"
  input: "ssd300/layer_19_2_Conv2d_3_3x3_s2_256_depthwise/depthwise_weights/Initializer/random_uniform/max"
  input: "ssd300/layer_19_2_Conv2d_3_3x3_s2_256_depthwise/depthwise_weights/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/layer_19_2_Conv2d_3_3x3_s2_256_depthwise/depthwise_weights"
      }
    }
  }
}
node {
  name: "ssd300/layer_19_2_Conv2d_3_3x3_s2_256_depthwise/depthwise_weights/Initializer/random_uniform/mul"
  op: "Mul"
  input: "ssd300/layer_19_2_Conv2d_3_3x3_s2_256_depthwise/depthwise_weights/Initializer/random_uniform/RandomUniform"
  input: "ssd300/layer_19_2_Conv2d_3_3x3_s2_256_depthwise/depthwise_weights/Initializer/random_uniform/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/layer_19_2_Conv2d_3_3x3_s2_256_depthwise/depthwise_weights"
      }
    }
  }
}
node {
  name: "ssd300/layer_19_2_Conv2d_3_3x3_s2_256_depthwise/depthwise_weights/Initializer/random_uniform"
  op: "Add"
  input: "ssd300/layer_19_2_Conv2d_3_3x3_s2_256_depthwise/depthwise_weights/Initializer/random_uniform/mul"
  input: "ssd300/layer_19_2_Conv2d_3_3x3_s2_256_depthwise/depthwise_weights/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/layer_19_2_Conv2d_3_3x3_s2_256_depthwise/depthwise_weights"
      }
    }
  }
}
node {
  name: "ssd300/layer_19_2_Conv2d_3_3x3_s2_256_depthwise/depthwise_weights"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/layer_19_2_Conv2d_3_3x3_s2_256_depthwise/depthwise_weights"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 3
        }
        dim {
          size: 3
        }
        dim {
          size: 128
        }
        dim {
          size: 1
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "ssd300/layer_19_2_Conv2d_3_3x3_s2_256_depthwise/depthwise_weights/Assign"
  op: "Assign"
  input: "ssd300/layer_19_2_Conv2d_3_3x3_s2_256_depthwise/depthwise_weights"
  input: "ssd300/layer_19_2_Conv2d_3_3x3_s2_256_depthwise/depthwise_weights/Initializer/random_uniform"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/layer_19_2_Conv2d_3_3x3_s2_256_depthwise/depthwise_weights"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "ssd300/layer_19_2_Conv2d_3_3x3_s2_256_depthwise/depthwise_weights/read"
  op: "Identity"
  input: "ssd300/layer_19_2_Conv2d_3_3x3_s2_256_depthwise/depthwise_weights"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/layer_19_2_Conv2d_3_3x3_s2_256_depthwise/depthwise_weights"
      }
    }
  }
}
node {
  name: "ssd300/layer_19_2_Conv2d_3_3x3_s2_256_depthwise/layer_conv2d/depthwise/Shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\003\000\000\000\003\000\000\000\200\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "ssd300/layer_19_2_Conv2d_3_3x3_s2_256_depthwise/layer_conv2d/depthwise/dilation_rate"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "ssd300/layer_19_2_Conv2d_3_3x3_s2_256_depthwise/layer_conv2d/depthwise"
  op: "DepthwiseConv2dNative"
  input: "ssd300/layer_19_1_Conv2d_3_1x1_128/Relu6"
  input: "ssd300/layer_19_2_Conv2d_3_3x3_s2_256_depthwise/depthwise_weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NCHW"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 2
        i: 2
      }
    }
  }
}
node {
  name: "ssd300/layer_19_2_Conv2d_3_3x3_s2_256_depthwise/BatchNorm/beta/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/layer_19_2_Conv2d_3_3x3_s2_256_depthwise/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 128
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "ssd300/layer_19_2_Conv2d_3_3x3_s2_256_depthwise/BatchNorm/beta"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/layer_19_2_Conv2d_3_3x3_s2_256_depthwise/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 128
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "ssd300/layer_19_2_Conv2d_3_3x3_s2_256_depthwise/BatchNorm/beta/Assign"
  op: "Assign"
  input: "ssd300/layer_19_2_Conv2d_3_3x3_s2_256_depthwise/BatchNorm/beta"
  input: "ssd300/layer_19_2_Conv2d_3_3x3_s2_256_depthwise/BatchNorm/beta/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/layer_19_2_Conv2d_3_3x3_s2_256_depthwise/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "ssd300/layer_19_2_Conv2d_3_3x3_s2_256_depthwise/BatchNorm/beta/read"
  op: "Identity"
  input: "ssd300/layer_19_2_Conv2d_3_3x3_s2_256_depthwise/BatchNorm/beta"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/layer_19_2_Conv2d_3_3x3_s2_256_depthwise/BatchNorm/beta"
      }
    }
  }
}
node {
  name: "ssd300/layer_19_2_Conv2d_3_3x3_s2_256_depthwise/BatchNorm/moving_mean/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/layer_19_2_Conv2d_3_3x3_s2_256_depthwise/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 128
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "ssd300/layer_19_2_Conv2d_3_3x3_s2_256_depthwise/BatchNorm/moving_mean"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/layer_19_2_Conv2d_3_3x3_s2_256_depthwise/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 128
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "ssd300/layer_19_2_Conv2d_3_3x3_s2_256_depthwise/BatchNorm/moving_mean/Assign"
  op: "Assign"
  input: "ssd300/layer_19_2_Conv2d_3_3x3_s2_256_depthwise/BatchNorm/moving_mean"
  input: "ssd300/layer_19_2_Conv2d_3_3x3_s2_256_depthwise/BatchNorm/moving_mean/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/layer_19_2_Conv2d_3_3x3_s2_256_depthwise/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "ssd300/layer_19_2_Conv2d_3_3x3_s2_256_depthwise/BatchNorm/moving_mean/read"
  op: "Identity"
  input: "ssd300/layer_19_2_Conv2d_3_3x3_s2_256_depthwise/BatchNorm/moving_mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/layer_19_2_Conv2d_3_3x3_s2_256_depthwise/BatchNorm/moving_mean"
      }
    }
  }
}
node {
  name: "ssd300/layer_19_2_Conv2d_3_3x3_s2_256_depthwise/BatchNorm/moving_variance/Initializer/ones"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/layer_19_2_Conv2d_3_3x3_s2_256_depthwise/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 128
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "ssd300/layer_19_2_Conv2d_3_3x3_s2_256_depthwise/BatchNorm/moving_variance"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/layer_19_2_Conv2d_3_3x3_s2_256_depthwise/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 128
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "ssd300/layer_19_2_Conv2d_3_3x3_s2_256_depthwise/BatchNorm/moving_variance/Assign"
  op: "Assign"
  input: "ssd300/layer_19_2_Conv2d_3_3x3_s2_256_depthwise/BatchNorm/moving_variance"
  input: "ssd300/layer_19_2_Conv2d_3_3x3_s2_256_depthwise/BatchNorm/moving_variance/Initializer/ones"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/layer_19_2_Conv2d_3_3x3_s2_256_depthwise/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "ssd300/layer_19_2_Conv2d_3_3x3_s2_256_depthwise/BatchNorm/moving_variance/read"
  op: "Identity"
  input: "ssd300/layer_19_2_Conv2d_3_3x3_s2_256_depthwise/BatchNorm/moving_variance"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/layer_19_2_Conv2d_3_3x3_s2_256_depthwise/BatchNorm/moving_variance"
      }
    }
  }
}
node {
  name: "ssd300/layer_19_2_Conv2d_3_3x3_s2_256_depthwise/BatchNorm/Reshape/shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\200\000\000\000\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "ssd300/layer_19_2_Conv2d_3_3x3_s2_256_depthwise/BatchNorm/Reshape"
  op: "Reshape"
  input: "ssd300/layer_19_2_Conv2d_3_3x3_s2_256_depthwise/BatchNorm/beta/read"
  input: "ssd300/layer_19_2_Conv2d_3_3x3_s2_256_depthwise/BatchNorm/Reshape/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "ssd300/layer_19_2_Conv2d_3_3x3_s2_256_depthwise/BatchNorm/Reshape_1/shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\200\000\000\000\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "ssd300/layer_19_2_Conv2d_3_3x3_s2_256_depthwise/BatchNorm/Reshape_1"
  op: "Reshape"
  input: "ssd300/layer_19_2_Conv2d_3_3x3_s2_256_depthwise/BatchNorm/moving_mean/read"
  input: "ssd300/layer_19_2_Conv2d_3_3x3_s2_256_depthwise/BatchNorm/Reshape_1/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "ssd300/layer_19_2_Conv2d_3_3x3_s2_256_depthwise/BatchNorm/Reshape_2/shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\200\000\000\000\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "ssd300/layer_19_2_Conv2d_3_3x3_s2_256_depthwise/BatchNorm/Reshape_2"
  op: "Reshape"
  input: "ssd300/layer_19_2_Conv2d_3_3x3_s2_256_depthwise/BatchNorm/moving_variance/read"
  input: "ssd300/layer_19_2_Conv2d_3_3x3_s2_256_depthwise/BatchNorm/Reshape_2/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "ssd300/layer_19_2_Conv2d_3_3x3_s2_256_depthwise/BatchNorm/batchnorm_1/Add/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0010000000474974513
      }
    }
  }
}
node {
  name: "ssd300/layer_19_2_Conv2d_3_3x3_s2_256_depthwise/BatchNorm/batchnorm_1/Add"
  op: "Add"
  input: "ssd300/layer_19_2_Conv2d_3_3x3_s2_256_depthwise/BatchNorm/Reshape_2"
  input: "ssd300/layer_19_2_Conv2d_3_3x3_s2_256_depthwise/BatchNorm/batchnorm_1/Add/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ssd300/layer_19_2_Conv2d_3_3x3_s2_256_depthwise/BatchNorm/batchnorm_1/Rsqrt"
  op: "Rsqrt"
  input: "ssd300/layer_19_2_Conv2d_3_3x3_s2_256_depthwise/BatchNorm/batchnorm_1/Add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ssd300/layer_19_2_Conv2d_3_3x3_s2_256_depthwise/BatchNorm/batchnorm_1/mul"
  op: "Mul"
  input: "ssd300/layer_19_2_Conv2d_3_3x3_s2_256_depthwise/layer_conv2d/depthwise"
  input: "ssd300/layer_19_2_Conv2d_3_3x3_s2_256_depthwise/BatchNorm/batchnorm_1/Rsqrt"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ssd300/layer_19_2_Conv2d_3_3x3_s2_256_depthwise/BatchNorm/batchnorm_1/mul_1"
  op: "Mul"
  input: "ssd300/layer_19_2_Conv2d_3_3x3_s2_256_depthwise/BatchNorm/Reshape_1"
  input: "ssd300/layer_19_2_Conv2d_3_3x3_s2_256_depthwise/BatchNorm/batchnorm_1/Rsqrt"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ssd300/layer_19_2_Conv2d_3_3x3_s2_256_depthwise/BatchNorm/batchnorm_1/sub"
  op: "Sub"
  input: "ssd300/layer_19_2_Conv2d_3_3x3_s2_256_depthwise/BatchNorm/Reshape"
  input: "ssd300/layer_19_2_Conv2d_3_3x3_s2_256_depthwise/BatchNorm/batchnorm_1/mul_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ssd300/layer_19_2_Conv2d_3_3x3_s2_256_depthwise/BatchNorm/batchnorm_1/Add_1"
  op: "Add"
  input: "ssd300/layer_19_2_Conv2d_3_3x3_s2_256_depthwise/BatchNorm/batchnorm_1/mul"
  input: "ssd300/layer_19_2_Conv2d_3_3x3_s2_256_depthwise/BatchNorm/batchnorm_1/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ssd300/layer_19_2_Conv2d_3_3x3_s2_256_depthwise/Relu6"
  op: "Relu6"
  input: "ssd300/layer_19_2_Conv2d_3_3x3_s2_256_depthwise/BatchNorm/batchnorm_1/Add_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ssd300/layer_19_2_Conv2d_3_3x3_s2_256/weights/Initializer/random_uniform/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/layer_19_2_Conv2d_3_3x3_s2_256/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000\200\000\000\000\000\001\000\000"
      }
    }
  }
}
node {
  name: "ssd300/layer_19_2_Conv2d_3_3x3_s2_256/weights/Initializer/random_uniform/min"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/layer_19_2_Conv2d_3_3x3_s2_256/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: -0.125
      }
    }
  }
}
node {
  name: "ssd300/layer_19_2_Conv2d_3_3x3_s2_256/weights/Initializer/random_uniform/max"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/layer_19_2_Conv2d_3_3x3_s2_256/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.125
      }
    }
  }
}
node {
  name: "ssd300/layer_19_2_Conv2d_3_3x3_s2_256/weights/Initializer/random_uniform/RandomUniform"
  op: "RandomUniform"
  input: "ssd300/layer_19_2_Conv2d_3_3x3_s2_256/weights/Initializer/random_uniform/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/layer_19_2_Conv2d_3_3x3_s2_256/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "ssd300/layer_19_2_Conv2d_3_3x3_s2_256/weights/Initializer/random_uniform/sub"
  op: "Sub"
  input: "ssd300/layer_19_2_Conv2d_3_3x3_s2_256/weights/Initializer/random_uniform/max"
  input: "ssd300/layer_19_2_Conv2d_3_3x3_s2_256/weights/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/layer_19_2_Conv2d_3_3x3_s2_256/weights"
      }
    }
  }
}
node {
  name: "ssd300/layer_19_2_Conv2d_3_3x3_s2_256/weights/Initializer/random_uniform/mul"
  op: "Mul"
  input: "ssd300/layer_19_2_Conv2d_3_3x3_s2_256/weights/Initializer/random_uniform/RandomUniform"
  input: "ssd300/layer_19_2_Conv2d_3_3x3_s2_256/weights/Initializer/random_uniform/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/layer_19_2_Conv2d_3_3x3_s2_256/weights"
      }
    }
  }
}
node {
  name: "ssd300/layer_19_2_Conv2d_3_3x3_s2_256/weights/Initializer/random_uniform"
  op: "Add"
  input: "ssd300/layer_19_2_Conv2d_3_3x3_s2_256/weights/Initializer/random_uniform/mul"
  input: "ssd300/layer_19_2_Conv2d_3_3x3_s2_256/weights/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/layer_19_2_Conv2d_3_3x3_s2_256/weights"
      }
    }
  }
}
node {
  name: "ssd300/layer_19_2_Conv2d_3_3x3_s2_256/weights"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/layer_19_2_Conv2d_3_3x3_s2_256/weights"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
        dim {
          size: 1
        }
        dim {
          size: 128
        }
        dim {
          size: 256
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "ssd300/layer_19_2_Conv2d_3_3x3_s2_256/weights/Assign"
  op: "Assign"
  input: "ssd300/layer_19_2_Conv2d_3_3x3_s2_256/weights"
  input: "ssd300/layer_19_2_Conv2d_3_3x3_s2_256/weights/Initializer/random_uniform"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/layer_19_2_Conv2d_3_3x3_s2_256/weights"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "ssd300/layer_19_2_Conv2d_3_3x3_s2_256/weights/read"
  op: "Identity"
  input: "ssd300/layer_19_2_Conv2d_3_3x3_s2_256/weights"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/layer_19_2_Conv2d_3_3x3_s2_256/weights"
      }
    }
  }
}
node {
  name: "ssd300/layer_19_2_Conv2d_3_3x3_s2_256/layer_conv2d/Conv2D"
  op: "Conv2D"
  input: "ssd300/layer_19_2_Conv2d_3_3x3_s2_256_depthwise/Relu6"
  input: "ssd300/layer_19_2_Conv2d_3_3x3_s2_256/weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NCHW"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "explicit_paddings"
    value {
      list {
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "ssd300/layer_19_2_Conv2d_3_3x3_s2_256/BatchNorm/beta/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/layer_19_2_Conv2d_3_3x3_s2_256/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 256
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "ssd300/layer_19_2_Conv2d_3_3x3_s2_256/BatchNorm/beta"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/layer_19_2_Conv2d_3_3x3_s2_256/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 256
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "ssd300/layer_19_2_Conv2d_3_3x3_s2_256/BatchNorm/beta/Assign"
  op: "Assign"
  input: "ssd300/layer_19_2_Conv2d_3_3x3_s2_256/BatchNorm/beta"
  input: "ssd300/layer_19_2_Conv2d_3_3x3_s2_256/BatchNorm/beta/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/layer_19_2_Conv2d_3_3x3_s2_256/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "ssd300/layer_19_2_Conv2d_3_3x3_s2_256/BatchNorm/beta/read"
  op: "Identity"
  input: "ssd300/layer_19_2_Conv2d_3_3x3_s2_256/BatchNorm/beta"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/layer_19_2_Conv2d_3_3x3_s2_256/BatchNorm/beta"
      }
    }
  }
}
node {
  name: "ssd300/layer_19_2_Conv2d_3_3x3_s2_256/BatchNorm/moving_mean/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/layer_19_2_Conv2d_3_3x3_s2_256/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 256
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "ssd300/layer_19_2_Conv2d_3_3x3_s2_256/BatchNorm/moving_mean"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/layer_19_2_Conv2d_3_3x3_s2_256/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 256
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "ssd300/layer_19_2_Conv2d_3_3x3_s2_256/BatchNorm/moving_mean/Assign"
  op: "Assign"
  input: "ssd300/layer_19_2_Conv2d_3_3x3_s2_256/BatchNorm/moving_mean"
  input: "ssd300/layer_19_2_Conv2d_3_3x3_s2_256/BatchNorm/moving_mean/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/layer_19_2_Conv2d_3_3x3_s2_256/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "ssd300/layer_19_2_Conv2d_3_3x3_s2_256/BatchNorm/moving_mean/read"
  op: "Identity"
  input: "ssd300/layer_19_2_Conv2d_3_3x3_s2_256/BatchNorm/moving_mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/layer_19_2_Conv2d_3_3x3_s2_256/BatchNorm/moving_mean"
      }
    }
  }
}
node {
  name: "ssd300/layer_19_2_Conv2d_3_3x3_s2_256/BatchNorm/moving_variance/Initializer/ones"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/layer_19_2_Conv2d_3_3x3_s2_256/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 256
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "ssd300/layer_19_2_Conv2d_3_3x3_s2_256/BatchNorm/moving_variance"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/layer_19_2_Conv2d_3_3x3_s2_256/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 256
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "ssd300/layer_19_2_Conv2d_3_3x3_s2_256/BatchNorm/moving_variance/Assign"
  op: "Assign"
  input: "ssd300/layer_19_2_Conv2d_3_3x3_s2_256/BatchNorm/moving_variance"
  input: "ssd300/layer_19_2_Conv2d_3_3x3_s2_256/BatchNorm/moving_variance/Initializer/ones"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/layer_19_2_Conv2d_3_3x3_s2_256/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "ssd300/layer_19_2_Conv2d_3_3x3_s2_256/BatchNorm/moving_variance/read"
  op: "Identity"
  input: "ssd300/layer_19_2_Conv2d_3_3x3_s2_256/BatchNorm/moving_variance"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/layer_19_2_Conv2d_3_3x3_s2_256/BatchNorm/moving_variance"
      }
    }
  }
}
node {
  name: "ssd300/layer_19_2_Conv2d_3_3x3_s2_256/BatchNorm/Reshape/shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\000\001\000\000\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "ssd300/layer_19_2_Conv2d_3_3x3_s2_256/BatchNorm/Reshape"
  op: "Reshape"
  input: "ssd300/layer_19_2_Conv2d_3_3x3_s2_256/BatchNorm/beta/read"
  input: "ssd300/layer_19_2_Conv2d_3_3x3_s2_256/BatchNorm/Reshape/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "ssd300/layer_19_2_Conv2d_3_3x3_s2_256/BatchNorm/Reshape_1/shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\000\001\000\000\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "ssd300/layer_19_2_Conv2d_3_3x3_s2_256/BatchNorm/Reshape_1"
  op: "Reshape"
  input: "ssd300/layer_19_2_Conv2d_3_3x3_s2_256/BatchNorm/moving_mean/read"
  input: "ssd300/layer_19_2_Conv2d_3_3x3_s2_256/BatchNorm/Reshape_1/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "ssd300/layer_19_2_Conv2d_3_3x3_s2_256/BatchNorm/Reshape_2/shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\000\001\000\000\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "ssd300/layer_19_2_Conv2d_3_3x3_s2_256/BatchNorm/Reshape_2"
  op: "Reshape"
  input: "ssd300/layer_19_2_Conv2d_3_3x3_s2_256/BatchNorm/moving_variance/read"
  input: "ssd300/layer_19_2_Conv2d_3_3x3_s2_256/BatchNorm/Reshape_2/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "ssd300/layer_19_2_Conv2d_3_3x3_s2_256/BatchNorm/batchnorm_1/Add/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0010000000474974513
      }
    }
  }
}
node {
  name: "ssd300/layer_19_2_Conv2d_3_3x3_s2_256/BatchNorm/batchnorm_1/Add"
  op: "Add"
  input: "ssd300/layer_19_2_Conv2d_3_3x3_s2_256/BatchNorm/Reshape_2"
  input: "ssd300/layer_19_2_Conv2d_3_3x3_s2_256/BatchNorm/batchnorm_1/Add/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ssd300/layer_19_2_Conv2d_3_3x3_s2_256/BatchNorm/batchnorm_1/Rsqrt"
  op: "Rsqrt"
  input: "ssd300/layer_19_2_Conv2d_3_3x3_s2_256/BatchNorm/batchnorm_1/Add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ssd300/layer_19_2_Conv2d_3_3x3_s2_256/BatchNorm/batchnorm_1/mul"
  op: "Mul"
  input: "ssd300/layer_19_2_Conv2d_3_3x3_s2_256/layer_conv2d/Conv2D"
  input: "ssd300/layer_19_2_Conv2d_3_3x3_s2_256/BatchNorm/batchnorm_1/Rsqrt"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ssd300/layer_19_2_Conv2d_3_3x3_s2_256/BatchNorm/batchnorm_1/mul_1"
  op: "Mul"
  input: "ssd300/layer_19_2_Conv2d_3_3x3_s2_256/BatchNorm/Reshape_1"
  input: "ssd300/layer_19_2_Conv2d_3_3x3_s2_256/BatchNorm/batchnorm_1/Rsqrt"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ssd300/layer_19_2_Conv2d_3_3x3_s2_256/BatchNorm/batchnorm_1/sub"
  op: "Sub"
  input: "ssd300/layer_19_2_Conv2d_3_3x3_s2_256/BatchNorm/Reshape"
  input: "ssd300/layer_19_2_Conv2d_3_3x3_s2_256/BatchNorm/batchnorm_1/mul_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ssd300/layer_19_2_Conv2d_3_3x3_s2_256/BatchNorm/batchnorm_1/Add_1"
  op: "Add"
  input: "ssd300/layer_19_2_Conv2d_3_3x3_s2_256/BatchNorm/batchnorm_1/mul"
  input: "ssd300/layer_19_2_Conv2d_3_3x3_s2_256/BatchNorm/batchnorm_1/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ssd300/layer_19_2_Conv2d_3_3x3_s2_256/Relu6"
  op: "Relu6"
  input: "ssd300/layer_19_2_Conv2d_3_3x3_s2_256/BatchNorm/batchnorm_1/Add_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ssd300/layer_19_1_Conv2d_4_1x1_128/weights/Initializer/random_uniform/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/layer_19_1_Conv2d_4_1x1_128/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000\000\001\000\000\200\000\000\000"
      }
    }
  }
}
node {
  name: "ssd300/layer_19_1_Conv2d_4_1x1_128/weights/Initializer/random_uniform/min"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/layer_19_1_Conv2d_4_1x1_128/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: -0.125
      }
    }
  }
}
node {
  name: "ssd300/layer_19_1_Conv2d_4_1x1_128/weights/Initializer/random_uniform/max"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/layer_19_1_Conv2d_4_1x1_128/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.125
      }
    }
  }
}
node {
  name: "ssd300/layer_19_1_Conv2d_4_1x1_128/weights/Initializer/random_uniform/RandomUniform"
  op: "RandomUniform"
  input: "ssd300/layer_19_1_Conv2d_4_1x1_128/weights/Initializer/random_uniform/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/layer_19_1_Conv2d_4_1x1_128/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "ssd300/layer_19_1_Conv2d_4_1x1_128/weights/Initializer/random_uniform/sub"
  op: "Sub"
  input: "ssd300/layer_19_1_Conv2d_4_1x1_128/weights/Initializer/random_uniform/max"
  input: "ssd300/layer_19_1_Conv2d_4_1x1_128/weights/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/layer_19_1_Conv2d_4_1x1_128/weights"
      }
    }
  }
}
node {
  name: "ssd300/layer_19_1_Conv2d_4_1x1_128/weights/Initializer/random_uniform/mul"
  op: "Mul"
  input: "ssd300/layer_19_1_Conv2d_4_1x1_128/weights/Initializer/random_uniform/RandomUniform"
  input: "ssd300/layer_19_1_Conv2d_4_1x1_128/weights/Initializer/random_uniform/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/layer_19_1_Conv2d_4_1x1_128/weights"
      }
    }
  }
}
node {
  name: "ssd300/layer_19_1_Conv2d_4_1x1_128/weights/Initializer/random_uniform"
  op: "Add"
  input: "ssd300/layer_19_1_Conv2d_4_1x1_128/weights/Initializer/random_uniform/mul"
  input: "ssd300/layer_19_1_Conv2d_4_1x1_128/weights/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/layer_19_1_Conv2d_4_1x1_128/weights"
      }
    }
  }
}
node {
  name: "ssd300/layer_19_1_Conv2d_4_1x1_128/weights"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/layer_19_1_Conv2d_4_1x1_128/weights"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
        dim {
          size: 1
        }
        dim {
          size: 256
        }
        dim {
          size: 128
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "ssd300/layer_19_1_Conv2d_4_1x1_128/weights/Assign"
  op: "Assign"
  input: "ssd300/layer_19_1_Conv2d_4_1x1_128/weights"
  input: "ssd300/layer_19_1_Conv2d_4_1x1_128/weights/Initializer/random_uniform"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/layer_19_1_Conv2d_4_1x1_128/weights"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "ssd300/layer_19_1_Conv2d_4_1x1_128/weights/read"
  op: "Identity"
  input: "ssd300/layer_19_1_Conv2d_4_1x1_128/weights"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/layer_19_1_Conv2d_4_1x1_128/weights"
      }
    }
  }
}
node {
  name: "ssd300/layer_19_1_Conv2d_4_1x1_128/layer_conv2d/Conv2D"
  op: "Conv2D"
  input: "ssd300/layer_19_2_Conv2d_3_3x3_s2_256/Relu6"
  input: "ssd300/layer_19_1_Conv2d_4_1x1_128/weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NCHW"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "explicit_paddings"
    value {
      list {
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "ssd300/layer_19_1_Conv2d_4_1x1_128/BatchNorm/beta/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/layer_19_1_Conv2d_4_1x1_128/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 128
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "ssd300/layer_19_1_Conv2d_4_1x1_128/BatchNorm/beta"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/layer_19_1_Conv2d_4_1x1_128/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 128
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "ssd300/layer_19_1_Conv2d_4_1x1_128/BatchNorm/beta/Assign"
  op: "Assign"
  input: "ssd300/layer_19_1_Conv2d_4_1x1_128/BatchNorm/beta"
  input: "ssd300/layer_19_1_Conv2d_4_1x1_128/BatchNorm/beta/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/layer_19_1_Conv2d_4_1x1_128/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "ssd300/layer_19_1_Conv2d_4_1x1_128/BatchNorm/beta/read"
  op: "Identity"
  input: "ssd300/layer_19_1_Conv2d_4_1x1_128/BatchNorm/beta"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/layer_19_1_Conv2d_4_1x1_128/BatchNorm/beta"
      }
    }
  }
}
node {
  name: "ssd300/layer_19_1_Conv2d_4_1x1_128/BatchNorm/moving_mean/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/layer_19_1_Conv2d_4_1x1_128/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 128
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "ssd300/layer_19_1_Conv2d_4_1x1_128/BatchNorm/moving_mean"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/layer_19_1_Conv2d_4_1x1_128/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 128
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "ssd300/layer_19_1_Conv2d_4_1x1_128/BatchNorm/moving_mean/Assign"
  op: "Assign"
  input: "ssd300/layer_19_1_Conv2d_4_1x1_128/BatchNorm/moving_mean"
  input: "ssd300/layer_19_1_Conv2d_4_1x1_128/BatchNorm/moving_mean/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/layer_19_1_Conv2d_4_1x1_128/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "ssd300/layer_19_1_Conv2d_4_1x1_128/BatchNorm/moving_mean/read"
  op: "Identity"
  input: "ssd300/layer_19_1_Conv2d_4_1x1_128/BatchNorm/moving_mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/layer_19_1_Conv2d_4_1x1_128/BatchNorm/moving_mean"
      }
    }
  }
}
node {
  name: "ssd300/layer_19_1_Conv2d_4_1x1_128/BatchNorm/moving_variance/Initializer/ones"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/layer_19_1_Conv2d_4_1x1_128/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 128
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "ssd300/layer_19_1_Conv2d_4_1x1_128/BatchNorm/moving_variance"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/layer_19_1_Conv2d_4_1x1_128/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 128
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "ssd300/layer_19_1_Conv2d_4_1x1_128/BatchNorm/moving_variance/Assign"
  op: "Assign"
  input: "ssd300/layer_19_1_Conv2d_4_1x1_128/BatchNorm/moving_variance"
  input: "ssd300/layer_19_1_Conv2d_4_1x1_128/BatchNorm/moving_variance/Initializer/ones"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/layer_19_1_Conv2d_4_1x1_128/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "ssd300/layer_19_1_Conv2d_4_1x1_128/BatchNorm/moving_variance/read"
  op: "Identity"
  input: "ssd300/layer_19_1_Conv2d_4_1x1_128/BatchNorm/moving_variance"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/layer_19_1_Conv2d_4_1x1_128/BatchNorm/moving_variance"
      }
    }
  }
}
node {
  name: "ssd300/layer_19_1_Conv2d_4_1x1_128/BatchNorm/Reshape/shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\200\000\000\000\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "ssd300/layer_19_1_Conv2d_4_1x1_128/BatchNorm/Reshape"
  op: "Reshape"
  input: "ssd300/layer_19_1_Conv2d_4_1x1_128/BatchNorm/beta/read"
  input: "ssd300/layer_19_1_Conv2d_4_1x1_128/BatchNorm/Reshape/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "ssd300/layer_19_1_Conv2d_4_1x1_128/BatchNorm/Reshape_1/shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\200\000\000\000\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "ssd300/layer_19_1_Conv2d_4_1x1_128/BatchNorm/Reshape_1"
  op: "Reshape"
  input: "ssd300/layer_19_1_Conv2d_4_1x1_128/BatchNorm/moving_mean/read"
  input: "ssd300/layer_19_1_Conv2d_4_1x1_128/BatchNorm/Reshape_1/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "ssd300/layer_19_1_Conv2d_4_1x1_128/BatchNorm/Reshape_2/shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\200\000\000\000\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "ssd300/layer_19_1_Conv2d_4_1x1_128/BatchNorm/Reshape_2"
  op: "Reshape"
  input: "ssd300/layer_19_1_Conv2d_4_1x1_128/BatchNorm/moving_variance/read"
  input: "ssd300/layer_19_1_Conv2d_4_1x1_128/BatchNorm/Reshape_2/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "ssd300/layer_19_1_Conv2d_4_1x1_128/BatchNorm/batchnorm_1/Add/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0010000000474974513
      }
    }
  }
}
node {
  name: "ssd300/layer_19_1_Conv2d_4_1x1_128/BatchNorm/batchnorm_1/Add"
  op: "Add"
  input: "ssd300/layer_19_1_Conv2d_4_1x1_128/BatchNorm/Reshape_2"
  input: "ssd300/layer_19_1_Conv2d_4_1x1_128/BatchNorm/batchnorm_1/Add/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ssd300/layer_19_1_Conv2d_4_1x1_128/BatchNorm/batchnorm_1/Rsqrt"
  op: "Rsqrt"
  input: "ssd300/layer_19_1_Conv2d_4_1x1_128/BatchNorm/batchnorm_1/Add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ssd300/layer_19_1_Conv2d_4_1x1_128/BatchNorm/batchnorm_1/mul"
  op: "Mul"
  input: "ssd300/layer_19_1_Conv2d_4_1x1_128/layer_conv2d/Conv2D"
  input: "ssd300/layer_19_1_Conv2d_4_1x1_128/BatchNorm/batchnorm_1/Rsqrt"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ssd300/layer_19_1_Conv2d_4_1x1_128/BatchNorm/batchnorm_1/mul_1"
  op: "Mul"
  input: "ssd300/layer_19_1_Conv2d_4_1x1_128/BatchNorm/Reshape_1"
  input: "ssd300/layer_19_1_Conv2d_4_1x1_128/BatchNorm/batchnorm_1/Rsqrt"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ssd300/layer_19_1_Conv2d_4_1x1_128/BatchNorm/batchnorm_1/sub"
  op: "Sub"
  input: "ssd300/layer_19_1_Conv2d_4_1x1_128/BatchNorm/Reshape"
  input: "ssd300/layer_19_1_Conv2d_4_1x1_128/BatchNorm/batchnorm_1/mul_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ssd300/layer_19_1_Conv2d_4_1x1_128/BatchNorm/batchnorm_1/Add_1"
  op: "Add"
  input: "ssd300/layer_19_1_Conv2d_4_1x1_128/BatchNorm/batchnorm_1/mul"
  input: "ssd300/layer_19_1_Conv2d_4_1x1_128/BatchNorm/batchnorm_1/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ssd300/layer_19_1_Conv2d_4_1x1_128/Relu6"
  op: "Relu6"
  input: "ssd300/layer_19_1_Conv2d_4_1x1_128/BatchNorm/batchnorm_1/Add_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ssd300/layer_19_2_Conv2d_4_3x3_s2_256_depthwise/depthwise_weights/Initializer/random_uniform/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/layer_19_2_Conv2d_4_3x3_s2_256_depthwise/depthwise_weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\003\000\000\000\003\000\000\000\200\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "ssd300/layer_19_2_Conv2d_4_3x3_s2_256_depthwise/depthwise_weights/Initializer/random_uniform/min"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/layer_19_2_Conv2d_4_3x3_s2_256_depthwise/depthwise_weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: -0.0718885138630867
      }
    }
  }
}
node {
  name: "ssd300/layer_19_2_Conv2d_4_3x3_s2_256_depthwise/depthwise_weights/Initializer/random_uniform/max"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/layer_19_2_Conv2d_4_3x3_s2_256_depthwise/depthwise_weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0718885138630867
      }
    }
  }
}
node {
  name: "ssd300/layer_19_2_Conv2d_4_3x3_s2_256_depthwise/depthwise_weights/Initializer/random_uniform/RandomUniform"
  op: "RandomUniform"
  input: "ssd300/layer_19_2_Conv2d_4_3x3_s2_256_depthwise/depthwise_weights/Initializer/random_uniform/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/layer_19_2_Conv2d_4_3x3_s2_256_depthwise/depthwise_weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "ssd300/layer_19_2_Conv2d_4_3x3_s2_256_depthwise/depthwise_weights/Initializer/random_uniform/sub"
  op: "Sub"
  input: "ssd300/layer_19_2_Conv2d_4_3x3_s2_256_depthwise/depthwise_weights/Initializer/random_uniform/max"
  input: "ssd300/layer_19_2_Conv2d_4_3x3_s2_256_depthwise/depthwise_weights/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/layer_19_2_Conv2d_4_3x3_s2_256_depthwise/depthwise_weights"
      }
    }
  }
}
node {
  name: "ssd300/layer_19_2_Conv2d_4_3x3_s2_256_depthwise/depthwise_weights/Initializer/random_uniform/mul"
  op: "Mul"
  input: "ssd300/layer_19_2_Conv2d_4_3x3_s2_256_depthwise/depthwise_weights/Initializer/random_uniform/RandomUniform"
  input: "ssd300/layer_19_2_Conv2d_4_3x3_s2_256_depthwise/depthwise_weights/Initializer/random_uniform/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/layer_19_2_Conv2d_4_3x3_s2_256_depthwise/depthwise_weights"
      }
    }
  }
}
node {
  name: "ssd300/layer_19_2_Conv2d_4_3x3_s2_256_depthwise/depthwise_weights/Initializer/random_uniform"
  op: "Add"
  input: "ssd300/layer_19_2_Conv2d_4_3x3_s2_256_depthwise/depthwise_weights/Initializer/random_uniform/mul"
  input: "ssd300/layer_19_2_Conv2d_4_3x3_s2_256_depthwise/depthwise_weights/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/layer_19_2_Conv2d_4_3x3_s2_256_depthwise/depthwise_weights"
      }
    }
  }
}
node {
  name: "ssd300/layer_19_2_Conv2d_4_3x3_s2_256_depthwise/depthwise_weights"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/layer_19_2_Conv2d_4_3x3_s2_256_depthwise/depthwise_weights"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 3
        }
        dim {
          size: 3
        }
        dim {
          size: 128
        }
        dim {
          size: 1
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "ssd300/layer_19_2_Conv2d_4_3x3_s2_256_depthwise/depthwise_weights/Assign"
  op: "Assign"
  input: "ssd300/layer_19_2_Conv2d_4_3x3_s2_256_depthwise/depthwise_weights"
  input: "ssd300/layer_19_2_Conv2d_4_3x3_s2_256_depthwise/depthwise_weights/Initializer/random_uniform"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/layer_19_2_Conv2d_4_3x3_s2_256_depthwise/depthwise_weights"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "ssd300/layer_19_2_Conv2d_4_3x3_s2_256_depthwise/depthwise_weights/read"
  op: "Identity"
  input: "ssd300/layer_19_2_Conv2d_4_3x3_s2_256_depthwise/depthwise_weights"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/layer_19_2_Conv2d_4_3x3_s2_256_depthwise/depthwise_weights"
      }
    }
  }
}
node {
  name: "ssd300/layer_19_2_Conv2d_4_3x3_s2_256_depthwise/layer_conv2d/depthwise/Shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\003\000\000\000\003\000\000\000\200\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "ssd300/layer_19_2_Conv2d_4_3x3_s2_256_depthwise/layer_conv2d/depthwise/dilation_rate"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "ssd300/layer_19_2_Conv2d_4_3x3_s2_256_depthwise/layer_conv2d/depthwise"
  op: "DepthwiseConv2dNative"
  input: "ssd300/layer_19_1_Conv2d_4_1x1_128/Relu6"
  input: "ssd300/layer_19_2_Conv2d_4_3x3_s2_256_depthwise/depthwise_weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NCHW"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 2
        i: 2
      }
    }
  }
}
node {
  name: "ssd300/layer_19_2_Conv2d_4_3x3_s2_256_depthwise/BatchNorm/beta/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/layer_19_2_Conv2d_4_3x3_s2_256_depthwise/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 128
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "ssd300/layer_19_2_Conv2d_4_3x3_s2_256_depthwise/BatchNorm/beta"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/layer_19_2_Conv2d_4_3x3_s2_256_depthwise/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 128
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "ssd300/layer_19_2_Conv2d_4_3x3_s2_256_depthwise/BatchNorm/beta/Assign"
  op: "Assign"
  input: "ssd300/layer_19_2_Conv2d_4_3x3_s2_256_depthwise/BatchNorm/beta"
  input: "ssd300/layer_19_2_Conv2d_4_3x3_s2_256_depthwise/BatchNorm/beta/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/layer_19_2_Conv2d_4_3x3_s2_256_depthwise/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "ssd300/layer_19_2_Conv2d_4_3x3_s2_256_depthwise/BatchNorm/beta/read"
  op: "Identity"
  input: "ssd300/layer_19_2_Conv2d_4_3x3_s2_256_depthwise/BatchNorm/beta"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/layer_19_2_Conv2d_4_3x3_s2_256_depthwise/BatchNorm/beta"
      }
    }
  }
}
node {
  name: "ssd300/layer_19_2_Conv2d_4_3x3_s2_256_depthwise/BatchNorm/moving_mean/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/layer_19_2_Conv2d_4_3x3_s2_256_depthwise/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 128
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "ssd300/layer_19_2_Conv2d_4_3x3_s2_256_depthwise/BatchNorm/moving_mean"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/layer_19_2_Conv2d_4_3x3_s2_256_depthwise/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 128
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "ssd300/layer_19_2_Conv2d_4_3x3_s2_256_depthwise/BatchNorm/moving_mean/Assign"
  op: "Assign"
  input: "ssd300/layer_19_2_Conv2d_4_3x3_s2_256_depthwise/BatchNorm/moving_mean"
  input: "ssd300/layer_19_2_Conv2d_4_3x3_s2_256_depthwise/BatchNorm/moving_mean/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/layer_19_2_Conv2d_4_3x3_s2_256_depthwise/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "ssd300/layer_19_2_Conv2d_4_3x3_s2_256_depthwise/BatchNorm/moving_mean/read"
  op: "Identity"
  input: "ssd300/layer_19_2_Conv2d_4_3x3_s2_256_depthwise/BatchNorm/moving_mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/layer_19_2_Conv2d_4_3x3_s2_256_depthwise/BatchNorm/moving_mean"
      }
    }
  }
}
node {
  name: "ssd300/layer_19_2_Conv2d_4_3x3_s2_256_depthwise/BatchNorm/moving_variance/Initializer/ones"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/layer_19_2_Conv2d_4_3x3_s2_256_depthwise/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 128
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "ssd300/layer_19_2_Conv2d_4_3x3_s2_256_depthwise/BatchNorm/moving_variance"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/layer_19_2_Conv2d_4_3x3_s2_256_depthwise/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 128
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "ssd300/layer_19_2_Conv2d_4_3x3_s2_256_depthwise/BatchNorm/moving_variance/Assign"
  op: "Assign"
  input: "ssd300/layer_19_2_Conv2d_4_3x3_s2_256_depthwise/BatchNorm/moving_variance"
  input: "ssd300/layer_19_2_Conv2d_4_3x3_s2_256_depthwise/BatchNorm/moving_variance/Initializer/ones"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/layer_19_2_Conv2d_4_3x3_s2_256_depthwise/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "ssd300/layer_19_2_Conv2d_4_3x3_s2_256_depthwise/BatchNorm/moving_variance/read"
  op: "Identity"
  input: "ssd300/layer_19_2_Conv2d_4_3x3_s2_256_depthwise/BatchNorm/moving_variance"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/layer_19_2_Conv2d_4_3x3_s2_256_depthwise/BatchNorm/moving_variance"
      }
    }
  }
}
node {
  name: "ssd300/layer_19_2_Conv2d_4_3x3_s2_256_depthwise/BatchNorm/Reshape/shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\200\000\000\000\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "ssd300/layer_19_2_Conv2d_4_3x3_s2_256_depthwise/BatchNorm/Reshape"
  op: "Reshape"
  input: "ssd300/layer_19_2_Conv2d_4_3x3_s2_256_depthwise/BatchNorm/beta/read"
  input: "ssd300/layer_19_2_Conv2d_4_3x3_s2_256_depthwise/BatchNorm/Reshape/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "ssd300/layer_19_2_Conv2d_4_3x3_s2_256_depthwise/BatchNorm/Reshape_1/shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\200\000\000\000\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "ssd300/layer_19_2_Conv2d_4_3x3_s2_256_depthwise/BatchNorm/Reshape_1"
  op: "Reshape"
  input: "ssd300/layer_19_2_Conv2d_4_3x3_s2_256_depthwise/BatchNorm/moving_mean/read"
  input: "ssd300/layer_19_2_Conv2d_4_3x3_s2_256_depthwise/BatchNorm/Reshape_1/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "ssd300/layer_19_2_Conv2d_4_3x3_s2_256_depthwise/BatchNorm/Reshape_2/shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\200\000\000\000\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "ssd300/layer_19_2_Conv2d_4_3x3_s2_256_depthwise/BatchNorm/Reshape_2"
  op: "Reshape"
  input: "ssd300/layer_19_2_Conv2d_4_3x3_s2_256_depthwise/BatchNorm/moving_variance/read"
  input: "ssd300/layer_19_2_Conv2d_4_3x3_s2_256_depthwise/BatchNorm/Reshape_2/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "ssd300/layer_19_2_Conv2d_4_3x3_s2_256_depthwise/BatchNorm/batchnorm_1/Add/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0010000000474974513
      }
    }
  }
}
node {
  name: "ssd300/layer_19_2_Conv2d_4_3x3_s2_256_depthwise/BatchNorm/batchnorm_1/Add"
  op: "Add"
  input: "ssd300/layer_19_2_Conv2d_4_3x3_s2_256_depthwise/BatchNorm/Reshape_2"
  input: "ssd300/layer_19_2_Conv2d_4_3x3_s2_256_depthwise/BatchNorm/batchnorm_1/Add/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ssd300/layer_19_2_Conv2d_4_3x3_s2_256_depthwise/BatchNorm/batchnorm_1/Rsqrt"
  op: "Rsqrt"
  input: "ssd300/layer_19_2_Conv2d_4_3x3_s2_256_depthwise/BatchNorm/batchnorm_1/Add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ssd300/layer_19_2_Conv2d_4_3x3_s2_256_depthwise/BatchNorm/batchnorm_1/mul"
  op: "Mul"
  input: "ssd300/layer_19_2_Conv2d_4_3x3_s2_256_depthwise/layer_conv2d/depthwise"
  input: "ssd300/layer_19_2_Conv2d_4_3x3_s2_256_depthwise/BatchNorm/batchnorm_1/Rsqrt"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ssd300/layer_19_2_Conv2d_4_3x3_s2_256_depthwise/BatchNorm/batchnorm_1/mul_1"
  op: "Mul"
  input: "ssd300/layer_19_2_Conv2d_4_3x3_s2_256_depthwise/BatchNorm/Reshape_1"
  input: "ssd300/layer_19_2_Conv2d_4_3x3_s2_256_depthwise/BatchNorm/batchnorm_1/Rsqrt"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ssd300/layer_19_2_Conv2d_4_3x3_s2_256_depthwise/BatchNorm/batchnorm_1/sub"
  op: "Sub"
  input: "ssd300/layer_19_2_Conv2d_4_3x3_s2_256_depthwise/BatchNorm/Reshape"
  input: "ssd300/layer_19_2_Conv2d_4_3x3_s2_256_depthwise/BatchNorm/batchnorm_1/mul_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ssd300/layer_19_2_Conv2d_4_3x3_s2_256_depthwise/BatchNorm/batchnorm_1/Add_1"
  op: "Add"
  input: "ssd300/layer_19_2_Conv2d_4_3x3_s2_256_depthwise/BatchNorm/batchnorm_1/mul"
  input: "ssd300/layer_19_2_Conv2d_4_3x3_s2_256_depthwise/BatchNorm/batchnorm_1/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ssd300/layer_19_2_Conv2d_4_3x3_s2_256_depthwise/Relu6"
  op: "Relu6"
  input: "ssd300/layer_19_2_Conv2d_4_3x3_s2_256_depthwise/BatchNorm/batchnorm_1/Add_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ssd300/layer_19_2_Conv2d_4_3x3_s2_256/weights/Initializer/random_uniform/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/layer_19_2_Conv2d_4_3x3_s2_256/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000\200\000\000\000\000\001\000\000"
      }
    }
  }
}
node {
  name: "ssd300/layer_19_2_Conv2d_4_3x3_s2_256/weights/Initializer/random_uniform/min"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/layer_19_2_Conv2d_4_3x3_s2_256/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: -0.125
      }
    }
  }
}
node {
  name: "ssd300/layer_19_2_Conv2d_4_3x3_s2_256/weights/Initializer/random_uniform/max"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/layer_19_2_Conv2d_4_3x3_s2_256/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.125
      }
    }
  }
}
node {
  name: "ssd300/layer_19_2_Conv2d_4_3x3_s2_256/weights/Initializer/random_uniform/RandomUniform"
  op: "RandomUniform"
  input: "ssd300/layer_19_2_Conv2d_4_3x3_s2_256/weights/Initializer/random_uniform/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/layer_19_2_Conv2d_4_3x3_s2_256/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "ssd300/layer_19_2_Conv2d_4_3x3_s2_256/weights/Initializer/random_uniform/sub"
  op: "Sub"
  input: "ssd300/layer_19_2_Conv2d_4_3x3_s2_256/weights/Initializer/random_uniform/max"
  input: "ssd300/layer_19_2_Conv2d_4_3x3_s2_256/weights/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/layer_19_2_Conv2d_4_3x3_s2_256/weights"
      }
    }
  }
}
node {
  name: "ssd300/layer_19_2_Conv2d_4_3x3_s2_256/weights/Initializer/random_uniform/mul"
  op: "Mul"
  input: "ssd300/layer_19_2_Conv2d_4_3x3_s2_256/weights/Initializer/random_uniform/RandomUniform"
  input: "ssd300/layer_19_2_Conv2d_4_3x3_s2_256/weights/Initializer/random_uniform/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/layer_19_2_Conv2d_4_3x3_s2_256/weights"
      }
    }
  }
}
node {
  name: "ssd300/layer_19_2_Conv2d_4_3x3_s2_256/weights/Initializer/random_uniform"
  op: "Add"
  input: "ssd300/layer_19_2_Conv2d_4_3x3_s2_256/weights/Initializer/random_uniform/mul"
  input: "ssd300/layer_19_2_Conv2d_4_3x3_s2_256/weights/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/layer_19_2_Conv2d_4_3x3_s2_256/weights"
      }
    }
  }
}
node {
  name: "ssd300/layer_19_2_Conv2d_4_3x3_s2_256/weights"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/layer_19_2_Conv2d_4_3x3_s2_256/weights"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
        dim {
          size: 1
        }
        dim {
          size: 128
        }
        dim {
          size: 256
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "ssd300/layer_19_2_Conv2d_4_3x3_s2_256/weights/Assign"
  op: "Assign"
  input: "ssd300/layer_19_2_Conv2d_4_3x3_s2_256/weights"
  input: "ssd300/layer_19_2_Conv2d_4_3x3_s2_256/weights/Initializer/random_uniform"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/layer_19_2_Conv2d_4_3x3_s2_256/weights"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "ssd300/layer_19_2_Conv2d_4_3x3_s2_256/weights/read"
  op: "Identity"
  input: "ssd300/layer_19_2_Conv2d_4_3x3_s2_256/weights"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/layer_19_2_Conv2d_4_3x3_s2_256/weights"
      }
    }
  }
}
node {
  name: "ssd300/layer_19_2_Conv2d_4_3x3_s2_256/layer_conv2d/Conv2D"
  op: "Conv2D"
  input: "ssd300/layer_19_2_Conv2d_4_3x3_s2_256_depthwise/Relu6"
  input: "ssd300/layer_19_2_Conv2d_4_3x3_s2_256/weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NCHW"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "explicit_paddings"
    value {
      list {
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "ssd300/layer_19_2_Conv2d_4_3x3_s2_256/BatchNorm/beta/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/layer_19_2_Conv2d_4_3x3_s2_256/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 256
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "ssd300/layer_19_2_Conv2d_4_3x3_s2_256/BatchNorm/beta"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/layer_19_2_Conv2d_4_3x3_s2_256/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 256
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "ssd300/layer_19_2_Conv2d_4_3x3_s2_256/BatchNorm/beta/Assign"
  op: "Assign"
  input: "ssd300/layer_19_2_Conv2d_4_3x3_s2_256/BatchNorm/beta"
  input: "ssd300/layer_19_2_Conv2d_4_3x3_s2_256/BatchNorm/beta/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/layer_19_2_Conv2d_4_3x3_s2_256/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "ssd300/layer_19_2_Conv2d_4_3x3_s2_256/BatchNorm/beta/read"
  op: "Identity"
  input: "ssd300/layer_19_2_Conv2d_4_3x3_s2_256/BatchNorm/beta"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/layer_19_2_Conv2d_4_3x3_s2_256/BatchNorm/beta"
      }
    }
  }
}
node {
  name: "ssd300/layer_19_2_Conv2d_4_3x3_s2_256/BatchNorm/moving_mean/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/layer_19_2_Conv2d_4_3x3_s2_256/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 256
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "ssd300/layer_19_2_Conv2d_4_3x3_s2_256/BatchNorm/moving_mean"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/layer_19_2_Conv2d_4_3x3_s2_256/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 256
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "ssd300/layer_19_2_Conv2d_4_3x3_s2_256/BatchNorm/moving_mean/Assign"
  op: "Assign"
  input: "ssd300/layer_19_2_Conv2d_4_3x3_s2_256/BatchNorm/moving_mean"
  input: "ssd300/layer_19_2_Conv2d_4_3x3_s2_256/BatchNorm/moving_mean/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/layer_19_2_Conv2d_4_3x3_s2_256/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "ssd300/layer_19_2_Conv2d_4_3x3_s2_256/BatchNorm/moving_mean/read"
  op: "Identity"
  input: "ssd300/layer_19_2_Conv2d_4_3x3_s2_256/BatchNorm/moving_mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/layer_19_2_Conv2d_4_3x3_s2_256/BatchNorm/moving_mean"
      }
    }
  }
}
node {
  name: "ssd300/layer_19_2_Conv2d_4_3x3_s2_256/BatchNorm/moving_variance/Initializer/ones"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/layer_19_2_Conv2d_4_3x3_s2_256/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 256
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "ssd300/layer_19_2_Conv2d_4_3x3_s2_256/BatchNorm/moving_variance"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/layer_19_2_Conv2d_4_3x3_s2_256/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 256
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "ssd300/layer_19_2_Conv2d_4_3x3_s2_256/BatchNorm/moving_variance/Assign"
  op: "Assign"
  input: "ssd300/layer_19_2_Conv2d_4_3x3_s2_256/BatchNorm/moving_variance"
  input: "ssd300/layer_19_2_Conv2d_4_3x3_s2_256/BatchNorm/moving_variance/Initializer/ones"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/layer_19_2_Conv2d_4_3x3_s2_256/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "ssd300/layer_19_2_Conv2d_4_3x3_s2_256/BatchNorm/moving_variance/read"
  op: "Identity"
  input: "ssd300/layer_19_2_Conv2d_4_3x3_s2_256/BatchNorm/moving_variance"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/layer_19_2_Conv2d_4_3x3_s2_256/BatchNorm/moving_variance"
      }
    }
  }
}
node {
  name: "ssd300/layer_19_2_Conv2d_4_3x3_s2_256/BatchNorm/Reshape/shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\000\001\000\000\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "ssd300/layer_19_2_Conv2d_4_3x3_s2_256/BatchNorm/Reshape"
  op: "Reshape"
  input: "ssd300/layer_19_2_Conv2d_4_3x3_s2_256/BatchNorm/beta/read"
  input: "ssd300/layer_19_2_Conv2d_4_3x3_s2_256/BatchNorm/Reshape/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "ssd300/layer_19_2_Conv2d_4_3x3_s2_256/BatchNorm/Reshape_1/shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\000\001\000\000\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "ssd300/layer_19_2_Conv2d_4_3x3_s2_256/BatchNorm/Reshape_1"
  op: "Reshape"
  input: "ssd300/layer_19_2_Conv2d_4_3x3_s2_256/BatchNorm/moving_mean/read"
  input: "ssd300/layer_19_2_Conv2d_4_3x3_s2_256/BatchNorm/Reshape_1/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "ssd300/layer_19_2_Conv2d_4_3x3_s2_256/BatchNorm/Reshape_2/shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\000\001\000\000\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "ssd300/layer_19_2_Conv2d_4_3x3_s2_256/BatchNorm/Reshape_2"
  op: "Reshape"
  input: "ssd300/layer_19_2_Conv2d_4_3x3_s2_256/BatchNorm/moving_variance/read"
  input: "ssd300/layer_19_2_Conv2d_4_3x3_s2_256/BatchNorm/Reshape_2/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "ssd300/layer_19_2_Conv2d_4_3x3_s2_256/BatchNorm/batchnorm_1/Add/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0010000000474974513
      }
    }
  }
}
node {
  name: "ssd300/layer_19_2_Conv2d_4_3x3_s2_256/BatchNorm/batchnorm_1/Add"
  op: "Add"
  input: "ssd300/layer_19_2_Conv2d_4_3x3_s2_256/BatchNorm/Reshape_2"
  input: "ssd300/layer_19_2_Conv2d_4_3x3_s2_256/BatchNorm/batchnorm_1/Add/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ssd300/layer_19_2_Conv2d_4_3x3_s2_256/BatchNorm/batchnorm_1/Rsqrt"
  op: "Rsqrt"
  input: "ssd300/layer_19_2_Conv2d_4_3x3_s2_256/BatchNorm/batchnorm_1/Add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ssd300/layer_19_2_Conv2d_4_3x3_s2_256/BatchNorm/batchnorm_1/mul"
  op: "Mul"
  input: "ssd300/layer_19_2_Conv2d_4_3x3_s2_256/layer_conv2d/Conv2D"
  input: "ssd300/layer_19_2_Conv2d_4_3x3_s2_256/BatchNorm/batchnorm_1/Rsqrt"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ssd300/layer_19_2_Conv2d_4_3x3_s2_256/BatchNorm/batchnorm_1/mul_1"
  op: "Mul"
  input: "ssd300/layer_19_2_Conv2d_4_3x3_s2_256/BatchNorm/Reshape_1"
  input: "ssd300/layer_19_2_Conv2d_4_3x3_s2_256/BatchNorm/batchnorm_1/Rsqrt"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ssd300/layer_19_2_Conv2d_4_3x3_s2_256/BatchNorm/batchnorm_1/sub"
  op: "Sub"
  input: "ssd300/layer_19_2_Conv2d_4_3x3_s2_256/BatchNorm/Reshape"
  input: "ssd300/layer_19_2_Conv2d_4_3x3_s2_256/BatchNorm/batchnorm_1/mul_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ssd300/layer_19_2_Conv2d_4_3x3_s2_256/BatchNorm/batchnorm_1/Add_1"
  op: "Add"
  input: "ssd300/layer_19_2_Conv2d_4_3x3_s2_256/BatchNorm/batchnorm_1/mul"
  input: "ssd300/layer_19_2_Conv2d_4_3x3_s2_256/BatchNorm/batchnorm_1/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ssd300/layer_19_2_Conv2d_4_3x3_s2_256/Relu6"
  op: "Relu6"
  input: "ssd300/layer_19_2_Conv2d_4_3x3_s2_256/BatchNorm/batchnorm_1/Add_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ssd300/layer_19_1_Conv2d_5_1x1_64/weights/Initializer/random_uniform/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/layer_19_1_Conv2d_5_1x1_64/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000\000\001\000\000@\000\000\000"
      }
    }
  }
}
node {
  name: "ssd300/layer_19_1_Conv2d_5_1x1_64/weights/Initializer/random_uniform/min"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/layer_19_1_Conv2d_5_1x1_64/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: -0.1369306445121765
      }
    }
  }
}
node {
  name: "ssd300/layer_19_1_Conv2d_5_1x1_64/weights/Initializer/random_uniform/max"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/layer_19_1_Conv2d_5_1x1_64/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.1369306445121765
      }
    }
  }
}
node {
  name: "ssd300/layer_19_1_Conv2d_5_1x1_64/weights/Initializer/random_uniform/RandomUniform"
  op: "RandomUniform"
  input: "ssd300/layer_19_1_Conv2d_5_1x1_64/weights/Initializer/random_uniform/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/layer_19_1_Conv2d_5_1x1_64/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "ssd300/layer_19_1_Conv2d_5_1x1_64/weights/Initializer/random_uniform/sub"
  op: "Sub"
  input: "ssd300/layer_19_1_Conv2d_5_1x1_64/weights/Initializer/random_uniform/max"
  input: "ssd300/layer_19_1_Conv2d_5_1x1_64/weights/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/layer_19_1_Conv2d_5_1x1_64/weights"
      }
    }
  }
}
node {
  name: "ssd300/layer_19_1_Conv2d_5_1x1_64/weights/Initializer/random_uniform/mul"
  op: "Mul"
  input: "ssd300/layer_19_1_Conv2d_5_1x1_64/weights/Initializer/random_uniform/RandomUniform"
  input: "ssd300/layer_19_1_Conv2d_5_1x1_64/weights/Initializer/random_uniform/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/layer_19_1_Conv2d_5_1x1_64/weights"
      }
    }
  }
}
node {
  name: "ssd300/layer_19_1_Conv2d_5_1x1_64/weights/Initializer/random_uniform"
  op: "Add"
  input: "ssd300/layer_19_1_Conv2d_5_1x1_64/weights/Initializer/random_uniform/mul"
  input: "ssd300/layer_19_1_Conv2d_5_1x1_64/weights/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/layer_19_1_Conv2d_5_1x1_64/weights"
      }
    }
  }
}
node {
  name: "ssd300/layer_19_1_Conv2d_5_1x1_64/weights"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/layer_19_1_Conv2d_5_1x1_64/weights"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
        dim {
          size: 1
        }
        dim {
          size: 256
        }
        dim {
          size: 64
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "ssd300/layer_19_1_Conv2d_5_1x1_64/weights/Assign"
  op: "Assign"
  input: "ssd300/layer_19_1_Conv2d_5_1x1_64/weights"
  input: "ssd300/layer_19_1_Conv2d_5_1x1_64/weights/Initializer/random_uniform"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/layer_19_1_Conv2d_5_1x1_64/weights"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "ssd300/layer_19_1_Conv2d_5_1x1_64/weights/read"
  op: "Identity"
  input: "ssd300/layer_19_1_Conv2d_5_1x1_64/weights"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/layer_19_1_Conv2d_5_1x1_64/weights"
      }
    }
  }
}
node {
  name: "ssd300/layer_19_1_Conv2d_5_1x1_64/layer_conv2d/Conv2D"
  op: "Conv2D"
  input: "ssd300/layer_19_2_Conv2d_4_3x3_s2_256/Relu6"
  input: "ssd300/layer_19_1_Conv2d_5_1x1_64/weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NCHW"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "explicit_paddings"
    value {
      list {
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "ssd300/layer_19_1_Conv2d_5_1x1_64/BatchNorm/beta/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/layer_19_1_Conv2d_5_1x1_64/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 64
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "ssd300/layer_19_1_Conv2d_5_1x1_64/BatchNorm/beta"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/layer_19_1_Conv2d_5_1x1_64/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 64
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "ssd300/layer_19_1_Conv2d_5_1x1_64/BatchNorm/beta/Assign"
  op: "Assign"
  input: "ssd300/layer_19_1_Conv2d_5_1x1_64/BatchNorm/beta"
  input: "ssd300/layer_19_1_Conv2d_5_1x1_64/BatchNorm/beta/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/layer_19_1_Conv2d_5_1x1_64/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "ssd300/layer_19_1_Conv2d_5_1x1_64/BatchNorm/beta/read"
  op: "Identity"
  input: "ssd300/layer_19_1_Conv2d_5_1x1_64/BatchNorm/beta"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/layer_19_1_Conv2d_5_1x1_64/BatchNorm/beta"
      }
    }
  }
}
node {
  name: "ssd300/layer_19_1_Conv2d_5_1x1_64/BatchNorm/moving_mean/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/layer_19_1_Conv2d_5_1x1_64/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 64
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "ssd300/layer_19_1_Conv2d_5_1x1_64/BatchNorm/moving_mean"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/layer_19_1_Conv2d_5_1x1_64/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 64
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "ssd300/layer_19_1_Conv2d_5_1x1_64/BatchNorm/moving_mean/Assign"
  op: "Assign"
  input: "ssd300/layer_19_1_Conv2d_5_1x1_64/BatchNorm/moving_mean"
  input: "ssd300/layer_19_1_Conv2d_5_1x1_64/BatchNorm/moving_mean/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/layer_19_1_Conv2d_5_1x1_64/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "ssd300/layer_19_1_Conv2d_5_1x1_64/BatchNorm/moving_mean/read"
  op: "Identity"
  input: "ssd300/layer_19_1_Conv2d_5_1x1_64/BatchNorm/moving_mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/layer_19_1_Conv2d_5_1x1_64/BatchNorm/moving_mean"
      }
    }
  }
}
node {
  name: "ssd300/layer_19_1_Conv2d_5_1x1_64/BatchNorm/moving_variance/Initializer/ones"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/layer_19_1_Conv2d_5_1x1_64/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 64
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "ssd300/layer_19_1_Conv2d_5_1x1_64/BatchNorm/moving_variance"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/layer_19_1_Conv2d_5_1x1_64/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 64
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "ssd300/layer_19_1_Conv2d_5_1x1_64/BatchNorm/moving_variance/Assign"
  op: "Assign"
  input: "ssd300/layer_19_1_Conv2d_5_1x1_64/BatchNorm/moving_variance"
  input: "ssd300/layer_19_1_Conv2d_5_1x1_64/BatchNorm/moving_variance/Initializer/ones"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/layer_19_1_Conv2d_5_1x1_64/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "ssd300/layer_19_1_Conv2d_5_1x1_64/BatchNorm/moving_variance/read"
  op: "Identity"
  input: "ssd300/layer_19_1_Conv2d_5_1x1_64/BatchNorm/moving_variance"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/layer_19_1_Conv2d_5_1x1_64/BatchNorm/moving_variance"
      }
    }
  }
}
node {
  name: "ssd300/layer_19_1_Conv2d_5_1x1_64/BatchNorm/Reshape/shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000@\000\000\000\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "ssd300/layer_19_1_Conv2d_5_1x1_64/BatchNorm/Reshape"
  op: "Reshape"
  input: "ssd300/layer_19_1_Conv2d_5_1x1_64/BatchNorm/beta/read"
  input: "ssd300/layer_19_1_Conv2d_5_1x1_64/BatchNorm/Reshape/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "ssd300/layer_19_1_Conv2d_5_1x1_64/BatchNorm/Reshape_1/shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000@\000\000\000\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "ssd300/layer_19_1_Conv2d_5_1x1_64/BatchNorm/Reshape_1"
  op: "Reshape"
  input: "ssd300/layer_19_1_Conv2d_5_1x1_64/BatchNorm/moving_mean/read"
  input: "ssd300/layer_19_1_Conv2d_5_1x1_64/BatchNorm/Reshape_1/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "ssd300/layer_19_1_Conv2d_5_1x1_64/BatchNorm/Reshape_2/shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000@\000\000\000\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "ssd300/layer_19_1_Conv2d_5_1x1_64/BatchNorm/Reshape_2"
  op: "Reshape"
  input: "ssd300/layer_19_1_Conv2d_5_1x1_64/BatchNorm/moving_variance/read"
  input: "ssd300/layer_19_1_Conv2d_5_1x1_64/BatchNorm/Reshape_2/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "ssd300/layer_19_1_Conv2d_5_1x1_64/BatchNorm/batchnorm_1/Add/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0010000000474974513
      }
    }
  }
}
node {
  name: "ssd300/layer_19_1_Conv2d_5_1x1_64/BatchNorm/batchnorm_1/Add"
  op: "Add"
  input: "ssd300/layer_19_1_Conv2d_5_1x1_64/BatchNorm/Reshape_2"
  input: "ssd300/layer_19_1_Conv2d_5_1x1_64/BatchNorm/batchnorm_1/Add/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ssd300/layer_19_1_Conv2d_5_1x1_64/BatchNorm/batchnorm_1/Rsqrt"
  op: "Rsqrt"
  input: "ssd300/layer_19_1_Conv2d_5_1x1_64/BatchNorm/batchnorm_1/Add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ssd300/layer_19_1_Conv2d_5_1x1_64/BatchNorm/batchnorm_1/mul"
  op: "Mul"
  input: "ssd300/layer_19_1_Conv2d_5_1x1_64/layer_conv2d/Conv2D"
  input: "ssd300/layer_19_1_Conv2d_5_1x1_64/BatchNorm/batchnorm_1/Rsqrt"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ssd300/layer_19_1_Conv2d_5_1x1_64/BatchNorm/batchnorm_1/mul_1"
  op: "Mul"
  input: "ssd300/layer_19_1_Conv2d_5_1x1_64/BatchNorm/Reshape_1"
  input: "ssd300/layer_19_1_Conv2d_5_1x1_64/BatchNorm/batchnorm_1/Rsqrt"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ssd300/layer_19_1_Conv2d_5_1x1_64/BatchNorm/batchnorm_1/sub"
  op: "Sub"
  input: "ssd300/layer_19_1_Conv2d_5_1x1_64/BatchNorm/Reshape"
  input: "ssd300/layer_19_1_Conv2d_5_1x1_64/BatchNorm/batchnorm_1/mul_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ssd300/layer_19_1_Conv2d_5_1x1_64/BatchNorm/batchnorm_1/Add_1"
  op: "Add"
  input: "ssd300/layer_19_1_Conv2d_5_1x1_64/BatchNorm/batchnorm_1/mul"
  input: "ssd300/layer_19_1_Conv2d_5_1x1_64/BatchNorm/batchnorm_1/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ssd300/layer_19_1_Conv2d_5_1x1_64/Relu6"
  op: "Relu6"
  input: "ssd300/layer_19_1_Conv2d_5_1x1_64/BatchNorm/batchnorm_1/Add_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ssd300/layer_19_2_Conv2d_5_3x3_s2_128_depthwise/depthwise_weights/Initializer/random_uniform/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/layer_19_2_Conv2d_5_3x3_s2_128_depthwise/depthwise_weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\003\000\000\000\003\000\000\000@\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "ssd300/layer_19_2_Conv2d_5_3x3_s2_128_depthwise/depthwise_weights/Initializer/random_uniform/min"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/layer_19_2_Conv2d_5_3x3_s2_128_depthwise/depthwise_weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: -0.10127393901348114
      }
    }
  }
}
node {
  name: "ssd300/layer_19_2_Conv2d_5_3x3_s2_128_depthwise/depthwise_weights/Initializer/random_uniform/max"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/layer_19_2_Conv2d_5_3x3_s2_128_depthwise/depthwise_weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.10127393901348114
      }
    }
  }
}
node {
  name: "ssd300/layer_19_2_Conv2d_5_3x3_s2_128_depthwise/depthwise_weights/Initializer/random_uniform/RandomUniform"
  op: "RandomUniform"
  input: "ssd300/layer_19_2_Conv2d_5_3x3_s2_128_depthwise/depthwise_weights/Initializer/random_uniform/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/layer_19_2_Conv2d_5_3x3_s2_128_depthwise/depthwise_weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "ssd300/layer_19_2_Conv2d_5_3x3_s2_128_depthwise/depthwise_weights/Initializer/random_uniform/sub"
  op: "Sub"
  input: "ssd300/layer_19_2_Conv2d_5_3x3_s2_128_depthwise/depthwise_weights/Initializer/random_uniform/max"
  input: "ssd300/layer_19_2_Conv2d_5_3x3_s2_128_depthwise/depthwise_weights/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/layer_19_2_Conv2d_5_3x3_s2_128_depthwise/depthwise_weights"
      }
    }
  }
}
node {
  name: "ssd300/layer_19_2_Conv2d_5_3x3_s2_128_depthwise/depthwise_weights/Initializer/random_uniform/mul"
  op: "Mul"
  input: "ssd300/layer_19_2_Conv2d_5_3x3_s2_128_depthwise/depthwise_weights/Initializer/random_uniform/RandomUniform"
  input: "ssd300/layer_19_2_Conv2d_5_3x3_s2_128_depthwise/depthwise_weights/Initializer/random_uniform/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/layer_19_2_Conv2d_5_3x3_s2_128_depthwise/depthwise_weights"
      }
    }
  }
}
node {
  name: "ssd300/layer_19_2_Conv2d_5_3x3_s2_128_depthwise/depthwise_weights/Initializer/random_uniform"
  op: "Add"
  input: "ssd300/layer_19_2_Conv2d_5_3x3_s2_128_depthwise/depthwise_weights/Initializer/random_uniform/mul"
  input: "ssd300/layer_19_2_Conv2d_5_3x3_s2_128_depthwise/depthwise_weights/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/layer_19_2_Conv2d_5_3x3_s2_128_depthwise/depthwise_weights"
      }
    }
  }
}
node {
  name: "ssd300/layer_19_2_Conv2d_5_3x3_s2_128_depthwise/depthwise_weights"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/layer_19_2_Conv2d_5_3x3_s2_128_depthwise/depthwise_weights"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 3
        }
        dim {
          size: 3
        }
        dim {
          size: 64
        }
        dim {
          size: 1
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "ssd300/layer_19_2_Conv2d_5_3x3_s2_128_depthwise/depthwise_weights/Assign"
  op: "Assign"
  input: "ssd300/layer_19_2_Conv2d_5_3x3_s2_128_depthwise/depthwise_weights"
  input: "ssd300/layer_19_2_Conv2d_5_3x3_s2_128_depthwise/depthwise_weights/Initializer/random_uniform"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/layer_19_2_Conv2d_5_3x3_s2_128_depthwise/depthwise_weights"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "ssd300/layer_19_2_Conv2d_5_3x3_s2_128_depthwise/depthwise_weights/read"
  op: "Identity"
  input: "ssd300/layer_19_2_Conv2d_5_3x3_s2_128_depthwise/depthwise_weights"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/layer_19_2_Conv2d_5_3x3_s2_128_depthwise/depthwise_weights"
      }
    }
  }
}
node {
  name: "ssd300/layer_19_2_Conv2d_5_3x3_s2_128_depthwise/layer_conv2d/depthwise/Shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\003\000\000\000\003\000\000\000@\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "ssd300/layer_19_2_Conv2d_5_3x3_s2_128_depthwise/layer_conv2d/depthwise/dilation_rate"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "ssd300/layer_19_2_Conv2d_5_3x3_s2_128_depthwise/layer_conv2d/depthwise"
  op: "DepthwiseConv2dNative"
  input: "ssd300/layer_19_1_Conv2d_5_1x1_64/Relu6"
  input: "ssd300/layer_19_2_Conv2d_5_3x3_s2_128_depthwise/depthwise_weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NCHW"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 2
        i: 2
      }
    }
  }
}
node {
  name: "ssd300/layer_19_2_Conv2d_5_3x3_s2_128_depthwise/BatchNorm/beta/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/layer_19_2_Conv2d_5_3x3_s2_128_depthwise/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 64
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "ssd300/layer_19_2_Conv2d_5_3x3_s2_128_depthwise/BatchNorm/beta"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/layer_19_2_Conv2d_5_3x3_s2_128_depthwise/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 64
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "ssd300/layer_19_2_Conv2d_5_3x3_s2_128_depthwise/BatchNorm/beta/Assign"
  op: "Assign"
  input: "ssd300/layer_19_2_Conv2d_5_3x3_s2_128_depthwise/BatchNorm/beta"
  input: "ssd300/layer_19_2_Conv2d_5_3x3_s2_128_depthwise/BatchNorm/beta/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/layer_19_2_Conv2d_5_3x3_s2_128_depthwise/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "ssd300/layer_19_2_Conv2d_5_3x3_s2_128_depthwise/BatchNorm/beta/read"
  op: "Identity"
  input: "ssd300/layer_19_2_Conv2d_5_3x3_s2_128_depthwise/BatchNorm/beta"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/layer_19_2_Conv2d_5_3x3_s2_128_depthwise/BatchNorm/beta"
      }
    }
  }
}
node {
  name: "ssd300/layer_19_2_Conv2d_5_3x3_s2_128_depthwise/BatchNorm/moving_mean/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/layer_19_2_Conv2d_5_3x3_s2_128_depthwise/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 64
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "ssd300/layer_19_2_Conv2d_5_3x3_s2_128_depthwise/BatchNorm/moving_mean"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/layer_19_2_Conv2d_5_3x3_s2_128_depthwise/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 64
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "ssd300/layer_19_2_Conv2d_5_3x3_s2_128_depthwise/BatchNorm/moving_mean/Assign"
  op: "Assign"
  input: "ssd300/layer_19_2_Conv2d_5_3x3_s2_128_depthwise/BatchNorm/moving_mean"
  input: "ssd300/layer_19_2_Conv2d_5_3x3_s2_128_depthwise/BatchNorm/moving_mean/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/layer_19_2_Conv2d_5_3x3_s2_128_depthwise/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "ssd300/layer_19_2_Conv2d_5_3x3_s2_128_depthwise/BatchNorm/moving_mean/read"
  op: "Identity"
  input: "ssd300/layer_19_2_Conv2d_5_3x3_s2_128_depthwise/BatchNorm/moving_mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/layer_19_2_Conv2d_5_3x3_s2_128_depthwise/BatchNorm/moving_mean"
      }
    }
  }
}
node {
  name: "ssd300/layer_19_2_Conv2d_5_3x3_s2_128_depthwise/BatchNorm/moving_variance/Initializer/ones"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/layer_19_2_Conv2d_5_3x3_s2_128_depthwise/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 64
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "ssd300/layer_19_2_Conv2d_5_3x3_s2_128_depthwise/BatchNorm/moving_variance"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/layer_19_2_Conv2d_5_3x3_s2_128_depthwise/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 64
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "ssd300/layer_19_2_Conv2d_5_3x3_s2_128_depthwise/BatchNorm/moving_variance/Assign"
  op: "Assign"
  input: "ssd300/layer_19_2_Conv2d_5_3x3_s2_128_depthwise/BatchNorm/moving_variance"
  input: "ssd300/layer_19_2_Conv2d_5_3x3_s2_128_depthwise/BatchNorm/moving_variance/Initializer/ones"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/layer_19_2_Conv2d_5_3x3_s2_128_depthwise/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "ssd300/layer_19_2_Conv2d_5_3x3_s2_128_depthwise/BatchNorm/moving_variance/read"
  op: "Identity"
  input: "ssd300/layer_19_2_Conv2d_5_3x3_s2_128_depthwise/BatchNorm/moving_variance"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/layer_19_2_Conv2d_5_3x3_s2_128_depthwise/BatchNorm/moving_variance"
      }
    }
  }
}
node {
  name: "ssd300/layer_19_2_Conv2d_5_3x3_s2_128_depthwise/BatchNorm/Reshape/shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000@\000\000\000\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "ssd300/layer_19_2_Conv2d_5_3x3_s2_128_depthwise/BatchNorm/Reshape"
  op: "Reshape"
  input: "ssd300/layer_19_2_Conv2d_5_3x3_s2_128_depthwise/BatchNorm/beta/read"
  input: "ssd300/layer_19_2_Conv2d_5_3x3_s2_128_depthwise/BatchNorm/Reshape/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "ssd300/layer_19_2_Conv2d_5_3x3_s2_128_depthwise/BatchNorm/Reshape_1/shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000@\000\000\000\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "ssd300/layer_19_2_Conv2d_5_3x3_s2_128_depthwise/BatchNorm/Reshape_1"
  op: "Reshape"
  input: "ssd300/layer_19_2_Conv2d_5_3x3_s2_128_depthwise/BatchNorm/moving_mean/read"
  input: "ssd300/layer_19_2_Conv2d_5_3x3_s2_128_depthwise/BatchNorm/Reshape_1/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "ssd300/layer_19_2_Conv2d_5_3x3_s2_128_depthwise/BatchNorm/Reshape_2/shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000@\000\000\000\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "ssd300/layer_19_2_Conv2d_5_3x3_s2_128_depthwise/BatchNorm/Reshape_2"
  op: "Reshape"
  input: "ssd300/layer_19_2_Conv2d_5_3x3_s2_128_depthwise/BatchNorm/moving_variance/read"
  input: "ssd300/layer_19_2_Conv2d_5_3x3_s2_128_depthwise/BatchNorm/Reshape_2/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "ssd300/layer_19_2_Conv2d_5_3x3_s2_128_depthwise/BatchNorm/batchnorm_1/Add/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0010000000474974513
      }
    }
  }
}
node {
  name: "ssd300/layer_19_2_Conv2d_5_3x3_s2_128_depthwise/BatchNorm/batchnorm_1/Add"
  op: "Add"
  input: "ssd300/layer_19_2_Conv2d_5_3x3_s2_128_depthwise/BatchNorm/Reshape_2"
  input: "ssd300/layer_19_2_Conv2d_5_3x3_s2_128_depthwise/BatchNorm/batchnorm_1/Add/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ssd300/layer_19_2_Conv2d_5_3x3_s2_128_depthwise/BatchNorm/batchnorm_1/Rsqrt"
  op: "Rsqrt"
  input: "ssd300/layer_19_2_Conv2d_5_3x3_s2_128_depthwise/BatchNorm/batchnorm_1/Add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ssd300/layer_19_2_Conv2d_5_3x3_s2_128_depthwise/BatchNorm/batchnorm_1/mul"
  op: "Mul"
  input: "ssd300/layer_19_2_Conv2d_5_3x3_s2_128_depthwise/layer_conv2d/depthwise"
  input: "ssd300/layer_19_2_Conv2d_5_3x3_s2_128_depthwise/BatchNorm/batchnorm_1/Rsqrt"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ssd300/layer_19_2_Conv2d_5_3x3_s2_128_depthwise/BatchNorm/batchnorm_1/mul_1"
  op: "Mul"
  input: "ssd300/layer_19_2_Conv2d_5_3x3_s2_128_depthwise/BatchNorm/Reshape_1"
  input: "ssd300/layer_19_2_Conv2d_5_3x3_s2_128_depthwise/BatchNorm/batchnorm_1/Rsqrt"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ssd300/layer_19_2_Conv2d_5_3x3_s2_128_depthwise/BatchNorm/batchnorm_1/sub"
  op: "Sub"
  input: "ssd300/layer_19_2_Conv2d_5_3x3_s2_128_depthwise/BatchNorm/Reshape"
  input: "ssd300/layer_19_2_Conv2d_5_3x3_s2_128_depthwise/BatchNorm/batchnorm_1/mul_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ssd300/layer_19_2_Conv2d_5_3x3_s2_128_depthwise/BatchNorm/batchnorm_1/Add_1"
  op: "Add"
  input: "ssd300/layer_19_2_Conv2d_5_3x3_s2_128_depthwise/BatchNorm/batchnorm_1/mul"
  input: "ssd300/layer_19_2_Conv2d_5_3x3_s2_128_depthwise/BatchNorm/batchnorm_1/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ssd300/layer_19_2_Conv2d_5_3x3_s2_128_depthwise/Relu6"
  op: "Relu6"
  input: "ssd300/layer_19_2_Conv2d_5_3x3_s2_128_depthwise/BatchNorm/batchnorm_1/Add_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ssd300/layer_19_2_Conv2d_5_3x3_s2_128/weights/Initializer/random_uniform/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/layer_19_2_Conv2d_5_3x3_s2_128/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000@\000\000\000\200\000\000\000"
      }
    }
  }
}
node {
  name: "ssd300/layer_19_2_Conv2d_5_3x3_s2_128/weights/Initializer/random_uniform/min"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/layer_19_2_Conv2d_5_3x3_s2_128/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: -0.1767766922712326
      }
    }
  }
}
node {
  name: "ssd300/layer_19_2_Conv2d_5_3x3_s2_128/weights/Initializer/random_uniform/max"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/layer_19_2_Conv2d_5_3x3_s2_128/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.1767766922712326
      }
    }
  }
}
node {
  name: "ssd300/layer_19_2_Conv2d_5_3x3_s2_128/weights/Initializer/random_uniform/RandomUniform"
  op: "RandomUniform"
  input: "ssd300/layer_19_2_Conv2d_5_3x3_s2_128/weights/Initializer/random_uniform/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/layer_19_2_Conv2d_5_3x3_s2_128/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "ssd300/layer_19_2_Conv2d_5_3x3_s2_128/weights/Initializer/random_uniform/sub"
  op: "Sub"
  input: "ssd300/layer_19_2_Conv2d_5_3x3_s2_128/weights/Initializer/random_uniform/max"
  input: "ssd300/layer_19_2_Conv2d_5_3x3_s2_128/weights/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/layer_19_2_Conv2d_5_3x3_s2_128/weights"
      }
    }
  }
}
node {
  name: "ssd300/layer_19_2_Conv2d_5_3x3_s2_128/weights/Initializer/random_uniform/mul"
  op: "Mul"
  input: "ssd300/layer_19_2_Conv2d_5_3x3_s2_128/weights/Initializer/random_uniform/RandomUniform"
  input: "ssd300/layer_19_2_Conv2d_5_3x3_s2_128/weights/Initializer/random_uniform/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/layer_19_2_Conv2d_5_3x3_s2_128/weights"
      }
    }
  }
}
node {
  name: "ssd300/layer_19_2_Conv2d_5_3x3_s2_128/weights/Initializer/random_uniform"
  op: "Add"
  input: "ssd300/layer_19_2_Conv2d_5_3x3_s2_128/weights/Initializer/random_uniform/mul"
  input: "ssd300/layer_19_2_Conv2d_5_3x3_s2_128/weights/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/layer_19_2_Conv2d_5_3x3_s2_128/weights"
      }
    }
  }
}
node {
  name: "ssd300/layer_19_2_Conv2d_5_3x3_s2_128/weights"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/layer_19_2_Conv2d_5_3x3_s2_128/weights"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
        dim {
          size: 1
        }
        dim {
          size: 64
        }
        dim {
          size: 128
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "ssd300/layer_19_2_Conv2d_5_3x3_s2_128/weights/Assign"
  op: "Assign"
  input: "ssd300/layer_19_2_Conv2d_5_3x3_s2_128/weights"
  input: "ssd300/layer_19_2_Conv2d_5_3x3_s2_128/weights/Initializer/random_uniform"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/layer_19_2_Conv2d_5_3x3_s2_128/weights"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "ssd300/layer_19_2_Conv2d_5_3x3_s2_128/weights/read"
  op: "Identity"
  input: "ssd300/layer_19_2_Conv2d_5_3x3_s2_128/weights"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/layer_19_2_Conv2d_5_3x3_s2_128/weights"
      }
    }
  }
}
node {
  name: "ssd300/layer_19_2_Conv2d_5_3x3_s2_128/layer_conv2d/Conv2D"
  op: "Conv2D"
  input: "ssd300/layer_19_2_Conv2d_5_3x3_s2_128_depthwise/Relu6"
  input: "ssd300/layer_19_2_Conv2d_5_3x3_s2_128/weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NCHW"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "explicit_paddings"
    value {
      list {
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "ssd300/layer_19_2_Conv2d_5_3x3_s2_128/BatchNorm/beta/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/layer_19_2_Conv2d_5_3x3_s2_128/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 128
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "ssd300/layer_19_2_Conv2d_5_3x3_s2_128/BatchNorm/beta"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/layer_19_2_Conv2d_5_3x3_s2_128/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 128
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "ssd300/layer_19_2_Conv2d_5_3x3_s2_128/BatchNorm/beta/Assign"
  op: "Assign"
  input: "ssd300/layer_19_2_Conv2d_5_3x3_s2_128/BatchNorm/beta"
  input: "ssd300/layer_19_2_Conv2d_5_3x3_s2_128/BatchNorm/beta/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/layer_19_2_Conv2d_5_3x3_s2_128/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "ssd300/layer_19_2_Conv2d_5_3x3_s2_128/BatchNorm/beta/read"
  op: "Identity"
  input: "ssd300/layer_19_2_Conv2d_5_3x3_s2_128/BatchNorm/beta"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/layer_19_2_Conv2d_5_3x3_s2_128/BatchNorm/beta"
      }
    }
  }
}
node {
  name: "ssd300/layer_19_2_Conv2d_5_3x3_s2_128/BatchNorm/moving_mean/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/layer_19_2_Conv2d_5_3x3_s2_128/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 128
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "ssd300/layer_19_2_Conv2d_5_3x3_s2_128/BatchNorm/moving_mean"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/layer_19_2_Conv2d_5_3x3_s2_128/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 128
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "ssd300/layer_19_2_Conv2d_5_3x3_s2_128/BatchNorm/moving_mean/Assign"
  op: "Assign"
  input: "ssd300/layer_19_2_Conv2d_5_3x3_s2_128/BatchNorm/moving_mean"
  input: "ssd300/layer_19_2_Conv2d_5_3x3_s2_128/BatchNorm/moving_mean/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/layer_19_2_Conv2d_5_3x3_s2_128/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "ssd300/layer_19_2_Conv2d_5_3x3_s2_128/BatchNorm/moving_mean/read"
  op: "Identity"
  input: "ssd300/layer_19_2_Conv2d_5_3x3_s2_128/BatchNorm/moving_mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/layer_19_2_Conv2d_5_3x3_s2_128/BatchNorm/moving_mean"
      }
    }
  }
}
node {
  name: "ssd300/layer_19_2_Conv2d_5_3x3_s2_128/BatchNorm/moving_variance/Initializer/ones"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/layer_19_2_Conv2d_5_3x3_s2_128/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 128
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "ssd300/layer_19_2_Conv2d_5_3x3_s2_128/BatchNorm/moving_variance"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/layer_19_2_Conv2d_5_3x3_s2_128/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 128
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "ssd300/layer_19_2_Conv2d_5_3x3_s2_128/BatchNorm/moving_variance/Assign"
  op: "Assign"
  input: "ssd300/layer_19_2_Conv2d_5_3x3_s2_128/BatchNorm/moving_variance"
  input: "ssd300/layer_19_2_Conv2d_5_3x3_s2_128/BatchNorm/moving_variance/Initializer/ones"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/layer_19_2_Conv2d_5_3x3_s2_128/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "ssd300/layer_19_2_Conv2d_5_3x3_s2_128/BatchNorm/moving_variance/read"
  op: "Identity"
  input: "ssd300/layer_19_2_Conv2d_5_3x3_s2_128/BatchNorm/moving_variance"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/layer_19_2_Conv2d_5_3x3_s2_128/BatchNorm/moving_variance"
      }
    }
  }
}
node {
  name: "ssd300/layer_19_2_Conv2d_5_3x3_s2_128/BatchNorm/Reshape/shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\200\000\000\000\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "ssd300/layer_19_2_Conv2d_5_3x3_s2_128/BatchNorm/Reshape"
  op: "Reshape"
  input: "ssd300/layer_19_2_Conv2d_5_3x3_s2_128/BatchNorm/beta/read"
  input: "ssd300/layer_19_2_Conv2d_5_3x3_s2_128/BatchNorm/Reshape/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "ssd300/layer_19_2_Conv2d_5_3x3_s2_128/BatchNorm/Reshape_1/shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\200\000\000\000\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "ssd300/layer_19_2_Conv2d_5_3x3_s2_128/BatchNorm/Reshape_1"
  op: "Reshape"
  input: "ssd300/layer_19_2_Conv2d_5_3x3_s2_128/BatchNorm/moving_mean/read"
  input: "ssd300/layer_19_2_Conv2d_5_3x3_s2_128/BatchNorm/Reshape_1/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "ssd300/layer_19_2_Conv2d_5_3x3_s2_128/BatchNorm/Reshape_2/shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\200\000\000\000\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "ssd300/layer_19_2_Conv2d_5_3x3_s2_128/BatchNorm/Reshape_2"
  op: "Reshape"
  input: "ssd300/layer_19_2_Conv2d_5_3x3_s2_128/BatchNorm/moving_variance/read"
  input: "ssd300/layer_19_2_Conv2d_5_3x3_s2_128/BatchNorm/Reshape_2/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "ssd300/layer_19_2_Conv2d_5_3x3_s2_128/BatchNorm/batchnorm_1/Add/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0010000000474974513
      }
    }
  }
}
node {
  name: "ssd300/layer_19_2_Conv2d_5_3x3_s2_128/BatchNorm/batchnorm_1/Add"
  op: "Add"
  input: "ssd300/layer_19_2_Conv2d_5_3x3_s2_128/BatchNorm/Reshape_2"
  input: "ssd300/layer_19_2_Conv2d_5_3x3_s2_128/BatchNorm/batchnorm_1/Add/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ssd300/layer_19_2_Conv2d_5_3x3_s2_128/BatchNorm/batchnorm_1/Rsqrt"
  op: "Rsqrt"
  input: "ssd300/layer_19_2_Conv2d_5_3x3_s2_128/BatchNorm/batchnorm_1/Add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ssd300/layer_19_2_Conv2d_5_3x3_s2_128/BatchNorm/batchnorm_1/mul"
  op: "Mul"
  input: "ssd300/layer_19_2_Conv2d_5_3x3_s2_128/layer_conv2d/Conv2D"
  input: "ssd300/layer_19_2_Conv2d_5_3x3_s2_128/BatchNorm/batchnorm_1/Rsqrt"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ssd300/layer_19_2_Conv2d_5_3x3_s2_128/BatchNorm/batchnorm_1/mul_1"
  op: "Mul"
  input: "ssd300/layer_19_2_Conv2d_5_3x3_s2_128/BatchNorm/Reshape_1"
  input: "ssd300/layer_19_2_Conv2d_5_3x3_s2_128/BatchNorm/batchnorm_1/Rsqrt"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ssd300/layer_19_2_Conv2d_5_3x3_s2_128/BatchNorm/batchnorm_1/sub"
  op: "Sub"
  input: "ssd300/layer_19_2_Conv2d_5_3x3_s2_128/BatchNorm/Reshape"
  input: "ssd300/layer_19_2_Conv2d_5_3x3_s2_128/BatchNorm/batchnorm_1/mul_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ssd300/layer_19_2_Conv2d_5_3x3_s2_128/BatchNorm/batchnorm_1/Add_1"
  op: "Add"
  input: "ssd300/layer_19_2_Conv2d_5_3x3_s2_128/BatchNorm/batchnorm_1/mul"
  input: "ssd300/layer_19_2_Conv2d_5_3x3_s2_128/BatchNorm/batchnorm_1/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ssd300/layer_19_2_Conv2d_5_3x3_s2_128/Relu6"
  op: "Relu6"
  input: "ssd300/layer_19_2_Conv2d_5_3x3_s2_128/BatchNorm/batchnorm_1/Add_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ssd300/multibox_head/loc_0/kernel/Initializer/random_uniform/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/multibox_head/loc_0/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\003\000\000\000\003\000\000\000`\000\000\000\020\000\000\000"
      }
    }
  }
}
node {
  name: "ssd300/multibox_head/loc_0/kernel/Initializer/random_uniform/min"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/multibox_head/loc_0/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: -0.07715167850255966
      }
    }
  }
}
node {
  name: "ssd300/multibox_head/loc_0/kernel/Initializer/random_uniform/max"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/multibox_head/loc_0/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.07715167850255966
      }
    }
  }
}
node {
  name: "ssd300/multibox_head/loc_0/kernel/Initializer/random_uniform/RandomUniform"
  op: "RandomUniform"
  input: "ssd300/multibox_head/loc_0/kernel/Initializer/random_uniform/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/multibox_head/loc_0/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "ssd300/multibox_head/loc_0/kernel/Initializer/random_uniform/sub"
  op: "Sub"
  input: "ssd300/multibox_head/loc_0/kernel/Initializer/random_uniform/max"
  input: "ssd300/multibox_head/loc_0/kernel/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/multibox_head/loc_0/kernel"
      }
    }
  }
}
node {
  name: "ssd300/multibox_head/loc_0/kernel/Initializer/random_uniform/mul"
  op: "Mul"
  input: "ssd300/multibox_head/loc_0/kernel/Initializer/random_uniform/RandomUniform"
  input: "ssd300/multibox_head/loc_0/kernel/Initializer/random_uniform/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/multibox_head/loc_0/kernel"
      }
    }
  }
}
node {
  name: "ssd300/multibox_head/loc_0/kernel/Initializer/random_uniform"
  op: "Add"
  input: "ssd300/multibox_head/loc_0/kernel/Initializer/random_uniform/mul"
  input: "ssd300/multibox_head/loc_0/kernel/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/multibox_head/loc_0/kernel"
      }
    }
  }
}
node {
  name: "ssd300/multibox_head/loc_0/kernel"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/multibox_head/loc_0/kernel"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 3
        }
        dim {
          size: 3
        }
        dim {
          size: 96
        }
        dim {
          size: 16
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "ssd300/multibox_head/loc_0/kernel/Assign"
  op: "Assign"
  input: "ssd300/multibox_head/loc_0/kernel"
  input: "ssd300/multibox_head/loc_0/kernel/Initializer/random_uniform"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/multibox_head/loc_0/kernel"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "ssd300/multibox_head/loc_0/kernel/read"
  op: "Identity"
  input: "ssd300/multibox_head/loc_0/kernel"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/multibox_head/loc_0/kernel"
      }
    }
  }
}
node {
  name: "ssd300/multibox_head/loc_0/bias/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/multibox_head/loc_0/bias"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 16
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "ssd300/multibox_head/loc_0/bias"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/multibox_head/loc_0/bias"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 16
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "ssd300/multibox_head/loc_0/bias/Assign"
  op: "Assign"
  input: "ssd300/multibox_head/loc_0/bias"
  input: "ssd300/multibox_head/loc_0/bias/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/multibox_head/loc_0/bias"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "ssd300/multibox_head/loc_0/bias/read"
  op: "Identity"
  input: "ssd300/multibox_head/loc_0/bias"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/multibox_head/loc_0/bias"
      }
    }
  }
}
node {
  name: "ssd300/multibox_head/loc_0/dilation_rate"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "ssd300/multibox_head/loc_0/Conv2D"
  op: "Conv2D"
  input: "ssd300/expanded_conv_12/Add"
  input: "ssd300/multibox_head/loc_0/kernel/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NCHW"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "explicit_paddings"
    value {
      list {
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "ssd300/multibox_head/loc_0/BiasAdd"
  op: "BiasAdd"
  input: "ssd300/multibox_head/loc_0/Conv2D"
  input: "ssd300/multibox_head/loc_0/bias/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NCHW"
    }
  }
}
node {
  name: "ssd300/multibox_head/cls_0/kernel/Initializer/random_uniform/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/multibox_head/cls_0/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\003\000\000\000\003\000\000\000`\000\000\000\010\000\000\000"
      }
    }
  }
}
node {
  name: "ssd300/multibox_head/cls_0/kernel/Initializer/random_uniform/min"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/multibox_head/cls_0/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: -0.0800640732049942
      }
    }
  }
}
node {
  name: "ssd300/multibox_head/cls_0/kernel/Initializer/random_uniform/max"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/multibox_head/cls_0/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0800640732049942
      }
    }
  }
}
node {
  name: "ssd300/multibox_head/cls_0/kernel/Initializer/random_uniform/RandomUniform"
  op: "RandomUniform"
  input: "ssd300/multibox_head/cls_0/kernel/Initializer/random_uniform/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/multibox_head/cls_0/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "ssd300/multibox_head/cls_0/kernel/Initializer/random_uniform/sub"
  op: "Sub"
  input: "ssd300/multibox_head/cls_0/kernel/Initializer/random_uniform/max"
  input: "ssd300/multibox_head/cls_0/kernel/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/multibox_head/cls_0/kernel"
      }
    }
  }
}
node {
  name: "ssd300/multibox_head/cls_0/kernel/Initializer/random_uniform/mul"
  op: "Mul"
  input: "ssd300/multibox_head/cls_0/kernel/Initializer/random_uniform/RandomUniform"
  input: "ssd300/multibox_head/cls_0/kernel/Initializer/random_uniform/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/multibox_head/cls_0/kernel"
      }
    }
  }
}
node {
  name: "ssd300/multibox_head/cls_0/kernel/Initializer/random_uniform"
  op: "Add"
  input: "ssd300/multibox_head/cls_0/kernel/Initializer/random_uniform/mul"
  input: "ssd300/multibox_head/cls_0/kernel/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/multibox_head/cls_0/kernel"
      }
    }
  }
}
node {
  name: "ssd300/multibox_head/cls_0/kernel"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/multibox_head/cls_0/kernel"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 3
        }
        dim {
          size: 3
        }
        dim {
          size: 96
        }
        dim {
          size: 8
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "ssd300/multibox_head/cls_0/kernel/Assign"
  op: "Assign"
  input: "ssd300/multibox_head/cls_0/kernel"
  input: "ssd300/multibox_head/cls_0/kernel/Initializer/random_uniform"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/multibox_head/cls_0/kernel"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "ssd300/multibox_head/cls_0/kernel/read"
  op: "Identity"
  input: "ssd300/multibox_head/cls_0/kernel"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/multibox_head/cls_0/kernel"
      }
    }
  }
}
node {
  name: "ssd300/multibox_head/cls_0/bias/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/multibox_head/cls_0/bias"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 8
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "ssd300/multibox_head/cls_0/bias"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/multibox_head/cls_0/bias"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 8
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "ssd300/multibox_head/cls_0/bias/Assign"
  op: "Assign"
  input: "ssd300/multibox_head/cls_0/bias"
  input: "ssd300/multibox_head/cls_0/bias/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/multibox_head/cls_0/bias"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "ssd300/multibox_head/cls_0/bias/read"
  op: "Identity"
  input: "ssd300/multibox_head/cls_0/bias"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/multibox_head/cls_0/bias"
      }
    }
  }
}
node {
  name: "ssd300/multibox_head/cls_0/dilation_rate"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "ssd300/multibox_head/cls_0/Conv2D"
  op: "Conv2D"
  input: "ssd300/expanded_conv_12/Add"
  input: "ssd300/multibox_head/cls_0/kernel/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NCHW"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "explicit_paddings"
    value {
      list {
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "ssd300/multibox_head/cls_0/BiasAdd"
  op: "BiasAdd"
  input: "ssd300/multibox_head/cls_0/Conv2D"
  input: "ssd300/multibox_head/cls_0/bias/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NCHW"
    }
  }
}
node {
  name: "ssd300/multibox_head/loc_1/kernel/Initializer/random_uniform/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/multibox_head/loc_1/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\003\000\000\000\003\000\000\000\000\005\000\000\030\000\000\000"
      }
    }
  }
}
node {
  name: "ssd300/multibox_head/loc_1/kernel/Initializer/random_uniform/min"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/multibox_head/loc_1/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: -0.022610781714320183
      }
    }
  }
}
node {
  name: "ssd300/multibox_head/loc_1/kernel/Initializer/random_uniform/max"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/multibox_head/loc_1/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.022610781714320183
      }
    }
  }
}
node {
  name: "ssd300/multibox_head/loc_1/kernel/Initializer/random_uniform/RandomUniform"
  op: "RandomUniform"
  input: "ssd300/multibox_head/loc_1/kernel/Initializer/random_uniform/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/multibox_head/loc_1/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "ssd300/multibox_head/loc_1/kernel/Initializer/random_uniform/sub"
  op: "Sub"
  input: "ssd300/multibox_head/loc_1/kernel/Initializer/random_uniform/max"
  input: "ssd300/multibox_head/loc_1/kernel/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/multibox_head/loc_1/kernel"
      }
    }
  }
}
node {
  name: "ssd300/multibox_head/loc_1/kernel/Initializer/random_uniform/mul"
  op: "Mul"
  input: "ssd300/multibox_head/loc_1/kernel/Initializer/random_uniform/RandomUniform"
  input: "ssd300/multibox_head/loc_1/kernel/Initializer/random_uniform/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/multibox_head/loc_1/kernel"
      }
    }
  }
}
node {
  name: "ssd300/multibox_head/loc_1/kernel/Initializer/random_uniform"
  op: "Add"
  input: "ssd300/multibox_head/loc_1/kernel/Initializer/random_uniform/mul"
  input: "ssd300/multibox_head/loc_1/kernel/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/multibox_head/loc_1/kernel"
      }
    }
  }
}
node {
  name: "ssd300/multibox_head/loc_1/kernel"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/multibox_head/loc_1/kernel"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 3
        }
        dim {
          size: 3
        }
        dim {
          size: 1280
        }
        dim {
          size: 24
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "ssd300/multibox_head/loc_1/kernel/Assign"
  op: "Assign"
  input: "ssd300/multibox_head/loc_1/kernel"
  input: "ssd300/multibox_head/loc_1/kernel/Initializer/random_uniform"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/multibox_head/loc_1/kernel"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "ssd300/multibox_head/loc_1/kernel/read"
  op: "Identity"
  input: "ssd300/multibox_head/loc_1/kernel"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/multibox_head/loc_1/kernel"
      }
    }
  }
}
node {
  name: "ssd300/multibox_head/loc_1/bias/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/multibox_head/loc_1/bias"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 24
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "ssd300/multibox_head/loc_1/bias"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/multibox_head/loc_1/bias"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 24
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "ssd300/multibox_head/loc_1/bias/Assign"
  op: "Assign"
  input: "ssd300/multibox_head/loc_1/bias"
  input: "ssd300/multibox_head/loc_1/bias/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/multibox_head/loc_1/bias"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "ssd300/multibox_head/loc_1/bias/read"
  op: "Identity"
  input: "ssd300/multibox_head/loc_1/bias"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/multibox_head/loc_1/bias"
      }
    }
  }
}
node {
  name: "ssd300/multibox_head/loc_1/dilation_rate"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "ssd300/multibox_head/loc_1/Conv2D"
  op: "Conv2D"
  input: "ssd300/Conv_1/Relu6"
  input: "ssd300/multibox_head/loc_1/kernel/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NCHW"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "explicit_paddings"
    value {
      list {
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "ssd300/multibox_head/loc_1/BiasAdd"
  op: "BiasAdd"
  input: "ssd300/multibox_head/loc_1/Conv2D"
  input: "ssd300/multibox_head/loc_1/bias/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NCHW"
    }
  }
}
node {
  name: "ssd300/multibox_head/cls_1/kernel/Initializer/random_uniform/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/multibox_head/cls_1/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\003\000\000\000\003\000\000\000\000\005\000\000\014\000\000\000"
      }
    }
  }
}
node {
  name: "ssd300/multibox_head/cls_1/kernel/Initializer/random_uniform/min"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/multibox_head/cls_1/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: -0.02271554246544838
      }
    }
  }
}
node {
  name: "ssd300/multibox_head/cls_1/kernel/Initializer/random_uniform/max"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/multibox_head/cls_1/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.02271554246544838
      }
    }
  }
}
node {
  name: "ssd300/multibox_head/cls_1/kernel/Initializer/random_uniform/RandomUniform"
  op: "RandomUniform"
  input: "ssd300/multibox_head/cls_1/kernel/Initializer/random_uniform/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/multibox_head/cls_1/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "ssd300/multibox_head/cls_1/kernel/Initializer/random_uniform/sub"
  op: "Sub"
  input: "ssd300/multibox_head/cls_1/kernel/Initializer/random_uniform/max"
  input: "ssd300/multibox_head/cls_1/kernel/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/multibox_head/cls_1/kernel"
      }
    }
  }
}
node {
  name: "ssd300/multibox_head/cls_1/kernel/Initializer/random_uniform/mul"
  op: "Mul"
  input: "ssd300/multibox_head/cls_1/kernel/Initializer/random_uniform/RandomUniform"
  input: "ssd300/multibox_head/cls_1/kernel/Initializer/random_uniform/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/multibox_head/cls_1/kernel"
      }
    }
  }
}
node {
  name: "ssd300/multibox_head/cls_1/kernel/Initializer/random_uniform"
  op: "Add"
  input: "ssd300/multibox_head/cls_1/kernel/Initializer/random_uniform/mul"
  input: "ssd300/multibox_head/cls_1/kernel/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/multibox_head/cls_1/kernel"
      }
    }
  }
}
node {
  name: "ssd300/multibox_head/cls_1/kernel"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/multibox_head/cls_1/kernel"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 3
        }
        dim {
          size: 3
        }
        dim {
          size: 1280
        }
        dim {
          size: 12
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "ssd300/multibox_head/cls_1/kernel/Assign"
  op: "Assign"
  input: "ssd300/multibox_head/cls_1/kernel"
  input: "ssd300/multibox_head/cls_1/kernel/Initializer/random_uniform"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/multibox_head/cls_1/kernel"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "ssd300/multibox_head/cls_1/kernel/read"
  op: "Identity"
  input: "ssd300/multibox_head/cls_1/kernel"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/multibox_head/cls_1/kernel"
      }
    }
  }
}
node {
  name: "ssd300/multibox_head/cls_1/bias/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/multibox_head/cls_1/bias"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 12
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "ssd300/multibox_head/cls_1/bias"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/multibox_head/cls_1/bias"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 12
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "ssd300/multibox_head/cls_1/bias/Assign"
  op: "Assign"
  input: "ssd300/multibox_head/cls_1/bias"
  input: "ssd300/multibox_head/cls_1/bias/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/multibox_head/cls_1/bias"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "ssd300/multibox_head/cls_1/bias/read"
  op: "Identity"
  input: "ssd300/multibox_head/cls_1/bias"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/multibox_head/cls_1/bias"
      }
    }
  }
}
node {
  name: "ssd300/multibox_head/cls_1/dilation_rate"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "ssd300/multibox_head/cls_1/Conv2D"
  op: "Conv2D"
  input: "ssd300/Conv_1/Relu6"
  input: "ssd300/multibox_head/cls_1/kernel/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NCHW"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "explicit_paddings"
    value {
      list {
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "ssd300/multibox_head/cls_1/BiasAdd"
  op: "BiasAdd"
  input: "ssd300/multibox_head/cls_1/Conv2D"
  input: "ssd300/multibox_head/cls_1/bias/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NCHW"
    }
  }
}
node {
  name: "ssd300/multibox_head/loc_2/kernel/Initializer/random_uniform/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/multibox_head/loc_2/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\003\000\000\000\003\000\000\000\000\002\000\000\030\000\000\000"
      }
    }
  }
}
node {
  name: "ssd300/multibox_head/loc_2/kernel/Initializer/random_uniform/min"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/multibox_head/loc_2/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: -0.03526728227734566
      }
    }
  }
}
node {
  name: "ssd300/multibox_head/loc_2/kernel/Initializer/random_uniform/max"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/multibox_head/loc_2/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.03526728227734566
      }
    }
  }
}
node {
  name: "ssd300/multibox_head/loc_2/kernel/Initializer/random_uniform/RandomUniform"
  op: "RandomUniform"
  input: "ssd300/multibox_head/loc_2/kernel/Initializer/random_uniform/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/multibox_head/loc_2/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "ssd300/multibox_head/loc_2/kernel/Initializer/random_uniform/sub"
  op: "Sub"
  input: "ssd300/multibox_head/loc_2/kernel/Initializer/random_uniform/max"
  input: "ssd300/multibox_head/loc_2/kernel/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/multibox_head/loc_2/kernel"
      }
    }
  }
}
node {
  name: "ssd300/multibox_head/loc_2/kernel/Initializer/random_uniform/mul"
  op: "Mul"
  input: "ssd300/multibox_head/loc_2/kernel/Initializer/random_uniform/RandomUniform"
  input: "ssd300/multibox_head/loc_2/kernel/Initializer/random_uniform/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/multibox_head/loc_2/kernel"
      }
    }
  }
}
node {
  name: "ssd300/multibox_head/loc_2/kernel/Initializer/random_uniform"
  op: "Add"
  input: "ssd300/multibox_head/loc_2/kernel/Initializer/random_uniform/mul"
  input: "ssd300/multibox_head/loc_2/kernel/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/multibox_head/loc_2/kernel"
      }
    }
  }
}
node {
  name: "ssd300/multibox_head/loc_2/kernel"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/multibox_head/loc_2/kernel"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 3
        }
        dim {
          size: 3
        }
        dim {
          size: 512
        }
        dim {
          size: 24
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "ssd300/multibox_head/loc_2/kernel/Assign"
  op: "Assign"
  input: "ssd300/multibox_head/loc_2/kernel"
  input: "ssd300/multibox_head/loc_2/kernel/Initializer/random_uniform"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/multibox_head/loc_2/kernel"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "ssd300/multibox_head/loc_2/kernel/read"
  op: "Identity"
  input: "ssd300/multibox_head/loc_2/kernel"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/multibox_head/loc_2/kernel"
      }
    }
  }
}
node {
  name: "ssd300/multibox_head/loc_2/bias/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/multibox_head/loc_2/bias"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 24
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "ssd300/multibox_head/loc_2/bias"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/multibox_head/loc_2/bias"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 24
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "ssd300/multibox_head/loc_2/bias/Assign"
  op: "Assign"
  input: "ssd300/multibox_head/loc_2/bias"
  input: "ssd300/multibox_head/loc_2/bias/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/multibox_head/loc_2/bias"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "ssd300/multibox_head/loc_2/bias/read"
  op: "Identity"
  input: "ssd300/multibox_head/loc_2/bias"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/multibox_head/loc_2/bias"
      }
    }
  }
}
node {
  name: "ssd300/multibox_head/loc_2/dilation_rate"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "ssd300/multibox_head/loc_2/Conv2D"
  op: "Conv2D"
  input: "ssd300/layer_19_2_Conv2d_2_3x3_s2_512/Relu6"
  input: "ssd300/multibox_head/loc_2/kernel/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NCHW"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "explicit_paddings"
    value {
      list {
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "ssd300/multibox_head/loc_2/BiasAdd"
  op: "BiasAdd"
  input: "ssd300/multibox_head/loc_2/Conv2D"
  input: "ssd300/multibox_head/loc_2/bias/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NCHW"
    }
  }
}
node {
  name: "ssd300/multibox_head/cls_2/kernel/Initializer/random_uniform/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/multibox_head/cls_2/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\003\000\000\000\003\000\000\000\000\002\000\000\014\000\000\000"
      }
    }
  }
}
node {
  name: "ssd300/multibox_head/cls_2/kernel/Initializer/random_uniform/min"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/multibox_head/cls_2/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: -0.03566882014274597
      }
    }
  }
}
node {
  name: "ssd300/multibox_head/cls_2/kernel/Initializer/random_uniform/max"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/multibox_head/cls_2/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.03566882014274597
      }
    }
  }
}
node {
  name: "ssd300/multibox_head/cls_2/kernel/Initializer/random_uniform/RandomUniform"
  op: "RandomUniform"
  input: "ssd300/multibox_head/cls_2/kernel/Initializer/random_uniform/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/multibox_head/cls_2/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "ssd300/multibox_head/cls_2/kernel/Initializer/random_uniform/sub"
  op: "Sub"
  input: "ssd300/multibox_head/cls_2/kernel/Initializer/random_uniform/max"
  input: "ssd300/multibox_head/cls_2/kernel/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/multibox_head/cls_2/kernel"
      }
    }
  }
}
node {
  name: "ssd300/multibox_head/cls_2/kernel/Initializer/random_uniform/mul"
  op: "Mul"
  input: "ssd300/multibox_head/cls_2/kernel/Initializer/random_uniform/RandomUniform"
  input: "ssd300/multibox_head/cls_2/kernel/Initializer/random_uniform/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/multibox_head/cls_2/kernel"
      }
    }
  }
}
node {
  name: "ssd300/multibox_head/cls_2/kernel/Initializer/random_uniform"
  op: "Add"
  input: "ssd300/multibox_head/cls_2/kernel/Initializer/random_uniform/mul"
  input: "ssd300/multibox_head/cls_2/kernel/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/multibox_head/cls_2/kernel"
      }
    }
  }
}
node {
  name: "ssd300/multibox_head/cls_2/kernel"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/multibox_head/cls_2/kernel"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 3
        }
        dim {
          size: 3
        }
        dim {
          size: 512
        }
        dim {
          size: 12
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "ssd300/multibox_head/cls_2/kernel/Assign"
  op: "Assign"
  input: "ssd300/multibox_head/cls_2/kernel"
  input: "ssd300/multibox_head/cls_2/kernel/Initializer/random_uniform"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/multibox_head/cls_2/kernel"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "ssd300/multibox_head/cls_2/kernel/read"
  op: "Identity"
  input: "ssd300/multibox_head/cls_2/kernel"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/multibox_head/cls_2/kernel"
      }
    }
  }
}
node {
  name: "ssd300/multibox_head/cls_2/bias/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/multibox_head/cls_2/bias"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 12
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "ssd300/multibox_head/cls_2/bias"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/multibox_head/cls_2/bias"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 12
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "ssd300/multibox_head/cls_2/bias/Assign"
  op: "Assign"
  input: "ssd300/multibox_head/cls_2/bias"
  input: "ssd300/multibox_head/cls_2/bias/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/multibox_head/cls_2/bias"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "ssd300/multibox_head/cls_2/bias/read"
  op: "Identity"
  input: "ssd300/multibox_head/cls_2/bias"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/multibox_head/cls_2/bias"
      }
    }
  }
}
node {
  name: "ssd300/multibox_head/cls_2/dilation_rate"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "ssd300/multibox_head/cls_2/Conv2D"
  op: "Conv2D"
  input: "ssd300/layer_19_2_Conv2d_2_3x3_s2_512/Relu6"
  input: "ssd300/multibox_head/cls_2/kernel/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NCHW"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "explicit_paddings"
    value {
      list {
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "ssd300/multibox_head/cls_2/BiasAdd"
  op: "BiasAdd"
  input: "ssd300/multibox_head/cls_2/Conv2D"
  input: "ssd300/multibox_head/cls_2/bias/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NCHW"
    }
  }
}
node {
  name: "ssd300/multibox_head/loc_3/kernel/Initializer/random_uniform/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/multibox_head/loc_3/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\003\000\000\000\003\000\000\000\000\001\000\000\030\000\000\000"
      }
    }
  }
}
node {
  name: "ssd300/multibox_head/loc_3/kernel/Initializer/random_uniform/min"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/multibox_head/loc_3/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: -0.048795003443956375
      }
    }
  }
}
node {
  name: "ssd300/multibox_head/loc_3/kernel/Initializer/random_uniform/max"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/multibox_head/loc_3/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.048795003443956375
      }
    }
  }
}
node {
  name: "ssd300/multibox_head/loc_3/kernel/Initializer/random_uniform/RandomUniform"
  op: "RandomUniform"
  input: "ssd300/multibox_head/loc_3/kernel/Initializer/random_uniform/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/multibox_head/loc_3/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "ssd300/multibox_head/loc_3/kernel/Initializer/random_uniform/sub"
  op: "Sub"
  input: "ssd300/multibox_head/loc_3/kernel/Initializer/random_uniform/max"
  input: "ssd300/multibox_head/loc_3/kernel/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/multibox_head/loc_3/kernel"
      }
    }
  }
}
node {
  name: "ssd300/multibox_head/loc_3/kernel/Initializer/random_uniform/mul"
  op: "Mul"
  input: "ssd300/multibox_head/loc_3/kernel/Initializer/random_uniform/RandomUniform"
  input: "ssd300/multibox_head/loc_3/kernel/Initializer/random_uniform/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/multibox_head/loc_3/kernel"
      }
    }
  }
}
node {
  name: "ssd300/multibox_head/loc_3/kernel/Initializer/random_uniform"
  op: "Add"
  input: "ssd300/multibox_head/loc_3/kernel/Initializer/random_uniform/mul"
  input: "ssd300/multibox_head/loc_3/kernel/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/multibox_head/loc_3/kernel"
      }
    }
  }
}
node {
  name: "ssd300/multibox_head/loc_3/kernel"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/multibox_head/loc_3/kernel"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 3
        }
        dim {
          size: 3
        }
        dim {
          size: 256
        }
        dim {
          size: 24
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "ssd300/multibox_head/loc_3/kernel/Assign"
  op: "Assign"
  input: "ssd300/multibox_head/loc_3/kernel"
  input: "ssd300/multibox_head/loc_3/kernel/Initializer/random_uniform"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/multibox_head/loc_3/kernel"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "ssd300/multibox_head/loc_3/kernel/read"
  op: "Identity"
  input: "ssd300/multibox_head/loc_3/kernel"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/multibox_head/loc_3/kernel"
      }
    }
  }
}
node {
  name: "ssd300/multibox_head/loc_3/bias/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/multibox_head/loc_3/bias"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 24
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "ssd300/multibox_head/loc_3/bias"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/multibox_head/loc_3/bias"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 24
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "ssd300/multibox_head/loc_3/bias/Assign"
  op: "Assign"
  input: "ssd300/multibox_head/loc_3/bias"
  input: "ssd300/multibox_head/loc_3/bias/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/multibox_head/loc_3/bias"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "ssd300/multibox_head/loc_3/bias/read"
  op: "Identity"
  input: "ssd300/multibox_head/loc_3/bias"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/multibox_head/loc_3/bias"
      }
    }
  }
}
node {
  name: "ssd300/multibox_head/loc_3/dilation_rate"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "ssd300/multibox_head/loc_3/Conv2D"
  op: "Conv2D"
  input: "ssd300/layer_19_2_Conv2d_3_3x3_s2_256/Relu6"
  input: "ssd300/multibox_head/loc_3/kernel/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NCHW"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "explicit_paddings"
    value {
      list {
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "ssd300/multibox_head/loc_3/BiasAdd"
  op: "BiasAdd"
  input: "ssd300/multibox_head/loc_3/Conv2D"
  input: "ssd300/multibox_head/loc_3/bias/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NCHW"
    }
  }
}
node {
  name: "ssd300/multibox_head/cls_3/kernel/Initializer/random_uniform/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/multibox_head/cls_3/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\003\000\000\000\003\000\000\000\000\001\000\000\014\000\000\000"
      }
    }
  }
}
node {
  name: "ssd300/multibox_head/cls_3/kernel/Initializer/random_uniform/min"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/multibox_head/cls_3/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: -0.049875468015670776
      }
    }
  }
}
node {
  name: "ssd300/multibox_head/cls_3/kernel/Initializer/random_uniform/max"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/multibox_head/cls_3/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.049875468015670776
      }
    }
  }
}
node {
  name: "ssd300/multibox_head/cls_3/kernel/Initializer/random_uniform/RandomUniform"
  op: "RandomUniform"
  input: "ssd300/multibox_head/cls_3/kernel/Initializer/random_uniform/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/multibox_head/cls_3/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "ssd300/multibox_head/cls_3/kernel/Initializer/random_uniform/sub"
  op: "Sub"
  input: "ssd300/multibox_head/cls_3/kernel/Initializer/random_uniform/max"
  input: "ssd300/multibox_head/cls_3/kernel/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/multibox_head/cls_3/kernel"
      }
    }
  }
}
node {
  name: "ssd300/multibox_head/cls_3/kernel/Initializer/random_uniform/mul"
  op: "Mul"
  input: "ssd300/multibox_head/cls_3/kernel/Initializer/random_uniform/RandomUniform"
  input: "ssd300/multibox_head/cls_3/kernel/Initializer/random_uniform/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/multibox_head/cls_3/kernel"
      }
    }
  }
}
node {
  name: "ssd300/multibox_head/cls_3/kernel/Initializer/random_uniform"
  op: "Add"
  input: "ssd300/multibox_head/cls_3/kernel/Initializer/random_uniform/mul"
  input: "ssd300/multibox_head/cls_3/kernel/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/multibox_head/cls_3/kernel"
      }
    }
  }
}
node {
  name: "ssd300/multibox_head/cls_3/kernel"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/multibox_head/cls_3/kernel"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 3
        }
        dim {
          size: 3
        }
        dim {
          size: 256
        }
        dim {
          size: 12
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "ssd300/multibox_head/cls_3/kernel/Assign"
  op: "Assign"
  input: "ssd300/multibox_head/cls_3/kernel"
  input: "ssd300/multibox_head/cls_3/kernel/Initializer/random_uniform"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/multibox_head/cls_3/kernel"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "ssd300/multibox_head/cls_3/kernel/read"
  op: "Identity"
  input: "ssd300/multibox_head/cls_3/kernel"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/multibox_head/cls_3/kernel"
      }
    }
  }
}
node {
  name: "ssd300/multibox_head/cls_3/bias/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/multibox_head/cls_3/bias"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 12
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "ssd300/multibox_head/cls_3/bias"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/multibox_head/cls_3/bias"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 12
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "ssd300/multibox_head/cls_3/bias/Assign"
  op: "Assign"
  input: "ssd300/multibox_head/cls_3/bias"
  input: "ssd300/multibox_head/cls_3/bias/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/multibox_head/cls_3/bias"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "ssd300/multibox_head/cls_3/bias/read"
  op: "Identity"
  input: "ssd300/multibox_head/cls_3/bias"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/multibox_head/cls_3/bias"
      }
    }
  }
}
node {
  name: "ssd300/multibox_head/cls_3/dilation_rate"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "ssd300/multibox_head/cls_3/Conv2D"
  op: "Conv2D"
  input: "ssd300/layer_19_2_Conv2d_3_3x3_s2_256/Relu6"
  input: "ssd300/multibox_head/cls_3/kernel/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NCHW"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "explicit_paddings"
    value {
      list {
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "ssd300/multibox_head/cls_3/BiasAdd"
  op: "BiasAdd"
  input: "ssd300/multibox_head/cls_3/Conv2D"
  input: "ssd300/multibox_head/cls_3/bias/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NCHW"
    }
  }
}
node {
  name: "ssd300/multibox_head/loc_4/kernel/Initializer/random_uniform/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/multibox_head/loc_4/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\003\000\000\000\003\000\000\000\000\001\000\000\020\000\000\000"
      }
    }
  }
}
node {
  name: "ssd300/multibox_head/loc_4/kernel/Initializer/random_uniform/min"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/multibox_head/loc_4/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: -0.04950737580657005
      }
    }
  }
}
node {
  name: "ssd300/multibox_head/loc_4/kernel/Initializer/random_uniform/max"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/multibox_head/loc_4/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.04950737580657005
      }
    }
  }
}
node {
  name: "ssd300/multibox_head/loc_4/kernel/Initializer/random_uniform/RandomUniform"
  op: "RandomUniform"
  input: "ssd300/multibox_head/loc_4/kernel/Initializer/random_uniform/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/multibox_head/loc_4/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "ssd300/multibox_head/loc_4/kernel/Initializer/random_uniform/sub"
  op: "Sub"
  input: "ssd300/multibox_head/loc_4/kernel/Initializer/random_uniform/max"
  input: "ssd300/multibox_head/loc_4/kernel/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/multibox_head/loc_4/kernel"
      }
    }
  }
}
node {
  name: "ssd300/multibox_head/loc_4/kernel/Initializer/random_uniform/mul"
  op: "Mul"
  input: "ssd300/multibox_head/loc_4/kernel/Initializer/random_uniform/RandomUniform"
  input: "ssd300/multibox_head/loc_4/kernel/Initializer/random_uniform/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/multibox_head/loc_4/kernel"
      }
    }
  }
}
node {
  name: "ssd300/multibox_head/loc_4/kernel/Initializer/random_uniform"
  op: "Add"
  input: "ssd300/multibox_head/loc_4/kernel/Initializer/random_uniform/mul"
  input: "ssd300/multibox_head/loc_4/kernel/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/multibox_head/loc_4/kernel"
      }
    }
  }
}
node {
  name: "ssd300/multibox_head/loc_4/kernel"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/multibox_head/loc_4/kernel"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 3
        }
        dim {
          size: 3
        }
        dim {
          size: 256
        }
        dim {
          size: 16
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "ssd300/multibox_head/loc_4/kernel/Assign"
  op: "Assign"
  input: "ssd300/multibox_head/loc_4/kernel"
  input: "ssd300/multibox_head/loc_4/kernel/Initializer/random_uniform"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/multibox_head/loc_4/kernel"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "ssd300/multibox_head/loc_4/kernel/read"
  op: "Identity"
  input: "ssd300/multibox_head/loc_4/kernel"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/multibox_head/loc_4/kernel"
      }
    }
  }
}
node {
  name: "ssd300/multibox_head/loc_4/bias/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/multibox_head/loc_4/bias"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 16
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "ssd300/multibox_head/loc_4/bias"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/multibox_head/loc_4/bias"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 16
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "ssd300/multibox_head/loc_4/bias/Assign"
  op: "Assign"
  input: "ssd300/multibox_head/loc_4/bias"
  input: "ssd300/multibox_head/loc_4/bias/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/multibox_head/loc_4/bias"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "ssd300/multibox_head/loc_4/bias/read"
  op: "Identity"
  input: "ssd300/multibox_head/loc_4/bias"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/multibox_head/loc_4/bias"
      }
    }
  }
}
node {
  name: "ssd300/multibox_head/loc_4/dilation_rate"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "ssd300/multibox_head/loc_4/Conv2D"
  op: "Conv2D"
  input: "ssd300/layer_19_2_Conv2d_4_3x3_s2_256/Relu6"
  input: "ssd300/multibox_head/loc_4/kernel/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NCHW"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "explicit_paddings"
    value {
      list {
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "ssd300/multibox_head/loc_4/BiasAdd"
  op: "BiasAdd"
  input: "ssd300/multibox_head/loc_4/Conv2D"
  input: "ssd300/multibox_head/loc_4/bias/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NCHW"
    }
  }
}
node {
  name: "ssd300/multibox_head/cls_4/kernel/Initializer/random_uniform/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/multibox_head/cls_4/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\003\000\000\000\003\000\000\000\000\001\000\000\010\000\000\000"
      }
    }
  }
}
node {
  name: "ssd300/multibox_head/cls_4/kernel/Initializer/random_uniform/min"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/multibox_head/cls_4/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: -0.05025188997387886
      }
    }
  }
}
node {
  name: "ssd300/multibox_head/cls_4/kernel/Initializer/random_uniform/max"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/multibox_head/cls_4/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.05025188997387886
      }
    }
  }
}
node {
  name: "ssd300/multibox_head/cls_4/kernel/Initializer/random_uniform/RandomUniform"
  op: "RandomUniform"
  input: "ssd300/multibox_head/cls_4/kernel/Initializer/random_uniform/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/multibox_head/cls_4/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "ssd300/multibox_head/cls_4/kernel/Initializer/random_uniform/sub"
  op: "Sub"
  input: "ssd300/multibox_head/cls_4/kernel/Initializer/random_uniform/max"
  input: "ssd300/multibox_head/cls_4/kernel/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/multibox_head/cls_4/kernel"
      }
    }
  }
}
node {
  name: "ssd300/multibox_head/cls_4/kernel/Initializer/random_uniform/mul"
  op: "Mul"
  input: "ssd300/multibox_head/cls_4/kernel/Initializer/random_uniform/RandomUniform"
  input: "ssd300/multibox_head/cls_4/kernel/Initializer/random_uniform/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/multibox_head/cls_4/kernel"
      }
    }
  }
}
node {
  name: "ssd300/multibox_head/cls_4/kernel/Initializer/random_uniform"
  op: "Add"
  input: "ssd300/multibox_head/cls_4/kernel/Initializer/random_uniform/mul"
  input: "ssd300/multibox_head/cls_4/kernel/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/multibox_head/cls_4/kernel"
      }
    }
  }
}
node {
  name: "ssd300/multibox_head/cls_4/kernel"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/multibox_head/cls_4/kernel"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 3
        }
        dim {
          size: 3
        }
        dim {
          size: 256
        }
        dim {
          size: 8
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "ssd300/multibox_head/cls_4/kernel/Assign"
  op: "Assign"
  input: "ssd300/multibox_head/cls_4/kernel"
  input: "ssd300/multibox_head/cls_4/kernel/Initializer/random_uniform"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/multibox_head/cls_4/kernel"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "ssd300/multibox_head/cls_4/kernel/read"
  op: "Identity"
  input: "ssd300/multibox_head/cls_4/kernel"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/multibox_head/cls_4/kernel"
      }
    }
  }
}
node {
  name: "ssd300/multibox_head/cls_4/bias/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/multibox_head/cls_4/bias"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 8
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "ssd300/multibox_head/cls_4/bias"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/multibox_head/cls_4/bias"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 8
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "ssd300/multibox_head/cls_4/bias/Assign"
  op: "Assign"
  input: "ssd300/multibox_head/cls_4/bias"
  input: "ssd300/multibox_head/cls_4/bias/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/multibox_head/cls_4/bias"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "ssd300/multibox_head/cls_4/bias/read"
  op: "Identity"
  input: "ssd300/multibox_head/cls_4/bias"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/multibox_head/cls_4/bias"
      }
    }
  }
}
node {
  name: "ssd300/multibox_head/cls_4/dilation_rate"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "ssd300/multibox_head/cls_4/Conv2D"
  op: "Conv2D"
  input: "ssd300/layer_19_2_Conv2d_4_3x3_s2_256/Relu6"
  input: "ssd300/multibox_head/cls_4/kernel/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NCHW"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "explicit_paddings"
    value {
      list {
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "ssd300/multibox_head/cls_4/BiasAdd"
  op: "BiasAdd"
  input: "ssd300/multibox_head/cls_4/Conv2D"
  input: "ssd300/multibox_head/cls_4/bias/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NCHW"
    }
  }
}
node {
  name: "ssd300/multibox_head/loc_5/kernel/Initializer/random_uniform/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/multibox_head/loc_5/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\003\000\000\000\003\000\000\000\200\000\000\000\020\000\000\000"
      }
    }
  }
}
node {
  name: "ssd300/multibox_head/loc_5/kernel/Initializer/random_uniform/min"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/multibox_head/loc_5/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: -0.06804138422012329
      }
    }
  }
}
node {
  name: "ssd300/multibox_head/loc_5/kernel/Initializer/random_uniform/max"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/multibox_head/loc_5/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.06804138422012329
      }
    }
  }
}
node {
  name: "ssd300/multibox_head/loc_5/kernel/Initializer/random_uniform/RandomUniform"
  op: "RandomUniform"
  input: "ssd300/multibox_head/loc_5/kernel/Initializer/random_uniform/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/multibox_head/loc_5/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "ssd300/multibox_head/loc_5/kernel/Initializer/random_uniform/sub"
  op: "Sub"
  input: "ssd300/multibox_head/loc_5/kernel/Initializer/random_uniform/max"
  input: "ssd300/multibox_head/loc_5/kernel/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/multibox_head/loc_5/kernel"
      }
    }
  }
}
node {
  name: "ssd300/multibox_head/loc_5/kernel/Initializer/random_uniform/mul"
  op: "Mul"
  input: "ssd300/multibox_head/loc_5/kernel/Initializer/random_uniform/RandomUniform"
  input: "ssd300/multibox_head/loc_5/kernel/Initializer/random_uniform/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/multibox_head/loc_5/kernel"
      }
    }
  }
}
node {
  name: "ssd300/multibox_head/loc_5/kernel/Initializer/random_uniform"
  op: "Add"
  input: "ssd300/multibox_head/loc_5/kernel/Initializer/random_uniform/mul"
  input: "ssd300/multibox_head/loc_5/kernel/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/multibox_head/loc_5/kernel"
      }
    }
  }
}
node {
  name: "ssd300/multibox_head/loc_5/kernel"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/multibox_head/loc_5/kernel"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 3
        }
        dim {
          size: 3
        }
        dim {
          size: 128
        }
        dim {
          size: 16
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "ssd300/multibox_head/loc_5/kernel/Assign"
  op: "Assign"
  input: "ssd300/multibox_head/loc_5/kernel"
  input: "ssd300/multibox_head/loc_5/kernel/Initializer/random_uniform"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/multibox_head/loc_5/kernel"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "ssd300/multibox_head/loc_5/kernel/read"
  op: "Identity"
  input: "ssd300/multibox_head/loc_5/kernel"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/multibox_head/loc_5/kernel"
      }
    }
  }
}
node {
  name: "ssd300/multibox_head/loc_5/bias/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/multibox_head/loc_5/bias"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 16
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "ssd300/multibox_head/loc_5/bias"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/multibox_head/loc_5/bias"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 16
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "ssd300/multibox_head/loc_5/bias/Assign"
  op: "Assign"
  input: "ssd300/multibox_head/loc_5/bias"
  input: "ssd300/multibox_head/loc_5/bias/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/multibox_head/loc_5/bias"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "ssd300/multibox_head/loc_5/bias/read"
  op: "Identity"
  input: "ssd300/multibox_head/loc_5/bias"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/multibox_head/loc_5/bias"
      }
    }
  }
}
node {
  name: "ssd300/multibox_head/loc_5/dilation_rate"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "ssd300/multibox_head/loc_5/Conv2D"
  op: "Conv2D"
  input: "ssd300/layer_19_2_Conv2d_5_3x3_s2_128/Relu6"
  input: "ssd300/multibox_head/loc_5/kernel/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NCHW"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "explicit_paddings"
    value {
      list {
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "ssd300/multibox_head/loc_5/BiasAdd"
  op: "BiasAdd"
  input: "ssd300/multibox_head/loc_5/Conv2D"
  input: "ssd300/multibox_head/loc_5/bias/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NCHW"
    }
  }
}
node {
  name: "ssd300/multibox_head/cls_5/kernel/Initializer/random_uniform/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/multibox_head/cls_5/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\003\000\000\000\003\000\000\000\200\000\000\000\010\000\000\000"
      }
    }
  }
}
node {
  name: "ssd300/multibox_head/cls_5/kernel/Initializer/random_uniform/min"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/multibox_head/cls_5/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: -0.07001400738954544
      }
    }
  }
}
node {
  name: "ssd300/multibox_head/cls_5/kernel/Initializer/random_uniform/max"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/multibox_head/cls_5/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.07001400738954544
      }
    }
  }
}
node {
  name: "ssd300/multibox_head/cls_5/kernel/Initializer/random_uniform/RandomUniform"
  op: "RandomUniform"
  input: "ssd300/multibox_head/cls_5/kernel/Initializer/random_uniform/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/multibox_head/cls_5/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "ssd300/multibox_head/cls_5/kernel/Initializer/random_uniform/sub"
  op: "Sub"
  input: "ssd300/multibox_head/cls_5/kernel/Initializer/random_uniform/max"
  input: "ssd300/multibox_head/cls_5/kernel/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/multibox_head/cls_5/kernel"
      }
    }
  }
}
node {
  name: "ssd300/multibox_head/cls_5/kernel/Initializer/random_uniform/mul"
  op: "Mul"
  input: "ssd300/multibox_head/cls_5/kernel/Initializer/random_uniform/RandomUniform"
  input: "ssd300/multibox_head/cls_5/kernel/Initializer/random_uniform/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/multibox_head/cls_5/kernel"
      }
    }
  }
}
node {
  name: "ssd300/multibox_head/cls_5/kernel/Initializer/random_uniform"
  op: "Add"
  input: "ssd300/multibox_head/cls_5/kernel/Initializer/random_uniform/mul"
  input: "ssd300/multibox_head/cls_5/kernel/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/multibox_head/cls_5/kernel"
      }
    }
  }
}
node {
  name: "ssd300/multibox_head/cls_5/kernel"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/multibox_head/cls_5/kernel"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 3
        }
        dim {
          size: 3
        }
        dim {
          size: 128
        }
        dim {
          size: 8
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "ssd300/multibox_head/cls_5/kernel/Assign"
  op: "Assign"
  input: "ssd300/multibox_head/cls_5/kernel"
  input: "ssd300/multibox_head/cls_5/kernel/Initializer/random_uniform"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/multibox_head/cls_5/kernel"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "ssd300/multibox_head/cls_5/kernel/read"
  op: "Identity"
  input: "ssd300/multibox_head/cls_5/kernel"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/multibox_head/cls_5/kernel"
      }
    }
  }
}
node {
  name: "ssd300/multibox_head/cls_5/bias/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/multibox_head/cls_5/bias"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 8
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "ssd300/multibox_head/cls_5/bias"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/multibox_head/cls_5/bias"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 8
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "ssd300/multibox_head/cls_5/bias/Assign"
  op: "Assign"
  input: "ssd300/multibox_head/cls_5/bias"
  input: "ssd300/multibox_head/cls_5/bias/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/multibox_head/cls_5/bias"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "ssd300/multibox_head/cls_5/bias/read"
  op: "Identity"
  input: "ssd300/multibox_head/cls_5/bias"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/multibox_head/cls_5/bias"
      }
    }
  }
}
node {
  name: "ssd300/multibox_head/cls_5/dilation_rate"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "ssd300/multibox_head/cls_5/Conv2D"
  op: "Conv2D"
  input: "ssd300/layer_19_2_Conv2d_5_3x3_s2_128/Relu6"
  input: "ssd300/multibox_head/cls_5/kernel/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NCHW"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "explicit_paddings"
    value {
      list {
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "ssd300/multibox_head/cls_5/BiasAdd"
  op: "BiasAdd"
  input: "ssd300/multibox_head/cls_5/Conv2D"
  input: "ssd300/multibox_head/cls_5/bias/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NCHW"
    }
  }
}
node {
  name: "ssd300/transpose/perm"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\000\000\000\000\002\000\000\000\003\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "ssd300/transpose"
  op: "Transpose"
  input: "ssd300/multibox_head/cls_0/BiasAdd"
  input: "ssd300/transpose/perm"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tperm"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "ssd300/transpose_1/perm"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\000\000\000\000\002\000\000\000\003\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "ssd300/transpose_1"
  op: "Transpose"
  input: "ssd300/multibox_head/cls_1/BiasAdd"
  input: "ssd300/transpose_1/perm"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tperm"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "ssd300/transpose_2/perm"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\000\000\000\000\002\000\000\000\003\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "ssd300/transpose_2"
  op: "Transpose"
  input: "ssd300/multibox_head/cls_2/BiasAdd"
  input: "ssd300/transpose_2/perm"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tperm"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "ssd300/transpose_3/perm"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\000\000\000\000\002\000\000\000\003\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "ssd300/transpose_3"
  op: "Transpose"
  input: "ssd300/multibox_head/cls_3/BiasAdd"
  input: "ssd300/transpose_3/perm"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tperm"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "ssd300/transpose_4/perm"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\000\000\000\000\002\000\000\000\003\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "ssd300/transpose_4"
  op: "Transpose"
  input: "ssd300/multibox_head/cls_4/BiasAdd"
  input: "ssd300/transpose_4/perm"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tperm"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "ssd300/transpose_5/perm"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\000\000\000\000\002\000\000\000\003\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "ssd300/transpose_5"
  op: "Transpose"
  input: "ssd300/multibox_head/cls_5/BiasAdd"
  input: "ssd300/transpose_5/perm"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tperm"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "ssd300/transpose_6/perm"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\000\000\000\000\002\000\000\000\003\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "ssd300/transpose_6"
  op: "Transpose"
  input: "ssd300/multibox_head/loc_0/BiasAdd"
  input: "ssd300/transpose_6/perm"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tperm"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "ssd300/transpose_7/perm"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\000\000\000\000\002\000\000\000\003\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "ssd300/transpose_7"
  op: "Transpose"
  input: "ssd300/multibox_head/loc_1/BiasAdd"
  input: "ssd300/transpose_7/perm"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tperm"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "ssd300/transpose_8/perm"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\000\000\000\000\002\000\000\000\003\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "ssd300/transpose_8"
  op: "Transpose"
  input: "ssd300/multibox_head/loc_2/BiasAdd"
  input: "ssd300/transpose_8/perm"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tperm"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "ssd300/transpose_9/perm"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\000\000\000\000\002\000\000\000\003\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "ssd300/transpose_9"
  op: "Transpose"
  input: "ssd300/multibox_head/loc_3/BiasAdd"
  input: "ssd300/transpose_9/perm"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tperm"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "ssd300/transpose_10/perm"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\000\000\000\000\002\000\000\000\003\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "ssd300/transpose_10"
  op: "Transpose"
  input: "ssd300/multibox_head/loc_4/BiasAdd"
  input: "ssd300/transpose_10/perm"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tperm"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "ssd300/transpose_11/perm"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\000\000\000\000\002\000\000\000\003\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "ssd300/transpose_11"
  op: "Transpose"
  input: "ssd300/multibox_head/loc_5/BiasAdd"
  input: "ssd300/transpose_11/perm"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tperm"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "ssd300/cls_0/shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\377\377\377\377\002\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "ssd300/cls_0"
  op: "Reshape"
  input: "ssd300/transpose"
  input: "ssd300/cls_0/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "ssd300/cls_1/shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\377\377\377\377\002\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "ssd300/cls_1"
  op: "Reshape"
  input: "ssd300/transpose_1"
  input: "ssd300/cls_1/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "ssd300/cls_2/shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\377\377\377\377\002\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "ssd300/cls_2"
  op: "Reshape"
  input: "ssd300/transpose_2"
  input: "ssd300/cls_2/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "ssd300/cls_3/shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\377\377\377\377\002\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "ssd300/cls_3"
  op: "Reshape"
  input: "ssd300/transpose_3"
  input: "ssd300/cls_3/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "ssd300/cls_4/shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\377\377\377\377\002\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "ssd300/cls_4"
  op: "Reshape"
  input: "ssd300/transpose_4"
  input: "ssd300/cls_4/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "ssd300/cls_5/shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\377\377\377\377\002\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "ssd300/cls_5"
  op: "Reshape"
  input: "ssd300/transpose_5"
  input: "ssd300/cls_5/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "ssd300/loc_0/shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\377\377\377\377\004\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "ssd300/loc_0"
  op: "Reshape"
  input: "ssd300/transpose_6"
  input: "ssd300/loc_0/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "ssd300/loc_1/shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\377\377\377\377\004\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "ssd300/loc_1"
  op: "Reshape"
  input: "ssd300/transpose_7"
  input: "ssd300/loc_1/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "ssd300/loc_2/shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\377\377\377\377\004\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "ssd300/loc_2"
  op: "Reshape"
  input: "ssd300/transpose_8"
  input: "ssd300/loc_2/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "ssd300/loc_3/shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\377\377\377\377\004\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "ssd300/loc_3"
  op: "Reshape"
  input: "ssd300/transpose_9"
  input: "ssd300/loc_3/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "ssd300/loc_4/shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\377\377\377\377\004\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "ssd300/loc_4"
  op: "Reshape"
  input: "ssd300/transpose_10"
  input: "ssd300/loc_4/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "ssd300/loc_5/shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\377\377\377\377\004\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "ssd300/loc_5"
  op: "Reshape"
  input: "ssd300/transpose_11"
  input: "ssd300/loc_5/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "ssd300/concat/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "ssd300/concat"
  op: "ConcatV2"
  input: "ssd300/cls_0"
  input: "ssd300/cls_1"
  input: "ssd300/cls_2"
  input: "ssd300/cls_3"
  input: "ssd300/cls_4"
  input: "ssd300/cls_5"
  input: "ssd300/concat/axis"
  attr {
    key: "N"
    value {
      i: 6
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "ssd300/concat_1/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "ssd300/concat_1"
  op: "ConcatV2"
  input: "ssd300/loc_0"
  input: "ssd300/loc_1"
  input: "ssd300/loc_2"
  input: "ssd300/loc_3"
  input: "ssd300/loc_4"
  input: "ssd300/loc_5"
  input: "ssd300/concat_1/axis"
  attr {
    key: "N"
    value {
      i: 6
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "Shape"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\334\010\000\000\004\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "strided_slice/stack"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "strided_slice/stack_1"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "strided_slice/stack_2"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "strided_slice"
  op: "StridedSlice"
  input: "Shape"
  input: "strided_slice/stack"
  input: "strided_slice/stack_1"
  input: "strided_slice/stack_2"
  device: "/device:CPU:0"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 0
    }
  }
}
node {
  name: "Reshape"
  op: "Reshape"
  input: "ssd300/concat_1"
  input: "strided_slice"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "Shape_1"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\334\010\000\000\002\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "strided_slice_1/stack"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "strided_slice_1/stack_1"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "strided_slice_1/stack_2"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "strided_slice_1"
  op: "StridedSlice"
  input: "Shape_1"
  input: "strided_slice_1/stack"
  input: "strided_slice_1/stack_1"
  input: "strided_slice_1/stack_2"
  device: "/device:CPU:0"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 0
    }
  }
}
node {
  name: "Reshape_1"
  op: "Reshape"
  input: "ssd300/concat"
  input: "strided_slice_1"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "ext_decode_all_anchors_1/truediv/y"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 2.0
      }
    }
  }
}
node {
  name: "ext_decode_all_anchors_1/truediv"
  op: "RealDiv"
  input: "get_layer_anchors/Const"
  input: "ext_decode_all_anchors_1/truediv/y"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ext_decode_all_anchors_1/sub"
  op: "Sub"
  input: "get_layer_anchors/ExpandDims"
  input: "ext_decode_all_anchors_1/truediv"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ext_decode_all_anchors_1/truediv_1/y"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 2.0
      }
    }
  }
}
node {
  name: "ext_decode_all_anchors_1/truediv_1"
  op: "RealDiv"
  input: "get_layer_anchors/Const_1"
  input: "ext_decode_all_anchors_1/truediv_1/y"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ext_decode_all_anchors_1/sub_1"
  op: "Sub"
  input: "get_layer_anchors/ExpandDims_1"
  input: "ext_decode_all_anchors_1/truediv_1"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ext_decode_all_anchors_1/truediv_2/y"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 2.0
      }
    }
  }
}
node {
  name: "ext_decode_all_anchors_1/truediv_2"
  op: "RealDiv"
  input: "get_layer_anchors/Const"
  input: "ext_decode_all_anchors_1/truediv_2/y"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ext_decode_all_anchors_1/add"
  op: "AddV2"
  input: "get_layer_anchors/ExpandDims"
  input: "ext_decode_all_anchors_1/truediv_2"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ext_decode_all_anchors_1/truediv_3/y"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 2.0
      }
    }
  }
}
node {
  name: "ext_decode_all_anchors_1/truediv_3"
  op: "RealDiv"
  input: "get_layer_anchors/Const_1"
  input: "ext_decode_all_anchors_1/truediv_3/y"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ext_decode_all_anchors_1/add_1"
  op: "AddV2"
  input: "get_layer_anchors/ExpandDims_1"
  input: "ext_decode_all_anchors_1/truediv_3"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ext_decode_all_anchors_1/Reshape/shape"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "ext_decode_all_anchors_1/Reshape"
  op: "Reshape"
  input: "ext_decode_all_anchors_1/sub"
  input: "ext_decode_all_anchors_1/Reshape/shape"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "ext_decode_all_anchors_1/Reshape_1/shape"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "ext_decode_all_anchors_1/Reshape_1"
  op: "Reshape"
  input: "ext_decode_all_anchors_1/sub_1"
  input: "ext_decode_all_anchors_1/Reshape_1/shape"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "ext_decode_all_anchors_1/Reshape_2/shape"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "ext_decode_all_anchors_1/Reshape_2"
  op: "Reshape"
  input: "ext_decode_all_anchors_1/add"
  input: "ext_decode_all_anchors_1/Reshape_2/shape"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "ext_decode_all_anchors_1/Reshape_3/shape"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "ext_decode_all_anchors_1/Reshape_3"
  op: "Reshape"
  input: "ext_decode_all_anchors_1/add_1"
  input: "ext_decode_all_anchors_1/Reshape_3/shape"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "ext_decode_all_anchors_1/truediv_4/y"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 2.0
      }
    }
  }
}
node {
  name: "ext_decode_all_anchors_1/truediv_4"
  op: "RealDiv"
  input: "get_layer_anchors_1/Const"
  input: "ext_decode_all_anchors_1/truediv_4/y"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ext_decode_all_anchors_1/sub_2"
  op: "Sub"
  input: "get_layer_anchors_1/ExpandDims"
  input: "ext_decode_all_anchors_1/truediv_4"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ext_decode_all_anchors_1/truediv_5/y"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 2.0
      }
    }
  }
}
node {
  name: "ext_decode_all_anchors_1/truediv_5"
  op: "RealDiv"
  input: "get_layer_anchors_1/Const_1"
  input: "ext_decode_all_anchors_1/truediv_5/y"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ext_decode_all_anchors_1/sub_3"
  op: "Sub"
  input: "get_layer_anchors_1/ExpandDims_1"
  input: "ext_decode_all_anchors_1/truediv_5"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ext_decode_all_anchors_1/truediv_6/y"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 2.0
      }
    }
  }
}
node {
  name: "ext_decode_all_anchors_1/truediv_6"
  op: "RealDiv"
  input: "get_layer_anchors_1/Const"
  input: "ext_decode_all_anchors_1/truediv_6/y"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ext_decode_all_anchors_1/add_2"
  op: "AddV2"
  input: "get_layer_anchors_1/ExpandDims"
  input: "ext_decode_all_anchors_1/truediv_6"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ext_decode_all_anchors_1/truediv_7/y"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 2.0
      }
    }
  }
}
node {
  name: "ext_decode_all_anchors_1/truediv_7"
  op: "RealDiv"
  input: "get_layer_anchors_1/Const_1"
  input: "ext_decode_all_anchors_1/truediv_7/y"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ext_decode_all_anchors_1/add_3"
  op: "AddV2"
  input: "get_layer_anchors_1/ExpandDims_1"
  input: "ext_decode_all_anchors_1/truediv_7"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ext_decode_all_anchors_1/Reshape_4/shape"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "ext_decode_all_anchors_1/Reshape_4"
  op: "Reshape"
  input: "ext_decode_all_anchors_1/sub_2"
  input: "ext_decode_all_anchors_1/Reshape_4/shape"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "ext_decode_all_anchors_1/Reshape_5/shape"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "ext_decode_all_anchors_1/Reshape_5"
  op: "Reshape"
  input: "ext_decode_all_anchors_1/sub_3"
  input: "ext_decode_all_anchors_1/Reshape_5/shape"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "ext_decode_all_anchors_1/Reshape_6/shape"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "ext_decode_all_anchors_1/Reshape_6"
  op: "Reshape"
  input: "ext_decode_all_anchors_1/add_2"
  input: "ext_decode_all_anchors_1/Reshape_6/shape"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "ext_decode_all_anchors_1/Reshape_7/shape"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "ext_decode_all_anchors_1/Reshape_7"
  op: "Reshape"
  input: "ext_decode_all_anchors_1/add_3"
  input: "ext_decode_all_anchors_1/Reshape_7/shape"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "ext_decode_all_anchors_1/truediv_8/y"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 2.0
      }
    }
  }
}
node {
  name: "ext_decode_all_anchors_1/truediv_8"
  op: "RealDiv"
  input: "get_layer_anchors_2/Const"
  input: "ext_decode_all_anchors_1/truediv_8/y"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ext_decode_all_anchors_1/sub_4"
  op: "Sub"
  input: "get_layer_anchors_2/ExpandDims"
  input: "ext_decode_all_anchors_1/truediv_8"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ext_decode_all_anchors_1/truediv_9/y"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 2.0
      }
    }
  }
}
node {
  name: "ext_decode_all_anchors_1/truediv_9"
  op: "RealDiv"
  input: "get_layer_anchors_2/Const_1"
  input: "ext_decode_all_anchors_1/truediv_9/y"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ext_decode_all_anchors_1/sub_5"
  op: "Sub"
  input: "get_layer_anchors_2/ExpandDims_1"
  input: "ext_decode_all_anchors_1/truediv_9"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ext_decode_all_anchors_1/truediv_10/y"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 2.0
      }
    }
  }
}
node {
  name: "ext_decode_all_anchors_1/truediv_10"
  op: "RealDiv"
  input: "get_layer_anchors_2/Const"
  input: "ext_decode_all_anchors_1/truediv_10/y"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ext_decode_all_anchors_1/add_4"
  op: "AddV2"
  input: "get_layer_anchors_2/ExpandDims"
  input: "ext_decode_all_anchors_1/truediv_10"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ext_decode_all_anchors_1/truediv_11/y"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 2.0
      }
    }
  }
}
node {
  name: "ext_decode_all_anchors_1/truediv_11"
  op: "RealDiv"
  input: "get_layer_anchors_2/Const_1"
  input: "ext_decode_all_anchors_1/truediv_11/y"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ext_decode_all_anchors_1/add_5"
  op: "AddV2"
  input: "get_layer_anchors_2/ExpandDims_1"
  input: "ext_decode_all_anchors_1/truediv_11"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ext_decode_all_anchors_1/Reshape_8/shape"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "ext_decode_all_anchors_1/Reshape_8"
  op: "Reshape"
  input: "ext_decode_all_anchors_1/sub_4"
  input: "ext_decode_all_anchors_1/Reshape_8/shape"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "ext_decode_all_anchors_1/Reshape_9/shape"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "ext_decode_all_anchors_1/Reshape_9"
  op: "Reshape"
  input: "ext_decode_all_anchors_1/sub_5"
  input: "ext_decode_all_anchors_1/Reshape_9/shape"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "ext_decode_all_anchors_1/Reshape_10/shape"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "ext_decode_all_anchors_1/Reshape_10"
  op: "Reshape"
  input: "ext_decode_all_anchors_1/add_4"
  input: "ext_decode_all_anchors_1/Reshape_10/shape"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "ext_decode_all_anchors_1/Reshape_11/shape"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "ext_decode_all_anchors_1/Reshape_11"
  op: "Reshape"
  input: "ext_decode_all_anchors_1/add_5"
  input: "ext_decode_all_anchors_1/Reshape_11/shape"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "ext_decode_all_anchors_1/truediv_12/y"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 2.0
      }
    }
  }
}
node {
  name: "ext_decode_all_anchors_1/truediv_12"
  op: "RealDiv"
  input: "get_layer_anchors_3/Const"
  input: "ext_decode_all_anchors_1/truediv_12/y"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ext_decode_all_anchors_1/sub_6"
  op: "Sub"
  input: "get_layer_anchors_3/ExpandDims"
  input: "ext_decode_all_anchors_1/truediv_12"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ext_decode_all_anchors_1/truediv_13/y"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 2.0
      }
    }
  }
}
node {
  name: "ext_decode_all_anchors_1/truediv_13"
  op: "RealDiv"
  input: "get_layer_anchors_3/Const_1"
  input: "ext_decode_all_anchors_1/truediv_13/y"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ext_decode_all_anchors_1/sub_7"
  op: "Sub"
  input: "get_layer_anchors_3/ExpandDims_1"
  input: "ext_decode_all_anchors_1/truediv_13"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ext_decode_all_anchors_1/truediv_14/y"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 2.0
      }
    }
  }
}
node {
  name: "ext_decode_all_anchors_1/truediv_14"
  op: "RealDiv"
  input: "get_layer_anchors_3/Const"
  input: "ext_decode_all_anchors_1/truediv_14/y"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ext_decode_all_anchors_1/add_6"
  op: "AddV2"
  input: "get_layer_anchors_3/ExpandDims"
  input: "ext_decode_all_anchors_1/truediv_14"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ext_decode_all_anchors_1/truediv_15/y"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 2.0
      }
    }
  }
}
node {
  name: "ext_decode_all_anchors_1/truediv_15"
  op: "RealDiv"
  input: "get_layer_anchors_3/Const_1"
  input: "ext_decode_all_anchors_1/truediv_15/y"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ext_decode_all_anchors_1/add_7"
  op: "AddV2"
  input: "get_layer_anchors_3/ExpandDims_1"
  input: "ext_decode_all_anchors_1/truediv_15"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ext_decode_all_anchors_1/Reshape_12/shape"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "ext_decode_all_anchors_1/Reshape_12"
  op: "Reshape"
  input: "ext_decode_all_anchors_1/sub_6"
  input: "ext_decode_all_anchors_1/Reshape_12/shape"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "ext_decode_all_anchors_1/Reshape_13/shape"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "ext_decode_all_anchors_1/Reshape_13"
  op: "Reshape"
  input: "ext_decode_all_anchors_1/sub_7"
  input: "ext_decode_all_anchors_1/Reshape_13/shape"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "ext_decode_all_anchors_1/Reshape_14/shape"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "ext_decode_all_anchors_1/Reshape_14"
  op: "Reshape"
  input: "ext_decode_all_anchors_1/add_6"
  input: "ext_decode_all_anchors_1/Reshape_14/shape"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "ext_decode_all_anchors_1/Reshape_15/shape"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "ext_decode_all_anchors_1/Reshape_15"
  op: "Reshape"
  input: "ext_decode_all_anchors_1/add_7"
  input: "ext_decode_all_anchors_1/Reshape_15/shape"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "ext_decode_all_anchors_1/truediv_16/y"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 2.0
      }
    }
  }
}
node {
  name: "ext_decode_all_anchors_1/truediv_16"
  op: "RealDiv"
  input: "get_layer_anchors_4/Const"
  input: "ext_decode_all_anchors_1/truediv_16/y"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ext_decode_all_anchors_1/sub_8"
  op: "Sub"
  input: "get_layer_anchors_4/ExpandDims"
  input: "ext_decode_all_anchors_1/truediv_16"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ext_decode_all_anchors_1/truediv_17/y"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 2.0
      }
    }
  }
}
node {
  name: "ext_decode_all_anchors_1/truediv_17"
  op: "RealDiv"
  input: "get_layer_anchors_4/Const_1"
  input: "ext_decode_all_anchors_1/truediv_17/y"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ext_decode_all_anchors_1/sub_9"
  op: "Sub"
  input: "get_layer_anchors_4/ExpandDims_1"
  input: "ext_decode_all_anchors_1/truediv_17"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ext_decode_all_anchors_1/truediv_18/y"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 2.0
      }
    }
  }
}
node {
  name: "ext_decode_all_anchors_1/truediv_18"
  op: "RealDiv"
  input: "get_layer_anchors_4/Const"
  input: "ext_decode_all_anchors_1/truediv_18/y"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ext_decode_all_anchors_1/add_8"
  op: "AddV2"
  input: "get_layer_anchors_4/ExpandDims"
  input: "ext_decode_all_anchors_1/truediv_18"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ext_decode_all_anchors_1/truediv_19/y"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 2.0
      }
    }
  }
}
node {
  name: "ext_decode_all_anchors_1/truediv_19"
  op: "RealDiv"
  input: "get_layer_anchors_4/Const_1"
  input: "ext_decode_all_anchors_1/truediv_19/y"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ext_decode_all_anchors_1/add_9"
  op: "AddV2"
  input: "get_layer_anchors_4/ExpandDims_1"
  input: "ext_decode_all_anchors_1/truediv_19"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ext_decode_all_anchors_1/Reshape_16/shape"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "ext_decode_all_anchors_1/Reshape_16"
  op: "Reshape"
  input: "ext_decode_all_anchors_1/sub_8"
  input: "ext_decode_all_anchors_1/Reshape_16/shape"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "ext_decode_all_anchors_1/Reshape_17/shape"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "ext_decode_all_anchors_1/Reshape_17"
  op: "Reshape"
  input: "ext_decode_all_anchors_1/sub_9"
  input: "ext_decode_all_anchors_1/Reshape_17/shape"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "ext_decode_all_anchors_1/Reshape_18/shape"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "ext_decode_all_anchors_1/Reshape_18"
  op: "Reshape"
  input: "ext_decode_all_anchors_1/add_8"
  input: "ext_decode_all_anchors_1/Reshape_18/shape"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "ext_decode_all_anchors_1/Reshape_19/shape"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "ext_decode_all_anchors_1/Reshape_19"
  op: "Reshape"
  input: "ext_decode_all_anchors_1/add_9"
  input: "ext_decode_all_anchors_1/Reshape_19/shape"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "ext_decode_all_anchors_1/truediv_20/y"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 2.0
      }
    }
  }
}
node {
  name: "ext_decode_all_anchors_1/truediv_20"
  op: "RealDiv"
  input: "get_layer_anchors_5/Const"
  input: "ext_decode_all_anchors_1/truediv_20/y"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ext_decode_all_anchors_1/sub_10"
  op: "Sub"
  input: "get_layer_anchors_5/ExpandDims"
  input: "ext_decode_all_anchors_1/truediv_20"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ext_decode_all_anchors_1/truediv_21/y"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 2.0
      }
    }
  }
}
node {
  name: "ext_decode_all_anchors_1/truediv_21"
  op: "RealDiv"
  input: "get_layer_anchors_5/Const_1"
  input: "ext_decode_all_anchors_1/truediv_21/y"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ext_decode_all_anchors_1/sub_11"
  op: "Sub"
  input: "get_layer_anchors_5/ExpandDims_1"
  input: "ext_decode_all_anchors_1/truediv_21"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ext_decode_all_anchors_1/truediv_22/y"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 2.0
      }
    }
  }
}
node {
  name: "ext_decode_all_anchors_1/truediv_22"
  op: "RealDiv"
  input: "get_layer_anchors_5/Const"
  input: "ext_decode_all_anchors_1/truediv_22/y"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ext_decode_all_anchors_1/add_10"
  op: "AddV2"
  input: "get_layer_anchors_5/ExpandDims"
  input: "ext_decode_all_anchors_1/truediv_22"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ext_decode_all_anchors_1/truediv_23/y"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 2.0
      }
    }
  }
}
node {
  name: "ext_decode_all_anchors_1/truediv_23"
  op: "RealDiv"
  input: "get_layer_anchors_5/Const_1"
  input: "ext_decode_all_anchors_1/truediv_23/y"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ext_decode_all_anchors_1/add_11"
  op: "AddV2"
  input: "get_layer_anchors_5/ExpandDims_1"
  input: "ext_decode_all_anchors_1/truediv_23"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ext_decode_all_anchors_1/Reshape_20/shape"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "ext_decode_all_anchors_1/Reshape_20"
  op: "Reshape"
  input: "ext_decode_all_anchors_1/sub_10"
  input: "ext_decode_all_anchors_1/Reshape_20/shape"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "ext_decode_all_anchors_1/Reshape_21/shape"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "ext_decode_all_anchors_1/Reshape_21"
  op: "Reshape"
  input: "ext_decode_all_anchors_1/sub_11"
  input: "ext_decode_all_anchors_1/Reshape_21/shape"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "ext_decode_all_anchors_1/Reshape_22/shape"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "ext_decode_all_anchors_1/Reshape_22"
  op: "Reshape"
  input: "ext_decode_all_anchors_1/add_10"
  input: "ext_decode_all_anchors_1/Reshape_22/shape"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "ext_decode_all_anchors_1/Reshape_23/shape"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "ext_decode_all_anchors_1/Reshape_23"
  op: "Reshape"
  input: "ext_decode_all_anchors_1/add_11"
  input: "ext_decode_all_anchors_1/Reshape_23/shape"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "ext_decode_all_anchors_1/concat_ymin/axis"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "ext_decode_all_anchors_1/concat_ymin"
  op: "ConcatV2"
  input: "ext_decode_all_anchors_1/Reshape"
  input: "ext_decode_all_anchors_1/Reshape_4"
  input: "ext_decode_all_anchors_1/Reshape_8"
  input: "ext_decode_all_anchors_1/Reshape_12"
  input: "ext_decode_all_anchors_1/Reshape_16"
  input: "ext_decode_all_anchors_1/Reshape_20"
  input: "ext_decode_all_anchors_1/concat_ymin/axis"
  device: "/device:CPU:0"
  attr {
    key: "N"
    value {
      i: 6
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "ext_decode_all_anchors_1/concat_xmin/axis"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "ext_decode_all_anchors_1/concat_xmin"
  op: "ConcatV2"
  input: "ext_decode_all_anchors_1/Reshape_1"
  input: "ext_decode_all_anchors_1/Reshape_5"
  input: "ext_decode_all_anchors_1/Reshape_9"
  input: "ext_decode_all_anchors_1/Reshape_13"
  input: "ext_decode_all_anchors_1/Reshape_17"
  input: "ext_decode_all_anchors_1/Reshape_21"
  input: "ext_decode_all_anchors_1/concat_xmin/axis"
  device: "/device:CPU:0"
  attr {
    key: "N"
    value {
      i: 6
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "ext_decode_all_anchors_1/concat_ymax/axis"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "ext_decode_all_anchors_1/concat_ymax"
  op: "ConcatV2"
  input: "ext_decode_all_anchors_1/Reshape_2"
  input: "ext_decode_all_anchors_1/Reshape_6"
  input: "ext_decode_all_anchors_1/Reshape_10"
  input: "ext_decode_all_anchors_1/Reshape_14"
  input: "ext_decode_all_anchors_1/Reshape_18"
  input: "ext_decode_all_anchors_1/Reshape_22"
  input: "ext_decode_all_anchors_1/concat_ymax/axis"
  device: "/device:CPU:0"
  attr {
    key: "N"
    value {
      i: 6
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "ext_decode_all_anchors_1/concat_xmax/axis"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "ext_decode_all_anchors_1/concat_xmax"
  op: "ConcatV2"
  input: "ext_decode_all_anchors_1/Reshape_3"
  input: "ext_decode_all_anchors_1/Reshape_7"
  input: "ext_decode_all_anchors_1/Reshape_11"
  input: "ext_decode_all_anchors_1/Reshape_15"
  input: "ext_decode_all_anchors_1/Reshape_19"
  input: "ext_decode_all_anchors_1/Reshape_23"
  input: "ext_decode_all_anchors_1/concat_xmax/axis"
  device: "/device:CPU:0"
  attr {
    key: "N"
    value {
      i: 6
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "ext_decode_all_anchors_1/sub_12"
  op: "Sub"
  input: "ext_decode_all_anchors_1/concat_ymax"
  input: "ext_decode_all_anchors_1/concat_ymin"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ext_decode_all_anchors_1/sub_13"
  op: "Sub"
  input: "ext_decode_all_anchors_1/concat_xmax"
  input: "ext_decode_all_anchors_1/concat_xmin"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ext_decode_all_anchors_1/truediv_24/y"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 2.0
      }
    }
  }
}
node {
  name: "ext_decode_all_anchors_1/truediv_24"
  op: "RealDiv"
  input: "ext_decode_all_anchors_1/sub_12"
  input: "ext_decode_all_anchors_1/truediv_24/y"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ext_decode_all_anchors_1/add_12"
  op: "AddV2"
  input: "ext_decode_all_anchors_1/concat_ymin"
  input: "ext_decode_all_anchors_1/truediv_24"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ext_decode_all_anchors_1/truediv_25/y"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 2.0
      }
    }
  }
}
node {
  name: "ext_decode_all_anchors_1/truediv_25"
  op: "RealDiv"
  input: "ext_decode_all_anchors_1/sub_13"
  input: "ext_decode_all_anchors_1/truediv_25/y"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ext_decode_all_anchors_1/add_13"
  op: "AddV2"
  input: "ext_decode_all_anchors_1/concat_xmin"
  input: "ext_decode_all_anchors_1/truediv_25"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ext_decode_all_anchors_1/strided_slice/stack"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\000\000\000\376\377\377\377"
      }
    }
  }
}
node {
  name: "ext_decode_all_anchors_1/strided_slice/stack_1"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\000\000\000\377\377\377\377"
      }
    }
  }
}
node {
  name: "ext_decode_all_anchors_1/strided_slice/stack_2"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "ext_decode_all_anchors_1/strided_slice"
  op: "StridedSlice"
  input: "Reshape"
  input: "ext_decode_all_anchors_1/strided_slice/stack"
  input: "ext_decode_all_anchors_1/strided_slice/stack_1"
  input: "ext_decode_all_anchors_1/strided_slice/stack_2"
  device: "/device:CPU:0"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 1
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 1
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 2
    }
  }
}
node {
  name: "ext_decode_all_anchors_1/mul/y"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.20000000298023224
      }
    }
  }
}
node {
  name: "ext_decode_all_anchors_1/mul"
  op: "Mul"
  input: "ext_decode_all_anchors_1/strided_slice"
  input: "ext_decode_all_anchors_1/mul/y"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ext_decode_all_anchors_1/Exp"
  op: "Exp"
  input: "ext_decode_all_anchors_1/mul"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ext_decode_all_anchors_1/mul_1"
  op: "Mul"
  input: "ext_decode_all_anchors_1/Exp"
  input: "ext_decode_all_anchors_1/sub_12"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ext_decode_all_anchors_1/strided_slice_1/stack"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\000\000\000\377\377\377\377"
      }
    }
  }
}
node {
  name: "ext_decode_all_anchors_1/strided_slice_1/stack_1"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\000\000\000\000\000\000\000"
      }
    }
  }
}
node {
  name: "ext_decode_all_anchors_1/strided_slice_1/stack_2"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "ext_decode_all_anchors_1/strided_slice_1"
  op: "StridedSlice"
  input: "Reshape"
  input: "ext_decode_all_anchors_1/strided_slice_1/stack"
  input: "ext_decode_all_anchors_1/strided_slice_1/stack_1"
  input: "ext_decode_all_anchors_1/strided_slice_1/stack_2"
  device: "/device:CPU:0"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 1
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 1
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 2
    }
  }
}
node {
  name: "ext_decode_all_anchors_1/mul_2/y"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.20000000298023224
      }
    }
  }
}
node {
  name: "ext_decode_all_anchors_1/mul_2"
  op: "Mul"
  input: "ext_decode_all_anchors_1/strided_slice_1"
  input: "ext_decode_all_anchors_1/mul_2/y"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ext_decode_all_anchors_1/Exp_1"
  op: "Exp"
  input: "ext_decode_all_anchors_1/mul_2"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ext_decode_all_anchors_1/mul_3"
  op: "Mul"
  input: "ext_decode_all_anchors_1/Exp_1"
  input: "ext_decode_all_anchors_1/sub_13"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ext_decode_all_anchors_1/strided_slice_2/stack"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\000\000\000\000\000\000\000"
      }
    }
  }
}
node {
  name: "ext_decode_all_anchors_1/strided_slice_2/stack_1"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "ext_decode_all_anchors_1/strided_slice_2/stack_2"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "ext_decode_all_anchors_1/strided_slice_2"
  op: "StridedSlice"
  input: "Reshape"
  input: "ext_decode_all_anchors_1/strided_slice_2/stack"
  input: "ext_decode_all_anchors_1/strided_slice_2/stack_1"
  input: "ext_decode_all_anchors_1/strided_slice_2/stack_2"
  device: "/device:CPU:0"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 1
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 1
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 2
    }
  }
}
node {
  name: "ext_decode_all_anchors_1/mul_4/y"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.10000000149011612
      }
    }
  }
}
node {
  name: "ext_decode_all_anchors_1/mul_4"
  op: "Mul"
  input: "ext_decode_all_anchors_1/strided_slice_2"
  input: "ext_decode_all_anchors_1/mul_4/y"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ext_decode_all_anchors_1/mul_5"
  op: "Mul"
  input: "ext_decode_all_anchors_1/mul_4"
  input: "ext_decode_all_anchors_1/sub_12"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ext_decode_all_anchors_1/add_14"
  op: "AddV2"
  input: "ext_decode_all_anchors_1/mul_5"
  input: "ext_decode_all_anchors_1/add_12"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ext_decode_all_anchors_1/strided_slice_3/stack"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "ext_decode_all_anchors_1/strided_slice_3/stack_1"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\000\000\000\002\000\000\000"
      }
    }
  }
}
node {
  name: "ext_decode_all_anchors_1/strided_slice_3/stack_2"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "ext_decode_all_anchors_1/strided_slice_3"
  op: "StridedSlice"
  input: "Reshape"
  input: "ext_decode_all_anchors_1/strided_slice_3/stack"
  input: "ext_decode_all_anchors_1/strided_slice_3/stack_1"
  input: "ext_decode_all_anchors_1/strided_slice_3/stack_2"
  device: "/device:CPU:0"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 1
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 1
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 2
    }
  }
}
node {
  name: "ext_decode_all_anchors_1/mul_6/y"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.10000000149011612
      }
    }
  }
}
node {
  name: "ext_decode_all_anchors_1/mul_6"
  op: "Mul"
  input: "ext_decode_all_anchors_1/strided_slice_3"
  input: "ext_decode_all_anchors_1/mul_6/y"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ext_decode_all_anchors_1/mul_7"
  op: "Mul"
  input: "ext_decode_all_anchors_1/mul_6"
  input: "ext_decode_all_anchors_1/sub_13"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ext_decode_all_anchors_1/add_15"
  op: "AddV2"
  input: "ext_decode_all_anchors_1/mul_7"
  input: "ext_decode_all_anchors_1/add_13"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ext_decode_all_anchors_1/truediv_26/y"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 2.0
      }
    }
  }
}
node {
  name: "ext_decode_all_anchors_1/truediv_26"
  op: "RealDiv"
  input: "ext_decode_all_anchors_1/mul_1"
  input: "ext_decode_all_anchors_1/truediv_26/y"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ext_decode_all_anchors_1/sub_14"
  op: "Sub"
  input: "ext_decode_all_anchors_1/add_14"
  input: "ext_decode_all_anchors_1/truediv_26"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ext_decode_all_anchors_1/truediv_27/y"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 2.0
      }
    }
  }
}
node {
  name: "ext_decode_all_anchors_1/truediv_27"
  op: "RealDiv"
  input: "ext_decode_all_anchors_1/mul_3"
  input: "ext_decode_all_anchors_1/truediv_27/y"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ext_decode_all_anchors_1/sub_15"
  op: "Sub"
  input: "ext_decode_all_anchors_1/add_15"
  input: "ext_decode_all_anchors_1/truediv_27"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ext_decode_all_anchors_1/truediv_28/y"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 2.0
      }
    }
  }
}
node {
  name: "ext_decode_all_anchors_1/truediv_28"
  op: "RealDiv"
  input: "ext_decode_all_anchors_1/mul_1"
  input: "ext_decode_all_anchors_1/truediv_28/y"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ext_decode_all_anchors_1/add_16"
  op: "AddV2"
  input: "ext_decode_all_anchors_1/add_14"
  input: "ext_decode_all_anchors_1/truediv_28"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ext_decode_all_anchors_1/truediv_29/y"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 2.0
      }
    }
  }
}
node {
  name: "ext_decode_all_anchors_1/truediv_29"
  op: "RealDiv"
  input: "ext_decode_all_anchors_1/mul_3"
  input: "ext_decode_all_anchors_1/truediv_29/y"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ext_decode_all_anchors_1/add_17"
  op: "AddV2"
  input: "ext_decode_all_anchors_1/add_15"
  input: "ext_decode_all_anchors_1/truediv_29"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ext_decode_all_anchors_1/stack"
  op: "Pack"
  input: "ext_decode_all_anchors_1/sub_14"
  input: "ext_decode_all_anchors_1/sub_15"
  input: "ext_decode_all_anchors_1/add_16"
  input: "ext_decode_all_anchors_1/add_17"
  device: "/device:CPU:0"
  attr {
    key: "N"
    value {
      i: 4
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "axis"
    value {
      i: -1
    }
  }
}
node {
  name: "ext_decode_all_anchors_1/Const"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 6
          }
        }
        tensor_content: "\244\005\000\000X\002\000\000\226\000\000\0006\000\000\000\020\000\000\000\004\000\000\000"
      }
    }
  }
}
node {
  name: "ext_decode_all_anchors_1/split/split_dim"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "ext_decode_all_anchors_1/split"
  op: "SplitV"
  input: "ext_decode_all_anchors_1/stack"
  input: "ext_decode_all_anchors_1/Const"
  input: "ext_decode_all_anchors_1/split/split_dim"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tlen"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "num_split"
    value {
      i: 6
    }
  }
}
node {
  name: "concat/axis"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "concat"
  op: "ConcatV2"
  input: "ext_decode_all_anchors_1/split"
  input: "ext_decode_all_anchors_1/split:1"
  input: "ext_decode_all_anchors_1/split:2"
  input: "ext_decode_all_anchors_1/split:3"
  input: "ext_decode_all_anchors_1/split:4"
  input: "ext_decode_all_anchors_1/split:5"
  input: "concat/axis"
  device: "/device:CPU:0"
  attr {
    key: "N"
    value {
      i: 6
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "select_bboxes/Softmax"
  op: "Softmax"
  input: "Reshape_1"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "select_bboxes/select_bboxes/strided_slice/stack"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "select_bboxes/select_bboxes/strided_slice/stack_1"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\000\000\000\002\000\000\000"
      }
    }
  }
}
node {
  name: "select_bboxes/select_bboxes/strided_slice/stack_2"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "select_bboxes/select_bboxes/strided_slice"
  op: "StridedSlice"
  input: "select_bboxes/Softmax"
  input: "select_bboxes/select_bboxes/strided_slice/stack"
  input: "select_bboxes/select_bboxes/strided_slice/stack_1"
  input: "select_bboxes/select_bboxes/strided_slice/stack_2"
  device: "/device:CPU:0"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 1
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 1
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 2
    }
  }
}
node {
  name: "select_bboxes/select_bboxes/Greater/y"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.20000000298023224
      }
    }
  }
}
node {
  name: "select_bboxes/select_bboxes/Greater"
  op: "Greater"
  input: "select_bboxes/select_bboxes/strided_slice"
  input: "select_bboxes/select_bboxes/Greater/y"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "select_bboxes/select_bboxes/ones_like/Shape"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 2268
      }
    }
  }
}
node {
  name: "select_bboxes/select_bboxes/ones_like/Const"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "select_bboxes/select_bboxes/ones_like"
  op: "Fill"
  input: "select_bboxes/select_bboxes/ones_like/Shape"
  input: "select_bboxes/select_bboxes/ones_like/Const"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "select_bboxes/select_bboxes/zeros_like/shape_as_tensor"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 2268
      }
    }
  }
}
node {
  name: "select_bboxes/select_bboxes/zeros_like/Const"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "select_bboxes/select_bboxes/zeros_like"
  op: "Fill"
  input: "select_bboxes/select_bboxes/zeros_like/shape_as_tensor"
  input: "select_bboxes/select_bboxes/zeros_like/Const"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "select_bboxes/select_bboxes/Select"
  op: "Select"
  input: "select_bboxes/select_bboxes/Greater"
  input: "select_bboxes/select_bboxes/ones_like"
  input: "select_bboxes/select_bboxes/zeros_like"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "select_bboxes/select_bboxes/ExpandDims/dim"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "select_bboxes/select_bboxes/ExpandDims"
  op: "ExpandDims"
  input: "select_bboxes/select_bboxes/Select"
  input: "select_bboxes/select_bboxes/ExpandDims/dim"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tdim"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "select_bboxes/select_bboxes/Mul"
  op: "Mul"
  input: "concat"
  input: "select_bboxes/select_bboxes/ExpandDims"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "select_bboxes/select_bboxes/Mul_1"
  op: "Mul"
  input: "select_bboxes/select_bboxes/strided_slice"
  input: "select_bboxes/select_bboxes/Select"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "select_bboxes/unstack"
  op: "Unpack"
  input: "select_bboxes/select_bboxes/Mul"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "axis"
    value {
      i: -1
    }
  }
  attr {
    key: "num"
    value {
      i: 4
    }
  }
}
node {
  name: "select_bboxes/clip_bboxes_1/Maximum/y"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "select_bboxes/clip_bboxes_1/Maximum"
  op: "Maximum"
  input: "select_bboxes/unstack"
  input: "select_bboxes/clip_bboxes_1/Maximum/y"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "select_bboxes/clip_bboxes_1/Maximum_1/y"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "select_bboxes/clip_bboxes_1/Maximum_1"
  op: "Maximum"
  input: "select_bboxes/unstack:1"
  input: "select_bboxes/clip_bboxes_1/Maximum_1/y"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "select_bboxes/clip_bboxes_1/Minimum/y"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "select_bboxes/clip_bboxes_1/Minimum"
  op: "Minimum"
  input: "select_bboxes/unstack:2"
  input: "select_bboxes/clip_bboxes_1/Minimum/y"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "select_bboxes/clip_bboxes_1/Minimum_1/y"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "select_bboxes/clip_bboxes_1/Minimum_1"
  op: "Minimum"
  input: "select_bboxes/unstack:3"
  input: "select_bboxes/clip_bboxes_1/Minimum_1/y"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "select_bboxes/clip_bboxes_1/Minimum_2"
  op: "Minimum"
  input: "select_bboxes/clip_bboxes_1/Maximum"
  input: "select_bboxes/clip_bboxes_1/Minimum"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "select_bboxes/clip_bboxes_1/Minimum_3"
  op: "Minimum"
  input: "select_bboxes/clip_bboxes_1/Maximum_1"
  input: "select_bboxes/clip_bboxes_1/Minimum_1"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "select_bboxes/filter_bboxes_1/sub"
  op: "Sub"
  input: "select_bboxes/clip_bboxes_1/Minimum_1"
  input: "select_bboxes/clip_bboxes_1/Minimum_3"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "select_bboxes/filter_bboxes_1/sub_1"
  op: "Sub"
  input: "select_bboxes/clip_bboxes_1/Minimum"
  input: "select_bboxes/clip_bboxes_1/Minimum_2"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "select_bboxes/filter_bboxes_1/Greater/y"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.10000000149011612
      }
    }
  }
}
node {
  name: "select_bboxes/filter_bboxes_1/Greater"
  op: "Greater"
  input: "select_bboxes/filter_bboxes_1/sub"
  input: "select_bboxes/filter_bboxes_1/Greater/y"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "select_bboxes/filter_bboxes_1/Greater_1/y"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.10000000149011612
      }
    }
  }
}
node {
  name: "select_bboxes/filter_bboxes_1/Greater_1"
  op: "Greater"
  input: "select_bboxes/filter_bboxes_1/sub_1"
  input: "select_bboxes/filter_bboxes_1/Greater_1/y"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "select_bboxes/filter_bboxes_1/LogicalAnd"
  op: "LogicalAnd"
  input: "select_bboxes/filter_bboxes_1/Greater"
  input: "select_bboxes/filter_bboxes_1/Greater_1"
  device: "/device:CPU:0"
}
node {
  name: "select_bboxes/filter_bboxes_1/Cast"
  op: "Cast"
  input: "select_bboxes/filter_bboxes_1/LogicalAnd"
  device: "/device:CPU:0"
  attr {
    key: "DstT"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "SrcT"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "Truncate"
    value {
      b: false
    }
  }
}
node {
  name: "select_bboxes/filter_bboxes_1/Mul"
  op: "Mul"
  input: "select_bboxes/clip_bboxes_1/Minimum_2"
  input: "select_bboxes/filter_bboxes_1/Cast"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "select_bboxes/filter_bboxes_1/Mul_1"
  op: "Mul"
  input: "select_bboxes/clip_bboxes_1/Minimum_3"
  input: "select_bboxes/filter_bboxes_1/Cast"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "select_bboxes/filter_bboxes_1/Mul_2"
  op: "Mul"
  input: "select_bboxes/clip_bboxes_1/Minimum"
  input: "select_bboxes/filter_bboxes_1/Cast"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "select_bboxes/filter_bboxes_1/Mul_3"
  op: "Mul"
  input: "select_bboxes/clip_bboxes_1/Minimum_1"
  input: "select_bboxes/filter_bboxes_1/Cast"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "select_bboxes/filter_bboxes_1/Mul_4"
  op: "Mul"
  input: "select_bboxes/select_bboxes/Mul_1"
  input: "select_bboxes/filter_bboxes_1/Cast"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "select_bboxes/sort_bboxes_1/Shape"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 2268
      }
    }
  }
}
node {
  name: "select_bboxes/sort_bboxes_1/strided_slice/stack"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "select_bboxes/sort_bboxes_1/strided_slice/stack_1"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "select_bboxes/sort_bboxes_1/strided_slice/stack_2"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "select_bboxes/sort_bboxes_1/strided_slice"
  op: "StridedSlice"
  input: "select_bboxes/sort_bboxes_1/Shape"
  input: "select_bboxes/sort_bboxes_1/strided_slice/stack"
  input: "select_bboxes/sort_bboxes_1/strided_slice/stack_1"
  input: "select_bboxes/sort_bboxes_1/strided_slice/stack_2"
  device: "/device:CPU:0"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "select_bboxes/sort_bboxes_1/Minimum/x"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 200
      }
    }
  }
}
node {
  name: "select_bboxes/sort_bboxes_1/Minimum"
  op: "Minimum"
  input: "select_bboxes/sort_bboxes_1/Minimum/x"
  input: "select_bboxes/sort_bboxes_1/strided_slice"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "select_bboxes/sort_bboxes_1/TopKV2"
  op: "TopKV2"
  input: "select_bboxes/filter_bboxes_1/Mul_4"
  input: "select_bboxes/sort_bboxes_1/Minimum"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "sorted"
    value {
      b: true
    }
  }
}
node {
  name: "select_bboxes/sort_bboxes_1/GatherV2/axis"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "select_bboxes/sort_bboxes_1/GatherV2"
  op: "GatherV2"
  input: "select_bboxes/filter_bboxes_1/Mul"
  input: "select_bboxes/sort_bboxes_1/TopKV2:1"
  input: "select_bboxes/sort_bboxes_1/GatherV2/axis"
  device: "/device:CPU:0"
  attr {
    key: "Taxis"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tindices"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tparams"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "batch_dims"
    value {
      i: 0
    }
  }
}
node {
  name: "select_bboxes/sort_bboxes_1/GatherV2_1/axis"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "select_bboxes/sort_bboxes_1/GatherV2_1"
  op: "GatherV2"
  input: "select_bboxes/filter_bboxes_1/Mul_1"
  input: "select_bboxes/sort_bboxes_1/TopKV2:1"
  input: "select_bboxes/sort_bboxes_1/GatherV2_1/axis"
  device: "/device:CPU:0"
  attr {
    key: "Taxis"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tindices"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tparams"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "batch_dims"
    value {
      i: 0
    }
  }
}
node {
  name: "select_bboxes/sort_bboxes_1/GatherV2_2/axis"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "select_bboxes/sort_bboxes_1/GatherV2_2"
  op: "GatherV2"
  input: "select_bboxes/filter_bboxes_1/Mul_2"
  input: "select_bboxes/sort_bboxes_1/TopKV2:1"
  input: "select_bboxes/sort_bboxes_1/GatherV2_2/axis"
  device: "/device:CPU:0"
  attr {
    key: "Taxis"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tindices"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tparams"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "batch_dims"
    value {
      i: 0
    }
  }
}
node {
  name: "select_bboxes/sort_bboxes_1/GatherV2_3/axis"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "select_bboxes/sort_bboxes_1/GatherV2_3"
  op: "GatherV2"
  input: "select_bboxes/filter_bboxes_1/Mul_3"
  input: "select_bboxes/sort_bboxes_1/TopKV2:1"
  input: "select_bboxes/sort_bboxes_1/GatherV2_3/axis"
  device: "/device:CPU:0"
  attr {
    key: "Taxis"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tindices"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tparams"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "batch_dims"
    value {
      i: 0
    }
  }
}
node {
  name: "select_bboxes/sort_bboxes_1/sub/x"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 200
      }
    }
  }
}
node {
  name: "select_bboxes/sort_bboxes_1/sub"
  op: "Sub"
  input: "select_bboxes/sort_bboxes_1/sub/x"
  input: "select_bboxes/sort_bboxes_1/strided_slice"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "select_bboxes/sort_bboxes_1/Maximum/y"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "select_bboxes/sort_bboxes_1/Maximum"
  op: "Maximum"
  input: "select_bboxes/sort_bboxes_1/sub"
  input: "select_bboxes/sort_bboxes_1/Maximum/y"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "select_bboxes/sort_bboxes_1/stack/0"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "select_bboxes/sort_bboxes_1/stack"
  op: "Pack"
  input: "select_bboxes/sort_bboxes_1/stack/0"
  input: "select_bboxes/sort_bboxes_1/Maximum"
  device: "/device:CPU:0"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "select_bboxes/sort_bboxes_1/ExpandDims/dim"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "select_bboxes/sort_bboxes_1/ExpandDims"
  op: "ExpandDims"
  input: "select_bboxes/sort_bboxes_1/stack"
  input: "select_bboxes/sort_bboxes_1/ExpandDims/dim"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tdim"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "select_bboxes/sort_bboxes_1/Pad"
  op: "Pad"
  input: "select_bboxes/sort_bboxes_1/GatherV2"
  input: "select_bboxes/sort_bboxes_1/ExpandDims"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tpaddings"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "select_bboxes/sort_bboxes_1/Pad_1"
  op: "Pad"
  input: "select_bboxes/sort_bboxes_1/GatherV2_1"
  input: "select_bboxes/sort_bboxes_1/ExpandDims"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tpaddings"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "select_bboxes/sort_bboxes_1/Pad_2"
  op: "Pad"
  input: "select_bboxes/sort_bboxes_1/GatherV2_2"
  input: "select_bboxes/sort_bboxes_1/ExpandDims"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tpaddings"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "select_bboxes/sort_bboxes_1/Pad_3"
  op: "Pad"
  input: "select_bboxes/sort_bboxes_1/GatherV2_3"
  input: "select_bboxes/sort_bboxes_1/ExpandDims"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tpaddings"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "select_bboxes/sort_bboxes_1/Pad_4"
  op: "Pad"
  input: "select_bboxes/sort_bboxes_1/TopKV2"
  input: "select_bboxes/sort_bboxes_1/ExpandDims"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tpaddings"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "select_bboxes/stack"
  op: "Pack"
  input: "select_bboxes/sort_bboxes_1/Pad"
  input: "select_bboxes/sort_bboxes_1/Pad_1"
  input: "select_bboxes/sort_bboxes_1/Pad_2"
  input: "select_bboxes/sort_bboxes_1/Pad_3"
  device: "/device:CPU:0"
  attr {
    key: "N"
    value {
      i: 4
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "axis"
    value {
      i: -1
    }
  }
}
node {
  name: "select_bboxes/nms_bboxes_1/non_max_suppression/iou_threshold"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.44999998807907104
      }
    }
  }
}
node {
  name: "select_bboxes/nms_bboxes_1/non_max_suppression/score_threshold"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: -inf
      }
    }
  }
}
node {
  name: "select_bboxes/nms_bboxes_1/non_max_suppression/NonMaxSuppressionV3/max_output_size"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 20
      }
    }
  }
}
node {
  name: "select_bboxes/nms_bboxes_1/non_max_suppression/NonMaxSuppressionV3"
  op: "NonMaxSuppressionV3"
  input: "select_bboxes/stack"
  input: "select_bboxes/sort_bboxes_1/Pad_4"
  input: "select_bboxes/nms_bboxes_1/non_max_suppression/NonMaxSuppressionV3/max_output_size"
  input: "select_bboxes/nms_bboxes_1/non_max_suppression/iou_threshold"
  input: "select_bboxes/nms_bboxes_1/non_max_suppression/score_threshold"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "T_threshold"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "select_bboxes/nms_bboxes_1/GatherV2/axis"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "select_bboxes/nms_bboxes_1/GatherV2"
  op: "GatherV2"
  input: "select_bboxes/sort_bboxes_1/Pad_4"
  input: "select_bboxes/nms_bboxes_1/non_max_suppression/NonMaxSuppressionV3"
  input: "select_bboxes/nms_bboxes_1/GatherV2/axis"
  device: "/device:CPU:0"
  attr {
    key: "Taxis"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tindices"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tparams"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "batch_dims"
    value {
      i: 0
    }
  }
}
node {
  name: "select_bboxes/nms_bboxes_1/GatherV2_1/axis"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "select_bboxes/nms_bboxes_1/GatherV2_1"
  op: "GatherV2"
  input: "select_bboxes/stack"
  input: "select_bboxes/nms_bboxes_1/non_max_suppression/NonMaxSuppressionV3"
  input: "select_bboxes/nms_bboxes_1/GatherV2_1/axis"
  device: "/device:CPU:0"
  attr {
    key: "Taxis"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tindices"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tparams"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "batch_dims"
    value {
      i: 0
    }
  }
}
node {
  name: "ones_like/Shape"
  op: "Shape"
  input: "select_bboxes/nms_bboxes_1/GatherV2"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "ones_like/Const"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "ones_like"
  op: "Fill"
  input: "ones_like/Shape"
  input: "ones_like/Const"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "mul/y"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "mul"
  op: "Mul"
  input: "ones_like"
  input: "mul/y"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "concat_1/concat_dim"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "concat_1/concat"
  op: "Identity"
  input: "mul"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "concat_2/concat_dim"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "concat_2/concat"
  op: "Identity"
  input: "select_bboxes/nms_bboxes_1/GatherV2"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "concat_3/concat_dim"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "concat_3/concat"
  op: "Identity"
  input: "select_bboxes/nms_bboxes_1/GatherV2_1"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ExpandDims/dim"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "ExpandDims"
  op: "ExpandDims"
  input: "concat_2/concat"
  input: "ExpandDims/dim"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tdim"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "concat_4/axis"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "concat_4"
  op: "ConcatV2"
  input: "ExpandDims"
  input: "concat_3/concat"
  input: "concat_4/axis"
  device: "/device:CPU:0"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "save/filename/input"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "model"
      }
    }
  }
}
node {
  name: "save/filename"
  op: "PlaceholderWithDefault"
  input: "save/filename/input"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "shape"
    value {
      shape {
      }
    }
  }
}
node {
  name: "save/Const"
  op: "PlaceholderWithDefault"
  input: "save/filename"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "shape"
    value {
      shape {
      }
    }
  }
}
node {
  name: "save/SaveV2/tensor_names"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 280
          }
        }
        string_val: "ssd300/Conv/BatchNorm/beta"
        string_val: "ssd300/Conv/BatchNorm/moving_mean"
        string_val: "ssd300/Conv/BatchNorm/moving_variance"
        string_val: "ssd300/Conv/weights"
        string_val: "ssd300/Conv_1/BatchNorm/beta"
        string_val: "ssd300/Conv_1/BatchNorm/moving_mean"
        string_val: "ssd300/Conv_1/BatchNorm/moving_variance"
        string_val: "ssd300/Conv_1/weights"
        string_val: "ssd300/expanded_conv/depthwise/BatchNorm/beta"
        string_val: "ssd300/expanded_conv/depthwise/BatchNorm/moving_mean"
        string_val: "ssd300/expanded_conv/depthwise/BatchNorm/moving_variance"
        string_val: "ssd300/expanded_conv/depthwise/depthwise_weights"
        string_val: "ssd300/expanded_conv/project/BatchNorm/beta"
        string_val: "ssd300/expanded_conv/project/BatchNorm/moving_mean"
        string_val: "ssd300/expanded_conv/project/BatchNorm/moving_variance"
        string_val: "ssd300/expanded_conv/project/weights"
        string_val: "ssd300/expanded_conv_1/depthwise/BatchNorm/beta"
        string_val: "ssd300/expanded_conv_1/depthwise/BatchNorm/moving_mean"
        string_val: "ssd300/expanded_conv_1/depthwise/BatchNorm/moving_variance"
        string_val: "ssd300/expanded_conv_1/depthwise/depthwise_weights"
        string_val: "ssd300/expanded_conv_1/expand/BatchNorm/beta"
        string_val: "ssd300/expanded_conv_1/expand/BatchNorm/moving_mean"
        string_val: "ssd300/expanded_conv_1/expand/BatchNorm/moving_variance"
        string_val: "ssd300/expanded_conv_1/expand/weights"
        string_val: "ssd300/expanded_conv_1/project/BatchNorm/beta"
        string_val: "ssd300/expanded_conv_1/project/BatchNorm/moving_mean"
        string_val: "ssd300/expanded_conv_1/project/BatchNorm/moving_variance"
        string_val: "ssd300/expanded_conv_1/project/weights"
        string_val: "ssd300/expanded_conv_10/depthwise/BatchNorm/beta"
        string_val: "ssd300/expanded_conv_10/depthwise/BatchNorm/moving_mean"
        string_val: "ssd300/expanded_conv_10/depthwise/BatchNorm/moving_variance"
        string_val: "ssd300/expanded_conv_10/depthwise/depthwise_weights"
        string_val: "ssd300/expanded_conv_10/expand/BatchNorm/beta"
        string_val: "ssd300/expanded_conv_10/expand/BatchNorm/moving_mean"
        string_val: "ssd300/expanded_conv_10/expand/BatchNorm/moving_variance"
        string_val: "ssd300/expanded_conv_10/expand/weights"
        string_val: "ssd300/expanded_conv_10/project/BatchNorm/beta"
        string_val: "ssd300/expanded_conv_10/project/BatchNorm/moving_mean"
        string_val: "ssd300/expanded_conv_10/project/BatchNorm/moving_variance"
        string_val: "ssd300/expanded_conv_10/project/weights"
        string_val: "ssd300/expanded_conv_11/depthwise/BatchNorm/beta"
        string_val: "ssd300/expanded_conv_11/depthwise/BatchNorm/moving_mean"
        string_val: "ssd300/expanded_conv_11/depthwise/BatchNorm/moving_variance"
        string_val: "ssd300/expanded_conv_11/depthwise/depthwise_weights"
        string_val: "ssd300/expanded_conv_11/expand/BatchNorm/beta"
        string_val: "ssd300/expanded_conv_11/expand/BatchNorm/moving_mean"
        string_val: "ssd300/expanded_conv_11/expand/BatchNorm/moving_variance"
        string_val: "ssd300/expanded_conv_11/expand/weights"
        string_val: "ssd300/expanded_conv_11/project/BatchNorm/beta"
        string_val: "ssd300/expanded_conv_11/project/BatchNorm/moving_mean"
        string_val: "ssd300/expanded_conv_11/project/BatchNorm/moving_variance"
        string_val: "ssd300/expanded_conv_11/project/weights"
        string_val: "ssd300/expanded_conv_12/depthwise/BatchNorm/beta"
        string_val: "ssd300/expanded_conv_12/depthwise/BatchNorm/moving_mean"
        string_val: "ssd300/expanded_conv_12/depthwise/BatchNorm/moving_variance"
        string_val: "ssd300/expanded_conv_12/depthwise/depthwise_weights"
        string_val: "ssd300/expanded_conv_12/expand/BatchNorm/beta"
        string_val: "ssd300/expanded_conv_12/expand/BatchNorm/moving_mean"
        string_val: "ssd300/expanded_conv_12/expand/BatchNorm/moving_variance"
        string_val: "ssd300/expanded_conv_12/expand/weights"
        string_val: "ssd300/expanded_conv_12/project/BatchNorm/beta"
        string_val: "ssd300/expanded_conv_12/project/BatchNorm/moving_mean"
        string_val: "ssd300/expanded_conv_12/project/BatchNorm/moving_variance"
        string_val: "ssd300/expanded_conv_12/project/weights"
        string_val: "ssd300/expanded_conv_13/depthwise/BatchNorm/beta"
        string_val: "ssd300/expanded_conv_13/depthwise/BatchNorm/moving_mean"
        string_val: "ssd300/expanded_conv_13/depthwise/BatchNorm/moving_variance"
        string_val: "ssd300/expanded_conv_13/depthwise/depthwise_weights"
        string_val: "ssd300/expanded_conv_13/expand/BatchNorm/beta"
        string_val: "ssd300/expanded_conv_13/expand/BatchNorm/moving_mean"
        string_val: "ssd300/expanded_conv_13/expand/BatchNorm/moving_variance"
        string_val: "ssd300/expanded_conv_13/expand/weights"
        string_val: "ssd300/expanded_conv_13/project/BatchNorm/beta"
        string_val: "ssd300/expanded_conv_13/project/BatchNorm/moving_mean"
        string_val: "ssd300/expanded_conv_13/project/BatchNorm/moving_variance"
        string_val: "ssd300/expanded_conv_13/project/weights"
        string_val: "ssd300/expanded_conv_14/depthwise/BatchNorm/beta"
        string_val: "ssd300/expanded_conv_14/depthwise/BatchNorm/moving_mean"
        string_val: "ssd300/expanded_conv_14/depthwise/BatchNorm/moving_variance"
        string_val: "ssd300/expanded_conv_14/depthwise/depthwise_weights"
        string_val: "ssd300/expanded_conv_14/expand/BatchNorm/beta"
        string_val: "ssd300/expanded_conv_14/expand/BatchNorm/moving_mean"
        string_val: "ssd300/expanded_conv_14/expand/BatchNorm/moving_variance"
        string_val: "ssd300/expanded_conv_14/expand/weights"
        string_val: "ssd300/expanded_conv_14/project/BatchNorm/beta"
        string_val: "ssd300/expanded_conv_14/project/BatchNorm/moving_mean"
        string_val: "ssd300/expanded_conv_14/project/BatchNorm/moving_variance"
        string_val: "ssd300/expanded_conv_14/project/weights"
        string_val: "ssd300/expanded_conv_15/depthwise/BatchNorm/beta"
        string_val: "ssd300/expanded_conv_15/depthwise/BatchNorm/moving_mean"
        string_val: "ssd300/expanded_conv_15/depthwise/BatchNorm/moving_variance"
        string_val: "ssd300/expanded_conv_15/depthwise/depthwise_weights"
        string_val: "ssd300/expanded_conv_15/expand/BatchNorm/beta"
        string_val: "ssd300/expanded_conv_15/expand/BatchNorm/moving_mean"
        string_val: "ssd300/expanded_conv_15/expand/BatchNorm/moving_variance"
        string_val: "ssd300/expanded_conv_15/expand/weights"
        string_val: "ssd300/expanded_conv_15/project/BatchNorm/beta"
        string_val: "ssd300/expanded_conv_15/project/BatchNorm/moving_mean"
        string_val: "ssd300/expanded_conv_15/project/BatchNorm/moving_variance"
        string_val: "ssd300/expanded_conv_15/project/weights"
        string_val: "ssd300/expanded_conv_16/depthwise/BatchNorm/beta"
        string_val: "ssd300/expanded_conv_16/depthwise/BatchNorm/moving_mean"
        string_val: "ssd300/expanded_conv_16/depthwise/BatchNorm/moving_variance"
        string_val: "ssd300/expanded_conv_16/depthwise/depthwise_weights"
        string_val: "ssd300/expanded_conv_16/expand/BatchNorm/beta"
        string_val: "ssd300/expanded_conv_16/expand/BatchNorm/moving_mean"
        string_val: "ssd300/expanded_conv_16/expand/BatchNorm/moving_variance"
        string_val: "ssd300/expanded_conv_16/expand/weights"
        string_val: "ssd300/expanded_conv_16/project/BatchNorm/beta"
        string_val: "ssd300/expanded_conv_16/project/BatchNorm/moving_mean"
        string_val: "ssd300/expanded_conv_16/project/BatchNorm/moving_variance"
        string_val: "ssd300/expanded_conv_16/project/weights"
        string_val: "ssd300/expanded_conv_2/depthwise/BatchNorm/beta"
        string_val: "ssd300/expanded_conv_2/depthwise/BatchNorm/moving_mean"
        string_val: "ssd300/expanded_conv_2/depthwise/BatchNorm/moving_variance"
        string_val: "ssd300/expanded_conv_2/depthwise/depthwise_weights"
        string_val: "ssd300/expanded_conv_2/expand/BatchNorm/beta"
        string_val: "ssd300/expanded_conv_2/expand/BatchNorm/moving_mean"
        string_val: "ssd300/expanded_conv_2/expand/BatchNorm/moving_variance"
        string_val: "ssd300/expanded_conv_2/expand/weights"
        string_val: "ssd300/expanded_conv_2/project/BatchNorm/beta"
        string_val: "ssd300/expanded_conv_2/project/BatchNorm/moving_mean"
        string_val: "ssd300/expanded_conv_2/project/BatchNorm/moving_variance"
        string_val: "ssd300/expanded_conv_2/project/weights"
        string_val: "ssd300/expanded_conv_3/depthwise/BatchNorm/beta"
        string_val: "ssd300/expanded_conv_3/depthwise/BatchNorm/moving_mean"
        string_val: "ssd300/expanded_conv_3/depthwise/BatchNorm/moving_variance"
        string_val: "ssd300/expanded_conv_3/depthwise/depthwise_weights"
        string_val: "ssd300/expanded_conv_3/expand/BatchNorm/beta"
        string_val: "ssd300/expanded_conv_3/expand/BatchNorm/moving_mean"
        string_val: "ssd300/expanded_conv_3/expand/BatchNorm/moving_variance"
        string_val: "ssd300/expanded_conv_3/expand/weights"
        string_val: "ssd300/expanded_conv_3/project/BatchNorm/beta"
        string_val: "ssd300/expanded_conv_3/project/BatchNorm/moving_mean"
        string_val: "ssd300/expanded_conv_3/project/BatchNorm/moving_variance"
        string_val: "ssd300/expanded_conv_3/project/weights"
        string_val: "ssd300/expanded_conv_4/depthwise/BatchNorm/beta"
        string_val: "ssd300/expanded_conv_4/depthwise/BatchNorm/moving_mean"
        string_val: "ssd300/expanded_conv_4/depthwise/BatchNorm/moving_variance"
        string_val: "ssd300/expanded_conv_4/depthwise/depthwise_weights"
        string_val: "ssd300/expanded_conv_4/expand/BatchNorm/beta"
        string_val: "ssd300/expanded_conv_4/expand/BatchNorm/moving_mean"
        string_val: "ssd300/expanded_conv_4/expand/BatchNorm/moving_variance"
        string_val: "ssd300/expanded_conv_4/expand/weights"
        string_val: "ssd300/expanded_conv_4/project/BatchNorm/beta"
        string_val: "ssd300/expanded_conv_4/project/BatchNorm/moving_mean"
        string_val: "ssd300/expanded_conv_4/project/BatchNorm/moving_variance"
        string_val: "ssd300/expanded_conv_4/project/weights"
        string_val: "ssd300/expanded_conv_5/depthwise/BatchNorm/beta"
        string_val: "ssd300/expanded_conv_5/depthwise/BatchNorm/moving_mean"
        string_val: "ssd300/expanded_conv_5/depthwise/BatchNorm/moving_variance"
        string_val: "ssd300/expanded_conv_5/depthwise/depthwise_weights"
        string_val: "ssd300/expanded_conv_5/expand/BatchNorm/beta"
        string_val: "ssd300/expanded_conv_5/expand/BatchNorm/moving_mean"
        string_val: "ssd300/expanded_conv_5/expand/BatchNorm/moving_variance"
        string_val: "ssd300/expanded_conv_5/expand/weights"
        string_val: "ssd300/expanded_conv_5/project/BatchNorm/beta"
        string_val: "ssd300/expanded_conv_5/project/BatchNorm/moving_mean"
        string_val: "ssd300/expanded_conv_5/project/BatchNorm/moving_variance"
        string_val: "ssd300/expanded_conv_5/project/weights"
        string_val: "ssd300/expanded_conv_6/depthwise/BatchNorm/beta"
        string_val: "ssd300/expanded_conv_6/depthwise/BatchNorm/moving_mean"
        string_val: "ssd300/expanded_conv_6/depthwise/BatchNorm/moving_variance"
        string_val: "ssd300/expanded_conv_6/depthwise/depthwise_weights"
        string_val: "ssd300/expanded_conv_6/expand/BatchNorm/beta"
        string_val: "ssd300/expanded_conv_6/expand/BatchNorm/moving_mean"
        string_val: "ssd300/expanded_conv_6/expand/BatchNorm/moving_variance"
        string_val: "ssd300/expanded_conv_6/expand/weights"
        string_val: "ssd300/expanded_conv_6/project/BatchNorm/beta"
        string_val: "ssd300/expanded_conv_6/project/BatchNorm/moving_mean"
        string_val: "ssd300/expanded_conv_6/project/BatchNorm/moving_variance"
        string_val: "ssd300/expanded_conv_6/project/weights"
        string_val: "ssd300/expanded_conv_7/depthwise/BatchNorm/beta"
        string_val: "ssd300/expanded_conv_7/depthwise/BatchNorm/moving_mean"
        string_val: "ssd300/expanded_conv_7/depthwise/BatchNorm/moving_variance"
        string_val: "ssd300/expanded_conv_7/depthwise/depthwise_weights"
        string_val: "ssd300/expanded_conv_7/expand/BatchNorm/beta"
        string_val: "ssd300/expanded_conv_7/expand/BatchNorm/moving_mean"
        string_val: "ssd300/expanded_conv_7/expand/BatchNorm/moving_variance"
        string_val: "ssd300/expanded_conv_7/expand/weights"
        string_val: "ssd300/expanded_conv_7/project/BatchNorm/beta"
        string_val: "ssd300/expanded_conv_7/project/BatchNorm/moving_mean"
        string_val: "ssd300/expanded_conv_7/project/BatchNorm/moving_variance"
        string_val: "ssd300/expanded_conv_7/project/weights"
        string_val: "ssd300/expanded_conv_8/depthwise/BatchNorm/beta"
        string_val: "ssd300/expanded_conv_8/depthwise/BatchNorm/moving_mean"
        string_val: "ssd300/expanded_conv_8/depthwise/BatchNorm/moving_variance"
        string_val: "ssd300/expanded_conv_8/depthwise/depthwise_weights"
        string_val: "ssd300/expanded_conv_8/expand/BatchNorm/beta"
        string_val: "ssd300/expanded_conv_8/expand/BatchNorm/moving_mean"
        string_val: "ssd300/expanded_conv_8/expand/BatchNorm/moving_variance"
        string_val: "ssd300/expanded_conv_8/expand/weights"
        string_val: "ssd300/expanded_conv_8/project/BatchNorm/beta"
        string_val: "ssd300/expanded_conv_8/project/BatchNorm/moving_mean"
        string_val: "ssd300/expanded_conv_8/project/BatchNorm/moving_variance"
        string_val: "ssd300/expanded_conv_8/project/weights"
        string_val: "ssd300/expanded_conv_9/depthwise/BatchNorm/beta"
        string_val: "ssd300/expanded_conv_9/depthwise/BatchNorm/moving_mean"
        string_val: "ssd300/expanded_conv_9/depthwise/BatchNorm/moving_variance"
        string_val: "ssd300/expanded_conv_9/depthwise/depthwise_weights"
        string_val: "ssd300/expanded_conv_9/expand/BatchNorm/beta"
        string_val: "ssd300/expanded_conv_9/expand/BatchNorm/moving_mean"
        string_val: "ssd300/expanded_conv_9/expand/BatchNorm/moving_variance"
        string_val: "ssd300/expanded_conv_9/expand/weights"
        string_val: "ssd300/expanded_conv_9/project/BatchNorm/beta"
        string_val: "ssd300/expanded_conv_9/project/BatchNorm/moving_mean"
        string_val: "ssd300/expanded_conv_9/project/BatchNorm/moving_variance"
        string_val: "ssd300/expanded_conv_9/project/weights"
        string_val: "ssd300/layer_19_1_Conv2d_2_1x1_256/BatchNorm/beta"
        string_val: "ssd300/layer_19_1_Conv2d_2_1x1_256/BatchNorm/moving_mean"
        string_val: "ssd300/layer_19_1_Conv2d_2_1x1_256/BatchNorm/moving_variance"
        string_val: "ssd300/layer_19_1_Conv2d_2_1x1_256/weights"
        string_val: "ssd300/layer_19_1_Conv2d_3_1x1_128/BatchNorm/beta"
        string_val: "ssd300/layer_19_1_Conv2d_3_1x1_128/BatchNorm/moving_mean"
        string_val: "ssd300/layer_19_1_Conv2d_3_1x1_128/BatchNorm/moving_variance"
        string_val: "ssd300/layer_19_1_Conv2d_3_1x1_128/weights"
        string_val: "ssd300/layer_19_1_Conv2d_4_1x1_128/BatchNorm/beta"
        string_val: "ssd300/layer_19_1_Conv2d_4_1x1_128/BatchNorm/moving_mean"
        string_val: "ssd300/layer_19_1_Conv2d_4_1x1_128/BatchNorm/moving_variance"
        string_val: "ssd300/layer_19_1_Conv2d_4_1x1_128/weights"
        string_val: "ssd300/layer_19_1_Conv2d_5_1x1_64/BatchNorm/beta"
        string_val: "ssd300/layer_19_1_Conv2d_5_1x1_64/BatchNorm/moving_mean"
        string_val: "ssd300/layer_19_1_Conv2d_5_1x1_64/BatchNorm/moving_variance"
        string_val: "ssd300/layer_19_1_Conv2d_5_1x1_64/weights"
        string_val: "ssd300/layer_19_2_Conv2d_2_3x3_s2_512/BatchNorm/beta"
        string_val: "ssd300/layer_19_2_Conv2d_2_3x3_s2_512/BatchNorm/moving_mean"
        string_val: "ssd300/layer_19_2_Conv2d_2_3x3_s2_512/BatchNorm/moving_variance"
        string_val: "ssd300/layer_19_2_Conv2d_2_3x3_s2_512/weights"
        string_val: "ssd300/layer_19_2_Conv2d_2_3x3_s2_512_depthwise/BatchNorm/beta"
        string_val: "ssd300/layer_19_2_Conv2d_2_3x3_s2_512_depthwise/BatchNorm/moving_mean"
        string_val: "ssd300/layer_19_2_Conv2d_2_3x3_s2_512_depthwise/BatchNorm/moving_variance"
        string_val: "ssd300/layer_19_2_Conv2d_2_3x3_s2_512_depthwise/depthwise_weights"
        string_val: "ssd300/layer_19_2_Conv2d_3_3x3_s2_256/BatchNorm/beta"
        string_val: "ssd300/layer_19_2_Conv2d_3_3x3_s2_256/BatchNorm/moving_mean"
        string_val: "ssd300/layer_19_2_Conv2d_3_3x3_s2_256/BatchNorm/moving_variance"
        string_val: "ssd300/layer_19_2_Conv2d_3_3x3_s2_256/weights"
        string_val: "ssd300/layer_19_2_Conv2d_3_3x3_s2_256_depthwise/BatchNorm/beta"
        string_val: "ssd300/layer_19_2_Conv2d_3_3x3_s2_256_depthwise/BatchNorm/moving_mean"
        string_val: "ssd300/layer_19_2_Conv2d_3_3x3_s2_256_depthwise/BatchNorm/moving_variance"
        string_val: "ssd300/layer_19_2_Conv2d_3_3x3_s2_256_depthwise/depthwise_weights"
        string_val: "ssd300/layer_19_2_Conv2d_4_3x3_s2_256/BatchNorm/beta"
        string_val: "ssd300/layer_19_2_Conv2d_4_3x3_s2_256/BatchNorm/moving_mean"
        string_val: "ssd300/layer_19_2_Conv2d_4_3x3_s2_256/BatchNorm/moving_variance"
        string_val: "ssd300/layer_19_2_Conv2d_4_3x3_s2_256/weights"
        string_val: "ssd300/layer_19_2_Conv2d_4_3x3_s2_256_depthwise/BatchNorm/beta"
        string_val: "ssd300/layer_19_2_Conv2d_4_3x3_s2_256_depthwise/BatchNorm/moving_mean"
        string_val: "ssd300/layer_19_2_Conv2d_4_3x3_s2_256_depthwise/BatchNorm/moving_variance"
        string_val: "ssd300/layer_19_2_Conv2d_4_3x3_s2_256_depthwise/depthwise_weights"
        string_val: "ssd300/layer_19_2_Conv2d_5_3x3_s2_128/BatchNorm/beta"
        string_val: "ssd300/layer_19_2_Conv2d_5_3x3_s2_128/BatchNorm/moving_mean"
        string_val: "ssd300/layer_19_2_Conv2d_5_3x3_s2_128/BatchNorm/moving_variance"
        string_val: "ssd300/layer_19_2_Conv2d_5_3x3_s2_128/weights"
        string_val: "ssd300/layer_19_2_Conv2d_5_3x3_s2_128_depthwise/BatchNorm/beta"
        string_val: "ssd300/layer_19_2_Conv2d_5_3x3_s2_128_depthwise/BatchNorm/moving_mean"
        string_val: "ssd300/layer_19_2_Conv2d_5_3x3_s2_128_depthwise/BatchNorm/moving_variance"
        string_val: "ssd300/layer_19_2_Conv2d_5_3x3_s2_128_depthwise/depthwise_weights"
        string_val: "ssd300/multibox_head/cls_0/bias"
        string_val: "ssd300/multibox_head/cls_0/kernel"
        string_val: "ssd300/multibox_head/cls_1/bias"
        string_val: "ssd300/multibox_head/cls_1/kernel"
        string_val: "ssd300/multibox_head/cls_2/bias"
        string_val: "ssd300/multibox_head/cls_2/kernel"
        string_val: "ssd300/multibox_head/cls_3/bias"
        string_val: "ssd300/multibox_head/cls_3/kernel"
        string_val: "ssd300/multibox_head/cls_4/bias"
        string_val: "ssd300/multibox_head/cls_4/kernel"
        string_val: "ssd300/multibox_head/cls_5/bias"
        string_val: "ssd300/multibox_head/cls_5/kernel"
        string_val: "ssd300/multibox_head/loc_0/bias"
        string_val: "ssd300/multibox_head/loc_0/kernel"
        string_val: "ssd300/multibox_head/loc_1/bias"
        string_val: "ssd300/multibox_head/loc_1/kernel"
        string_val: "ssd300/multibox_head/loc_2/bias"
        string_val: "ssd300/multibox_head/loc_2/kernel"
        string_val: "ssd300/multibox_head/loc_3/bias"
        string_val: "ssd300/multibox_head/loc_3/kernel"
        string_val: "ssd300/multibox_head/loc_4/bias"
        string_val: "ssd300/multibox_head/loc_4/kernel"
        string_val: "ssd300/multibox_head/loc_5/bias"
        string_val: "ssd300/multibox_head/loc_5/kernel"
      }
    }
  }
}
node {
  name: "save/SaveV2/shape_and_slices"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 280
          }
        }
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
      }
    }
  }
}
node {
  name: "save/SaveV2"
  op: "SaveV2"
  input: "save/Const"
  input: "save/SaveV2/tensor_names"
  input: "save/SaveV2/shape_and_slices"
  input: "ssd300/Conv/BatchNorm/beta"
  input: "ssd300/Conv/BatchNorm/moving_mean"
  input: "ssd300/Conv/BatchNorm/moving_variance"
  input: "ssd300/Conv/weights"
  input: "ssd300/Conv_1/BatchNorm/beta"
  input: "ssd300/Conv_1/BatchNorm/moving_mean"
  input: "ssd300/Conv_1/BatchNorm/moving_variance"
  input: "ssd300/Conv_1/weights"
  input: "ssd300/expanded_conv/depthwise/BatchNorm/beta"
  input: "ssd300/expanded_conv/depthwise/BatchNorm/moving_mean"
  input: "ssd300/expanded_conv/depthwise/BatchNorm/moving_variance"
  input: "ssd300/expanded_conv/depthwise/depthwise_weights"
  input: "ssd300/expanded_conv/project/BatchNorm/beta"
  input: "ssd300/expanded_conv/project/BatchNorm/moving_mean"
  input: "ssd300/expanded_conv/project/BatchNorm/moving_variance"
  input: "ssd300/expanded_conv/project/weights"
  input: "ssd300/expanded_conv_1/depthwise/BatchNorm/beta"
  input: "ssd300/expanded_conv_1/depthwise/BatchNorm/moving_mean"
  input: "ssd300/expanded_conv_1/depthwise/BatchNorm/moving_variance"
  input: "ssd300/expanded_conv_1/depthwise/depthwise_weights"
  input: "ssd300/expanded_conv_1/expand/BatchNorm/beta"
  input: "ssd300/expanded_conv_1/expand/BatchNorm/moving_mean"
  input: "ssd300/expanded_conv_1/expand/BatchNorm/moving_variance"
  input: "ssd300/expanded_conv_1/expand/weights"
  input: "ssd300/expanded_conv_1/project/BatchNorm/beta"
  input: "ssd300/expanded_conv_1/project/BatchNorm/moving_mean"
  input: "ssd300/expanded_conv_1/project/BatchNorm/moving_variance"
  input: "ssd300/expanded_conv_1/project/weights"
  input: "ssd300/expanded_conv_10/depthwise/BatchNorm/beta"
  input: "ssd300/expanded_conv_10/depthwise/BatchNorm/moving_mean"
  input: "ssd300/expanded_conv_10/depthwise/BatchNorm/moving_variance"
  input: "ssd300/expanded_conv_10/depthwise/depthwise_weights"
  input: "ssd300/expanded_conv_10/expand/BatchNorm/beta"
  input: "ssd300/expanded_conv_10/expand/BatchNorm/moving_mean"
  input: "ssd300/expanded_conv_10/expand/BatchNorm/moving_variance"
  input: "ssd300/expanded_conv_10/expand/weights"
  input: "ssd300/expanded_conv_10/project/BatchNorm/beta"
  input: "ssd300/expanded_conv_10/project/BatchNorm/moving_mean"
  input: "ssd300/expanded_conv_10/project/BatchNorm/moving_variance"
  input: "ssd300/expanded_conv_10/project/weights"
  input: "ssd300/expanded_conv_11/depthwise/BatchNorm/beta"
  input: "ssd300/expanded_conv_11/depthwise/BatchNorm/moving_mean"
  input: "ssd300/expanded_conv_11/depthwise/BatchNorm/moving_variance"
  input: "ssd300/expanded_conv_11/depthwise/depthwise_weights"
  input: "ssd300/expanded_conv_11/expand/BatchNorm/beta"
  input: "ssd300/expanded_conv_11/expand/BatchNorm/moving_mean"
  input: "ssd300/expanded_conv_11/expand/BatchNorm/moving_variance"
  input: "ssd300/expanded_conv_11/expand/weights"
  input: "ssd300/expanded_conv_11/project/BatchNorm/beta"
  input: "ssd300/expanded_conv_11/project/BatchNorm/moving_mean"
  input: "ssd300/expanded_conv_11/project/BatchNorm/moving_variance"
  input: "ssd300/expanded_conv_11/project/weights"
  input: "ssd300/expanded_conv_12/depthwise/BatchNorm/beta"
  input: "ssd300/expanded_conv_12/depthwise/BatchNorm/moving_mean"
  input: "ssd300/expanded_conv_12/depthwise/BatchNorm/moving_variance"
  input: "ssd300/expanded_conv_12/depthwise/depthwise_weights"
  input: "ssd300/expanded_conv_12/expand/BatchNorm/beta"
  input: "ssd300/expanded_conv_12/expand/BatchNorm/moving_mean"
  input: "ssd300/expanded_conv_12/expand/BatchNorm/moving_variance"
  input: "ssd300/expanded_conv_12/expand/weights"
  input: "ssd300/expanded_conv_12/project/BatchNorm/beta"
  input: "ssd300/expanded_conv_12/project/BatchNorm/moving_mean"
  input: "ssd300/expanded_conv_12/project/BatchNorm/moving_variance"
  input: "ssd300/expanded_conv_12/project/weights"
  input: "ssd300/expanded_conv_13/depthwise/BatchNorm/beta"
  input: "ssd300/expanded_conv_13/depthwise/BatchNorm/moving_mean"
  input: "ssd300/expanded_conv_13/depthwise/BatchNorm/moving_variance"
  input: "ssd300/expanded_conv_13/depthwise/depthwise_weights"
  input: "ssd300/expanded_conv_13/expand/BatchNorm/beta"
  input: "ssd300/expanded_conv_13/expand/BatchNorm/moving_mean"
  input: "ssd300/expanded_conv_13/expand/BatchNorm/moving_variance"
  input: "ssd300/expanded_conv_13/expand/weights"
  input: "ssd300/expanded_conv_13/project/BatchNorm/beta"
  input: "ssd300/expanded_conv_13/project/BatchNorm/moving_mean"
  input: "ssd300/expanded_conv_13/project/BatchNorm/moving_variance"
  input: "ssd300/expanded_conv_13/project/weights"
  input: "ssd300/expanded_conv_14/depthwise/BatchNorm/beta"
  input: "ssd300/expanded_conv_14/depthwise/BatchNorm/moving_mean"
  input: "ssd300/expanded_conv_14/depthwise/BatchNorm/moving_variance"
  input: "ssd300/expanded_conv_14/depthwise/depthwise_weights"
  input: "ssd300/expanded_conv_14/expand/BatchNorm/beta"
  input: "ssd300/expanded_conv_14/expand/BatchNorm/moving_mean"
  input: "ssd300/expanded_conv_14/expand/BatchNorm/moving_variance"
  input: "ssd300/expanded_conv_14/expand/weights"
  input: "ssd300/expanded_conv_14/project/BatchNorm/beta"
  input: "ssd300/expanded_conv_14/project/BatchNorm/moving_mean"
  input: "ssd300/expanded_conv_14/project/BatchNorm/moving_variance"
  input: "ssd300/expanded_conv_14/project/weights"
  input: "ssd300/expanded_conv_15/depthwise/BatchNorm/beta"
  input: "ssd300/expanded_conv_15/depthwise/BatchNorm/moving_mean"
  input: "ssd300/expanded_conv_15/depthwise/BatchNorm/moving_variance"
  input: "ssd300/expanded_conv_15/depthwise/depthwise_weights"
  input: "ssd300/expanded_conv_15/expand/BatchNorm/beta"
  input: "ssd300/expanded_conv_15/expand/BatchNorm/moving_mean"
  input: "ssd300/expanded_conv_15/expand/BatchNorm/moving_variance"
  input: "ssd300/expanded_conv_15/expand/weights"
  input: "ssd300/expanded_conv_15/project/BatchNorm/beta"
  input: "ssd300/expanded_conv_15/project/BatchNorm/moving_mean"
  input: "ssd300/expanded_conv_15/project/BatchNorm/moving_variance"
  input: "ssd300/expanded_conv_15/project/weights"
  input: "ssd300/expanded_conv_16/depthwise/BatchNorm/beta"
  input: "ssd300/expanded_conv_16/depthwise/BatchNorm/moving_mean"
  input: "ssd300/expanded_conv_16/depthwise/BatchNorm/moving_variance"
  input: "ssd300/expanded_conv_16/depthwise/depthwise_weights"
  input: "ssd300/expanded_conv_16/expand/BatchNorm/beta"
  input: "ssd300/expanded_conv_16/expand/BatchNorm/moving_mean"
  input: "ssd300/expanded_conv_16/expand/BatchNorm/moving_variance"
  input: "ssd300/expanded_conv_16/expand/weights"
  input: "ssd300/expanded_conv_16/project/BatchNorm/beta"
  input: "ssd300/expanded_conv_16/project/BatchNorm/moving_mean"
  input: "ssd300/expanded_conv_16/project/BatchNorm/moving_variance"
  input: "ssd300/expanded_conv_16/project/weights"
  input: "ssd300/expanded_conv_2/depthwise/BatchNorm/beta"
  input: "ssd300/expanded_conv_2/depthwise/BatchNorm/moving_mean"
  input: "ssd300/expanded_conv_2/depthwise/BatchNorm/moving_variance"
  input: "ssd300/expanded_conv_2/depthwise/depthwise_weights"
  input: "ssd300/expanded_conv_2/expand/BatchNorm/beta"
  input: "ssd300/expanded_conv_2/expand/BatchNorm/moving_mean"
  input: "ssd300/expanded_conv_2/expand/BatchNorm/moving_variance"
  input: "ssd300/expanded_conv_2/expand/weights"
  input: "ssd300/expanded_conv_2/project/BatchNorm/beta"
  input: "ssd300/expanded_conv_2/project/BatchNorm/moving_mean"
  input: "ssd300/expanded_conv_2/project/BatchNorm/moving_variance"
  input: "ssd300/expanded_conv_2/project/weights"
  input: "ssd300/expanded_conv_3/depthwise/BatchNorm/beta"
  input: "ssd300/expanded_conv_3/depthwise/BatchNorm/moving_mean"
  input: "ssd300/expanded_conv_3/depthwise/BatchNorm/moving_variance"
  input: "ssd300/expanded_conv_3/depthwise/depthwise_weights"
  input: "ssd300/expanded_conv_3/expand/BatchNorm/beta"
  input: "ssd300/expanded_conv_3/expand/BatchNorm/moving_mean"
  input: "ssd300/expanded_conv_3/expand/BatchNorm/moving_variance"
  input: "ssd300/expanded_conv_3/expand/weights"
  input: "ssd300/expanded_conv_3/project/BatchNorm/beta"
  input: "ssd300/expanded_conv_3/project/BatchNorm/moving_mean"
  input: "ssd300/expanded_conv_3/project/BatchNorm/moving_variance"
  input: "ssd300/expanded_conv_3/project/weights"
  input: "ssd300/expanded_conv_4/depthwise/BatchNorm/beta"
  input: "ssd300/expanded_conv_4/depthwise/BatchNorm/moving_mean"
  input: "ssd300/expanded_conv_4/depthwise/BatchNorm/moving_variance"
  input: "ssd300/expanded_conv_4/depthwise/depthwise_weights"
  input: "ssd300/expanded_conv_4/expand/BatchNorm/beta"
  input: "ssd300/expanded_conv_4/expand/BatchNorm/moving_mean"
  input: "ssd300/expanded_conv_4/expand/BatchNorm/moving_variance"
  input: "ssd300/expanded_conv_4/expand/weights"
  input: "ssd300/expanded_conv_4/project/BatchNorm/beta"
  input: "ssd300/expanded_conv_4/project/BatchNorm/moving_mean"
  input: "ssd300/expanded_conv_4/project/BatchNorm/moving_variance"
  input: "ssd300/expanded_conv_4/project/weights"
  input: "ssd300/expanded_conv_5/depthwise/BatchNorm/beta"
  input: "ssd300/expanded_conv_5/depthwise/BatchNorm/moving_mean"
  input: "ssd300/expanded_conv_5/depthwise/BatchNorm/moving_variance"
  input: "ssd300/expanded_conv_5/depthwise/depthwise_weights"
  input: "ssd300/expanded_conv_5/expand/BatchNorm/beta"
  input: "ssd300/expanded_conv_5/expand/BatchNorm/moving_mean"
  input: "ssd300/expanded_conv_5/expand/BatchNorm/moving_variance"
  input: "ssd300/expanded_conv_5/expand/weights"
  input: "ssd300/expanded_conv_5/project/BatchNorm/beta"
  input: "ssd300/expanded_conv_5/project/BatchNorm/moving_mean"
  input: "ssd300/expanded_conv_5/project/BatchNorm/moving_variance"
  input: "ssd300/expanded_conv_5/project/weights"
  input: "ssd300/expanded_conv_6/depthwise/BatchNorm/beta"
  input: "ssd300/expanded_conv_6/depthwise/BatchNorm/moving_mean"
  input: "ssd300/expanded_conv_6/depthwise/BatchNorm/moving_variance"
  input: "ssd300/expanded_conv_6/depthwise/depthwise_weights"
  input: "ssd300/expanded_conv_6/expand/BatchNorm/beta"
  input: "ssd300/expanded_conv_6/expand/BatchNorm/moving_mean"
  input: "ssd300/expanded_conv_6/expand/BatchNorm/moving_variance"
  input: "ssd300/expanded_conv_6/expand/weights"
  input: "ssd300/expanded_conv_6/project/BatchNorm/beta"
  input: "ssd300/expanded_conv_6/project/BatchNorm/moving_mean"
  input: "ssd300/expanded_conv_6/project/BatchNorm/moving_variance"
  input: "ssd300/expanded_conv_6/project/weights"
  input: "ssd300/expanded_conv_7/depthwise/BatchNorm/beta"
  input: "ssd300/expanded_conv_7/depthwise/BatchNorm/moving_mean"
  input: "ssd300/expanded_conv_7/depthwise/BatchNorm/moving_variance"
  input: "ssd300/expanded_conv_7/depthwise/depthwise_weights"
  input: "ssd300/expanded_conv_7/expand/BatchNorm/beta"
  input: "ssd300/expanded_conv_7/expand/BatchNorm/moving_mean"
  input: "ssd300/expanded_conv_7/expand/BatchNorm/moving_variance"
  input: "ssd300/expanded_conv_7/expand/weights"
  input: "ssd300/expanded_conv_7/project/BatchNorm/beta"
  input: "ssd300/expanded_conv_7/project/BatchNorm/moving_mean"
  input: "ssd300/expanded_conv_7/project/BatchNorm/moving_variance"
  input: "ssd300/expanded_conv_7/project/weights"
  input: "ssd300/expanded_conv_8/depthwise/BatchNorm/beta"
  input: "ssd300/expanded_conv_8/depthwise/BatchNorm/moving_mean"
  input: "ssd300/expanded_conv_8/depthwise/BatchNorm/moving_variance"
  input: "ssd300/expanded_conv_8/depthwise/depthwise_weights"
  input: "ssd300/expanded_conv_8/expand/BatchNorm/beta"
  input: "ssd300/expanded_conv_8/expand/BatchNorm/moving_mean"
  input: "ssd300/expanded_conv_8/expand/BatchNorm/moving_variance"
  input: "ssd300/expanded_conv_8/expand/weights"
  input: "ssd300/expanded_conv_8/project/BatchNorm/beta"
  input: "ssd300/expanded_conv_8/project/BatchNorm/moving_mean"
  input: "ssd300/expanded_conv_8/project/BatchNorm/moving_variance"
  input: "ssd300/expanded_conv_8/project/weights"
  input: "ssd300/expanded_conv_9/depthwise/BatchNorm/beta"
  input: "ssd300/expanded_conv_9/depthwise/BatchNorm/moving_mean"
  input: "ssd300/expanded_conv_9/depthwise/BatchNorm/moving_variance"
  input: "ssd300/expanded_conv_9/depthwise/depthwise_weights"
  input: "ssd300/expanded_conv_9/expand/BatchNorm/beta"
  input: "ssd300/expanded_conv_9/expand/BatchNorm/moving_mean"
  input: "ssd300/expanded_conv_9/expand/BatchNorm/moving_variance"
  input: "ssd300/expanded_conv_9/expand/weights"
  input: "ssd300/expanded_conv_9/project/BatchNorm/beta"
  input: "ssd300/expanded_conv_9/project/BatchNorm/moving_mean"
  input: "ssd300/expanded_conv_9/project/BatchNorm/moving_variance"
  input: "ssd300/expanded_conv_9/project/weights"
  input: "ssd300/layer_19_1_Conv2d_2_1x1_256/BatchNorm/beta"
  input: "ssd300/layer_19_1_Conv2d_2_1x1_256/BatchNorm/moving_mean"
  input: "ssd300/layer_19_1_Conv2d_2_1x1_256/BatchNorm/moving_variance"
  input: "ssd300/layer_19_1_Conv2d_2_1x1_256/weights"
  input: "ssd300/layer_19_1_Conv2d_3_1x1_128/BatchNorm/beta"
  input: "ssd300/layer_19_1_Conv2d_3_1x1_128/BatchNorm/moving_mean"
  input: "ssd300/layer_19_1_Conv2d_3_1x1_128/BatchNorm/moving_variance"
  input: "ssd300/layer_19_1_Conv2d_3_1x1_128/weights"
  input: "ssd300/layer_19_1_Conv2d_4_1x1_128/BatchNorm/beta"
  input: "ssd300/layer_19_1_Conv2d_4_1x1_128/BatchNorm/moving_mean"
  input: "ssd300/layer_19_1_Conv2d_4_1x1_128/BatchNorm/moving_variance"
  input: "ssd300/layer_19_1_Conv2d_4_1x1_128/weights"
  input: "ssd300/layer_19_1_Conv2d_5_1x1_64/BatchNorm/beta"
  input: "ssd300/layer_19_1_Conv2d_5_1x1_64/BatchNorm/moving_mean"
  input: "ssd300/layer_19_1_Conv2d_5_1x1_64/BatchNorm/moving_variance"
  input: "ssd300/layer_19_1_Conv2d_5_1x1_64/weights"
  input: "ssd300/layer_19_2_Conv2d_2_3x3_s2_512/BatchNorm/beta"
  input: "ssd300/layer_19_2_Conv2d_2_3x3_s2_512/BatchNorm/moving_mean"
  input: "ssd300/layer_19_2_Conv2d_2_3x3_s2_512/BatchNorm/moving_variance"
  input: "ssd300/layer_19_2_Conv2d_2_3x3_s2_512/weights"
  input: "ssd300/layer_19_2_Conv2d_2_3x3_s2_512_depthwise/BatchNorm/beta"
  input: "ssd300/layer_19_2_Conv2d_2_3x3_s2_512_depthwise/BatchNorm/moving_mean"
  input: "ssd300/layer_19_2_Conv2d_2_3x3_s2_512_depthwise/BatchNorm/moving_variance"
  input: "ssd300/layer_19_2_Conv2d_2_3x3_s2_512_depthwise/depthwise_weights"
  input: "ssd300/layer_19_2_Conv2d_3_3x3_s2_256/BatchNorm/beta"
  input: "ssd300/layer_19_2_Conv2d_3_3x3_s2_256/BatchNorm/moving_mean"
  input: "ssd300/layer_19_2_Conv2d_3_3x3_s2_256/BatchNorm/moving_variance"
  input: "ssd300/layer_19_2_Conv2d_3_3x3_s2_256/weights"
  input: "ssd300/layer_19_2_Conv2d_3_3x3_s2_256_depthwise/BatchNorm/beta"
  input: "ssd300/layer_19_2_Conv2d_3_3x3_s2_256_depthwise/BatchNorm/moving_mean"
  input: "ssd300/layer_19_2_Conv2d_3_3x3_s2_256_depthwise/BatchNorm/moving_variance"
  input: "ssd300/layer_19_2_Conv2d_3_3x3_s2_256_depthwise/depthwise_weights"
  input: "ssd300/layer_19_2_Conv2d_4_3x3_s2_256/BatchNorm/beta"
  input: "ssd300/layer_19_2_Conv2d_4_3x3_s2_256/BatchNorm/moving_mean"
  input: "ssd300/layer_19_2_Conv2d_4_3x3_s2_256/BatchNorm/moving_variance"
  input: "ssd300/layer_19_2_Conv2d_4_3x3_s2_256/weights"
  input: "ssd300/layer_19_2_Conv2d_4_3x3_s2_256_depthwise/BatchNorm/beta"
  input: "ssd300/layer_19_2_Conv2d_4_3x3_s2_256_depthwise/BatchNorm/moving_mean"
  input: "ssd300/layer_19_2_Conv2d_4_3x3_s2_256_depthwise/BatchNorm/moving_variance"
  input: "ssd300/layer_19_2_Conv2d_4_3x3_s2_256_depthwise/depthwise_weights"
  input: "ssd300/layer_19_2_Conv2d_5_3x3_s2_128/BatchNorm/beta"
  input: "ssd300/layer_19_2_Conv2d_5_3x3_s2_128/BatchNorm/moving_mean"
  input: "ssd300/layer_19_2_Conv2d_5_3x3_s2_128/BatchNorm/moving_variance"
  input: "ssd300/layer_19_2_Conv2d_5_3x3_s2_128/weights"
  input: "ssd300/layer_19_2_Conv2d_5_3x3_s2_128_depthwise/BatchNorm/beta"
  input: "ssd300/layer_19_2_Conv2d_5_3x3_s2_128_depthwise/BatchNorm/moving_mean"
  input: "ssd300/layer_19_2_Conv2d_5_3x3_s2_128_depthwise/BatchNorm/moving_variance"
  input: "ssd300/layer_19_2_Conv2d_5_3x3_s2_128_depthwise/depthwise_weights"
  input: "ssd300/multibox_head/cls_0/bias"
  input: "ssd300/multibox_head/cls_0/kernel"
  input: "ssd300/multibox_head/cls_1/bias"
  input: "ssd300/multibox_head/cls_1/kernel"
  input: "ssd300/multibox_head/cls_2/bias"
  input: "ssd300/multibox_head/cls_2/kernel"
  input: "ssd300/multibox_head/cls_3/bias"
  input: "ssd300/multibox_head/cls_3/kernel"
  input: "ssd300/multibox_head/cls_4/bias"
  input: "ssd300/multibox_head/cls_4/kernel"
  input: "ssd300/multibox_head/cls_5/bias"
  input: "ssd300/multibox_head/cls_5/kernel"
  input: "ssd300/multibox_head/loc_0/bias"
  input: "ssd300/multibox_head/loc_0/kernel"
  input: "ssd300/multibox_head/loc_1/bias"
  input: "ssd300/multibox_head/loc_1/kernel"
  input: "ssd300/multibox_head/loc_2/bias"
  input: "ssd300/multibox_head/loc_2/kernel"
  input: "ssd300/multibox_head/loc_3/bias"
  input: "ssd300/multibox_head/loc_3/kernel"
  input: "ssd300/multibox_head/loc_4/bias"
  input: "ssd300/multibox_head/loc_4/kernel"
  input: "ssd300/multibox_head/loc_5/bias"
  input: "ssd300/multibox_head/loc_5/kernel"
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/control_dependency"
  op: "Identity"
  input: "save/Const"
  input: "^save/SaveV2"
  attr {
    key: "T"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@save/Const"
      }
    }
  }
}
node {
  name: "save/RestoreV2/tensor_names"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 280
          }
        }
        string_val: "ssd300/Conv/BatchNorm/beta"
        string_val: "ssd300/Conv/BatchNorm/moving_mean"
        string_val: "ssd300/Conv/BatchNorm/moving_variance"
        string_val: "ssd300/Conv/weights"
        string_val: "ssd300/Conv_1/BatchNorm/beta"
        string_val: "ssd300/Conv_1/BatchNorm/moving_mean"
        string_val: "ssd300/Conv_1/BatchNorm/moving_variance"
        string_val: "ssd300/Conv_1/weights"
        string_val: "ssd300/expanded_conv/depthwise/BatchNorm/beta"
        string_val: "ssd300/expanded_conv/depthwise/BatchNorm/moving_mean"
        string_val: "ssd300/expanded_conv/depthwise/BatchNorm/moving_variance"
        string_val: "ssd300/expanded_conv/depthwise/depthwise_weights"
        string_val: "ssd300/expanded_conv/project/BatchNorm/beta"
        string_val: "ssd300/expanded_conv/project/BatchNorm/moving_mean"
        string_val: "ssd300/expanded_conv/project/BatchNorm/moving_variance"
        string_val: "ssd300/expanded_conv/project/weights"
        string_val: "ssd300/expanded_conv_1/depthwise/BatchNorm/beta"
        string_val: "ssd300/expanded_conv_1/depthwise/BatchNorm/moving_mean"
        string_val: "ssd300/expanded_conv_1/depthwise/BatchNorm/moving_variance"
        string_val: "ssd300/expanded_conv_1/depthwise/depthwise_weights"
        string_val: "ssd300/expanded_conv_1/expand/BatchNorm/beta"
        string_val: "ssd300/expanded_conv_1/expand/BatchNorm/moving_mean"
        string_val: "ssd300/expanded_conv_1/expand/BatchNorm/moving_variance"
        string_val: "ssd300/expanded_conv_1/expand/weights"
        string_val: "ssd300/expanded_conv_1/project/BatchNorm/beta"
        string_val: "ssd300/expanded_conv_1/project/BatchNorm/moving_mean"
        string_val: "ssd300/expanded_conv_1/project/BatchNorm/moving_variance"
        string_val: "ssd300/expanded_conv_1/project/weights"
        string_val: "ssd300/expanded_conv_10/depthwise/BatchNorm/beta"
        string_val: "ssd300/expanded_conv_10/depthwise/BatchNorm/moving_mean"
        string_val: "ssd300/expanded_conv_10/depthwise/BatchNorm/moving_variance"
        string_val: "ssd300/expanded_conv_10/depthwise/depthwise_weights"
        string_val: "ssd300/expanded_conv_10/expand/BatchNorm/beta"
        string_val: "ssd300/expanded_conv_10/expand/BatchNorm/moving_mean"
        string_val: "ssd300/expanded_conv_10/expand/BatchNorm/moving_variance"
        string_val: "ssd300/expanded_conv_10/expand/weights"
        string_val: "ssd300/expanded_conv_10/project/BatchNorm/beta"
        string_val: "ssd300/expanded_conv_10/project/BatchNorm/moving_mean"
        string_val: "ssd300/expanded_conv_10/project/BatchNorm/moving_variance"
        string_val: "ssd300/expanded_conv_10/project/weights"
        string_val: "ssd300/expanded_conv_11/depthwise/BatchNorm/beta"
        string_val: "ssd300/expanded_conv_11/depthwise/BatchNorm/moving_mean"
        string_val: "ssd300/expanded_conv_11/depthwise/BatchNorm/moving_variance"
        string_val: "ssd300/expanded_conv_11/depthwise/depthwise_weights"
        string_val: "ssd300/expanded_conv_11/expand/BatchNorm/beta"
        string_val: "ssd300/expanded_conv_11/expand/BatchNorm/moving_mean"
        string_val: "ssd300/expanded_conv_11/expand/BatchNorm/moving_variance"
        string_val: "ssd300/expanded_conv_11/expand/weights"
        string_val: "ssd300/expanded_conv_11/project/BatchNorm/beta"
        string_val: "ssd300/expanded_conv_11/project/BatchNorm/moving_mean"
        string_val: "ssd300/expanded_conv_11/project/BatchNorm/moving_variance"
        string_val: "ssd300/expanded_conv_11/project/weights"
        string_val: "ssd300/expanded_conv_12/depthwise/BatchNorm/beta"
        string_val: "ssd300/expanded_conv_12/depthwise/BatchNorm/moving_mean"
        string_val: "ssd300/expanded_conv_12/depthwise/BatchNorm/moving_variance"
        string_val: "ssd300/expanded_conv_12/depthwise/depthwise_weights"
        string_val: "ssd300/expanded_conv_12/expand/BatchNorm/beta"
        string_val: "ssd300/expanded_conv_12/expand/BatchNorm/moving_mean"
        string_val: "ssd300/expanded_conv_12/expand/BatchNorm/moving_variance"
        string_val: "ssd300/expanded_conv_12/expand/weights"
        string_val: "ssd300/expanded_conv_12/project/BatchNorm/beta"
        string_val: "ssd300/expanded_conv_12/project/BatchNorm/moving_mean"
        string_val: "ssd300/expanded_conv_12/project/BatchNorm/moving_variance"
        string_val: "ssd300/expanded_conv_12/project/weights"
        string_val: "ssd300/expanded_conv_13/depthwise/BatchNorm/beta"
        string_val: "ssd300/expanded_conv_13/depthwise/BatchNorm/moving_mean"
        string_val: "ssd300/expanded_conv_13/depthwise/BatchNorm/moving_variance"
        string_val: "ssd300/expanded_conv_13/depthwise/depthwise_weights"
        string_val: "ssd300/expanded_conv_13/expand/BatchNorm/beta"
        string_val: "ssd300/expanded_conv_13/expand/BatchNorm/moving_mean"
        string_val: "ssd300/expanded_conv_13/expand/BatchNorm/moving_variance"
        string_val: "ssd300/expanded_conv_13/expand/weights"
        string_val: "ssd300/expanded_conv_13/project/BatchNorm/beta"
        string_val: "ssd300/expanded_conv_13/project/BatchNorm/moving_mean"
        string_val: "ssd300/expanded_conv_13/project/BatchNorm/moving_variance"
        string_val: "ssd300/expanded_conv_13/project/weights"
        string_val: "ssd300/expanded_conv_14/depthwise/BatchNorm/beta"
        string_val: "ssd300/expanded_conv_14/depthwise/BatchNorm/moving_mean"
        string_val: "ssd300/expanded_conv_14/depthwise/BatchNorm/moving_variance"
        string_val: "ssd300/expanded_conv_14/depthwise/depthwise_weights"
        string_val: "ssd300/expanded_conv_14/expand/BatchNorm/beta"
        string_val: "ssd300/expanded_conv_14/expand/BatchNorm/moving_mean"
        string_val: "ssd300/expanded_conv_14/expand/BatchNorm/moving_variance"
        string_val: "ssd300/expanded_conv_14/expand/weights"
        string_val: "ssd300/expanded_conv_14/project/BatchNorm/beta"
        string_val: "ssd300/expanded_conv_14/project/BatchNorm/moving_mean"
        string_val: "ssd300/expanded_conv_14/project/BatchNorm/moving_variance"
        string_val: "ssd300/expanded_conv_14/project/weights"
        string_val: "ssd300/expanded_conv_15/depthwise/BatchNorm/beta"
        string_val: "ssd300/expanded_conv_15/depthwise/BatchNorm/moving_mean"
        string_val: "ssd300/expanded_conv_15/depthwise/BatchNorm/moving_variance"
        string_val: "ssd300/expanded_conv_15/depthwise/depthwise_weights"
        string_val: "ssd300/expanded_conv_15/expand/BatchNorm/beta"
        string_val: "ssd300/expanded_conv_15/expand/BatchNorm/moving_mean"
        string_val: "ssd300/expanded_conv_15/expand/BatchNorm/moving_variance"
        string_val: "ssd300/expanded_conv_15/expand/weights"
        string_val: "ssd300/expanded_conv_15/project/BatchNorm/beta"
        string_val: "ssd300/expanded_conv_15/project/BatchNorm/moving_mean"
        string_val: "ssd300/expanded_conv_15/project/BatchNorm/moving_variance"
        string_val: "ssd300/expanded_conv_15/project/weights"
        string_val: "ssd300/expanded_conv_16/depthwise/BatchNorm/beta"
        string_val: "ssd300/expanded_conv_16/depthwise/BatchNorm/moving_mean"
        string_val: "ssd300/expanded_conv_16/depthwise/BatchNorm/moving_variance"
        string_val: "ssd300/expanded_conv_16/depthwise/depthwise_weights"
        string_val: "ssd300/expanded_conv_16/expand/BatchNorm/beta"
        string_val: "ssd300/expanded_conv_16/expand/BatchNorm/moving_mean"
        string_val: "ssd300/expanded_conv_16/expand/BatchNorm/moving_variance"
        string_val: "ssd300/expanded_conv_16/expand/weights"
        string_val: "ssd300/expanded_conv_16/project/BatchNorm/beta"
        string_val: "ssd300/expanded_conv_16/project/BatchNorm/moving_mean"
        string_val: "ssd300/expanded_conv_16/project/BatchNorm/moving_variance"
        string_val: "ssd300/expanded_conv_16/project/weights"
        string_val: "ssd300/expanded_conv_2/depthwise/BatchNorm/beta"
        string_val: "ssd300/expanded_conv_2/depthwise/BatchNorm/moving_mean"
        string_val: "ssd300/expanded_conv_2/depthwise/BatchNorm/moving_variance"
        string_val: "ssd300/expanded_conv_2/depthwise/depthwise_weights"
        string_val: "ssd300/expanded_conv_2/expand/BatchNorm/beta"
        string_val: "ssd300/expanded_conv_2/expand/BatchNorm/moving_mean"
        string_val: "ssd300/expanded_conv_2/expand/BatchNorm/moving_variance"
        string_val: "ssd300/expanded_conv_2/expand/weights"
        string_val: "ssd300/expanded_conv_2/project/BatchNorm/beta"
        string_val: "ssd300/expanded_conv_2/project/BatchNorm/moving_mean"
        string_val: "ssd300/expanded_conv_2/project/BatchNorm/moving_variance"
        string_val: "ssd300/expanded_conv_2/project/weights"
        string_val: "ssd300/expanded_conv_3/depthwise/BatchNorm/beta"
        string_val: "ssd300/expanded_conv_3/depthwise/BatchNorm/moving_mean"
        string_val: "ssd300/expanded_conv_3/depthwise/BatchNorm/moving_variance"
        string_val: "ssd300/expanded_conv_3/depthwise/depthwise_weights"
        string_val: "ssd300/expanded_conv_3/expand/BatchNorm/beta"
        string_val: "ssd300/expanded_conv_3/expand/BatchNorm/moving_mean"
        string_val: "ssd300/expanded_conv_3/expand/BatchNorm/moving_variance"
        string_val: "ssd300/expanded_conv_3/expand/weights"
        string_val: "ssd300/expanded_conv_3/project/BatchNorm/beta"
        string_val: "ssd300/expanded_conv_3/project/BatchNorm/moving_mean"
        string_val: "ssd300/expanded_conv_3/project/BatchNorm/moving_variance"
        string_val: "ssd300/expanded_conv_3/project/weights"
        string_val: "ssd300/expanded_conv_4/depthwise/BatchNorm/beta"
        string_val: "ssd300/expanded_conv_4/depthwise/BatchNorm/moving_mean"
        string_val: "ssd300/expanded_conv_4/depthwise/BatchNorm/moving_variance"
        string_val: "ssd300/expanded_conv_4/depthwise/depthwise_weights"
        string_val: "ssd300/expanded_conv_4/expand/BatchNorm/beta"
        string_val: "ssd300/expanded_conv_4/expand/BatchNorm/moving_mean"
        string_val: "ssd300/expanded_conv_4/expand/BatchNorm/moving_variance"
        string_val: "ssd300/expanded_conv_4/expand/weights"
        string_val: "ssd300/expanded_conv_4/project/BatchNorm/beta"
        string_val: "ssd300/expanded_conv_4/project/BatchNorm/moving_mean"
        string_val: "ssd300/expanded_conv_4/project/BatchNorm/moving_variance"
        string_val: "ssd300/expanded_conv_4/project/weights"
        string_val: "ssd300/expanded_conv_5/depthwise/BatchNorm/beta"
        string_val: "ssd300/expanded_conv_5/depthwise/BatchNorm/moving_mean"
        string_val: "ssd300/expanded_conv_5/depthwise/BatchNorm/moving_variance"
        string_val: "ssd300/expanded_conv_5/depthwise/depthwise_weights"
        string_val: "ssd300/expanded_conv_5/expand/BatchNorm/beta"
        string_val: "ssd300/expanded_conv_5/expand/BatchNorm/moving_mean"
        string_val: "ssd300/expanded_conv_5/expand/BatchNorm/moving_variance"
        string_val: "ssd300/expanded_conv_5/expand/weights"
        string_val: "ssd300/expanded_conv_5/project/BatchNorm/beta"
        string_val: "ssd300/expanded_conv_5/project/BatchNorm/moving_mean"
        string_val: "ssd300/expanded_conv_5/project/BatchNorm/moving_variance"
        string_val: "ssd300/expanded_conv_5/project/weights"
        string_val: "ssd300/expanded_conv_6/depthwise/BatchNorm/beta"
        string_val: "ssd300/expanded_conv_6/depthwise/BatchNorm/moving_mean"
        string_val: "ssd300/expanded_conv_6/depthwise/BatchNorm/moving_variance"
        string_val: "ssd300/expanded_conv_6/depthwise/depthwise_weights"
        string_val: "ssd300/expanded_conv_6/expand/BatchNorm/beta"
        string_val: "ssd300/expanded_conv_6/expand/BatchNorm/moving_mean"
        string_val: "ssd300/expanded_conv_6/expand/BatchNorm/moving_variance"
        string_val: "ssd300/expanded_conv_6/expand/weights"
        string_val: "ssd300/expanded_conv_6/project/BatchNorm/beta"
        string_val: "ssd300/expanded_conv_6/project/BatchNorm/moving_mean"
        string_val: "ssd300/expanded_conv_6/project/BatchNorm/moving_variance"
        string_val: "ssd300/expanded_conv_6/project/weights"
        string_val: "ssd300/expanded_conv_7/depthwise/BatchNorm/beta"
        string_val: "ssd300/expanded_conv_7/depthwise/BatchNorm/moving_mean"
        string_val: "ssd300/expanded_conv_7/depthwise/BatchNorm/moving_variance"
        string_val: "ssd300/expanded_conv_7/depthwise/depthwise_weights"
        string_val: "ssd300/expanded_conv_7/expand/BatchNorm/beta"
        string_val: "ssd300/expanded_conv_7/expand/BatchNorm/moving_mean"
        string_val: "ssd300/expanded_conv_7/expand/BatchNorm/moving_variance"
        string_val: "ssd300/expanded_conv_7/expand/weights"
        string_val: "ssd300/expanded_conv_7/project/BatchNorm/beta"
        string_val: "ssd300/expanded_conv_7/project/BatchNorm/moving_mean"
        string_val: "ssd300/expanded_conv_7/project/BatchNorm/moving_variance"
        string_val: "ssd300/expanded_conv_7/project/weights"
        string_val: "ssd300/expanded_conv_8/depthwise/BatchNorm/beta"
        string_val: "ssd300/expanded_conv_8/depthwise/BatchNorm/moving_mean"
        string_val: "ssd300/expanded_conv_8/depthwise/BatchNorm/moving_variance"
        string_val: "ssd300/expanded_conv_8/depthwise/depthwise_weights"
        string_val: "ssd300/expanded_conv_8/expand/BatchNorm/beta"
        string_val: "ssd300/expanded_conv_8/expand/BatchNorm/moving_mean"
        string_val: "ssd300/expanded_conv_8/expand/BatchNorm/moving_variance"
        string_val: "ssd300/expanded_conv_8/expand/weights"
        string_val: "ssd300/expanded_conv_8/project/BatchNorm/beta"
        string_val: "ssd300/expanded_conv_8/project/BatchNorm/moving_mean"
        string_val: "ssd300/expanded_conv_8/project/BatchNorm/moving_variance"
        string_val: "ssd300/expanded_conv_8/project/weights"
        string_val: "ssd300/expanded_conv_9/depthwise/BatchNorm/beta"
        string_val: "ssd300/expanded_conv_9/depthwise/BatchNorm/moving_mean"
        string_val: "ssd300/expanded_conv_9/depthwise/BatchNorm/moving_variance"
        string_val: "ssd300/expanded_conv_9/depthwise/depthwise_weights"
        string_val: "ssd300/expanded_conv_9/expand/BatchNorm/beta"
        string_val: "ssd300/expanded_conv_9/expand/BatchNorm/moving_mean"
        string_val: "ssd300/expanded_conv_9/expand/BatchNorm/moving_variance"
        string_val: "ssd300/expanded_conv_9/expand/weights"
        string_val: "ssd300/expanded_conv_9/project/BatchNorm/beta"
        string_val: "ssd300/expanded_conv_9/project/BatchNorm/moving_mean"
        string_val: "ssd300/expanded_conv_9/project/BatchNorm/moving_variance"
        string_val: "ssd300/expanded_conv_9/project/weights"
        string_val: "ssd300/layer_19_1_Conv2d_2_1x1_256/BatchNorm/beta"
        string_val: "ssd300/layer_19_1_Conv2d_2_1x1_256/BatchNorm/moving_mean"
        string_val: "ssd300/layer_19_1_Conv2d_2_1x1_256/BatchNorm/moving_variance"
        string_val: "ssd300/layer_19_1_Conv2d_2_1x1_256/weights"
        string_val: "ssd300/layer_19_1_Conv2d_3_1x1_128/BatchNorm/beta"
        string_val: "ssd300/layer_19_1_Conv2d_3_1x1_128/BatchNorm/moving_mean"
        string_val: "ssd300/layer_19_1_Conv2d_3_1x1_128/BatchNorm/moving_variance"
        string_val: "ssd300/layer_19_1_Conv2d_3_1x1_128/weights"
        string_val: "ssd300/layer_19_1_Conv2d_4_1x1_128/BatchNorm/beta"
        string_val: "ssd300/layer_19_1_Conv2d_4_1x1_128/BatchNorm/moving_mean"
        string_val: "ssd300/layer_19_1_Conv2d_4_1x1_128/BatchNorm/moving_variance"
        string_val: "ssd300/layer_19_1_Conv2d_4_1x1_128/weights"
        string_val: "ssd300/layer_19_1_Conv2d_5_1x1_64/BatchNorm/beta"
        string_val: "ssd300/layer_19_1_Conv2d_5_1x1_64/BatchNorm/moving_mean"
        string_val: "ssd300/layer_19_1_Conv2d_5_1x1_64/BatchNorm/moving_variance"
        string_val: "ssd300/layer_19_1_Conv2d_5_1x1_64/weights"
        string_val: "ssd300/layer_19_2_Conv2d_2_3x3_s2_512/BatchNorm/beta"
        string_val: "ssd300/layer_19_2_Conv2d_2_3x3_s2_512/BatchNorm/moving_mean"
        string_val: "ssd300/layer_19_2_Conv2d_2_3x3_s2_512/BatchNorm/moving_variance"
        string_val: "ssd300/layer_19_2_Conv2d_2_3x3_s2_512/weights"
        string_val: "ssd300/layer_19_2_Conv2d_2_3x3_s2_512_depthwise/BatchNorm/beta"
        string_val: "ssd300/layer_19_2_Conv2d_2_3x3_s2_512_depthwise/BatchNorm/moving_mean"
        string_val: "ssd300/layer_19_2_Conv2d_2_3x3_s2_512_depthwise/BatchNorm/moving_variance"
        string_val: "ssd300/layer_19_2_Conv2d_2_3x3_s2_512_depthwise/depthwise_weights"
        string_val: "ssd300/layer_19_2_Conv2d_3_3x3_s2_256/BatchNorm/beta"
        string_val: "ssd300/layer_19_2_Conv2d_3_3x3_s2_256/BatchNorm/moving_mean"
        string_val: "ssd300/layer_19_2_Conv2d_3_3x3_s2_256/BatchNorm/moving_variance"
        string_val: "ssd300/layer_19_2_Conv2d_3_3x3_s2_256/weights"
        string_val: "ssd300/layer_19_2_Conv2d_3_3x3_s2_256_depthwise/BatchNorm/beta"
        string_val: "ssd300/layer_19_2_Conv2d_3_3x3_s2_256_depthwise/BatchNorm/moving_mean"
        string_val: "ssd300/layer_19_2_Conv2d_3_3x3_s2_256_depthwise/BatchNorm/moving_variance"
        string_val: "ssd300/layer_19_2_Conv2d_3_3x3_s2_256_depthwise/depthwise_weights"
        string_val: "ssd300/layer_19_2_Conv2d_4_3x3_s2_256/BatchNorm/beta"
        string_val: "ssd300/layer_19_2_Conv2d_4_3x3_s2_256/BatchNorm/moving_mean"
        string_val: "ssd300/layer_19_2_Conv2d_4_3x3_s2_256/BatchNorm/moving_variance"
        string_val: "ssd300/layer_19_2_Conv2d_4_3x3_s2_256/weights"
        string_val: "ssd300/layer_19_2_Conv2d_4_3x3_s2_256_depthwise/BatchNorm/beta"
        string_val: "ssd300/layer_19_2_Conv2d_4_3x3_s2_256_depthwise/BatchNorm/moving_mean"
        string_val: "ssd300/layer_19_2_Conv2d_4_3x3_s2_256_depthwise/BatchNorm/moving_variance"
        string_val: "ssd300/layer_19_2_Conv2d_4_3x3_s2_256_depthwise/depthwise_weights"
        string_val: "ssd300/layer_19_2_Conv2d_5_3x3_s2_128/BatchNorm/beta"
        string_val: "ssd300/layer_19_2_Conv2d_5_3x3_s2_128/BatchNorm/moving_mean"
        string_val: "ssd300/layer_19_2_Conv2d_5_3x3_s2_128/BatchNorm/moving_variance"
        string_val: "ssd300/layer_19_2_Conv2d_5_3x3_s2_128/weights"
        string_val: "ssd300/layer_19_2_Conv2d_5_3x3_s2_128_depthwise/BatchNorm/beta"
        string_val: "ssd300/layer_19_2_Conv2d_5_3x3_s2_128_depthwise/BatchNorm/moving_mean"
        string_val: "ssd300/layer_19_2_Conv2d_5_3x3_s2_128_depthwise/BatchNorm/moving_variance"
        string_val: "ssd300/layer_19_2_Conv2d_5_3x3_s2_128_depthwise/depthwise_weights"
        string_val: "ssd300/multibox_head/cls_0/bias"
        string_val: "ssd300/multibox_head/cls_0/kernel"
        string_val: "ssd300/multibox_head/cls_1/bias"
        string_val: "ssd300/multibox_head/cls_1/kernel"
        string_val: "ssd300/multibox_head/cls_2/bias"
        string_val: "ssd300/multibox_head/cls_2/kernel"
        string_val: "ssd300/multibox_head/cls_3/bias"
        string_val: "ssd300/multibox_head/cls_3/kernel"
        string_val: "ssd300/multibox_head/cls_4/bias"
        string_val: "ssd300/multibox_head/cls_4/kernel"
        string_val: "ssd300/multibox_head/cls_5/bias"
        string_val: "ssd300/multibox_head/cls_5/kernel"
        string_val: "ssd300/multibox_head/loc_0/bias"
        string_val: "ssd300/multibox_head/loc_0/kernel"
        string_val: "ssd300/multibox_head/loc_1/bias"
        string_val: "ssd300/multibox_head/loc_1/kernel"
        string_val: "ssd300/multibox_head/loc_2/bias"
        string_val: "ssd300/multibox_head/loc_2/kernel"
        string_val: "ssd300/multibox_head/loc_3/bias"
        string_val: "ssd300/multibox_head/loc_3/kernel"
        string_val: "ssd300/multibox_head/loc_4/bias"
        string_val: "ssd300/multibox_head/loc_4/kernel"
        string_val: "ssd300/multibox_head/loc_5/bias"
        string_val: "ssd300/multibox_head/loc_5/kernel"
      }
    }
  }
}
node {
  name: "save/RestoreV2/shape_and_slices"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 280
          }
        }
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2/tensor_names"
  input: "save/RestoreV2/shape_and_slices"
  device: "/device:CPU:0"
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign"
  op: "Assign"
  input: "ssd300/Conv/BatchNorm/beta"
  input: "save/RestoreV2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/Conv/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_1"
  op: "Assign"
  input: "ssd300/Conv/BatchNorm/moving_mean"
  input: "save/RestoreV2:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/Conv/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_2"
  op: "Assign"
  input: "ssd300/Conv/BatchNorm/moving_variance"
  input: "save/RestoreV2:2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/Conv/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_3"
  op: "Assign"
  input: "ssd300/Conv/weights"
  input: "save/RestoreV2:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/Conv/weights"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_4"
  op: "Assign"
  input: "ssd300/Conv_1/BatchNorm/beta"
  input: "save/RestoreV2:4"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/Conv_1/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_5"
  op: "Assign"
  input: "ssd300/Conv_1/BatchNorm/moving_mean"
  input: "save/RestoreV2:5"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/Conv_1/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_6"
  op: "Assign"
  input: "ssd300/Conv_1/BatchNorm/moving_variance"
  input: "save/RestoreV2:6"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/Conv_1/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_7"
  op: "Assign"
  input: "ssd300/Conv_1/weights"
  input: "save/RestoreV2:7"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/Conv_1/weights"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_8"
  op: "Assign"
  input: "ssd300/expanded_conv/depthwise/BatchNorm/beta"
  input: "save/RestoreV2:8"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv/depthwise/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_9"
  op: "Assign"
  input: "ssd300/expanded_conv/depthwise/BatchNorm/moving_mean"
  input: "save/RestoreV2:9"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv/depthwise/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_10"
  op: "Assign"
  input: "ssd300/expanded_conv/depthwise/BatchNorm/moving_variance"
  input: "save/RestoreV2:10"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv/depthwise/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_11"
  op: "Assign"
  input: "ssd300/expanded_conv/depthwise/depthwise_weights"
  input: "save/RestoreV2:11"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv/depthwise/depthwise_weights"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_12"
  op: "Assign"
  input: "ssd300/expanded_conv/project/BatchNorm/beta"
  input: "save/RestoreV2:12"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv/project/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_13"
  op: "Assign"
  input: "ssd300/expanded_conv/project/BatchNorm/moving_mean"
  input: "save/RestoreV2:13"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv/project/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_14"
  op: "Assign"
  input: "ssd300/expanded_conv/project/BatchNorm/moving_variance"
  input: "save/RestoreV2:14"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv/project/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_15"
  op: "Assign"
  input: "ssd300/expanded_conv/project/weights"
  input: "save/RestoreV2:15"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv/project/weights"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_16"
  op: "Assign"
  input: "ssd300/expanded_conv_1/depthwise/BatchNorm/beta"
  input: "save/RestoreV2:16"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv_1/depthwise/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_17"
  op: "Assign"
  input: "ssd300/expanded_conv_1/depthwise/BatchNorm/moving_mean"
  input: "save/RestoreV2:17"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv_1/depthwise/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_18"
  op: "Assign"
  input: "ssd300/expanded_conv_1/depthwise/BatchNorm/moving_variance"
  input: "save/RestoreV2:18"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv_1/depthwise/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_19"
  op: "Assign"
  input: "ssd300/expanded_conv_1/depthwise/depthwise_weights"
  input: "save/RestoreV2:19"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv_1/depthwise/depthwise_weights"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_20"
  op: "Assign"
  input: "ssd300/expanded_conv_1/expand/BatchNorm/beta"
  input: "save/RestoreV2:20"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv_1/expand/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_21"
  op: "Assign"
  input: "ssd300/expanded_conv_1/expand/BatchNorm/moving_mean"
  input: "save/RestoreV2:21"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv_1/expand/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_22"
  op: "Assign"
  input: "ssd300/expanded_conv_1/expand/BatchNorm/moving_variance"
  input: "save/RestoreV2:22"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv_1/expand/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_23"
  op: "Assign"
  input: "ssd300/expanded_conv_1/expand/weights"
  input: "save/RestoreV2:23"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv_1/expand/weights"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_24"
  op: "Assign"
  input: "ssd300/expanded_conv_1/project/BatchNorm/beta"
  input: "save/RestoreV2:24"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv_1/project/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_25"
  op: "Assign"
  input: "ssd300/expanded_conv_1/project/BatchNorm/moving_mean"
  input: "save/RestoreV2:25"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv_1/project/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_26"
  op: "Assign"
  input: "ssd300/expanded_conv_1/project/BatchNorm/moving_variance"
  input: "save/RestoreV2:26"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv_1/project/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_27"
  op: "Assign"
  input: "ssd300/expanded_conv_1/project/weights"
  input: "save/RestoreV2:27"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv_1/project/weights"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_28"
  op: "Assign"
  input: "ssd300/expanded_conv_10/depthwise/BatchNorm/beta"
  input: "save/RestoreV2:28"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv_10/depthwise/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_29"
  op: "Assign"
  input: "ssd300/expanded_conv_10/depthwise/BatchNorm/moving_mean"
  input: "save/RestoreV2:29"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv_10/depthwise/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_30"
  op: "Assign"
  input: "ssd300/expanded_conv_10/depthwise/BatchNorm/moving_variance"
  input: "save/RestoreV2:30"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv_10/depthwise/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_31"
  op: "Assign"
  input: "ssd300/expanded_conv_10/depthwise/depthwise_weights"
  input: "save/RestoreV2:31"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv_10/depthwise/depthwise_weights"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_32"
  op: "Assign"
  input: "ssd300/expanded_conv_10/expand/BatchNorm/beta"
  input: "save/RestoreV2:32"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv_10/expand/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_33"
  op: "Assign"
  input: "ssd300/expanded_conv_10/expand/BatchNorm/moving_mean"
  input: "save/RestoreV2:33"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv_10/expand/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_34"
  op: "Assign"
  input: "ssd300/expanded_conv_10/expand/BatchNorm/moving_variance"
  input: "save/RestoreV2:34"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv_10/expand/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_35"
  op: "Assign"
  input: "ssd300/expanded_conv_10/expand/weights"
  input: "save/RestoreV2:35"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv_10/expand/weights"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_36"
  op: "Assign"
  input: "ssd300/expanded_conv_10/project/BatchNorm/beta"
  input: "save/RestoreV2:36"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv_10/project/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_37"
  op: "Assign"
  input: "ssd300/expanded_conv_10/project/BatchNorm/moving_mean"
  input: "save/RestoreV2:37"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv_10/project/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_38"
  op: "Assign"
  input: "ssd300/expanded_conv_10/project/BatchNorm/moving_variance"
  input: "save/RestoreV2:38"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv_10/project/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_39"
  op: "Assign"
  input: "ssd300/expanded_conv_10/project/weights"
  input: "save/RestoreV2:39"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv_10/project/weights"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_40"
  op: "Assign"
  input: "ssd300/expanded_conv_11/depthwise/BatchNorm/beta"
  input: "save/RestoreV2:40"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv_11/depthwise/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_41"
  op: "Assign"
  input: "ssd300/expanded_conv_11/depthwise/BatchNorm/moving_mean"
  input: "save/RestoreV2:41"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv_11/depthwise/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_42"
  op: "Assign"
  input: "ssd300/expanded_conv_11/depthwise/BatchNorm/moving_variance"
  input: "save/RestoreV2:42"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv_11/depthwise/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_43"
  op: "Assign"
  input: "ssd300/expanded_conv_11/depthwise/depthwise_weights"
  input: "save/RestoreV2:43"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv_11/depthwise/depthwise_weights"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_44"
  op: "Assign"
  input: "ssd300/expanded_conv_11/expand/BatchNorm/beta"
  input: "save/RestoreV2:44"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv_11/expand/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_45"
  op: "Assign"
  input: "ssd300/expanded_conv_11/expand/BatchNorm/moving_mean"
  input: "save/RestoreV2:45"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv_11/expand/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_46"
  op: "Assign"
  input: "ssd300/expanded_conv_11/expand/BatchNorm/moving_variance"
  input: "save/RestoreV2:46"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv_11/expand/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_47"
  op: "Assign"
  input: "ssd300/expanded_conv_11/expand/weights"
  input: "save/RestoreV2:47"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv_11/expand/weights"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_48"
  op: "Assign"
  input: "ssd300/expanded_conv_11/project/BatchNorm/beta"
  input: "save/RestoreV2:48"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv_11/project/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_49"
  op: "Assign"
  input: "ssd300/expanded_conv_11/project/BatchNorm/moving_mean"
  input: "save/RestoreV2:49"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv_11/project/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_50"
  op: "Assign"
  input: "ssd300/expanded_conv_11/project/BatchNorm/moving_variance"
  input: "save/RestoreV2:50"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv_11/project/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_51"
  op: "Assign"
  input: "ssd300/expanded_conv_11/project/weights"
  input: "save/RestoreV2:51"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv_11/project/weights"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_52"
  op: "Assign"
  input: "ssd300/expanded_conv_12/depthwise/BatchNorm/beta"
  input: "save/RestoreV2:52"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv_12/depthwise/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_53"
  op: "Assign"
  input: "ssd300/expanded_conv_12/depthwise/BatchNorm/moving_mean"
  input: "save/RestoreV2:53"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv_12/depthwise/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_54"
  op: "Assign"
  input: "ssd300/expanded_conv_12/depthwise/BatchNorm/moving_variance"
  input: "save/RestoreV2:54"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv_12/depthwise/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_55"
  op: "Assign"
  input: "ssd300/expanded_conv_12/depthwise/depthwise_weights"
  input: "save/RestoreV2:55"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv_12/depthwise/depthwise_weights"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_56"
  op: "Assign"
  input: "ssd300/expanded_conv_12/expand/BatchNorm/beta"
  input: "save/RestoreV2:56"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv_12/expand/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_57"
  op: "Assign"
  input: "ssd300/expanded_conv_12/expand/BatchNorm/moving_mean"
  input: "save/RestoreV2:57"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv_12/expand/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_58"
  op: "Assign"
  input: "ssd300/expanded_conv_12/expand/BatchNorm/moving_variance"
  input: "save/RestoreV2:58"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv_12/expand/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_59"
  op: "Assign"
  input: "ssd300/expanded_conv_12/expand/weights"
  input: "save/RestoreV2:59"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv_12/expand/weights"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_60"
  op: "Assign"
  input: "ssd300/expanded_conv_12/project/BatchNorm/beta"
  input: "save/RestoreV2:60"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv_12/project/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_61"
  op: "Assign"
  input: "ssd300/expanded_conv_12/project/BatchNorm/moving_mean"
  input: "save/RestoreV2:61"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv_12/project/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_62"
  op: "Assign"
  input: "ssd300/expanded_conv_12/project/BatchNorm/moving_variance"
  input: "save/RestoreV2:62"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv_12/project/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_63"
  op: "Assign"
  input: "ssd300/expanded_conv_12/project/weights"
  input: "save/RestoreV2:63"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv_12/project/weights"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_64"
  op: "Assign"
  input: "ssd300/expanded_conv_13/depthwise/BatchNorm/beta"
  input: "save/RestoreV2:64"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv_13/depthwise/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_65"
  op: "Assign"
  input: "ssd300/expanded_conv_13/depthwise/BatchNorm/moving_mean"
  input: "save/RestoreV2:65"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv_13/depthwise/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_66"
  op: "Assign"
  input: "ssd300/expanded_conv_13/depthwise/BatchNorm/moving_variance"
  input: "save/RestoreV2:66"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv_13/depthwise/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_67"
  op: "Assign"
  input: "ssd300/expanded_conv_13/depthwise/depthwise_weights"
  input: "save/RestoreV2:67"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv_13/depthwise/depthwise_weights"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_68"
  op: "Assign"
  input: "ssd300/expanded_conv_13/expand/BatchNorm/beta"
  input: "save/RestoreV2:68"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv_13/expand/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_69"
  op: "Assign"
  input: "ssd300/expanded_conv_13/expand/BatchNorm/moving_mean"
  input: "save/RestoreV2:69"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv_13/expand/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_70"
  op: "Assign"
  input: "ssd300/expanded_conv_13/expand/BatchNorm/moving_variance"
  input: "save/RestoreV2:70"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv_13/expand/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_71"
  op: "Assign"
  input: "ssd300/expanded_conv_13/expand/weights"
  input: "save/RestoreV2:71"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv_13/expand/weights"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_72"
  op: "Assign"
  input: "ssd300/expanded_conv_13/project/BatchNorm/beta"
  input: "save/RestoreV2:72"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv_13/project/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_73"
  op: "Assign"
  input: "ssd300/expanded_conv_13/project/BatchNorm/moving_mean"
  input: "save/RestoreV2:73"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv_13/project/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_74"
  op: "Assign"
  input: "ssd300/expanded_conv_13/project/BatchNorm/moving_variance"
  input: "save/RestoreV2:74"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv_13/project/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_75"
  op: "Assign"
  input: "ssd300/expanded_conv_13/project/weights"
  input: "save/RestoreV2:75"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv_13/project/weights"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_76"
  op: "Assign"
  input: "ssd300/expanded_conv_14/depthwise/BatchNorm/beta"
  input: "save/RestoreV2:76"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv_14/depthwise/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_77"
  op: "Assign"
  input: "ssd300/expanded_conv_14/depthwise/BatchNorm/moving_mean"
  input: "save/RestoreV2:77"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv_14/depthwise/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_78"
  op: "Assign"
  input: "ssd300/expanded_conv_14/depthwise/BatchNorm/moving_variance"
  input: "save/RestoreV2:78"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv_14/depthwise/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_79"
  op: "Assign"
  input: "ssd300/expanded_conv_14/depthwise/depthwise_weights"
  input: "save/RestoreV2:79"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv_14/depthwise/depthwise_weights"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_80"
  op: "Assign"
  input: "ssd300/expanded_conv_14/expand/BatchNorm/beta"
  input: "save/RestoreV2:80"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv_14/expand/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_81"
  op: "Assign"
  input: "ssd300/expanded_conv_14/expand/BatchNorm/moving_mean"
  input: "save/RestoreV2:81"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv_14/expand/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_82"
  op: "Assign"
  input: "ssd300/expanded_conv_14/expand/BatchNorm/moving_variance"
  input: "save/RestoreV2:82"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv_14/expand/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_83"
  op: "Assign"
  input: "ssd300/expanded_conv_14/expand/weights"
  input: "save/RestoreV2:83"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv_14/expand/weights"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_84"
  op: "Assign"
  input: "ssd300/expanded_conv_14/project/BatchNorm/beta"
  input: "save/RestoreV2:84"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv_14/project/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_85"
  op: "Assign"
  input: "ssd300/expanded_conv_14/project/BatchNorm/moving_mean"
  input: "save/RestoreV2:85"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv_14/project/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_86"
  op: "Assign"
  input: "ssd300/expanded_conv_14/project/BatchNorm/moving_variance"
  input: "save/RestoreV2:86"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv_14/project/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_87"
  op: "Assign"
  input: "ssd300/expanded_conv_14/project/weights"
  input: "save/RestoreV2:87"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv_14/project/weights"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_88"
  op: "Assign"
  input: "ssd300/expanded_conv_15/depthwise/BatchNorm/beta"
  input: "save/RestoreV2:88"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv_15/depthwise/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_89"
  op: "Assign"
  input: "ssd300/expanded_conv_15/depthwise/BatchNorm/moving_mean"
  input: "save/RestoreV2:89"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv_15/depthwise/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_90"
  op: "Assign"
  input: "ssd300/expanded_conv_15/depthwise/BatchNorm/moving_variance"
  input: "save/RestoreV2:90"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv_15/depthwise/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_91"
  op: "Assign"
  input: "ssd300/expanded_conv_15/depthwise/depthwise_weights"
  input: "save/RestoreV2:91"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv_15/depthwise/depthwise_weights"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_92"
  op: "Assign"
  input: "ssd300/expanded_conv_15/expand/BatchNorm/beta"
  input: "save/RestoreV2:92"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv_15/expand/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_93"
  op: "Assign"
  input: "ssd300/expanded_conv_15/expand/BatchNorm/moving_mean"
  input: "save/RestoreV2:93"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv_15/expand/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_94"
  op: "Assign"
  input: "ssd300/expanded_conv_15/expand/BatchNorm/moving_variance"
  input: "save/RestoreV2:94"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv_15/expand/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_95"
  op: "Assign"
  input: "ssd300/expanded_conv_15/expand/weights"
  input: "save/RestoreV2:95"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv_15/expand/weights"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_96"
  op: "Assign"
  input: "ssd300/expanded_conv_15/project/BatchNorm/beta"
  input: "save/RestoreV2:96"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv_15/project/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_97"
  op: "Assign"
  input: "ssd300/expanded_conv_15/project/BatchNorm/moving_mean"
  input: "save/RestoreV2:97"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv_15/project/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_98"
  op: "Assign"
  input: "ssd300/expanded_conv_15/project/BatchNorm/moving_variance"
  input: "save/RestoreV2:98"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv_15/project/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_99"
  op: "Assign"
  input: "ssd300/expanded_conv_15/project/weights"
  input: "save/RestoreV2:99"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv_15/project/weights"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_100"
  op: "Assign"
  input: "ssd300/expanded_conv_16/depthwise/BatchNorm/beta"
  input: "save/RestoreV2:100"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv_16/depthwise/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_101"
  op: "Assign"
  input: "ssd300/expanded_conv_16/depthwise/BatchNorm/moving_mean"
  input: "save/RestoreV2:101"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv_16/depthwise/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_102"
  op: "Assign"
  input: "ssd300/expanded_conv_16/depthwise/BatchNorm/moving_variance"
  input: "save/RestoreV2:102"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv_16/depthwise/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_103"
  op: "Assign"
  input: "ssd300/expanded_conv_16/depthwise/depthwise_weights"
  input: "save/RestoreV2:103"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv_16/depthwise/depthwise_weights"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_104"
  op: "Assign"
  input: "ssd300/expanded_conv_16/expand/BatchNorm/beta"
  input: "save/RestoreV2:104"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv_16/expand/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_105"
  op: "Assign"
  input: "ssd300/expanded_conv_16/expand/BatchNorm/moving_mean"
  input: "save/RestoreV2:105"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv_16/expand/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_106"
  op: "Assign"
  input: "ssd300/expanded_conv_16/expand/BatchNorm/moving_variance"
  input: "save/RestoreV2:106"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv_16/expand/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_107"
  op: "Assign"
  input: "ssd300/expanded_conv_16/expand/weights"
  input: "save/RestoreV2:107"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv_16/expand/weights"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_108"
  op: "Assign"
  input: "ssd300/expanded_conv_16/project/BatchNorm/beta"
  input: "save/RestoreV2:108"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv_16/project/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_109"
  op: "Assign"
  input: "ssd300/expanded_conv_16/project/BatchNorm/moving_mean"
  input: "save/RestoreV2:109"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv_16/project/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_110"
  op: "Assign"
  input: "ssd300/expanded_conv_16/project/BatchNorm/moving_variance"
  input: "save/RestoreV2:110"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv_16/project/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_111"
  op: "Assign"
  input: "ssd300/expanded_conv_16/project/weights"
  input: "save/RestoreV2:111"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv_16/project/weights"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_112"
  op: "Assign"
  input: "ssd300/expanded_conv_2/depthwise/BatchNorm/beta"
  input: "save/RestoreV2:112"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv_2/depthwise/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_113"
  op: "Assign"
  input: "ssd300/expanded_conv_2/depthwise/BatchNorm/moving_mean"
  input: "save/RestoreV2:113"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv_2/depthwise/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_114"
  op: "Assign"
  input: "ssd300/expanded_conv_2/depthwise/BatchNorm/moving_variance"
  input: "save/RestoreV2:114"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv_2/depthwise/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_115"
  op: "Assign"
  input: "ssd300/expanded_conv_2/depthwise/depthwise_weights"
  input: "save/RestoreV2:115"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv_2/depthwise/depthwise_weights"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_116"
  op: "Assign"
  input: "ssd300/expanded_conv_2/expand/BatchNorm/beta"
  input: "save/RestoreV2:116"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv_2/expand/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_117"
  op: "Assign"
  input: "ssd300/expanded_conv_2/expand/BatchNorm/moving_mean"
  input: "save/RestoreV2:117"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv_2/expand/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_118"
  op: "Assign"
  input: "ssd300/expanded_conv_2/expand/BatchNorm/moving_variance"
  input: "save/RestoreV2:118"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv_2/expand/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_119"
  op: "Assign"
  input: "ssd300/expanded_conv_2/expand/weights"
  input: "save/RestoreV2:119"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv_2/expand/weights"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_120"
  op: "Assign"
  input: "ssd300/expanded_conv_2/project/BatchNorm/beta"
  input: "save/RestoreV2:120"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv_2/project/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_121"
  op: "Assign"
  input: "ssd300/expanded_conv_2/project/BatchNorm/moving_mean"
  input: "save/RestoreV2:121"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv_2/project/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_122"
  op: "Assign"
  input: "ssd300/expanded_conv_2/project/BatchNorm/moving_variance"
  input: "save/RestoreV2:122"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv_2/project/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_123"
  op: "Assign"
  input: "ssd300/expanded_conv_2/project/weights"
  input: "save/RestoreV2:123"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv_2/project/weights"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_124"
  op: "Assign"
  input: "ssd300/expanded_conv_3/depthwise/BatchNorm/beta"
  input: "save/RestoreV2:124"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv_3/depthwise/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_125"
  op: "Assign"
  input: "ssd300/expanded_conv_3/depthwise/BatchNorm/moving_mean"
  input: "save/RestoreV2:125"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv_3/depthwise/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_126"
  op: "Assign"
  input: "ssd300/expanded_conv_3/depthwise/BatchNorm/moving_variance"
  input: "save/RestoreV2:126"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv_3/depthwise/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_127"
  op: "Assign"
  input: "ssd300/expanded_conv_3/depthwise/depthwise_weights"
  input: "save/RestoreV2:127"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv_3/depthwise/depthwise_weights"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_128"
  op: "Assign"
  input: "ssd300/expanded_conv_3/expand/BatchNorm/beta"
  input: "save/RestoreV2:128"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv_3/expand/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_129"
  op: "Assign"
  input: "ssd300/expanded_conv_3/expand/BatchNorm/moving_mean"
  input: "save/RestoreV2:129"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv_3/expand/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_130"
  op: "Assign"
  input: "ssd300/expanded_conv_3/expand/BatchNorm/moving_variance"
  input: "save/RestoreV2:130"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv_3/expand/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_131"
  op: "Assign"
  input: "ssd300/expanded_conv_3/expand/weights"
  input: "save/RestoreV2:131"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv_3/expand/weights"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_132"
  op: "Assign"
  input: "ssd300/expanded_conv_3/project/BatchNorm/beta"
  input: "save/RestoreV2:132"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv_3/project/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_133"
  op: "Assign"
  input: "ssd300/expanded_conv_3/project/BatchNorm/moving_mean"
  input: "save/RestoreV2:133"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv_3/project/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_134"
  op: "Assign"
  input: "ssd300/expanded_conv_3/project/BatchNorm/moving_variance"
  input: "save/RestoreV2:134"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv_3/project/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_135"
  op: "Assign"
  input: "ssd300/expanded_conv_3/project/weights"
  input: "save/RestoreV2:135"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv_3/project/weights"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_136"
  op: "Assign"
  input: "ssd300/expanded_conv_4/depthwise/BatchNorm/beta"
  input: "save/RestoreV2:136"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv_4/depthwise/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_137"
  op: "Assign"
  input: "ssd300/expanded_conv_4/depthwise/BatchNorm/moving_mean"
  input: "save/RestoreV2:137"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv_4/depthwise/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_138"
  op: "Assign"
  input: "ssd300/expanded_conv_4/depthwise/BatchNorm/moving_variance"
  input: "save/RestoreV2:138"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv_4/depthwise/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_139"
  op: "Assign"
  input: "ssd300/expanded_conv_4/depthwise/depthwise_weights"
  input: "save/RestoreV2:139"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv_4/depthwise/depthwise_weights"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_140"
  op: "Assign"
  input: "ssd300/expanded_conv_4/expand/BatchNorm/beta"
  input: "save/RestoreV2:140"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv_4/expand/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_141"
  op: "Assign"
  input: "ssd300/expanded_conv_4/expand/BatchNorm/moving_mean"
  input: "save/RestoreV2:141"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv_4/expand/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_142"
  op: "Assign"
  input: "ssd300/expanded_conv_4/expand/BatchNorm/moving_variance"
  input: "save/RestoreV2:142"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv_4/expand/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_143"
  op: "Assign"
  input: "ssd300/expanded_conv_4/expand/weights"
  input: "save/RestoreV2:143"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv_4/expand/weights"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_144"
  op: "Assign"
  input: "ssd300/expanded_conv_4/project/BatchNorm/beta"
  input: "save/RestoreV2:144"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv_4/project/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_145"
  op: "Assign"
  input: "ssd300/expanded_conv_4/project/BatchNorm/moving_mean"
  input: "save/RestoreV2:145"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv_4/project/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_146"
  op: "Assign"
  input: "ssd300/expanded_conv_4/project/BatchNorm/moving_variance"
  input: "save/RestoreV2:146"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv_4/project/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_147"
  op: "Assign"
  input: "ssd300/expanded_conv_4/project/weights"
  input: "save/RestoreV2:147"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv_4/project/weights"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_148"
  op: "Assign"
  input: "ssd300/expanded_conv_5/depthwise/BatchNorm/beta"
  input: "save/RestoreV2:148"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv_5/depthwise/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_149"
  op: "Assign"
  input: "ssd300/expanded_conv_5/depthwise/BatchNorm/moving_mean"
  input: "save/RestoreV2:149"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv_5/depthwise/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_150"
  op: "Assign"
  input: "ssd300/expanded_conv_5/depthwise/BatchNorm/moving_variance"
  input: "save/RestoreV2:150"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv_5/depthwise/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_151"
  op: "Assign"
  input: "ssd300/expanded_conv_5/depthwise/depthwise_weights"
  input: "save/RestoreV2:151"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv_5/depthwise/depthwise_weights"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_152"
  op: "Assign"
  input: "ssd300/expanded_conv_5/expand/BatchNorm/beta"
  input: "save/RestoreV2:152"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv_5/expand/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_153"
  op: "Assign"
  input: "ssd300/expanded_conv_5/expand/BatchNorm/moving_mean"
  input: "save/RestoreV2:153"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv_5/expand/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_154"
  op: "Assign"
  input: "ssd300/expanded_conv_5/expand/BatchNorm/moving_variance"
  input: "save/RestoreV2:154"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv_5/expand/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_155"
  op: "Assign"
  input: "ssd300/expanded_conv_5/expand/weights"
  input: "save/RestoreV2:155"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv_5/expand/weights"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_156"
  op: "Assign"
  input: "ssd300/expanded_conv_5/project/BatchNorm/beta"
  input: "save/RestoreV2:156"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv_5/project/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_157"
  op: "Assign"
  input: "ssd300/expanded_conv_5/project/BatchNorm/moving_mean"
  input: "save/RestoreV2:157"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv_5/project/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_158"
  op: "Assign"
  input: "ssd300/expanded_conv_5/project/BatchNorm/moving_variance"
  input: "save/RestoreV2:158"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv_5/project/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_159"
  op: "Assign"
  input: "ssd300/expanded_conv_5/project/weights"
  input: "save/RestoreV2:159"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv_5/project/weights"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_160"
  op: "Assign"
  input: "ssd300/expanded_conv_6/depthwise/BatchNorm/beta"
  input: "save/RestoreV2:160"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv_6/depthwise/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_161"
  op: "Assign"
  input: "ssd300/expanded_conv_6/depthwise/BatchNorm/moving_mean"
  input: "save/RestoreV2:161"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv_6/depthwise/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_162"
  op: "Assign"
  input: "ssd300/expanded_conv_6/depthwise/BatchNorm/moving_variance"
  input: "save/RestoreV2:162"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv_6/depthwise/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_163"
  op: "Assign"
  input: "ssd300/expanded_conv_6/depthwise/depthwise_weights"
  input: "save/RestoreV2:163"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv_6/depthwise/depthwise_weights"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_164"
  op: "Assign"
  input: "ssd300/expanded_conv_6/expand/BatchNorm/beta"
  input: "save/RestoreV2:164"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv_6/expand/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_165"
  op: "Assign"
  input: "ssd300/expanded_conv_6/expand/BatchNorm/moving_mean"
  input: "save/RestoreV2:165"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv_6/expand/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_166"
  op: "Assign"
  input: "ssd300/expanded_conv_6/expand/BatchNorm/moving_variance"
  input: "save/RestoreV2:166"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv_6/expand/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_167"
  op: "Assign"
  input: "ssd300/expanded_conv_6/expand/weights"
  input: "save/RestoreV2:167"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv_6/expand/weights"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_168"
  op: "Assign"
  input: "ssd300/expanded_conv_6/project/BatchNorm/beta"
  input: "save/RestoreV2:168"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv_6/project/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_169"
  op: "Assign"
  input: "ssd300/expanded_conv_6/project/BatchNorm/moving_mean"
  input: "save/RestoreV2:169"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv_6/project/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_170"
  op: "Assign"
  input: "ssd300/expanded_conv_6/project/BatchNorm/moving_variance"
  input: "save/RestoreV2:170"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv_6/project/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_171"
  op: "Assign"
  input: "ssd300/expanded_conv_6/project/weights"
  input: "save/RestoreV2:171"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv_6/project/weights"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_172"
  op: "Assign"
  input: "ssd300/expanded_conv_7/depthwise/BatchNorm/beta"
  input: "save/RestoreV2:172"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv_7/depthwise/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_173"
  op: "Assign"
  input: "ssd300/expanded_conv_7/depthwise/BatchNorm/moving_mean"
  input: "save/RestoreV2:173"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv_7/depthwise/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_174"
  op: "Assign"
  input: "ssd300/expanded_conv_7/depthwise/BatchNorm/moving_variance"
  input: "save/RestoreV2:174"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv_7/depthwise/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_175"
  op: "Assign"
  input: "ssd300/expanded_conv_7/depthwise/depthwise_weights"
  input: "save/RestoreV2:175"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv_7/depthwise/depthwise_weights"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_176"
  op: "Assign"
  input: "ssd300/expanded_conv_7/expand/BatchNorm/beta"
  input: "save/RestoreV2:176"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv_7/expand/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_177"
  op: "Assign"
  input: "ssd300/expanded_conv_7/expand/BatchNorm/moving_mean"
  input: "save/RestoreV2:177"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv_7/expand/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_178"
  op: "Assign"
  input: "ssd300/expanded_conv_7/expand/BatchNorm/moving_variance"
  input: "save/RestoreV2:178"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv_7/expand/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_179"
  op: "Assign"
  input: "ssd300/expanded_conv_7/expand/weights"
  input: "save/RestoreV2:179"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv_7/expand/weights"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_180"
  op: "Assign"
  input: "ssd300/expanded_conv_7/project/BatchNorm/beta"
  input: "save/RestoreV2:180"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv_7/project/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_181"
  op: "Assign"
  input: "ssd300/expanded_conv_7/project/BatchNorm/moving_mean"
  input: "save/RestoreV2:181"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv_7/project/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_182"
  op: "Assign"
  input: "ssd300/expanded_conv_7/project/BatchNorm/moving_variance"
  input: "save/RestoreV2:182"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv_7/project/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_183"
  op: "Assign"
  input: "ssd300/expanded_conv_7/project/weights"
  input: "save/RestoreV2:183"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv_7/project/weights"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_184"
  op: "Assign"
  input: "ssd300/expanded_conv_8/depthwise/BatchNorm/beta"
  input: "save/RestoreV2:184"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv_8/depthwise/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_185"
  op: "Assign"
  input: "ssd300/expanded_conv_8/depthwise/BatchNorm/moving_mean"
  input: "save/RestoreV2:185"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv_8/depthwise/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_186"
  op: "Assign"
  input: "ssd300/expanded_conv_8/depthwise/BatchNorm/moving_variance"
  input: "save/RestoreV2:186"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv_8/depthwise/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_187"
  op: "Assign"
  input: "ssd300/expanded_conv_8/depthwise/depthwise_weights"
  input: "save/RestoreV2:187"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv_8/depthwise/depthwise_weights"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_188"
  op: "Assign"
  input: "ssd300/expanded_conv_8/expand/BatchNorm/beta"
  input: "save/RestoreV2:188"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv_8/expand/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_189"
  op: "Assign"
  input: "ssd300/expanded_conv_8/expand/BatchNorm/moving_mean"
  input: "save/RestoreV2:189"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv_8/expand/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_190"
  op: "Assign"
  input: "ssd300/expanded_conv_8/expand/BatchNorm/moving_variance"
  input: "save/RestoreV2:190"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv_8/expand/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_191"
  op: "Assign"
  input: "ssd300/expanded_conv_8/expand/weights"
  input: "save/RestoreV2:191"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv_8/expand/weights"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_192"
  op: "Assign"
  input: "ssd300/expanded_conv_8/project/BatchNorm/beta"
  input: "save/RestoreV2:192"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv_8/project/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_193"
  op: "Assign"
  input: "ssd300/expanded_conv_8/project/BatchNorm/moving_mean"
  input: "save/RestoreV2:193"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv_8/project/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_194"
  op: "Assign"
  input: "ssd300/expanded_conv_8/project/BatchNorm/moving_variance"
  input: "save/RestoreV2:194"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv_8/project/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_195"
  op: "Assign"
  input: "ssd300/expanded_conv_8/project/weights"
  input: "save/RestoreV2:195"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv_8/project/weights"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_196"
  op: "Assign"
  input: "ssd300/expanded_conv_9/depthwise/BatchNorm/beta"
  input: "save/RestoreV2:196"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv_9/depthwise/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_197"
  op: "Assign"
  input: "ssd300/expanded_conv_9/depthwise/BatchNorm/moving_mean"
  input: "save/RestoreV2:197"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv_9/depthwise/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_198"
  op: "Assign"
  input: "ssd300/expanded_conv_9/depthwise/BatchNorm/moving_variance"
  input: "save/RestoreV2:198"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv_9/depthwise/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_199"
  op: "Assign"
  input: "ssd300/expanded_conv_9/depthwise/depthwise_weights"
  input: "save/RestoreV2:199"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv_9/depthwise/depthwise_weights"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_200"
  op: "Assign"
  input: "ssd300/expanded_conv_9/expand/BatchNorm/beta"
  input: "save/RestoreV2:200"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv_9/expand/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_201"
  op: "Assign"
  input: "ssd300/expanded_conv_9/expand/BatchNorm/moving_mean"
  input: "save/RestoreV2:201"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv_9/expand/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_202"
  op: "Assign"
  input: "ssd300/expanded_conv_9/expand/BatchNorm/moving_variance"
  input: "save/RestoreV2:202"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv_9/expand/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_203"
  op: "Assign"
  input: "ssd300/expanded_conv_9/expand/weights"
  input: "save/RestoreV2:203"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv_9/expand/weights"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_204"
  op: "Assign"
  input: "ssd300/expanded_conv_9/project/BatchNorm/beta"
  input: "save/RestoreV2:204"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv_9/project/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_205"
  op: "Assign"
  input: "ssd300/expanded_conv_9/project/BatchNorm/moving_mean"
  input: "save/RestoreV2:205"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv_9/project/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_206"
  op: "Assign"
  input: "ssd300/expanded_conv_9/project/BatchNorm/moving_variance"
  input: "save/RestoreV2:206"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv_9/project/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_207"
  op: "Assign"
  input: "ssd300/expanded_conv_9/project/weights"
  input: "save/RestoreV2:207"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/expanded_conv_9/project/weights"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_208"
  op: "Assign"
  input: "ssd300/layer_19_1_Conv2d_2_1x1_256/BatchNorm/beta"
  input: "save/RestoreV2:208"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/layer_19_1_Conv2d_2_1x1_256/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_209"
  op: "Assign"
  input: "ssd300/layer_19_1_Conv2d_2_1x1_256/BatchNorm/moving_mean"
  input: "save/RestoreV2:209"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/layer_19_1_Conv2d_2_1x1_256/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_210"
  op: "Assign"
  input: "ssd300/layer_19_1_Conv2d_2_1x1_256/BatchNorm/moving_variance"
  input: "save/RestoreV2:210"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/layer_19_1_Conv2d_2_1x1_256/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_211"
  op: "Assign"
  input: "ssd300/layer_19_1_Conv2d_2_1x1_256/weights"
  input: "save/RestoreV2:211"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/layer_19_1_Conv2d_2_1x1_256/weights"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_212"
  op: "Assign"
  input: "ssd300/layer_19_1_Conv2d_3_1x1_128/BatchNorm/beta"
  input: "save/RestoreV2:212"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/layer_19_1_Conv2d_3_1x1_128/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_213"
  op: "Assign"
  input: "ssd300/layer_19_1_Conv2d_3_1x1_128/BatchNorm/moving_mean"
  input: "save/RestoreV2:213"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/layer_19_1_Conv2d_3_1x1_128/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_214"
  op: "Assign"
  input: "ssd300/layer_19_1_Conv2d_3_1x1_128/BatchNorm/moving_variance"
  input: "save/RestoreV2:214"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/layer_19_1_Conv2d_3_1x1_128/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_215"
  op: "Assign"
  input: "ssd300/layer_19_1_Conv2d_3_1x1_128/weights"
  input: "save/RestoreV2:215"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/layer_19_1_Conv2d_3_1x1_128/weights"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_216"
  op: "Assign"
  input: "ssd300/layer_19_1_Conv2d_4_1x1_128/BatchNorm/beta"
  input: "save/RestoreV2:216"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/layer_19_1_Conv2d_4_1x1_128/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_217"
  op: "Assign"
  input: "ssd300/layer_19_1_Conv2d_4_1x1_128/BatchNorm/moving_mean"
  input: "save/RestoreV2:217"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/layer_19_1_Conv2d_4_1x1_128/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_218"
  op: "Assign"
  input: "ssd300/layer_19_1_Conv2d_4_1x1_128/BatchNorm/moving_variance"
  input: "save/RestoreV2:218"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/layer_19_1_Conv2d_4_1x1_128/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_219"
  op: "Assign"
  input: "ssd300/layer_19_1_Conv2d_4_1x1_128/weights"
  input: "save/RestoreV2:219"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/layer_19_1_Conv2d_4_1x1_128/weights"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_220"
  op: "Assign"
  input: "ssd300/layer_19_1_Conv2d_5_1x1_64/BatchNorm/beta"
  input: "save/RestoreV2:220"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/layer_19_1_Conv2d_5_1x1_64/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_221"
  op: "Assign"
  input: "ssd300/layer_19_1_Conv2d_5_1x1_64/BatchNorm/moving_mean"
  input: "save/RestoreV2:221"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/layer_19_1_Conv2d_5_1x1_64/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_222"
  op: "Assign"
  input: "ssd300/layer_19_1_Conv2d_5_1x1_64/BatchNorm/moving_variance"
  input: "save/RestoreV2:222"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/layer_19_1_Conv2d_5_1x1_64/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_223"
  op: "Assign"
  input: "ssd300/layer_19_1_Conv2d_5_1x1_64/weights"
  input: "save/RestoreV2:223"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/layer_19_1_Conv2d_5_1x1_64/weights"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_224"
  op: "Assign"
  input: "ssd300/layer_19_2_Conv2d_2_3x3_s2_512/BatchNorm/beta"
  input: "save/RestoreV2:224"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/layer_19_2_Conv2d_2_3x3_s2_512/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_225"
  op: "Assign"
  input: "ssd300/layer_19_2_Conv2d_2_3x3_s2_512/BatchNorm/moving_mean"
  input: "save/RestoreV2:225"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/layer_19_2_Conv2d_2_3x3_s2_512/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_226"
  op: "Assign"
  input: "ssd300/layer_19_2_Conv2d_2_3x3_s2_512/BatchNorm/moving_variance"
  input: "save/RestoreV2:226"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/layer_19_2_Conv2d_2_3x3_s2_512/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_227"
  op: "Assign"
  input: "ssd300/layer_19_2_Conv2d_2_3x3_s2_512/weights"
  input: "save/RestoreV2:227"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/layer_19_2_Conv2d_2_3x3_s2_512/weights"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_228"
  op: "Assign"
  input: "ssd300/layer_19_2_Conv2d_2_3x3_s2_512_depthwise/BatchNorm/beta"
  input: "save/RestoreV2:228"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/layer_19_2_Conv2d_2_3x3_s2_512_depthwise/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_229"
  op: "Assign"
  input: "ssd300/layer_19_2_Conv2d_2_3x3_s2_512_depthwise/BatchNorm/moving_mean"
  input: "save/RestoreV2:229"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/layer_19_2_Conv2d_2_3x3_s2_512_depthwise/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_230"
  op: "Assign"
  input: "ssd300/layer_19_2_Conv2d_2_3x3_s2_512_depthwise/BatchNorm/moving_variance"
  input: "save/RestoreV2:230"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/layer_19_2_Conv2d_2_3x3_s2_512_depthwise/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_231"
  op: "Assign"
  input: "ssd300/layer_19_2_Conv2d_2_3x3_s2_512_depthwise/depthwise_weights"
  input: "save/RestoreV2:231"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/layer_19_2_Conv2d_2_3x3_s2_512_depthwise/depthwise_weights"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_232"
  op: "Assign"
  input: "ssd300/layer_19_2_Conv2d_3_3x3_s2_256/BatchNorm/beta"
  input: "save/RestoreV2:232"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/layer_19_2_Conv2d_3_3x3_s2_256/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_233"
  op: "Assign"
  input: "ssd300/layer_19_2_Conv2d_3_3x3_s2_256/BatchNorm/moving_mean"
  input: "save/RestoreV2:233"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/layer_19_2_Conv2d_3_3x3_s2_256/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_234"
  op: "Assign"
  input: "ssd300/layer_19_2_Conv2d_3_3x3_s2_256/BatchNorm/moving_variance"
  input: "save/RestoreV2:234"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/layer_19_2_Conv2d_3_3x3_s2_256/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_235"
  op: "Assign"
  input: "ssd300/layer_19_2_Conv2d_3_3x3_s2_256/weights"
  input: "save/RestoreV2:235"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/layer_19_2_Conv2d_3_3x3_s2_256/weights"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_236"
  op: "Assign"
  input: "ssd300/layer_19_2_Conv2d_3_3x3_s2_256_depthwise/BatchNorm/beta"
  input: "save/RestoreV2:236"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/layer_19_2_Conv2d_3_3x3_s2_256_depthwise/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_237"
  op: "Assign"
  input: "ssd300/layer_19_2_Conv2d_3_3x3_s2_256_depthwise/BatchNorm/moving_mean"
  input: "save/RestoreV2:237"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/layer_19_2_Conv2d_3_3x3_s2_256_depthwise/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_238"
  op: "Assign"
  input: "ssd300/layer_19_2_Conv2d_3_3x3_s2_256_depthwise/BatchNorm/moving_variance"
  input: "save/RestoreV2:238"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/layer_19_2_Conv2d_3_3x3_s2_256_depthwise/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_239"
  op: "Assign"
  input: "ssd300/layer_19_2_Conv2d_3_3x3_s2_256_depthwise/depthwise_weights"
  input: "save/RestoreV2:239"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/layer_19_2_Conv2d_3_3x3_s2_256_depthwise/depthwise_weights"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_240"
  op: "Assign"
  input: "ssd300/layer_19_2_Conv2d_4_3x3_s2_256/BatchNorm/beta"
  input: "save/RestoreV2:240"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/layer_19_2_Conv2d_4_3x3_s2_256/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_241"
  op: "Assign"
  input: "ssd300/layer_19_2_Conv2d_4_3x3_s2_256/BatchNorm/moving_mean"
  input: "save/RestoreV2:241"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/layer_19_2_Conv2d_4_3x3_s2_256/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_242"
  op: "Assign"
  input: "ssd300/layer_19_2_Conv2d_4_3x3_s2_256/BatchNorm/moving_variance"
  input: "save/RestoreV2:242"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/layer_19_2_Conv2d_4_3x3_s2_256/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_243"
  op: "Assign"
  input: "ssd300/layer_19_2_Conv2d_4_3x3_s2_256/weights"
  input: "save/RestoreV2:243"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/layer_19_2_Conv2d_4_3x3_s2_256/weights"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_244"
  op: "Assign"
  input: "ssd300/layer_19_2_Conv2d_4_3x3_s2_256_depthwise/BatchNorm/beta"
  input: "save/RestoreV2:244"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/layer_19_2_Conv2d_4_3x3_s2_256_depthwise/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_245"
  op: "Assign"
  input: "ssd300/layer_19_2_Conv2d_4_3x3_s2_256_depthwise/BatchNorm/moving_mean"
  input: "save/RestoreV2:245"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/layer_19_2_Conv2d_4_3x3_s2_256_depthwise/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_246"
  op: "Assign"
  input: "ssd300/layer_19_2_Conv2d_4_3x3_s2_256_depthwise/BatchNorm/moving_variance"
  input: "save/RestoreV2:246"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/layer_19_2_Conv2d_4_3x3_s2_256_depthwise/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_247"
  op: "Assign"
  input: "ssd300/layer_19_2_Conv2d_4_3x3_s2_256_depthwise/depthwise_weights"
  input: "save/RestoreV2:247"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/layer_19_2_Conv2d_4_3x3_s2_256_depthwise/depthwise_weights"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_248"
  op: "Assign"
  input: "ssd300/layer_19_2_Conv2d_5_3x3_s2_128/BatchNorm/beta"
  input: "save/RestoreV2:248"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/layer_19_2_Conv2d_5_3x3_s2_128/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_249"
  op: "Assign"
  input: "ssd300/layer_19_2_Conv2d_5_3x3_s2_128/BatchNorm/moving_mean"
  input: "save/RestoreV2:249"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/layer_19_2_Conv2d_5_3x3_s2_128/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_250"
  op: "Assign"
  input: "ssd300/layer_19_2_Conv2d_5_3x3_s2_128/BatchNorm/moving_variance"
  input: "save/RestoreV2:250"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/layer_19_2_Conv2d_5_3x3_s2_128/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_251"
  op: "Assign"
  input: "ssd300/layer_19_2_Conv2d_5_3x3_s2_128/weights"
  input: "save/RestoreV2:251"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/layer_19_2_Conv2d_5_3x3_s2_128/weights"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_252"
  op: "Assign"
  input: "ssd300/layer_19_2_Conv2d_5_3x3_s2_128_depthwise/BatchNorm/beta"
  input: "save/RestoreV2:252"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/layer_19_2_Conv2d_5_3x3_s2_128_depthwise/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_253"
  op: "Assign"
  input: "ssd300/layer_19_2_Conv2d_5_3x3_s2_128_depthwise/BatchNorm/moving_mean"
  input: "save/RestoreV2:253"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/layer_19_2_Conv2d_5_3x3_s2_128_depthwise/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_254"
  op: "Assign"
  input: "ssd300/layer_19_2_Conv2d_5_3x3_s2_128_depthwise/BatchNorm/moving_variance"
  input: "save/RestoreV2:254"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/layer_19_2_Conv2d_5_3x3_s2_128_depthwise/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_255"
  op: "Assign"
  input: "ssd300/layer_19_2_Conv2d_5_3x3_s2_128_depthwise/depthwise_weights"
  input: "save/RestoreV2:255"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/layer_19_2_Conv2d_5_3x3_s2_128_depthwise/depthwise_weights"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_256"
  op: "Assign"
  input: "ssd300/multibox_head/cls_0/bias"
  input: "save/RestoreV2:256"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/multibox_head/cls_0/bias"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_257"
  op: "Assign"
  input: "ssd300/multibox_head/cls_0/kernel"
  input: "save/RestoreV2:257"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/multibox_head/cls_0/kernel"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_258"
  op: "Assign"
  input: "ssd300/multibox_head/cls_1/bias"
  input: "save/RestoreV2:258"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/multibox_head/cls_1/bias"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_259"
  op: "Assign"
  input: "ssd300/multibox_head/cls_1/kernel"
  input: "save/RestoreV2:259"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/multibox_head/cls_1/kernel"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_260"
  op: "Assign"
  input: "ssd300/multibox_head/cls_2/bias"
  input: "save/RestoreV2:260"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/multibox_head/cls_2/bias"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_261"
  op: "Assign"
  input: "ssd300/multibox_head/cls_2/kernel"
  input: "save/RestoreV2:261"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/multibox_head/cls_2/kernel"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_262"
  op: "Assign"
  input: "ssd300/multibox_head/cls_3/bias"
  input: "save/RestoreV2:262"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/multibox_head/cls_3/bias"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_263"
  op: "Assign"
  input: "ssd300/multibox_head/cls_3/kernel"
  input: "save/RestoreV2:263"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/multibox_head/cls_3/kernel"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_264"
  op: "Assign"
  input: "ssd300/multibox_head/cls_4/bias"
  input: "save/RestoreV2:264"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/multibox_head/cls_4/bias"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_265"
  op: "Assign"
  input: "ssd300/multibox_head/cls_4/kernel"
  input: "save/RestoreV2:265"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/multibox_head/cls_4/kernel"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_266"
  op: "Assign"
  input: "ssd300/multibox_head/cls_5/bias"
  input: "save/RestoreV2:266"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/multibox_head/cls_5/bias"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_267"
  op: "Assign"
  input: "ssd300/multibox_head/cls_5/kernel"
  input: "save/RestoreV2:267"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/multibox_head/cls_5/kernel"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_268"
  op: "Assign"
  input: "ssd300/multibox_head/loc_0/bias"
  input: "save/RestoreV2:268"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/multibox_head/loc_0/bias"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_269"
  op: "Assign"
  input: "ssd300/multibox_head/loc_0/kernel"
  input: "save/RestoreV2:269"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/multibox_head/loc_0/kernel"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_270"
  op: "Assign"
  input: "ssd300/multibox_head/loc_1/bias"
  input: "save/RestoreV2:270"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/multibox_head/loc_1/bias"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_271"
  op: "Assign"
  input: "ssd300/multibox_head/loc_1/kernel"
  input: "save/RestoreV2:271"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/multibox_head/loc_1/kernel"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_272"
  op: "Assign"
  input: "ssd300/multibox_head/loc_2/bias"
  input: "save/RestoreV2:272"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/multibox_head/loc_2/bias"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_273"
  op: "Assign"
  input: "ssd300/multibox_head/loc_2/kernel"
  input: "save/RestoreV2:273"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/multibox_head/loc_2/kernel"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_274"
  op: "Assign"
  input: "ssd300/multibox_head/loc_3/bias"
  input: "save/RestoreV2:274"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/multibox_head/loc_3/bias"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_275"
  op: "Assign"
  input: "ssd300/multibox_head/loc_3/kernel"
  input: "save/RestoreV2:275"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/multibox_head/loc_3/kernel"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_276"
  op: "Assign"
  input: "ssd300/multibox_head/loc_4/bias"
  input: "save/RestoreV2:276"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/multibox_head/loc_4/bias"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_277"
  op: "Assign"
  input: "ssd300/multibox_head/loc_4/kernel"
  input: "save/RestoreV2:277"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/multibox_head/loc_4/kernel"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_278"
  op: "Assign"
  input: "ssd300/multibox_head/loc_5/bias"
  input: "save/RestoreV2:278"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/multibox_head/loc_5/bias"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_279"
  op: "Assign"
  input: "ssd300/multibox_head/loc_5/kernel"
  input: "save/RestoreV2:279"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd300/multibox_head/loc_5/kernel"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/restore_all"
  op: "NoOp"
  input: "^save/Assign"
  input: "^save/Assign_1"
  input: "^save/Assign_10"
  input: "^save/Assign_100"
  input: "^save/Assign_101"
  input: "^save/Assign_102"
  input: "^save/Assign_103"
  input: "^save/Assign_104"
  input: "^save/Assign_105"
  input: "^save/Assign_106"
  input: "^save/Assign_107"
  input: "^save/Assign_108"
  input: "^save/Assign_109"
  input: "^save/Assign_11"
  input: "^save/Assign_110"
  input: "^save/Assign_111"
  input: "^save/Assign_112"
  input: "^save/Assign_113"
  input: "^save/Assign_114"
  input: "^save/Assign_115"
  input: "^save/Assign_116"
  input: "^save/Assign_117"
  input: "^save/Assign_118"
  input: "^save/Assign_119"
  input: "^save/Assign_12"
  input: "^save/Assign_120"
  input: "^save/Assign_121"
  input: "^save/Assign_122"
  input: "^save/Assign_123"
  input: "^save/Assign_124"
  input: "^save/Assign_125"
  input: "^save/Assign_126"
  input: "^save/Assign_127"
  input: "^save/Assign_128"
  input: "^save/Assign_129"
  input: "^save/Assign_13"
  input: "^save/Assign_130"
  input: "^save/Assign_131"
  input: "^save/Assign_132"
  input: "^save/Assign_133"
  input: "^save/Assign_134"
  input: "^save/Assign_135"
  input: "^save/Assign_136"
  input: "^save/Assign_137"
  input: "^save/Assign_138"
  input: "^save/Assign_139"
  input: "^save/Assign_14"
  input: "^save/Assign_140"
  input: "^save/Assign_141"
  input: "^save/Assign_142"
  input: "^save/Assign_143"
  input: "^save/Assign_144"
  input: "^save/Assign_145"
  input: "^save/Assign_146"
  input: "^save/Assign_147"
  input: "^save/Assign_148"
  input: "^save/Assign_149"
  input: "^save/Assign_15"
  input: "^save/Assign_150"
  input: "^save/Assign_151"
  input: "^save/Assign_152"
  input: "^save/Assign_153"
  input: "^save/Assign_154"
  input: "^save/Assign_155"
  input: "^save/Assign_156"
  input: "^save/Assign_157"
  input: "^save/Assign_158"
  input: "^save/Assign_159"
  input: "^save/Assign_16"
  input: "^save/Assign_160"
  input: "^save/Assign_161"
  input: "^save/Assign_162"
  input: "^save/Assign_163"
  input: "^save/Assign_164"
  input: "^save/Assign_165"
  input: "^save/Assign_166"
  input: "^save/Assign_167"
  input: "^save/Assign_168"
  input: "^save/Assign_169"
  input: "^save/Assign_17"
  input: "^save/Assign_170"
  input: "^save/Assign_171"
  input: "^save/Assign_172"
  input: "^save/Assign_173"
  input: "^save/Assign_174"
  input: "^save/Assign_175"
  input: "^save/Assign_176"
  input: "^save/Assign_177"
  input: "^save/Assign_178"
  input: "^save/Assign_179"
  input: "^save/Assign_18"
  input: "^save/Assign_180"
  input: "^save/Assign_181"
  input: "^save/Assign_182"
  input: "^save/Assign_183"
  input: "^save/Assign_184"
  input: "^save/Assign_185"
  input: "^save/Assign_186"
  input: "^save/Assign_187"
  input: "^save/Assign_188"
  input: "^save/Assign_189"
  input: "^save/Assign_19"
  input: "^save/Assign_190"
  input: "^save/Assign_191"
  input: "^save/Assign_192"
  input: "^save/Assign_193"
  input: "^save/Assign_194"
  input: "^save/Assign_195"
  input: "^save/Assign_196"
  input: "^save/Assign_197"
  input: "^save/Assign_198"
  input: "^save/Assign_199"
  input: "^save/Assign_2"
  input: "^save/Assign_20"
  input: "^save/Assign_200"
  input: "^save/Assign_201"
  input: "^save/Assign_202"
  input: "^save/Assign_203"
  input: "^save/Assign_204"
  input: "^save/Assign_205"
  input: "^save/Assign_206"
  input: "^save/Assign_207"
  input: "^save/Assign_208"
  input: "^save/Assign_209"
  input: "^save/Assign_21"
  input: "^save/Assign_210"
  input: "^save/Assign_211"
  input: "^save/Assign_212"
  input: "^save/Assign_213"
  input: "^save/Assign_214"
  input: "^save/Assign_215"
  input: "^save/Assign_216"
  input: "^save/Assign_217"
  input: "^save/Assign_218"
  input: "^save/Assign_219"
  input: "^save/Assign_22"
  input: "^save/Assign_220"
  input: "^save/Assign_221"
  input: "^save/Assign_222"
  input: "^save/Assign_223"
  input: "^save/Assign_224"
  input: "^save/Assign_225"
  input: "^save/Assign_226"
  input: "^save/Assign_227"
  input: "^save/Assign_228"
  input: "^save/Assign_229"
  input: "^save/Assign_23"
  input: "^save/Assign_230"
  input: "^save/Assign_231"
  input: "^save/Assign_232"
  input: "^save/Assign_233"
  input: "^save/Assign_234"
  input: "^save/Assign_235"
  input: "^save/Assign_236"
  input: "^save/Assign_237"
  input: "^save/Assign_238"
  input: "^save/Assign_239"
  input: "^save/Assign_24"
  input: "^save/Assign_240"
  input: "^save/Assign_241"
  input: "^save/Assign_242"
  input: "^save/Assign_243"
  input: "^save/Assign_244"
  input: "^save/Assign_245"
  input: "^save/Assign_246"
  input: "^save/Assign_247"
  input: "^save/Assign_248"
  input: "^save/Assign_249"
  input: "^save/Assign_25"
  input: "^save/Assign_250"
  input: "^save/Assign_251"
  input: "^save/Assign_252"
  input: "^save/Assign_253"
  input: "^save/Assign_254"
  input: "^save/Assign_255"
  input: "^save/Assign_256"
  input: "^save/Assign_257"
  input: "^save/Assign_258"
  input: "^save/Assign_259"
  input: "^save/Assign_26"
  input: "^save/Assign_260"
  input: "^save/Assign_261"
  input: "^save/Assign_262"
  input: "^save/Assign_263"
  input: "^save/Assign_264"
  input: "^save/Assign_265"
  input: "^save/Assign_266"
  input: "^save/Assign_267"
  input: "^save/Assign_268"
  input: "^save/Assign_269"
  input: "^save/Assign_27"
  input: "^save/Assign_270"
  input: "^save/Assign_271"
  input: "^save/Assign_272"
  input: "^save/Assign_273"
  input: "^save/Assign_274"
  input: "^save/Assign_275"
  input: "^save/Assign_276"
  input: "^save/Assign_277"
  input: "^save/Assign_278"
  input: "^save/Assign_279"
  input: "^save/Assign_28"
  input: "^save/Assign_29"
  input: "^save/Assign_3"
  input: "^save/Assign_30"
  input: "^save/Assign_31"
  input: "^save/Assign_32"
  input: "^save/Assign_33"
  input: "^save/Assign_34"
  input: "^save/Assign_35"
  input: "^save/Assign_36"
  input: "^save/Assign_37"
  input: "^save/Assign_38"
  input: "^save/Assign_39"
  input: "^save/Assign_4"
  input: "^save/Assign_40"
  input: "^save/Assign_41"
  input: "^save/Assign_42"
  input: "^save/Assign_43"
  input: "^save/Assign_44"
  input: "^save/Assign_45"
  input: "^save/Assign_46"
  input: "^save/Assign_47"
  input: "^save/Assign_48"
  input: "^save/Assign_49"
  input: "^save/Assign_5"
  input: "^save/Assign_50"
  input: "^save/Assign_51"
  input: "^save/Assign_52"
  input: "^save/Assign_53"
  input: "^save/Assign_54"
  input: "^save/Assign_55"
  input: "^save/Assign_56"
  input: "^save/Assign_57"
  input: "^save/Assign_58"
  input: "^save/Assign_59"
  input: "^save/Assign_6"
  input: "^save/Assign_60"
  input: "^save/Assign_61"
  input: "^save/Assign_62"
  input: "^save/Assign_63"
  input: "^save/Assign_64"
  input: "^save/Assign_65"
  input: "^save/Assign_66"
  input: "^save/Assign_67"
  input: "^save/Assign_68"
  input: "^save/Assign_69"
  input: "^save/Assign_7"
  input: "^save/Assign_70"
  input: "^save/Assign_71"
  input: "^save/Assign_72"
  input: "^save/Assign_73"
  input: "^save/Assign_74"
  input: "^save/Assign_75"
  input: "^save/Assign_76"
  input: "^save/Assign_77"
  input: "^save/Assign_78"
  input: "^save/Assign_79"
  input: "^save/Assign_8"
  input: "^save/Assign_80"
  input: "^save/Assign_81"
  input: "^save/Assign_82"
  input: "^save/Assign_83"
  input: "^save/Assign_84"
  input: "^save/Assign_85"
  input: "^save/Assign_86"
  input: "^save/Assign_87"
  input: "^save/Assign_88"
  input: "^save/Assign_89"
  input: "^save/Assign_9"
  input: "^save/Assign_90"
  input: "^save/Assign_91"
  input: "^save/Assign_92"
  input: "^save/Assign_93"
  input: "^save/Assign_94"
  input: "^save/Assign_95"
  input: "^save/Assign_96"
  input: "^save/Assign_97"
  input: "^save/Assign_98"
  input: "^save/Assign_99"
}
node {
  name: "init"
  op: "NoOp"
  input: "^ssd300/Conv/BatchNorm/beta/Assign"
  input: "^ssd300/Conv/BatchNorm/moving_mean/Assign"
  input: "^ssd300/Conv/BatchNorm/moving_variance/Assign"
  input: "^ssd300/Conv/weights/Assign"
  input: "^ssd300/Conv_1/BatchNorm/beta/Assign"
  input: "^ssd300/Conv_1/BatchNorm/moving_mean/Assign"
  input: "^ssd300/Conv_1/BatchNorm/moving_variance/Assign"
  input: "^ssd300/Conv_1/weights/Assign"
  input: "^ssd300/expanded_conv/depthwise/BatchNorm/beta/Assign"
  input: "^ssd300/expanded_conv/depthwise/BatchNorm/moving_mean/Assign"
  input: "^ssd300/expanded_conv/depthwise/BatchNorm/moving_variance/Assign"
  input: "^ssd300/expanded_conv/depthwise/depthwise_weights/Assign"
  input: "^ssd300/expanded_conv/project/BatchNorm/beta/Assign"
  input: "^ssd300/expanded_conv/project/BatchNorm/moving_mean/Assign"
  input: "^ssd300/expanded_conv/project/BatchNorm/moving_variance/Assign"
  input: "^ssd300/expanded_conv/project/weights/Assign"
  input: "^ssd300/expanded_conv_1/depthwise/BatchNorm/beta/Assign"
  input: "^ssd300/expanded_conv_1/depthwise/BatchNorm/moving_mean/Assign"
  input: "^ssd300/expanded_conv_1/depthwise/BatchNorm/moving_variance/Assign"
  input: "^ssd300/expanded_conv_1/depthwise/depthwise_weights/Assign"
  input: "^ssd300/expanded_conv_1/expand/BatchNorm/beta/Assign"
  input: "^ssd300/expanded_conv_1/expand/BatchNorm/moving_mean/Assign"
  input: "^ssd300/expanded_conv_1/expand/BatchNorm/moving_variance/Assign"
  input: "^ssd300/expanded_conv_1/expand/weights/Assign"
  input: "^ssd300/expanded_conv_1/project/BatchNorm/beta/Assign"
  input: "^ssd300/expanded_conv_1/project/BatchNorm/moving_mean/Assign"
  input: "^ssd300/expanded_conv_1/project/BatchNorm/moving_variance/Assign"
  input: "^ssd300/expanded_conv_1/project/weights/Assign"
  input: "^ssd300/expanded_conv_10/depthwise/BatchNorm/beta/Assign"
  input: "^ssd300/expanded_conv_10/depthwise/BatchNorm/moving_mean/Assign"
  input: "^ssd300/expanded_conv_10/depthwise/BatchNorm/moving_variance/Assign"
  input: "^ssd300/expanded_conv_10/depthwise/depthwise_weights/Assign"
  input: "^ssd300/expanded_conv_10/expand/BatchNorm/beta/Assign"
  input: "^ssd300/expanded_conv_10/expand/BatchNorm/moving_mean/Assign"
  input: "^ssd300/expanded_conv_10/expand/BatchNorm/moving_variance/Assign"
  input: "^ssd300/expanded_conv_10/expand/weights/Assign"
  input: "^ssd300/expanded_conv_10/project/BatchNorm/beta/Assign"
  input: "^ssd300/expanded_conv_10/project/BatchNorm/moving_mean/Assign"
  input: "^ssd300/expanded_conv_10/project/BatchNorm/moving_variance/Assign"
  input: "^ssd300/expanded_conv_10/project/weights/Assign"
  input: "^ssd300/expanded_conv_11/depthwise/BatchNorm/beta/Assign"
  input: "^ssd300/expanded_conv_11/depthwise/BatchNorm/moving_mean/Assign"
  input: "^ssd300/expanded_conv_11/depthwise/BatchNorm/moving_variance/Assign"
  input: "^ssd300/expanded_conv_11/depthwise/depthwise_weights/Assign"
  input: "^ssd300/expanded_conv_11/expand/BatchNorm/beta/Assign"
  input: "^ssd300/expanded_conv_11/expand/BatchNorm/moving_mean/Assign"
  input: "^ssd300/expanded_conv_11/expand/BatchNorm/moving_variance/Assign"
  input: "^ssd300/expanded_conv_11/expand/weights/Assign"
  input: "^ssd300/expanded_conv_11/project/BatchNorm/beta/Assign"
  input: "^ssd300/expanded_conv_11/project/BatchNorm/moving_mean/Assign"
  input: "^ssd300/expanded_conv_11/project/BatchNorm/moving_variance/Assign"
  input: "^ssd300/expanded_conv_11/project/weights/Assign"
  input: "^ssd300/expanded_conv_12/depthwise/BatchNorm/beta/Assign"
  input: "^ssd300/expanded_conv_12/depthwise/BatchNorm/moving_mean/Assign"
  input: "^ssd300/expanded_conv_12/depthwise/BatchNorm/moving_variance/Assign"
  input: "^ssd300/expanded_conv_12/depthwise/depthwise_weights/Assign"
  input: "^ssd300/expanded_conv_12/expand/BatchNorm/beta/Assign"
  input: "^ssd300/expanded_conv_12/expand/BatchNorm/moving_mean/Assign"
  input: "^ssd300/expanded_conv_12/expand/BatchNorm/moving_variance/Assign"
  input: "^ssd300/expanded_conv_12/expand/weights/Assign"
  input: "^ssd300/expanded_conv_12/project/BatchNorm/beta/Assign"
  input: "^ssd300/expanded_conv_12/project/BatchNorm/moving_mean/Assign"
  input: "^ssd300/expanded_conv_12/project/BatchNorm/moving_variance/Assign"
  input: "^ssd300/expanded_conv_12/project/weights/Assign"
  input: "^ssd300/expanded_conv_13/depthwise/BatchNorm/beta/Assign"
  input: "^ssd300/expanded_conv_13/depthwise/BatchNorm/moving_mean/Assign"
  input: "^ssd300/expanded_conv_13/depthwise/BatchNorm/moving_variance/Assign"
  input: "^ssd300/expanded_conv_13/depthwise/depthwise_weights/Assign"
  input: "^ssd300/expanded_conv_13/expand/BatchNorm/beta/Assign"
  input: "^ssd300/expanded_conv_13/expand/BatchNorm/moving_mean/Assign"
  input: "^ssd300/expanded_conv_13/expand/BatchNorm/moving_variance/Assign"
  input: "^ssd300/expanded_conv_13/expand/weights/Assign"
  input: "^ssd300/expanded_conv_13/project/BatchNorm/beta/Assign"
  input: "^ssd300/expanded_conv_13/project/BatchNorm/moving_mean/Assign"
  input: "^ssd300/expanded_conv_13/project/BatchNorm/moving_variance/Assign"
  input: "^ssd300/expanded_conv_13/project/weights/Assign"
  input: "^ssd300/expanded_conv_14/depthwise/BatchNorm/beta/Assign"
  input: "^ssd300/expanded_conv_14/depthwise/BatchNorm/moving_mean/Assign"
  input: "^ssd300/expanded_conv_14/depthwise/BatchNorm/moving_variance/Assign"
  input: "^ssd300/expanded_conv_14/depthwise/depthwise_weights/Assign"
  input: "^ssd300/expanded_conv_14/expand/BatchNorm/beta/Assign"
  input: "^ssd300/expanded_conv_14/expand/BatchNorm/moving_mean/Assign"
  input: "^ssd300/expanded_conv_14/expand/BatchNorm/moving_variance/Assign"
  input: "^ssd300/expanded_conv_14/expand/weights/Assign"
  input: "^ssd300/expanded_conv_14/project/BatchNorm/beta/Assign"
  input: "^ssd300/expanded_conv_14/project/BatchNorm/moving_mean/Assign"
  input: "^ssd300/expanded_conv_14/project/BatchNorm/moving_variance/Assign"
  input: "^ssd300/expanded_conv_14/project/weights/Assign"
  input: "^ssd300/expanded_conv_15/depthwise/BatchNorm/beta/Assign"
  input: "^ssd300/expanded_conv_15/depthwise/BatchNorm/moving_mean/Assign"
  input: "^ssd300/expanded_conv_15/depthwise/BatchNorm/moving_variance/Assign"
  input: "^ssd300/expanded_conv_15/depthwise/depthwise_weights/Assign"
  input: "^ssd300/expanded_conv_15/expand/BatchNorm/beta/Assign"
  input: "^ssd300/expanded_conv_15/expand/BatchNorm/moving_mean/Assign"
  input: "^ssd300/expanded_conv_15/expand/BatchNorm/moving_variance/Assign"
  input: "^ssd300/expanded_conv_15/expand/weights/Assign"
  input: "^ssd300/expanded_conv_15/project/BatchNorm/beta/Assign"
  input: "^ssd300/expanded_conv_15/project/BatchNorm/moving_mean/Assign"
  input: "^ssd300/expanded_conv_15/project/BatchNorm/moving_variance/Assign"
  input: "^ssd300/expanded_conv_15/project/weights/Assign"
  input: "^ssd300/expanded_conv_16/depthwise/BatchNorm/beta/Assign"
  input: "^ssd300/expanded_conv_16/depthwise/BatchNorm/moving_mean/Assign"
  input: "^ssd300/expanded_conv_16/depthwise/BatchNorm/moving_variance/Assign"
  input: "^ssd300/expanded_conv_16/depthwise/depthwise_weights/Assign"
  input: "^ssd300/expanded_conv_16/expand/BatchNorm/beta/Assign"
  input: "^ssd300/expanded_conv_16/expand/BatchNorm/moving_mean/Assign"
  input: "^ssd300/expanded_conv_16/expand/BatchNorm/moving_variance/Assign"
  input: "^ssd300/expanded_conv_16/expand/weights/Assign"
  input: "^ssd300/expanded_conv_16/project/BatchNorm/beta/Assign"
  input: "^ssd300/expanded_conv_16/project/BatchNorm/moving_mean/Assign"
  input: "^ssd300/expanded_conv_16/project/BatchNorm/moving_variance/Assign"
  input: "^ssd300/expanded_conv_16/project/weights/Assign"
  input: "^ssd300/expanded_conv_2/depthwise/BatchNorm/beta/Assign"
  input: "^ssd300/expanded_conv_2/depthwise/BatchNorm/moving_mean/Assign"
  input: "^ssd300/expanded_conv_2/depthwise/BatchNorm/moving_variance/Assign"
  input: "^ssd300/expanded_conv_2/depthwise/depthwise_weights/Assign"
  input: "^ssd300/expanded_conv_2/expand/BatchNorm/beta/Assign"
  input: "^ssd300/expanded_conv_2/expand/BatchNorm/moving_mean/Assign"
  input: "^ssd300/expanded_conv_2/expand/BatchNorm/moving_variance/Assign"
  input: "^ssd300/expanded_conv_2/expand/weights/Assign"
  input: "^ssd300/expanded_conv_2/project/BatchNorm/beta/Assign"
  input: "^ssd300/expanded_conv_2/project/BatchNorm/moving_mean/Assign"
  input: "^ssd300/expanded_conv_2/project/BatchNorm/moving_variance/Assign"
  input: "^ssd300/expanded_conv_2/project/weights/Assign"
  input: "^ssd300/expanded_conv_3/depthwise/BatchNorm/beta/Assign"
  input: "^ssd300/expanded_conv_3/depthwise/BatchNorm/moving_mean/Assign"
  input: "^ssd300/expanded_conv_3/depthwise/BatchNorm/moving_variance/Assign"
  input: "^ssd300/expanded_conv_3/depthwise/depthwise_weights/Assign"
  input: "^ssd300/expanded_conv_3/expand/BatchNorm/beta/Assign"
  input: "^ssd300/expanded_conv_3/expand/BatchNorm/moving_mean/Assign"
  input: "^ssd300/expanded_conv_3/expand/BatchNorm/moving_variance/Assign"
  input: "^ssd300/expanded_conv_3/expand/weights/Assign"
  input: "^ssd300/expanded_conv_3/project/BatchNorm/beta/Assign"
  input: "^ssd300/expanded_conv_3/project/BatchNorm/moving_mean/Assign"
  input: "^ssd300/expanded_conv_3/project/BatchNorm/moving_variance/Assign"
  input: "^ssd300/expanded_conv_3/project/weights/Assign"
  input: "^ssd300/expanded_conv_4/depthwise/BatchNorm/beta/Assign"
  input: "^ssd300/expanded_conv_4/depthwise/BatchNorm/moving_mean/Assign"
  input: "^ssd300/expanded_conv_4/depthwise/BatchNorm/moving_variance/Assign"
  input: "^ssd300/expanded_conv_4/depthwise/depthwise_weights/Assign"
  input: "^ssd300/expanded_conv_4/expand/BatchNorm/beta/Assign"
  input: "^ssd300/expanded_conv_4/expand/BatchNorm/moving_mean/Assign"
  input: "^ssd300/expanded_conv_4/expand/BatchNorm/moving_variance/Assign"
  input: "^ssd300/expanded_conv_4/expand/weights/Assign"
  input: "^ssd300/expanded_conv_4/project/BatchNorm/beta/Assign"
  input: "^ssd300/expanded_conv_4/project/BatchNorm/moving_mean/Assign"
  input: "^ssd300/expanded_conv_4/project/BatchNorm/moving_variance/Assign"
  input: "^ssd300/expanded_conv_4/project/weights/Assign"
  input: "^ssd300/expanded_conv_5/depthwise/BatchNorm/beta/Assign"
  input: "^ssd300/expanded_conv_5/depthwise/BatchNorm/moving_mean/Assign"
  input: "^ssd300/expanded_conv_5/depthwise/BatchNorm/moving_variance/Assign"
  input: "^ssd300/expanded_conv_5/depthwise/depthwise_weights/Assign"
  input: "^ssd300/expanded_conv_5/expand/BatchNorm/beta/Assign"
  input: "^ssd300/expanded_conv_5/expand/BatchNorm/moving_mean/Assign"
  input: "^ssd300/expanded_conv_5/expand/BatchNorm/moving_variance/Assign"
  input: "^ssd300/expanded_conv_5/expand/weights/Assign"
  input: "^ssd300/expanded_conv_5/project/BatchNorm/beta/Assign"
  input: "^ssd300/expanded_conv_5/project/BatchNorm/moving_mean/Assign"
  input: "^ssd300/expanded_conv_5/project/BatchNorm/moving_variance/Assign"
  input: "^ssd300/expanded_conv_5/project/weights/Assign"
  input: "^ssd300/expanded_conv_6/depthwise/BatchNorm/beta/Assign"
  input: "^ssd300/expanded_conv_6/depthwise/BatchNorm/moving_mean/Assign"
  input: "^ssd300/expanded_conv_6/depthwise/BatchNorm/moving_variance/Assign"
  input: "^ssd300/expanded_conv_6/depthwise/depthwise_weights/Assign"
  input: "^ssd300/expanded_conv_6/expand/BatchNorm/beta/Assign"
  input: "^ssd300/expanded_conv_6/expand/BatchNorm/moving_mean/Assign"
  input: "^ssd300/expanded_conv_6/expand/BatchNorm/moving_variance/Assign"
  input: "^ssd300/expanded_conv_6/expand/weights/Assign"
  input: "^ssd300/expanded_conv_6/project/BatchNorm/beta/Assign"
  input: "^ssd300/expanded_conv_6/project/BatchNorm/moving_mean/Assign"
  input: "^ssd300/expanded_conv_6/project/BatchNorm/moving_variance/Assign"
  input: "^ssd300/expanded_conv_6/project/weights/Assign"
  input: "^ssd300/expanded_conv_7/depthwise/BatchNorm/beta/Assign"
  input: "^ssd300/expanded_conv_7/depthwise/BatchNorm/moving_mean/Assign"
  input: "^ssd300/expanded_conv_7/depthwise/BatchNorm/moving_variance/Assign"
  input: "^ssd300/expanded_conv_7/depthwise/depthwise_weights/Assign"
  input: "^ssd300/expanded_conv_7/expand/BatchNorm/beta/Assign"
  input: "^ssd300/expanded_conv_7/expand/BatchNorm/moving_mean/Assign"
  input: "^ssd300/expanded_conv_7/expand/BatchNorm/moving_variance/Assign"
  input: "^ssd300/expanded_conv_7/expand/weights/Assign"
  input: "^ssd300/expanded_conv_7/project/BatchNorm/beta/Assign"
  input: "^ssd300/expanded_conv_7/project/BatchNorm/moving_mean/Assign"
  input: "^ssd300/expanded_conv_7/project/BatchNorm/moving_variance/Assign"
  input: "^ssd300/expanded_conv_7/project/weights/Assign"
  input: "^ssd300/expanded_conv_8/depthwise/BatchNorm/beta/Assign"
  input: "^ssd300/expanded_conv_8/depthwise/BatchNorm/moving_mean/Assign"
  input: "^ssd300/expanded_conv_8/depthwise/BatchNorm/moving_variance/Assign"
  input: "^ssd300/expanded_conv_8/depthwise/depthwise_weights/Assign"
  input: "^ssd300/expanded_conv_8/expand/BatchNorm/beta/Assign"
  input: "^ssd300/expanded_conv_8/expand/BatchNorm/moving_mean/Assign"
  input: "^ssd300/expanded_conv_8/expand/BatchNorm/moving_variance/Assign"
  input: "^ssd300/expanded_conv_8/expand/weights/Assign"
  input: "^ssd300/expanded_conv_8/project/BatchNorm/beta/Assign"
  input: "^ssd300/expanded_conv_8/project/BatchNorm/moving_mean/Assign"
  input: "^ssd300/expanded_conv_8/project/BatchNorm/moving_variance/Assign"
  input: "^ssd300/expanded_conv_8/project/weights/Assign"
  input: "^ssd300/expanded_conv_9/depthwise/BatchNorm/beta/Assign"
  input: "^ssd300/expanded_conv_9/depthwise/BatchNorm/moving_mean/Assign"
  input: "^ssd300/expanded_conv_9/depthwise/BatchNorm/moving_variance/Assign"
  input: "^ssd300/expanded_conv_9/depthwise/depthwise_weights/Assign"
  input: "^ssd300/expanded_conv_9/expand/BatchNorm/beta/Assign"
  input: "^ssd300/expanded_conv_9/expand/BatchNorm/moving_mean/Assign"
  input: "^ssd300/expanded_conv_9/expand/BatchNorm/moving_variance/Assign"
  input: "^ssd300/expanded_conv_9/expand/weights/Assign"
  input: "^ssd300/expanded_conv_9/project/BatchNorm/beta/Assign"
  input: "^ssd300/expanded_conv_9/project/BatchNorm/moving_mean/Assign"
  input: "^ssd300/expanded_conv_9/project/BatchNorm/moving_variance/Assign"
  input: "^ssd300/expanded_conv_9/project/weights/Assign"
  input: "^ssd300/layer_19_1_Conv2d_2_1x1_256/BatchNorm/beta/Assign"
  input: "^ssd300/layer_19_1_Conv2d_2_1x1_256/BatchNorm/moving_mean/Assign"
  input: "^ssd300/layer_19_1_Conv2d_2_1x1_256/BatchNorm/moving_variance/Assign"
  input: "^ssd300/layer_19_1_Conv2d_2_1x1_256/weights/Assign"
  input: "^ssd300/layer_19_1_Conv2d_3_1x1_128/BatchNorm/beta/Assign"
  input: "^ssd300/layer_19_1_Conv2d_3_1x1_128/BatchNorm/moving_mean/Assign"
  input: "^ssd300/layer_19_1_Conv2d_3_1x1_128/BatchNorm/moving_variance/Assign"
  input: "^ssd300/layer_19_1_Conv2d_3_1x1_128/weights/Assign"
  input: "^ssd300/layer_19_1_Conv2d_4_1x1_128/BatchNorm/beta/Assign"
  input: "^ssd300/layer_19_1_Conv2d_4_1x1_128/BatchNorm/moving_mean/Assign"
  input: "^ssd300/layer_19_1_Conv2d_4_1x1_128/BatchNorm/moving_variance/Assign"
  input: "^ssd300/layer_19_1_Conv2d_4_1x1_128/weights/Assign"
  input: "^ssd300/layer_19_1_Conv2d_5_1x1_64/BatchNorm/beta/Assign"
  input: "^ssd300/layer_19_1_Conv2d_5_1x1_64/BatchNorm/moving_mean/Assign"
  input: "^ssd300/layer_19_1_Conv2d_5_1x1_64/BatchNorm/moving_variance/Assign"
  input: "^ssd300/layer_19_1_Conv2d_5_1x1_64/weights/Assign"
  input: "^ssd300/layer_19_2_Conv2d_2_3x3_s2_512/BatchNorm/beta/Assign"
  input: "^ssd300/layer_19_2_Conv2d_2_3x3_s2_512/BatchNorm/moving_mean/Assign"
  input: "^ssd300/layer_19_2_Conv2d_2_3x3_s2_512/BatchNorm/moving_variance/Assign"
  input: "^ssd300/layer_19_2_Conv2d_2_3x3_s2_512/weights/Assign"
  input: "^ssd300/layer_19_2_Conv2d_2_3x3_s2_512_depthwise/BatchNorm/beta/Assign"
  input: "^ssd300/layer_19_2_Conv2d_2_3x3_s2_512_depthwise/BatchNorm/moving_mean/Assign"
  input: "^ssd300/layer_19_2_Conv2d_2_3x3_s2_512_depthwise/BatchNorm/moving_variance/Assign"
  input: "^ssd300/layer_19_2_Conv2d_2_3x3_s2_512_depthwise/depthwise_weights/Assign"
  input: "^ssd300/layer_19_2_Conv2d_3_3x3_s2_256/BatchNorm/beta/Assign"
  input: "^ssd300/layer_19_2_Conv2d_3_3x3_s2_256/BatchNorm/moving_mean/Assign"
  input: "^ssd300/layer_19_2_Conv2d_3_3x3_s2_256/BatchNorm/moving_variance/Assign"
  input: "^ssd300/layer_19_2_Conv2d_3_3x3_s2_256/weights/Assign"
  input: "^ssd300/layer_19_2_Conv2d_3_3x3_s2_256_depthwise/BatchNorm/beta/Assign"
  input: "^ssd300/layer_19_2_Conv2d_3_3x3_s2_256_depthwise/BatchNorm/moving_mean/Assign"
  input: "^ssd300/layer_19_2_Conv2d_3_3x3_s2_256_depthwise/BatchNorm/moving_variance/Assign"
  input: "^ssd300/layer_19_2_Conv2d_3_3x3_s2_256_depthwise/depthwise_weights/Assign"
  input: "^ssd300/layer_19_2_Conv2d_4_3x3_s2_256/BatchNorm/beta/Assign"
  input: "^ssd300/layer_19_2_Conv2d_4_3x3_s2_256/BatchNorm/moving_mean/Assign"
  input: "^ssd300/layer_19_2_Conv2d_4_3x3_s2_256/BatchNorm/moving_variance/Assign"
  input: "^ssd300/layer_19_2_Conv2d_4_3x3_s2_256/weights/Assign"
  input: "^ssd300/layer_19_2_Conv2d_4_3x3_s2_256_depthwise/BatchNorm/beta/Assign"
  input: "^ssd300/layer_19_2_Conv2d_4_3x3_s2_256_depthwise/BatchNorm/moving_mean/Assign"
  input: "^ssd300/layer_19_2_Conv2d_4_3x3_s2_256_depthwise/BatchNorm/moving_variance/Assign"
  input: "^ssd300/layer_19_2_Conv2d_4_3x3_s2_256_depthwise/depthwise_weights/Assign"
  input: "^ssd300/layer_19_2_Conv2d_5_3x3_s2_128/BatchNorm/beta/Assign"
  input: "^ssd300/layer_19_2_Conv2d_5_3x3_s2_128/BatchNorm/moving_mean/Assign"
  input: "^ssd300/layer_19_2_Conv2d_5_3x3_s2_128/BatchNorm/moving_variance/Assign"
  input: "^ssd300/layer_19_2_Conv2d_5_3x3_s2_128/weights/Assign"
  input: "^ssd300/layer_19_2_Conv2d_5_3x3_s2_128_depthwise/BatchNorm/beta/Assign"
  input: "^ssd300/layer_19_2_Conv2d_5_3x3_s2_128_depthwise/BatchNorm/moving_mean/Assign"
  input: "^ssd300/layer_19_2_Conv2d_5_3x3_s2_128_depthwise/BatchNorm/moving_variance/Assign"
  input: "^ssd300/layer_19_2_Conv2d_5_3x3_s2_128_depthwise/depthwise_weights/Assign"
  input: "^ssd300/multibox_head/cls_0/bias/Assign"
  input: "^ssd300/multibox_head/cls_0/kernel/Assign"
  input: "^ssd300/multibox_head/cls_1/bias/Assign"
  input: "^ssd300/multibox_head/cls_1/kernel/Assign"
  input: "^ssd300/multibox_head/cls_2/bias/Assign"
  input: "^ssd300/multibox_head/cls_2/kernel/Assign"
  input: "^ssd300/multibox_head/cls_3/bias/Assign"
  input: "^ssd300/multibox_head/cls_3/kernel/Assign"
  input: "^ssd300/multibox_head/cls_4/bias/Assign"
  input: "^ssd300/multibox_head/cls_4/kernel/Assign"
  input: "^ssd300/multibox_head/cls_5/bias/Assign"
  input: "^ssd300/multibox_head/cls_5/kernel/Assign"
  input: "^ssd300/multibox_head/loc_0/bias/Assign"
  input: "^ssd300/multibox_head/loc_0/kernel/Assign"
  input: "^ssd300/multibox_head/loc_1/bias/Assign"
  input: "^ssd300/multibox_head/loc_1/kernel/Assign"
  input: "^ssd300/multibox_head/loc_2/bias/Assign"
  input: "^ssd300/multibox_head/loc_2/kernel/Assign"
  input: "^ssd300/multibox_head/loc_3/bias/Assign"
  input: "^ssd300/multibox_head/loc_3/kernel/Assign"
  input: "^ssd300/multibox_head/loc_4/bias/Assign"
  input: "^ssd300/multibox_head/loc_4/kernel/Assign"
  input: "^ssd300/multibox_head/loc_5/bias/Assign"
  input: "^ssd300/multibox_head/loc_5/kernel/Assign"
}
node {
  name: "outputs/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "outputs"
  op: "ConcatV2"
  input: "ssd300/concat"
  input: "ssd300/concat_1"
  input: "outputs/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "outputs_1"
  op: "Identity"
  input: "concat_4"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
versions {
  producer: 134
}
